
DEFAULT_SETTING.elf:     file format elf32-littlenios2
DEFAULT_SETTING.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000248

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0001086c memsz 0x0001086c flags r-x
    LOAD off    0x0001188c vaddr 0x0001088c paddr 0x000125c0 align 2**12
         filesz 0x00001d34 memsz 0x00001d34 flags rw-
    LOAD off    0x000142f4 vaddr 0x000142f4 paddr 0x000142f4 align 2**12
         filesz 0x00000000 memsz 0x0008016c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010260  00000248  00000248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003e4  000104a8  000104a8  000114a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001d34  0001088c  000125c0  0001188c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00080211  000142f4  000142f4  000142f4  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  00094460  00094460  000135c0  2**0
                  CONTENTS
  7 .Onchip_SRAM  00000000  08000000  08000000  000135c0  2**0
                  CONTENTS
  8 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM 00000000  09000000  09000000  000135c0  2**0
                  CONTENTS
  9 .ARM_A9_HPS_axi_sdram 00000000  40000000  40000000  000135c0  2**0
                  CONTENTS
 10 .comment      00000023  00000000  00000000  000135c0  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 00000eb0  00000000  00000000  000135e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   00023c3f  00000000  00000000  00014498  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00009073  00000000  00000000  000380d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000b866  00000000  00000000  0004114a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000245c  00000000  00000000  0004c9b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00003ea5  00000000  00000000  0004ee0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00017a2f  00000000  00000000  00052cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_alt_sim_info 00000020  00000000  00000000  0006a6e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00001890  00000000  00000000  0006a700  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .thread_model 00000003  00000000  00000000  0006f875  2**0
                  CONTENTS, READONLY
 21 .cpu          00000005  00000000  00000000  0006f878  2**0
                  CONTENTS, READONLY
 22 .qsys         00000001  00000000  00000000  0006f87d  2**0
                  CONTENTS, READONLY
 23 .simulation_enabled 00000001  00000000  00000000  0006f87e  2**0
                  CONTENTS, READONLY
 24 .sysid_hash   00000004  00000000  00000000  0006f87f  2**0
                  CONTENTS, READONLY
 25 .sysid_base   00000004  00000000  00000000  0006f883  2**0
                  CONTENTS, READONLY
 26 .sysid_time   00000004  00000000  00000000  0006f887  2**0
                  CONTENTS, READONLY
 27 .stderr_dev   00000009  00000000  00000000  0006f88b  2**0
                  CONTENTS, READONLY
 28 .stdin_dev    00000009  00000000  00000000  0006f894  2**0
                  CONTENTS, READONLY
 29 .stdout_dev   00000009  00000000  00000000  0006f89d  2**0
                  CONTENTS, READONLY
 30 .sopc_system_name 0000000f  00000000  00000000  0006f8a6  2**0
                  CONTENTS, READONLY
 31 .quartus_project_dir 0000002b  00000000  00000000  0006f8b5  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     004881a6  00000000  00000000  0006f8e0  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000248 l    d  .text	00000000 .text
000104a8 l    d  .rodata	00000000 .rodata
0001088c l    d  .rwdata	00000000 .rwdata
000142f4 l    d  .bss	00000000 .bss
00094460 l    d  .SDRAM	00000000 .SDRAM
08000000 l    d  .Onchip_SRAM	00000000 .Onchip_SRAM
09000000 l    d  .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM	00000000 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
40000000 l    d  .ARM_A9_HPS_axi_sdram	00000000 .ARM_A9_HPS_axi_sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/src/KAU_EMBEDED_19/Quartus/software/DEFAULT_SETTING_bsp//obj/HAL/src/crt0.o
00000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
000104f2 l     O .rodata	00000010 zeroes.4404
00002718 l     F .text	000000bc __sbprintf
00010502 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002928 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004458 l     F .text	00000008 __fp_unlock
0000446c l     F .text	0000019c __sinit.part.1
00004608 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0001088c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00010cd0 l     O .rwdata	00000020 lc_ctype_charset
00010cb0 l     O .rwdata	00000020 lc_message_charset
00010cf0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00010534 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00006f20 l     F .text	000000fc __sprint_r.part.0
00010668 l     O .rodata	00000010 blanks.4348
00010658 l     O .rodata	00000010 zeroes.4349
000084ac l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000cce4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000cdf0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000ce1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d088 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d168 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d254 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d428 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000125b4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d674 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d7a8 l     F .text	00000034 alt_dev_reg
000112d8 l     O .rwdata	00001060 JTAG_UART
00012338 l     O .rwdata	0000002c ADC
00012364 l     O .rwdata	00000030 AV_Config
00012394 l     O .rwdata	00000030 Audio_Subsystem_Audio
000123c4 l     O .rwdata	0000002c IrDA
000123f0 l     O .rwdata	00000038 PS2_Port
00012428 l     O .rwdata	00000038 PS2_Port_Dual
00012460 l     O .rwdata	0000005c VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA
000124bc l     O .rwdata	0000005c Video_In_Subsystem_Video_In_DMA
00012518 l     O .rwdata	00000054 VGA_Subsystem_VGA_Pixel_DMA
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e1bc l     F .text	00000210 altera_avalon_jtag_uart_irq
0000e3cc l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000ea04 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_irda.c
00000000 l    df *ABS*	00000000 altera_up_avalon_ps2.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000f67c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000f8e0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0000fa20 l     F .text	0000003c alt_get_errno
0000fa5c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00014334 g     O .bss	00000004 alt_instruction_exception_handler
00006a30 g     F .text	00000074 _mprec_log10
00006b1c g     F .text	0000008c __any_on
00008f04 g     F .text	00000054 _isatty_r
00010540 g     O .rodata	00000028 __mprec_tinytens
0000d364 g     F .text	0000007c alt_main
0000f0cc g     F .text	00000060 alt_up_ps2_disable_read_interrupt
00094360 g     O .bss	00000100 alt_irq
00008f58 g     F .text	00000060 _lseek_r
000125c0 g       *ABS*	00000000 __flash_rwdata_start
0000b810 g     F .text	00000088 .hidden __eqdf2
00094460 g       *ABS*	00000000 __alt_heap_start
000004c8 g     F .text	0000003c printf
00009830 g     F .text	0000009c _wcrtomb_r
00006d48 g     F .text	0000005c __sseek
000047a8 g     F .text	00000010 __sinit
000096d8 g     F .text	00000140 __swbuf_r
0000eee4 g     F .text	00000034 read_CE_bit
00004db4 g     F .text	0000007c _setlocale_r
00004610 g     F .text	00000068 __sfmoreglue
0000d404 g     F .text	00000024 __malloc_unlock
0000f26c g     F .text	0000009c alt_up_ps2_read_data_byte_timeout
0001256c g     O .rwdata	00000004 pTimer
00008fb8 g     F .text	0000015c memmove
00004790 g     F .text	00000018 _cleanup
00005bac g     F .text	000000a8 _Balloc
000142f8 g     O .bss	00000004 pixel_buffer_start
0000b898 g     F .text	000000dc .hidden __gtdf2
0000fe18 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000089ec g     F .text	0000005c _fstat_r
00014318 g     O .bss	00000004 errno
00006cc4 g     F .text	00000008 __seofread
00014324 g     O .bss	00000004 alt_argv
0001a56c g       *ABS*	00000000 _gp
00011158 g     O .rwdata	00000180 alt_fd_list
0000f81c g     F .text	00000090 alt_find_dev
0000593c g     F .text	00000148 memcpy
00004460 g     F .text	0000000c _cleanup_r
0000cafc g     F .text	000000dc .hidden __floatsidf
0000f9a4 g     F .text	0000007c alt_io_redirect
0000b974 g     F .text	000000f4 .hidden __ltdf2
000104a8 g       *ABS*	00000000 __DTOR_END__
00014360 g     O .bss	00040000 front_buffer
0000edb4 g     F .text	00000090 alt_up_irda_write_fd
0001257c g     O .rwdata	00000004 video_ctrl_ptr
00010078 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00006ba8 g     F .text	00000074 __fpclassifyd
00000440 g     F .text	00000058 plot_pixel
0000698c g     F .text	000000a4 __ratio
00008490 g     F .text	0000001c __vfiprintf_internal
0000ebb0 g     F .text	00000040 alt_up_irda_get_used_space_in_read_FIFO
0000e5c4 g     F .text	0000021c altera_avalon_jtag_uart_read
00000498 g     F .text	00000030 _printf_r
0000a5c0 g     F .text	00000064 .hidden __udivsi3
0000d0c4 g     F .text	000000a4 isatty
00010590 g     O .rodata	000000c8 __mprec_tens
00004e30 g     F .text	0000000c __locale_charset
0000eb50 g     F .text	00000060 alt_up_irda_disable_read_interrupt
0000ffe8 g     F .text	00000090 alt_icache_flush
00012574 g     O .rwdata	00000004 pTime_high
00014314 g     O .bss	00000004 __malloc_top_pad
00000378 g     F .text	00000078 fillColor
00012588 g     O .rwdata	00000004 __mb_cur_max
00004e60 g     F .text	0000000c _localeconv_r
00008a48 g     F .text	000004bc __sfvwrite_r
00005fb8 g     F .text	0000003c __i2b
00006c1c g     F .text	00000054 _sbrk_r
00009114 g     F .text	00000060 _read_r
000125a8 g     O .rwdata	00000004 alt_max_fd
000086e0 g     F .text	000000f0 _fclose_r
0000ef18 g     F .text	00000030 read_num_bytes_available
00004428 g     F .text	00000030 fflush
00014310 g     O .bss	00000004 __malloc_max_sbrked_mem
0000cf08 g     F .text	00000180 alt_irq_register
0000ee80 g     F .text	00000034 read_RI_bit
0000a67c g     F .text	000008ac .hidden __adddf3
00006734 g     F .text	0000010c __b2d
00012578 g     O .rwdata	00000004 pixel_ctrl_ptr
00009f90 g     F .text	00000538 .hidden __umoddi3
0000d290 g     F .text	000000d4 lseek
00012580 g     O .rwdata	00000004 _global_impure_ptr
00009174 g     F .text	00000564 _realloc_r
00094460 g       *ABS*	00000000 __bss_end
0000fd10 g     F .text	00000108 alt_tick
00009a18 g     F .text	00000578 .hidden __udivdi3
00008948 g     F .text	00000024 _fputwc_r
00010568 g     O .rodata	00000028 __mprec_bigtens
00005d9c g     F .text	00000104 __s2b
0000cbd8 g     F .text	000000a8 .hidden __floatunsidf
00006474 g     F .text	00000060 __mcmp
0000ef7c g     F .text	0000002c read_data_byte
000047c8 g     F .text	00000018 __fp_lock_all
0000fc74 g     F .text	0000009c alt_alarm_stop
0000eeb4 g     F .text	00000030 read_RE_bit
0001431c g     O .bss	00000004 alt_irq_active
0000ebf0 g     F .text	0000003c alt_up_irda_get_available_space_in_write_FIFO
000000fc g     F .exceptions	000000d8 alt_irq_handler
00011130 g     O .rwdata	00000028 alt_dev_null
0000f12c g     F .text	00000074 alt_up_ps2_write_data_byte
0000f65c g     F .text	00000020 alt_dcache_flush_all
00005ea0 g     F .text	00000068 __hi0bits
0000ca7c g     F .text	00000080 .hidden __fixdfsi
000125c0 g       *ABS*	00000000 __ram_rwdata_end
000125a0 g     O .rwdata	00000008 alt_dev_list
0000d6b0 g     F .text	000000f8 write
0001088c g       *ABS*	00000000 __ram_rodata_end
0000ce58 g     F .text	000000b0 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000b974 g     F .text	000000f4 .hidden __ledf2
00012570 g     O .rwdata	00000004 pTime_low
000061ec g     F .text	00000140 __pow5mult
00007034 g     F .text	0000145c ___vfiprintf_internal_r
00014308 g     O .bss	00000004 __nlocale_changed
40000000 g       *ABS*	00000000 __alt_mem_ARM_A9_HPS_axi_sdram
0000a624 g     F .text	00000058 .hidden __umodsi3
00094460 g       *ABS*	00000000 end
0000f45c g     F .text	00000098 alt_up_ps2_write_fd
0000ec2c g     F .text	00000044 alt_up_irda_check_parity
0000e108 g     F .text	000000b4 altera_avalon_jtag_uart_init
000001d4 g     F .exceptions	00000074 alt_instruction_exception_entry
000104a8 g       *ABS*	00000000 __CTOR_LIST__
02000000 g       *ABS*	00000000 __alt_stack_pointer
0000ea80 g     F .text	00000074 alt_avalon_timer_sc_init
0000cc80 g     F .text	00000064 .hidden __clzsi2
0000e7e0 g     F .text	00000224 altera_avalon_jtag_uart_write
000047b8 g     F .text	00000004 __sfp_lock_acquire
00005858 g     F .text	000000e4 memchr
00000504 g     F .text	000021f8 ___vfprintf_internal_r
0000491c g     F .text	00000310 _free_r
00004e3c g     F .text	00000010 __locale_mb_cur_max
000102f4 g     F .text	00000180 __call_exitprocs
00014304 g     O .bss	00000004 __mlocale_changed
0001258c g     O .rwdata	00000004 __malloc_sbrk_base
00000248 g     F .text	0000003c _start
0001432c g     O .bss	00000004 _alt_tick_rate
0000632c g     F .text	00000148 __lshift
00014330 g     O .bss	00000004 _alt_nticks
0000d464 g     F .text	000000fc read
0000d814 g     F .text	00000790 alt_sys_init
000101dc g     F .text	00000118 __register_exitproc
0000f378 g     F .text	00000058 alt_up_ps2_clear_fifo
00005ff4 g     F .text	000001f8 __multiply
0000e46c g     F .text	00000068 altera_avalon_jtag_uart_close
0001088c g       *ABS*	00000000 __ram_rwdata_start
000104a8 g       *ABS*	00000000 __ram_rodata_start
00014338 g     O .bss	00000028 __malloc_current_mallinfo
00006840 g     F .text	0000014c __d2b
0000dfa4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000ff44 g     F .text	000000a4 alt_get_fd
000085c8 g     F .text	00000054 _close_r
00010160 g     F .text	0000007c memcmp
0000e064 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00094460 g       *ABS*	00000000 __alt_stack_base
0000e0b4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000eaf4 g     F .text	0000005c alt_up_irda_enable_read_interrupt
000027d4 g     F .text	00000154 __swsetup_r
0000af28 g     F .text	000008e8 .hidden __divdf3
00004678 g     F .text	00000118 __sfp
00006aa4 g     F .text	00000078 __copybits
00010d28 g     O .rwdata	00000408 __malloc_av_
000047c4 g     F .text	00000004 __sinit_lock_release
0000ba68 g     F .text	00000718 .hidden __muldf3
00006c70 g     F .text	00000054 __sread
0000fe3c g     F .text	00000108 alt_find_file
0000f6b8 g     F .text	000000a4 alt_dev_llist_insert
0000d3e0 g     F .text	00000024 __malloc_lock
0000d5c4 g     F .text	000000b0 sbrk
000043cc g     F .text	0000005c _fflush_r
0000861c g     F .text	000000c4 _calloc_r
000142f4 g       *ABS*	00000000 __bss_start
00005a84 g     F .text	00000128 memset
00000284 g     F .text	000000a4 main
00014328 g     O .bss	00000004 alt_envp
0001430c g     O .bss	00000004 __malloc_max_total_mem
0000e004 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009818 g     F .text	00000018 __swbuf
00006da4 g     F .text	00000008 __sclose
02000000 g       *ABS*	00000000 __alt_heap_limit
000087d0 g     F .text	00000014 fclose
0000f308 g     F .text	00000070 alt_up_ps2_read_data_byte
00002b28 g     F .text	00001688 _dtoa_r
0000504c g     F .text	0000080c _malloc_r
0000998c g     F .text	00000030 __ascii_wctomb
000125ac g     O .rwdata	00000004 alt_errno
00004c2c g     F .text	000000c4 _fwalk
0000ec70 g     F .text	00000040 alt_up_irda_write_data
0000f4f4 g     F .text	0000003c alt_up_ps2_open_dev
0000a4c8 g     F .text	00000084 .hidden __divsi3
000047f8 g     F .text	00000124 _malloc_trim_r
0000f070 g     F .text	0000005c alt_up_ps2_enable_read_interrupt
000104a8 g       *ABS*	00000000 __CTOR_END__
00006dac g     F .text	000000dc strcmp
000104a8 g       *ABS*	00000000 __flash_rodata_start
000104a8 g       *ABS*	00000000 __DTOR_LIST__
000142f4 g     O .bss	00000004 count
0000b810 g     F .text	00000088 .hidden __nedf2
0000d7dc g     F .text	00000038 alt_irq_init
0000d560 g     F .text	00000064 alt_release_fd
0000ef48 g     F .text	00000034 read_data_valid
00010678 g     O .rodata	00000100 .hidden __clz_tab
00014300 g     O .bss	00000004 _PathLocale
0000f208 g     F .text	00000064 alt_up_ps2_write_data_byte_with_ack
00010114 g     F .text	00000014 atexit
00008568 g     F .text	00000060 _write_r
00004e6c g     F .text	00000018 setlocale
00012584 g     O .rwdata	00000004 _impure_ptr
00014320 g     O .bss	00000004 alt_argc
000041b0 g     F .text	0000021c __sflush_r
0000f7bc g     F .text	00000060 _do_dtors
00004e58 g     F .text	00000008 __locale_cjk_lang
09000000 g       *ABS*	00000000 __alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
00000020 g       .exceptions	00000000 alt_irq_entry
000066d0 g     F .text	00000064 __ulp
000047e0 g     F .text	00000018 __fp_unlock_all
00012598 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00004e84 g     F .text	0000000c localeconv
00054360 g     O .bss	00040000 back_buffer
000142fc g     O .bss	00000004 video_buffer_start
000125c0 g       *ABS*	00000000 _edata
00094460 g       *ABS*	00000000 _end
000087e4 g     F .text	00000164 __fputwc
00000248 g       *ABS*	00000000 __ram_exceptions_end
0000e4d4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08000000 g       *ABS*	00000000 __alt_mem_Onchip_SRAM
000003f0 g     F .text	00000050 wait_for_vsync
00006ccc g     F .text	0000007c __swrite
00012590 g     O .rwdata	00000004 __malloc_trim_threshold
00004e4c g     F .text	0000000c __locale_msgcharset
00010128 g     F .text	00000038 exit
0000ecb0 g     F .text	00000074 alt_up_irda_read_data
00004cf0 g     F .text	000000c4 _fwalk_reent
0000efa8 g     F .text	000000c8 alt_up_ps2_init
000064d4 g     F .text	000001fc __mdiff
0000a54c g     F .text	00000074 .hidden __modsi3
02000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
000047bc g     F .text	00000004 __sfp_lock_release
0000ee44 g     F .text	0000003c alt_up_irda_open_dev
00010474 g     F .text	00000034 _exit
0000f530 g     F .text	0000012c alt_alarm_start
00000328 g     F .text	00000050 Timer_ISR
00004e90 g     F .text	000001bc __smakebuf_r
0000f1a0 g     F .text	00000068 alt_up_ps2_wait_for_ack
00006e88 g     F .text	00000098 strlen
0000fb20 g     F .text	00000154 open
0000b898 g     F .text	000000dc .hidden __gedf2
00012594 g     O .rwdata	00000004 __wctomb
0000701c g     F .text	00000018 __sprint_r
0000f8ac g     F .text	00000034 alt_icache_flush_all
000125b0 g     O .rwdata	00000004 alt_priority_mask
000026fc g     F .text	0000001c __vfprintf_internal
000099bc g     F .text	0000005c _wctomb_r
0000f3d0 g     F .text	0000008c alt_up_ps2_read_fd
0000c180 g     F .text	000008fc .hidden __subdf3
0000ed24 g     F .text	00000090 alt_up_irda_read_fd
00005f08 g     F .text	000000b0 __lo0bits
000125b8 g     O .rwdata	00000008 alt_alarm_list
0000f75c g     F .text	00000060 _do_ctors
000098cc g     F .text	000000c0 wcrtomb
0000cd20 g     F .text	000000d0 close
0000d1d0 g     F .text	00000084 alt_load
0000896c g     F .text	00000080 fputwc
000047c0 g     F .text	00000004 __sinit_lock_acquire
00005c7c g     F .text	00000120 __multadd
00005c54 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409214 	ori	at,at,584
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d40 	call	1d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001526 	beq	r2,zero,190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	00800274 	movhi	r2,9
 140:	1090d804 	addi	r2,r2,17248
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800274 	movhi	r2,9
 158:	1090d804 	addi	r2,r2,17248
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	e17ffd17 	ldw	r5,-12(fp)
 174:	1009883a 	mov	r4,r2
 178:	183ee83a 	callr	r3
#endif
        break;
 17c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 180:	0005313a 	rdctl	r2,ipending
 184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 188:	e0bfff17 	ldw	r2,-4(fp)
 18c:	00000706 	br	1ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 190:	e0bffc17 	ldw	r2,-16(fp)
 194:	1085883a 	add	r2,r2,r2
 198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 19c:	e0bffd17 	ldw	r2,-12(fp)
 1a0:	10800044 	addi	r2,r2,1
 1a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a8:	003fe006 	br	12c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000012c>

    active = alt_irq_pending ();
 1ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1b0:	e0bffb17 	ldw	r2,-20(fp)
 1b4:	103fda1e 	bne	r2,zero,120 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b8:	0001883a 	nop
}
 1bc:	0001883a 	nop
 1c0:	e037883a 	mov	sp,fp
 1c4:	dfc00117 	ldw	ra,4(sp)
 1c8:	df000017 	ldw	fp,0(sp)
 1cc:	dec00204 	addi	sp,sp,8
 1d0:	f800283a 	ret

000001d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d4:	defffb04 	addi	sp,sp,-20
 1d8:	dfc00415 	stw	ra,16(sp)
 1dc:	df000315 	stw	fp,12(sp)
 1e0:	df000304 	addi	fp,sp,12
 1e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e8:	000531fa 	rdctl	r2,exception
 1ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1f0:	e0bffd17 	ldw	r2,-12(fp)
 1f4:	10801f0c 	andi	r2,r2,124
 1f8:	1004d0ba 	srli	r2,r2,2
 1fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 200:	0005333a 	rdctl	r2,badaddr
 204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 208:	d0a77217 	ldw	r2,-25144(gp)
 20c:	10000726 	beq	r2,zero,22c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 210:	d0a77217 	ldw	r2,-25144(gp)
 214:	e0fffd17 	ldw	r3,-12(fp)
 218:	e1bffe17 	ldw	r6,-8(fp)
 21c:	e17fff17 	ldw	r5,-4(fp)
 220:	1809883a 	mov	r4,r3
 224:	103ee83a 	callr	r2
 228:	00000206 	br	234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 22c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 230:	0005883a 	mov	r2,zero
}
 234:	e037883a 	mov	sp,fp
 238:	dfc00117 	ldw	ra,4(sp)
 23c:	df000017 	ldw	fp,0(sp)
 240:	dec00204 	addi	sp,sp,8
 244:	f800283a 	ret

Disassembly of section .text:

00000248 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     248:	06c08034 	movhi	sp,512
    ori sp, sp, %lo(__alt_stack_pointer)
     24c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     250:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     254:	d6a95b14 	ori	gp,gp,42348
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     258:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     25c:	1090bd14 	ori	r2,r2,17140

    movhi r3, %hi(__bss_end)
     260:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
     264:	18d11814 	ori	r3,r3,17504

    beq r2, r3, 1f
     268:	10c00326 	beq	r2,r3,278 <_start+0x30>

0:
    stw zero, (r2)
     26c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     274:	10fffd36 	bltu	r2,r3,26c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000026c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     278:	000d1d00 	call	d1d0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     27c:	000d3640 	call	d364 <alt_main>

00000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     280:	003fff06 	br	280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000280>

00000284 <main>:
short int front_buffer[512 * 256];
short int back_buffer[512 * 256];
volatile int pixel_buffer_start;
volatile int video_buffer_start;

int main() {
     284:	defffd04 	addi	sp,sp,-12
     288:	dfc00215 	stw	ra,8(sp)
     28c:	df000115 	stw	fp,4(sp)
     290:	df000104 	addi	fp,sp,4
   int pb_ctxt=0;
     294:	e03fff15 	stw	zero,-4(fp)
   printf("test");
     298:	01000074 	movhi	r4,1
     29c:	21012a04 	addi	r4,r4,1192
     2a0:	00004c80 	call	4c8 <printf>
   *(pTime_low)     = 0xE100;
     2a4:	d0a00117 	ldw	r2,-32764(gp)
     2a8:	00f84014 	movui	r3,57600
     2ac:	10c00015 	stw	r3,0(r2)
   *(pTime_high)    = 0x05F0;
     2b0:	d0a00217 	ldw	r2,-32760(gp)
     2b4:	00c17c04 	movi	r3,1520
     2b8:	10c00015 	stw	r3,0(r2)
   *(pTimer+1)      = 0x0007;
     2bc:	d0a00017 	ldw	r2,-32768(gp)
     2c0:	10800104 	addi	r2,r2,4
     2c4:	00c001c4 	movi	r3,7
     2c8:	10c00015 	stw	r3,0(r2)

   alt_irq_register(0, (void *)&pb_ctxt, (void *)Timer_ISR);
     2cc:	01800034 	movhi	r6,0
     2d0:	3180ca04 	addi	r6,r6,808
     2d4:	e17fff04 	addi	r5,fp,-4
     2d8:	0009883a 	mov	r4,zero
     2dc:	000cf080 	call	cf08 <alt_irq_register>
   *(video_ctrl_ptr+3) = 0;
     2e0:	d0a00417 	ldw	r2,-32752(gp)
     2e4:	10800304 	addi	r2,r2,12
     2e8:	10000015 	stw	zero,0(r2)
   *(pixel_ctrl_ptr + 1) = front_buffer;
     2ec:	d0a00317 	ldw	r2,-32756(gp)
     2f0:	10c00104 	addi	r3,r2,4
     2f4:	00800074 	movhi	r2,1
     2f8:	1090d804 	addi	r2,r2,17248
     2fc:	18800015 	stw	r2,0(r3)
      wait_for_vsync();
     300:	00003f00 	call	3f0 <wait_for_vsync>

      pixel_buffer_start = *pixel_ctrl_ptr;
     304:	d0a00317 	ldw	r2,-32756(gp)
     308:	10800017 	ldw	r2,0(r2)
     30c:	d0a76315 	stw	r2,-25204(gp)
      *(pixel_ctrl_ptr + 1) = back_buffer;
     310:	d0a00317 	ldw	r2,-32756(gp)
     314:	10c00104 	addi	r3,r2,4
     318:	00800174 	movhi	r2,5
     31c:	1090d804 	addi	r2,r2,17248
     320:	18800015 	stw	r2,0(r3)
   while(1);
     324:	003fff06 	br	324 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000324>

00000328 <Timer_ISR>:

   return 0;
}

void Timer_ISR() {
     328:	defffe04 	addi	sp,sp,-8
     32c:	dfc00115 	stw	ra,4(sp)
     330:	df000015 	stw	fp,0(sp)
     334:	d839883a 	mov	fp,sp
   *pTimer = 0;
     338:	d0a00017 	ldw	r2,-32768(gp)
     33c:	10000015 	stw	zero,0(r2)

   pixel_buffer_start = *(pixel_ctrl_ptr + 1);
     340:	d0a00317 	ldw	r2,-32756(gp)
     344:	10800117 	ldw	r2,4(r2)
     348:	d0a76315 	stw	r2,-25204(gp)
   video_buffer_start = *(video_ctrl_ptr);
     34c:	d0a00417 	ldw	r2,-32752(gp)
     350:	10800017 	ldw	r2,0(r2)
     354:	d0a76415 	stw	r2,-25200(gp)
   fillColor();
     358:	00003780 	call	378 <fillColor>

   wait_for_vsync();
     35c:	00003f00 	call	3f0 <wait_for_vsync>
}
     360:	0001883a 	nop
     364:	e037883a 	mov	sp,fp
     368:	dfc00117 	ldw	ra,4(sp)
     36c:	df000017 	ldw	fp,0(sp)
     370:	dec00204 	addi	sp,sp,8
     374:	f800283a 	ret

00000378 <fillColor>:

void fillColor(){
     378:	defffc04 	addi	sp,sp,-16
     37c:	dfc00315 	stw	ra,12(sp)
     380:	df000215 	stw	fp,8(sp)
     384:	df000204 	addi	fp,sp,8
   for(int i=0;i<320;i++)
     388:	e03ffe15 	stw	zero,-8(fp)
     38c:	00000f06 	br	3cc <fillColor+0x54>
      for(int j=0;j<240;j++)
     390:	e03fff15 	stw	zero,-4(fp)
     394:	00000706 	br	3b4 <fillColor+0x3c>
         plot_pixel(i, j, 0xFFFF);
     398:	01bfffc4 	movi	r6,-1
     39c:	e17fff17 	ldw	r5,-4(fp)
     3a0:	e13ffe17 	ldw	r4,-8(fp)
     3a4:	00004400 	call	440 <plot_pixel>
   wait_for_vsync();
}

void fillColor(){
   for(int i=0;i<320;i++)
      for(int j=0;j<240;j++)
     3a8:	e0bfff17 	ldw	r2,-4(fp)
     3ac:	10800044 	addi	r2,r2,1
     3b0:	e0bfff15 	stw	r2,-4(fp)
     3b4:	e0bfff17 	ldw	r2,-4(fp)
     3b8:	10803c10 	cmplti	r2,r2,240
     3bc:	103ff61e 	bne	r2,zero,398 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000398>

   wait_for_vsync();
}

void fillColor(){
   for(int i=0;i<320;i++)
     3c0:	e0bffe17 	ldw	r2,-8(fp)
     3c4:	10800044 	addi	r2,r2,1
     3c8:	e0bffe15 	stw	r2,-8(fp)
     3cc:	e0bffe17 	ldw	r2,-8(fp)
     3d0:	10805010 	cmplti	r2,r2,320
     3d4:	103fee1e 	bne	r2,zero,390 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000390>
      for(int j=0;j<240;j++)
         plot_pixel(i, j, 0xFFFF);
}
     3d8:	0001883a 	nop
     3dc:	e037883a 	mov	sp,fp
     3e0:	dfc00117 	ldw	ra,4(sp)
     3e4:	df000017 	ldw	fp,0(sp)
     3e8:	dec00204 	addi	sp,sp,8
     3ec:	f800283a 	ret

000003f0 <wait_for_vsync>:

void wait_for_vsync(void){
     3f0:	defffe04 	addi	sp,sp,-8
     3f4:	df000115 	stw	fp,4(sp)
     3f8:	dc000015 	stw	r16,0(sp)
     3fc:	df000104 	addi	fp,sp,4
   register int status;
   *pixel_ctrl_ptr = 1;
     400:	d0a00317 	ldw	r2,-32756(gp)
     404:	00c00044 	movi	r3,1
     408:	10c00015 	stw	r3,0(r2)

   status = *(pixel_ctrl_ptr +3);
     40c:	d0a00317 	ldw	r2,-32756(gp)
     410:	14000317 	ldw	r16,12(r2)
   while ((status & 0x01)!=0){
     414:	00000206 	br	420 <wait_for_vsync+0x30>
      status = *(pixel_ctrl_ptr + 3);
     418:	d0a00317 	ldw	r2,-32756(gp)
     41c:	14000317 	ldw	r16,12(r2)
void wait_for_vsync(void){
   register int status;
   *pixel_ctrl_ptr = 1;

   status = *(pixel_ctrl_ptr +3);
   while ((status & 0x01)!=0){
     420:	8080004c 	andi	r2,r16,1
     424:	103ffc1e 	bne	r2,zero,418 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000418>
      status = *(pixel_ctrl_ptr + 3);
   }
}
     428:	0001883a 	nop
     42c:	e6ffff04 	addi	sp,fp,-4
     430:	df000117 	ldw	fp,4(sp)
     434:	dc000017 	ldw	r16,0(sp)
     438:	dec00204 	addi	sp,sp,8
     43c:	f800283a 	ret

00000440 <plot_pixel>:

void plot_pixel(int x, int y, short int line_color){
     440:	defffc04 	addi	sp,sp,-16
     444:	df000315 	stw	fp,12(sp)
     448:	df000304 	addi	fp,sp,12
     44c:	e13ffd15 	stw	r4,-12(fp)
     450:	e17ffe15 	stw	r5,-8(fp)
     454:	3005883a 	mov	r2,r6
     458:	e0bfff0d 	sth	r2,-4(fp)
   *(short int *)(pixel_buffer_start + (y << 10) + (x << 1)) = line_color;
     45c:	e0bffe17 	ldw	r2,-8(fp)
     460:	100692ba 	slli	r3,r2,10
     464:	d0a76317 	ldw	r2,-25204(gp)
     468:	1887883a 	add	r3,r3,r2
     46c:	e0bffd17 	ldw	r2,-12(fp)
     470:	1085883a 	add	r2,r2,r2
     474:	1885883a 	add	r2,r3,r2
     478:	1007883a 	mov	r3,r2
     47c:	e0bfff0b 	ldhu	r2,-4(fp)
     480:	1880000d 	sth	r2,0(r3)
}
     484:	0001883a 	nop
     488:	e037883a 	mov	sp,fp
     48c:	df000017 	ldw	fp,0(sp)
     490:	dec00104 	addi	sp,sp,4
     494:	f800283a 	ret

00000498 <_printf_r>:
     498:	defffd04 	addi	sp,sp,-12
     49c:	2805883a 	mov	r2,r5
     4a0:	dfc00015 	stw	ra,0(sp)
     4a4:	d9800115 	stw	r6,4(sp)
     4a8:	d9c00215 	stw	r7,8(sp)
     4ac:	21400217 	ldw	r5,8(r4)
     4b0:	d9c00104 	addi	r7,sp,4
     4b4:	100d883a 	mov	r6,r2
     4b8:	00005040 	call	504 <___vfprintf_internal_r>
     4bc:	dfc00017 	ldw	ra,0(sp)
     4c0:	dec00304 	addi	sp,sp,12
     4c4:	f800283a 	ret

000004c8 <printf>:
     4c8:	defffc04 	addi	sp,sp,-16
     4cc:	dfc00015 	stw	ra,0(sp)
     4d0:	d9400115 	stw	r5,4(sp)
     4d4:	d9800215 	stw	r6,8(sp)
     4d8:	d9c00315 	stw	r7,12(sp)
     4dc:	00800074 	movhi	r2,1
     4e0:	10896104 	addi	r2,r2,9604
     4e4:	10800017 	ldw	r2,0(r2)
     4e8:	200b883a 	mov	r5,r4
     4ec:	d9800104 	addi	r6,sp,4
     4f0:	11000217 	ldw	r4,8(r2)
     4f4:	00026fc0 	call	26fc <__vfprintf_internal>
     4f8:	dfc00017 	ldw	ra,0(sp)
     4fc:	dec00404 	addi	sp,sp,16
     500:	f800283a 	ret

00000504 <___vfprintf_internal_r>:
     504:	deffb804 	addi	sp,sp,-288
     508:	dfc04715 	stw	ra,284(sp)
     50c:	ddc04515 	stw	r23,276(sp)
     510:	dd404315 	stw	r21,268(sp)
     514:	d9002c15 	stw	r4,176(sp)
     518:	282f883a 	mov	r23,r5
     51c:	302b883a 	mov	r21,r6
     520:	d9c02d15 	stw	r7,180(sp)
     524:	df004615 	stw	fp,280(sp)
     528:	dd804415 	stw	r22,272(sp)
     52c:	dd004215 	stw	r20,264(sp)
     530:	dcc04115 	stw	r19,260(sp)
     534:	dc804015 	stw	r18,256(sp)
     538:	dc403f15 	stw	r17,252(sp)
     53c:	dc003e15 	stw	r16,248(sp)
     540:	0004e600 	call	4e60 <_localeconv_r>
     544:	10800017 	ldw	r2,0(r2)
     548:	1009883a 	mov	r4,r2
     54c:	d8803415 	stw	r2,208(sp)
     550:	0006e880 	call	6e88 <strlen>
     554:	d8803715 	stw	r2,220(sp)
     558:	d8802c17 	ldw	r2,176(sp)
     55c:	10000226 	beq	r2,zero,568 <___vfprintf_internal_r+0x64>
     560:	10800e17 	ldw	r2,56(r2)
     564:	1000f926 	beq	r2,zero,94c <___vfprintf_internal_r+0x448>
     568:	b880030b 	ldhu	r2,12(r23)
     56c:	10c8000c 	andi	r3,r2,8192
     570:	1800061e 	bne	r3,zero,58c <___vfprintf_internal_r+0x88>
     574:	b9001917 	ldw	r4,100(r23)
     578:	00f7ffc4 	movi	r3,-8193
     57c:	10880014 	ori	r2,r2,8192
     580:	20c6703a 	and	r3,r4,r3
     584:	b880030d 	sth	r2,12(r23)
     588:	b8c01915 	stw	r3,100(r23)
     58c:	10c0020c 	andi	r3,r2,8
     590:	1800c126 	beq	r3,zero,898 <___vfprintf_internal_r+0x394>
     594:	b8c00417 	ldw	r3,16(r23)
     598:	1800bf26 	beq	r3,zero,898 <___vfprintf_internal_r+0x394>
     59c:	1080068c 	andi	r2,r2,26
     5a0:	00c00284 	movi	r3,10
     5a4:	10c0c426 	beq	r2,r3,8b8 <___vfprintf_internal_r+0x3b4>
     5a8:	d8c00404 	addi	r3,sp,16
     5ac:	05000074 	movhi	r20,1
     5b0:	d9001e04 	addi	r4,sp,120
     5b4:	a5013c84 	addi	r20,r20,1266
     5b8:	d8c01e15 	stw	r3,120(sp)
     5bc:	d8002015 	stw	zero,128(sp)
     5c0:	d8001f15 	stw	zero,124(sp)
     5c4:	d8003315 	stw	zero,204(sp)
     5c8:	d8003615 	stw	zero,216(sp)
     5cc:	d8003815 	stw	zero,224(sp)
     5d0:	1811883a 	mov	r8,r3
     5d4:	d8003915 	stw	zero,228(sp)
     5d8:	d8003a15 	stw	zero,232(sp)
     5dc:	d8002f15 	stw	zero,188(sp)
     5e0:	d9002815 	stw	r4,160(sp)
     5e4:	a8800007 	ldb	r2,0(r21)
     5e8:	10027b26 	beq	r2,zero,fd8 <___vfprintf_internal_r+0xad4>
     5ec:	00c00944 	movi	r3,37
     5f0:	a821883a 	mov	r16,r21
     5f4:	10c0021e 	bne	r2,r3,600 <___vfprintf_internal_r+0xfc>
     5f8:	00001406 	br	64c <___vfprintf_internal_r+0x148>
     5fc:	10c00326 	beq	r2,r3,60c <___vfprintf_internal_r+0x108>
     600:	84000044 	addi	r16,r16,1
     604:	80800007 	ldb	r2,0(r16)
     608:	103ffc1e 	bne	r2,zero,5fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005fc>
     60c:	8563c83a 	sub	r17,r16,r21
     610:	88000e26 	beq	r17,zero,64c <___vfprintf_internal_r+0x148>
     614:	d8c02017 	ldw	r3,128(sp)
     618:	d8801f17 	ldw	r2,124(sp)
     61c:	45400015 	stw	r21,0(r8)
     620:	1c47883a 	add	r3,r3,r17
     624:	10800044 	addi	r2,r2,1
     628:	d8c02015 	stw	r3,128(sp)
     62c:	44400115 	stw	r17,4(r8)
     630:	d8801f15 	stw	r2,124(sp)
     634:	00c001c4 	movi	r3,7
     638:	1880a716 	blt	r3,r2,8d8 <___vfprintf_internal_r+0x3d4>
     63c:	42000204 	addi	r8,r8,8
     640:	d9402f17 	ldw	r5,188(sp)
     644:	2c4b883a 	add	r5,r5,r17
     648:	d9402f15 	stw	r5,188(sp)
     64c:	80800007 	ldb	r2,0(r16)
     650:	1000a826 	beq	r2,zero,8f4 <___vfprintf_internal_r+0x3f0>
     654:	84400047 	ldb	r17,1(r16)
     658:	00bfffc4 	movi	r2,-1
     65c:	85400044 	addi	r21,r16,1
     660:	d8002785 	stb	zero,158(sp)
     664:	0007883a 	mov	r3,zero
     668:	000f883a 	mov	r7,zero
     66c:	d8802915 	stw	r2,164(sp)
     670:	d8003115 	stw	zero,196(sp)
     674:	0025883a 	mov	r18,zero
     678:	01401604 	movi	r5,88
     67c:	01800244 	movi	r6,9
     680:	02800a84 	movi	r10,42
     684:	02401b04 	movi	r9,108
     688:	ad400044 	addi	r21,r21,1
     68c:	88bff804 	addi	r2,r17,-32
     690:	28830436 	bltu	r5,r2,12a4 <___vfprintf_internal_r+0xda0>
     694:	100490ba 	slli	r2,r2,2
     698:	01000034 	movhi	r4,0
     69c:	2101ab04 	addi	r4,r4,1708
     6a0:	1105883a 	add	r2,r2,r4
     6a4:	10800017 	ldw	r2,0(r2)
     6a8:	1000683a 	jmp	r2
     6ac:	000011c4 	movi	zero,71
     6b0:	000012a4 	muli	zero,zero,74
     6b4:	000012a4 	muli	zero,zero,74
     6b8:	000011e4 	muli	zero,zero,71
     6bc:	000012a4 	muli	zero,zero,74
     6c0:	000012a4 	muli	zero,zero,74
     6c4:	000012a4 	muli	zero,zero,74
     6c8:	000012a4 	muli	zero,zero,74
     6cc:	000012a4 	muli	zero,zero,74
     6d0:	000012a4 	muli	zero,zero,74
     6d4:	00000958 	cmpnei	zero,zero,37
     6d8:	00001100 	call	110 <alt_irq_handler+0x14>
     6dc:	000012a4 	muli	zero,zero,74
     6e0:	00000820 	cmpeqi	zero,zero,32
     6e4:	00000980 	call	98 <__flash_exceptions_start+0x78>
     6e8:	000012a4 	muli	zero,zero,74
     6ec:	000009c0 	call	9c <__flash_exceptions_start+0x7c>
     6f0:	000009cc 	andi	zero,zero,39
     6f4:	000009cc 	andi	zero,zero,39
     6f8:	000009cc 	andi	zero,zero,39
     6fc:	000009cc 	andi	zero,zero,39
     700:	000009cc 	andi	zero,zero,39
     704:	000009cc 	andi	zero,zero,39
     708:	000009cc 	andi	zero,zero,39
     70c:	000009cc 	andi	zero,zero,39
     710:	000009cc 	andi	zero,zero,39
     714:	000012a4 	muli	zero,zero,74
     718:	000012a4 	muli	zero,zero,74
     71c:	000012a4 	muli	zero,zero,74
     720:	000012a4 	muli	zero,zero,74
     724:	000012a4 	muli	zero,zero,74
     728:	000012a4 	muli	zero,zero,74
     72c:	000012a4 	muli	zero,zero,74
     730:	000012a4 	muli	zero,zero,74
     734:	000012a4 	muli	zero,zero,74
     738:	000012a4 	muli	zero,zero,74
     73c:	00000a00 	call	a0 <__flash_exceptions_start+0x80>
     740:	00000abc 	xorhi	zero,zero,42
     744:	000012a4 	muli	zero,zero,74
     748:	00000abc 	xorhi	zero,zero,42
     74c:	000012a4 	muli	zero,zero,74
     750:	000012a4 	muli	zero,zero,74
     754:	000012a4 	muli	zero,zero,74
     758:	000012a4 	muli	zero,zero,74
     75c:	00000b5c 	xori	zero,zero,45
     760:	000012a4 	muli	zero,zero,74
     764:	000012a4 	muli	zero,zero,74
     768:	00000b68 	cmpgeui	zero,zero,45
     76c:	000012a4 	muli	zero,zero,74
     770:	000012a4 	muli	zero,zero,74
     774:	000012a4 	muli	zero,zero,74
     778:	000012a4 	muli	zero,zero,74
     77c:	000012a4 	muli	zero,zero,74
     780:	00000fe0 	cmpeqi	zero,zero,63
     784:	000012a4 	muli	zero,zero,74
     788:	000012a4 	muli	zero,zero,74
     78c:	00001040 	call	104 <alt_irq_handler+0x8>
     790:	000012a4 	muli	zero,zero,74
     794:	000012a4 	muli	zero,zero,74
     798:	000012a4 	muli	zero,zero,74
     79c:	000012a4 	muli	zero,zero,74
     7a0:	000012a4 	muli	zero,zero,74
     7a4:	000012a4 	muli	zero,zero,74
     7a8:	000012a4 	muli	zero,zero,74
     7ac:	000012a4 	muli	zero,zero,74
     7b0:	000012a4 	muli	zero,zero,74
     7b4:	000012a4 	muli	zero,zero,74
     7b8:	00001250 	cmplti	zero,zero,73
     7bc:	000011f0 	cmpltui	zero,zero,71
     7c0:	00000abc 	xorhi	zero,zero,42
     7c4:	00000abc 	xorhi	zero,zero,42
     7c8:	00000abc 	xorhi	zero,zero,42
     7cc:	00001200 	call	120 <alt_irq_handler+0x24>
     7d0:	000011f0 	cmpltui	zero,zero,71
     7d4:	000012a4 	muli	zero,zero,74
     7d8:	000012a4 	muli	zero,zero,74
     7dc:	0000120c 	andi	zero,zero,72
     7e0:	000012a4 	muli	zero,zero,74
     7e4:	0000121c 	xori	zero,zero,72
     7e8:	000010f0 	cmpltui	zero,zero,67
     7ec:	0000082c 	andhi	zero,zero,32
     7f0:	00001110 	cmplti	zero,zero,68
     7f4:	000012a4 	muli	zero,zero,74
     7f8:	0000111c 	xori	zero,zero,68
     7fc:	000012a4 	muli	zero,zero,74
     800:	00001178 	rdprs	zero,zero,69
     804:	000012a4 	muli	zero,zero,74
     808:	000012a4 	muli	zero,zero,74
     80c:	00001188 	cmpgei	zero,zero,70
     810:	d9003117 	ldw	r4,196(sp)
     814:	d8802d15 	stw	r2,180(sp)
     818:	0109c83a 	sub	r4,zero,r4
     81c:	d9003115 	stw	r4,196(sp)
     820:	94800114 	ori	r18,r18,4
     824:	ac400007 	ldb	r17,0(r21)
     828:	003f9706 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
     82c:	00800c04 	movi	r2,48
     830:	d9002d17 	ldw	r4,180(sp)
     834:	d9402917 	ldw	r5,164(sp)
     838:	d8802705 	stb	r2,156(sp)
     83c:	00801e04 	movi	r2,120
     840:	d8802745 	stb	r2,157(sp)
     844:	d8002785 	stb	zero,158(sp)
     848:	20c00104 	addi	r3,r4,4
     84c:	24c00017 	ldw	r19,0(r4)
     850:	002d883a 	mov	r22,zero
     854:	90800094 	ori	r2,r18,2
     858:	28029a16 	blt	r5,zero,12c4 <___vfprintf_internal_r+0xdc0>
     85c:	00bfdfc4 	movi	r2,-129
     860:	90a4703a 	and	r18,r18,r2
     864:	d8c02d15 	stw	r3,180(sp)
     868:	94800094 	ori	r18,r18,2
     86c:	9802871e 	bne	r19,zero,128c <___vfprintf_internal_r+0xd88>
     870:	00800074 	movhi	r2,1
     874:	10813504 	addi	r2,r2,1236
     878:	d8803915 	stw	r2,228(sp)
     87c:	04401e04 	movi	r17,120
     880:	d8802917 	ldw	r2,164(sp)
     884:	0039883a 	mov	fp,zero
     888:	1001e926 	beq	r2,zero,1030 <___vfprintf_internal_r+0xb2c>
     88c:	0027883a 	mov	r19,zero
     890:	002d883a 	mov	r22,zero
     894:	00020506 	br	10ac <___vfprintf_internal_r+0xba8>
     898:	d9002c17 	ldw	r4,176(sp)
     89c:	b80b883a 	mov	r5,r23
     8a0:	00027d40 	call	27d4 <__swsetup_r>
     8a4:	1005ac1e 	bne	r2,zero,1f58 <___vfprintf_internal_r+0x1a54>
     8a8:	b880030b 	ldhu	r2,12(r23)
     8ac:	00c00284 	movi	r3,10
     8b0:	1080068c 	andi	r2,r2,26
     8b4:	10ff3c1e 	bne	r2,r3,5a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005a8>
     8b8:	b880038f 	ldh	r2,14(r23)
     8bc:	103f3a16 	blt	r2,zero,5a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005a8>
     8c0:	d9c02d17 	ldw	r7,180(sp)
     8c4:	d9002c17 	ldw	r4,176(sp)
     8c8:	a80d883a 	mov	r6,r21
     8cc:	b80b883a 	mov	r5,r23
     8d0:	00027180 	call	2718 <__sbprintf>
     8d4:	00001106 	br	91c <___vfprintf_internal_r+0x418>
     8d8:	d9002c17 	ldw	r4,176(sp)
     8dc:	d9801e04 	addi	r6,sp,120
     8e0:	b80b883a 	mov	r5,r23
     8e4:	000701c0 	call	701c <__sprint_r>
     8e8:	1000081e 	bne	r2,zero,90c <___vfprintf_internal_r+0x408>
     8ec:	da000404 	addi	r8,sp,16
     8f0:	003f5306 	br	640 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000640>
     8f4:	d8802017 	ldw	r2,128(sp)
     8f8:	10000426 	beq	r2,zero,90c <___vfprintf_internal_r+0x408>
     8fc:	d9002c17 	ldw	r4,176(sp)
     900:	d9801e04 	addi	r6,sp,120
     904:	b80b883a 	mov	r5,r23
     908:	000701c0 	call	701c <__sprint_r>
     90c:	b880030b 	ldhu	r2,12(r23)
     910:	1080100c 	andi	r2,r2,64
     914:	1005901e 	bne	r2,zero,1f58 <___vfprintf_internal_r+0x1a54>
     918:	d8802f17 	ldw	r2,188(sp)
     91c:	dfc04717 	ldw	ra,284(sp)
     920:	df004617 	ldw	fp,280(sp)
     924:	ddc04517 	ldw	r23,276(sp)
     928:	dd804417 	ldw	r22,272(sp)
     92c:	dd404317 	ldw	r21,268(sp)
     930:	dd004217 	ldw	r20,264(sp)
     934:	dcc04117 	ldw	r19,260(sp)
     938:	dc804017 	ldw	r18,256(sp)
     93c:	dc403f17 	ldw	r17,252(sp)
     940:	dc003e17 	ldw	r16,248(sp)
     944:	dec04804 	addi	sp,sp,288
     948:	f800283a 	ret
     94c:	d9002c17 	ldw	r4,176(sp)
     950:	00047a80 	call	47a8 <__sinit>
     954:	003f0406 	br	568 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000568>
     958:	d8802d17 	ldw	r2,180(sp)
     95c:	d9002d17 	ldw	r4,180(sp)
     960:	10800017 	ldw	r2,0(r2)
     964:	d8803115 	stw	r2,196(sp)
     968:	20800104 	addi	r2,r4,4
     96c:	d9003117 	ldw	r4,196(sp)
     970:	203fa716 	blt	r4,zero,810 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000810>
     974:	d8802d15 	stw	r2,180(sp)
     978:	ac400007 	ldb	r17,0(r21)
     97c:	003f4206 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
     980:	ac400007 	ldb	r17,0(r21)
     984:	aac00044 	addi	r11,r21,1
     988:	8a872826 	beq	r17,r10,262c <___vfprintf_internal_r+0x2128>
     98c:	88bff404 	addi	r2,r17,-48
     990:	0009883a 	mov	r4,zero
     994:	30867d36 	bltu	r6,r2,238c <___vfprintf_internal_r+0x1e88>
     998:	5c400007 	ldb	r17,0(r11)
     99c:	210002a4 	muli	r4,r4,10
     9a0:	5d400044 	addi	r21,r11,1
     9a4:	a817883a 	mov	r11,r21
     9a8:	2089883a 	add	r4,r4,r2
     9ac:	88bff404 	addi	r2,r17,-48
     9b0:	30bff92e 	bgeu	r6,r2,998 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000998>
     9b4:	2005c916 	blt	r4,zero,20dc <___vfprintf_internal_r+0x1bd8>
     9b8:	d9002915 	stw	r4,164(sp)
     9bc:	003f3306 	br	68c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000068c>
     9c0:	94802014 	ori	r18,r18,128
     9c4:	ac400007 	ldb	r17,0(r21)
     9c8:	003f2f06 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
     9cc:	a809883a 	mov	r4,r21
     9d0:	d8003115 	stw	zero,196(sp)
     9d4:	88bff404 	addi	r2,r17,-48
     9d8:	0017883a 	mov	r11,zero
     9dc:	24400007 	ldb	r17,0(r4)
     9e0:	5ac002a4 	muli	r11,r11,10
     9e4:	ad400044 	addi	r21,r21,1
     9e8:	a809883a 	mov	r4,r21
     9ec:	12d7883a 	add	r11,r2,r11
     9f0:	88bff404 	addi	r2,r17,-48
     9f4:	30bff92e 	bgeu	r6,r2,9dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00009dc>
     9f8:	dac03115 	stw	r11,196(sp)
     9fc:	003f2306 	br	68c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000068c>
     a00:	18c03fcc 	andi	r3,r3,255
     a04:	18072b1e 	bne	r3,zero,26b4 <___vfprintf_internal_r+0x21b0>
     a08:	94800414 	ori	r18,r18,16
     a0c:	9080080c 	andi	r2,r18,32
     a10:	10037b26 	beq	r2,zero,1800 <___vfprintf_internal_r+0x12fc>
     a14:	d9402d17 	ldw	r5,180(sp)
     a18:	28800117 	ldw	r2,4(r5)
     a1c:	2cc00017 	ldw	r19,0(r5)
     a20:	29400204 	addi	r5,r5,8
     a24:	d9402d15 	stw	r5,180(sp)
     a28:	102d883a 	mov	r22,r2
     a2c:	10044b16 	blt	r2,zero,1b5c <___vfprintf_internal_r+0x1658>
     a30:	d9402917 	ldw	r5,164(sp)
     a34:	df002783 	ldbu	fp,158(sp)
     a38:	2803bc16 	blt	r5,zero,192c <___vfprintf_internal_r+0x1428>
     a3c:	00ffdfc4 	movi	r3,-129
     a40:	9d84b03a 	or	r2,r19,r22
     a44:	90e4703a 	and	r18,r18,r3
     a48:	10017726 	beq	r2,zero,1028 <___vfprintf_internal_r+0xb24>
     a4c:	b0038326 	beq	r22,zero,185c <___vfprintf_internal_r+0x1358>
     a50:	dc402a15 	stw	r17,168(sp)
     a54:	dc001e04 	addi	r16,sp,120
     a58:	b023883a 	mov	r17,r22
     a5c:	402d883a 	mov	r22,r8
     a60:	9809883a 	mov	r4,r19
     a64:	880b883a 	mov	r5,r17
     a68:	01800284 	movi	r6,10
     a6c:	000f883a 	mov	r7,zero
     a70:	0009f900 	call	9f90 <__umoddi3>
     a74:	10800c04 	addi	r2,r2,48
     a78:	843fffc4 	addi	r16,r16,-1
     a7c:	9809883a 	mov	r4,r19
     a80:	880b883a 	mov	r5,r17
     a84:	80800005 	stb	r2,0(r16)
     a88:	01800284 	movi	r6,10
     a8c:	000f883a 	mov	r7,zero
     a90:	0009a180 	call	9a18 <__udivdi3>
     a94:	1027883a 	mov	r19,r2
     a98:	10c4b03a 	or	r2,r2,r3
     a9c:	1823883a 	mov	r17,r3
     aa0:	103fef1e 	bne	r2,zero,a60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a60>
     aa4:	d8c02817 	ldw	r3,160(sp)
     aa8:	dc402a17 	ldw	r17,168(sp)
     aac:	b011883a 	mov	r8,r22
     ab0:	1c07c83a 	sub	r3,r3,r16
     ab4:	d8c02e15 	stw	r3,184(sp)
     ab8:	00005906 	br	c20 <___vfprintf_internal_r+0x71c>
     abc:	18c03fcc 	andi	r3,r3,255
     ac0:	1806fa1e 	bne	r3,zero,26ac <___vfprintf_internal_r+0x21a8>
     ac4:	9080020c 	andi	r2,r18,8
     ac8:	10048a26 	beq	r2,zero,1cf4 <___vfprintf_internal_r+0x17f0>
     acc:	d8c02d17 	ldw	r3,180(sp)
     ad0:	d9002d17 	ldw	r4,180(sp)
     ad4:	d9402d17 	ldw	r5,180(sp)
     ad8:	18c00017 	ldw	r3,0(r3)
     adc:	21000117 	ldw	r4,4(r4)
     ae0:	29400204 	addi	r5,r5,8
     ae4:	d8c03615 	stw	r3,216(sp)
     ae8:	d9003815 	stw	r4,224(sp)
     aec:	d9402d15 	stw	r5,180(sp)
     af0:	d9003617 	ldw	r4,216(sp)
     af4:	d9403817 	ldw	r5,224(sp)
     af8:	da003d15 	stw	r8,244(sp)
     afc:	04000044 	movi	r16,1
     b00:	0006ba80 	call	6ba8 <__fpclassifyd>
     b04:	da003d17 	ldw	r8,244(sp)
     b08:	14041f1e 	bne	r2,r16,1b88 <___vfprintf_internal_r+0x1684>
     b0c:	d9003617 	ldw	r4,216(sp)
     b10:	d9403817 	ldw	r5,224(sp)
     b14:	000d883a 	mov	r6,zero
     b18:	000f883a 	mov	r7,zero
     b1c:	000b9740 	call	b974 <__ledf2>
     b20:	da003d17 	ldw	r8,244(sp)
     b24:	1005be16 	blt	r2,zero,2220 <___vfprintf_internal_r+0x1d1c>
     b28:	df002783 	ldbu	fp,158(sp)
     b2c:	008011c4 	movi	r2,71
     b30:	1445330e 	bge	r2,r17,2000 <___vfprintf_internal_r+0x1afc>
     b34:	04000074 	movhi	r16,1
     b38:	84012d04 	addi	r16,r16,1204
     b3c:	00c000c4 	movi	r3,3
     b40:	00bfdfc4 	movi	r2,-129
     b44:	d8c02a15 	stw	r3,168(sp)
     b48:	90a4703a 	and	r18,r18,r2
     b4c:	d8c02e15 	stw	r3,184(sp)
     b50:	d8002915 	stw	zero,164(sp)
     b54:	d8003215 	stw	zero,200(sp)
     b58:	00003706 	br	c38 <___vfprintf_internal_r+0x734>
     b5c:	94800214 	ori	r18,r18,8
     b60:	ac400007 	ldb	r17,0(r21)
     b64:	003ec806 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
     b68:	18c03fcc 	andi	r3,r3,255
     b6c:	1806db1e 	bne	r3,zero,26dc <___vfprintf_internal_r+0x21d8>
     b70:	94800414 	ori	r18,r18,16
     b74:	9080080c 	andi	r2,r18,32
     b78:	1002d826 	beq	r2,zero,16dc <___vfprintf_internal_r+0x11d8>
     b7c:	d9402d17 	ldw	r5,180(sp)
     b80:	d8c02917 	ldw	r3,164(sp)
     b84:	d8002785 	stb	zero,158(sp)
     b88:	28800204 	addi	r2,r5,8
     b8c:	2cc00017 	ldw	r19,0(r5)
     b90:	2d800117 	ldw	r22,4(r5)
     b94:	18048f16 	blt	r3,zero,1dd4 <___vfprintf_internal_r+0x18d0>
     b98:	013fdfc4 	movi	r4,-129
     b9c:	9d86b03a 	or	r3,r19,r22
     ba0:	d8802d15 	stw	r2,180(sp)
     ba4:	9124703a 	and	r18,r18,r4
     ba8:	1802d91e 	bne	r3,zero,1710 <___vfprintf_internal_r+0x120c>
     bac:	d8c02917 	ldw	r3,164(sp)
     bb0:	0039883a 	mov	fp,zero
     bb4:	1805c326 	beq	r3,zero,22c4 <___vfprintf_internal_r+0x1dc0>
     bb8:	0027883a 	mov	r19,zero
     bbc:	002d883a 	mov	r22,zero
     bc0:	dc001e04 	addi	r16,sp,120
     bc4:	9806d0fa 	srli	r3,r19,3
     bc8:	b008977a 	slli	r4,r22,29
     bcc:	b02cd0fa 	srli	r22,r22,3
     bd0:	9cc001cc 	andi	r19,r19,7
     bd4:	98800c04 	addi	r2,r19,48
     bd8:	843fffc4 	addi	r16,r16,-1
     bdc:	20e6b03a 	or	r19,r4,r3
     be0:	80800005 	stb	r2,0(r16)
     be4:	9d86b03a 	or	r3,r19,r22
     be8:	183ff61e 	bne	r3,zero,bc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bc4>
     bec:	90c0004c 	andi	r3,r18,1
     bf0:	18013b26 	beq	r3,zero,10e0 <___vfprintf_internal_r+0xbdc>
     bf4:	10803fcc 	andi	r2,r2,255
     bf8:	1080201c 	xori	r2,r2,128
     bfc:	10bfe004 	addi	r2,r2,-128
     c00:	00c00c04 	movi	r3,48
     c04:	10c13626 	beq	r2,r3,10e0 <___vfprintf_internal_r+0xbdc>
     c08:	80ffffc5 	stb	r3,-1(r16)
     c0c:	d8c02817 	ldw	r3,160(sp)
     c10:	80bfffc4 	addi	r2,r16,-1
     c14:	1021883a 	mov	r16,r2
     c18:	1887c83a 	sub	r3,r3,r2
     c1c:	d8c02e15 	stw	r3,184(sp)
     c20:	d8802e17 	ldw	r2,184(sp)
     c24:	d9002917 	ldw	r4,164(sp)
     c28:	1100010e 	bge	r2,r4,c30 <___vfprintf_internal_r+0x72c>
     c2c:	2005883a 	mov	r2,r4
     c30:	d8802a15 	stw	r2,168(sp)
     c34:	d8003215 	stw	zero,200(sp)
     c38:	e7003fcc 	andi	fp,fp,255
     c3c:	e700201c 	xori	fp,fp,128
     c40:	e73fe004 	addi	fp,fp,-128
     c44:	e0000326 	beq	fp,zero,c54 <___vfprintf_internal_r+0x750>
     c48:	d8c02a17 	ldw	r3,168(sp)
     c4c:	18c00044 	addi	r3,r3,1
     c50:	d8c02a15 	stw	r3,168(sp)
     c54:	90c0008c 	andi	r3,r18,2
     c58:	d8c02b15 	stw	r3,172(sp)
     c5c:	18000326 	beq	r3,zero,c6c <___vfprintf_internal_r+0x768>
     c60:	d8c02a17 	ldw	r3,168(sp)
     c64:	18c00084 	addi	r3,r3,2
     c68:	d8c02a15 	stw	r3,168(sp)
     c6c:	90c0210c 	andi	r3,r18,132
     c70:	d8c03015 	stw	r3,192(sp)
     c74:	1801a31e 	bne	r3,zero,1304 <___vfprintf_internal_r+0xe00>
     c78:	d9003117 	ldw	r4,196(sp)
     c7c:	d8c02a17 	ldw	r3,168(sp)
     c80:	20e7c83a 	sub	r19,r4,r3
     c84:	04c19f0e 	bge	zero,r19,1304 <___vfprintf_internal_r+0xe00>
     c88:	02400404 	movi	r9,16
     c8c:	d8c02017 	ldw	r3,128(sp)
     c90:	d8801f17 	ldw	r2,124(sp)
     c94:	4cc50d0e 	bge	r9,r19,20cc <___vfprintf_internal_r+0x1bc8>
     c98:	01400074 	movhi	r5,1
     c9c:	29414084 	addi	r5,r5,1282
     ca0:	dc403b15 	stw	r17,236(sp)
     ca4:	d9403515 	stw	r5,212(sp)
     ca8:	9823883a 	mov	r17,r19
     cac:	482d883a 	mov	r22,r9
     cb0:	9027883a 	mov	r19,r18
     cb4:	070001c4 	movi	fp,7
     cb8:	8025883a 	mov	r18,r16
     cbc:	dc002c17 	ldw	r16,176(sp)
     cc0:	00000306 	br	cd0 <___vfprintf_internal_r+0x7cc>
     cc4:	8c7ffc04 	addi	r17,r17,-16
     cc8:	42000204 	addi	r8,r8,8
     ccc:	b440130e 	bge	r22,r17,d1c <___vfprintf_internal_r+0x818>
     cd0:	01000074 	movhi	r4,1
     cd4:	18c00404 	addi	r3,r3,16
     cd8:	10800044 	addi	r2,r2,1
     cdc:	21014084 	addi	r4,r4,1282
     ce0:	41000015 	stw	r4,0(r8)
     ce4:	45800115 	stw	r22,4(r8)
     ce8:	d8c02015 	stw	r3,128(sp)
     cec:	d8801f15 	stw	r2,124(sp)
     cf0:	e0bff40e 	bge	fp,r2,cc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000cc4>
     cf4:	d9801e04 	addi	r6,sp,120
     cf8:	b80b883a 	mov	r5,r23
     cfc:	8009883a 	mov	r4,r16
     d00:	000701c0 	call	701c <__sprint_r>
     d04:	103f011e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
     d08:	8c7ffc04 	addi	r17,r17,-16
     d0c:	d8c02017 	ldw	r3,128(sp)
     d10:	d8801f17 	ldw	r2,124(sp)
     d14:	da000404 	addi	r8,sp,16
     d18:	b47fed16 	blt	r22,r17,cd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000cd0>
     d1c:	9021883a 	mov	r16,r18
     d20:	9825883a 	mov	r18,r19
     d24:	8827883a 	mov	r19,r17
     d28:	dc403b17 	ldw	r17,236(sp)
     d2c:	d9403517 	ldw	r5,212(sp)
     d30:	98c7883a 	add	r3,r19,r3
     d34:	10800044 	addi	r2,r2,1
     d38:	41400015 	stw	r5,0(r8)
     d3c:	44c00115 	stw	r19,4(r8)
     d40:	d8c02015 	stw	r3,128(sp)
     d44:	d8801f15 	stw	r2,124(sp)
     d48:	010001c4 	movi	r4,7
     d4c:	2082a316 	blt	r4,r2,17dc <___vfprintf_internal_r+0x12d8>
     d50:	df002787 	ldb	fp,158(sp)
     d54:	42000204 	addi	r8,r8,8
     d58:	e0000c26 	beq	fp,zero,d8c <___vfprintf_internal_r+0x888>
     d5c:	d8801f17 	ldw	r2,124(sp)
     d60:	d9002784 	addi	r4,sp,158
     d64:	18c00044 	addi	r3,r3,1
     d68:	10800044 	addi	r2,r2,1
     d6c:	41000015 	stw	r4,0(r8)
     d70:	01000044 	movi	r4,1
     d74:	41000115 	stw	r4,4(r8)
     d78:	d8c02015 	stw	r3,128(sp)
     d7c:	d8801f15 	stw	r2,124(sp)
     d80:	010001c4 	movi	r4,7
     d84:	20823c16 	blt	r4,r2,1678 <___vfprintf_internal_r+0x1174>
     d88:	42000204 	addi	r8,r8,8
     d8c:	d8802b17 	ldw	r2,172(sp)
     d90:	10000c26 	beq	r2,zero,dc4 <___vfprintf_internal_r+0x8c0>
     d94:	d8801f17 	ldw	r2,124(sp)
     d98:	d9002704 	addi	r4,sp,156
     d9c:	18c00084 	addi	r3,r3,2
     da0:	10800044 	addi	r2,r2,1
     da4:	41000015 	stw	r4,0(r8)
     da8:	01000084 	movi	r4,2
     dac:	41000115 	stw	r4,4(r8)
     db0:	d8c02015 	stw	r3,128(sp)
     db4:	d8801f15 	stw	r2,124(sp)
     db8:	010001c4 	movi	r4,7
     dbc:	20823616 	blt	r4,r2,1698 <___vfprintf_internal_r+0x1194>
     dc0:	42000204 	addi	r8,r8,8
     dc4:	d9003017 	ldw	r4,192(sp)
     dc8:	00802004 	movi	r2,128
     dcc:	20819926 	beq	r4,r2,1434 <___vfprintf_internal_r+0xf30>
     dd0:	d9402917 	ldw	r5,164(sp)
     dd4:	d8802e17 	ldw	r2,184(sp)
     dd8:	28adc83a 	sub	r22,r5,r2
     ddc:	0580310e 	bge	zero,r22,ea4 <___vfprintf_internal_r+0x9a0>
     de0:	07000404 	movi	fp,16
     de4:	d8801f17 	ldw	r2,124(sp)
     de8:	e584140e 	bge	fp,r22,1e3c <___vfprintf_internal_r+0x1938>
     dec:	01400074 	movhi	r5,1
     df0:	29413c84 	addi	r5,r5,1266
     df4:	dc402915 	stw	r17,164(sp)
     df8:	d9402b15 	stw	r5,172(sp)
     dfc:	b023883a 	mov	r17,r22
     e00:	04c001c4 	movi	r19,7
     e04:	a82d883a 	mov	r22,r21
     e08:	902b883a 	mov	r21,r18
     e0c:	8025883a 	mov	r18,r16
     e10:	dc002c17 	ldw	r16,176(sp)
     e14:	00000306 	br	e24 <___vfprintf_internal_r+0x920>
     e18:	8c7ffc04 	addi	r17,r17,-16
     e1c:	42000204 	addi	r8,r8,8
     e20:	e440110e 	bge	fp,r17,e68 <___vfprintf_internal_r+0x964>
     e24:	18c00404 	addi	r3,r3,16
     e28:	10800044 	addi	r2,r2,1
     e2c:	45000015 	stw	r20,0(r8)
     e30:	47000115 	stw	fp,4(r8)
     e34:	d8c02015 	stw	r3,128(sp)
     e38:	d8801f15 	stw	r2,124(sp)
     e3c:	98bff60e 	bge	r19,r2,e18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000e18>
     e40:	d9801e04 	addi	r6,sp,120
     e44:	b80b883a 	mov	r5,r23
     e48:	8009883a 	mov	r4,r16
     e4c:	000701c0 	call	701c <__sprint_r>
     e50:	103eae1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
     e54:	8c7ffc04 	addi	r17,r17,-16
     e58:	d8c02017 	ldw	r3,128(sp)
     e5c:	d8801f17 	ldw	r2,124(sp)
     e60:	da000404 	addi	r8,sp,16
     e64:	e47fef16 	blt	fp,r17,e24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000e24>
     e68:	9021883a 	mov	r16,r18
     e6c:	a825883a 	mov	r18,r21
     e70:	b02b883a 	mov	r21,r22
     e74:	882d883a 	mov	r22,r17
     e78:	dc402917 	ldw	r17,164(sp)
     e7c:	d9002b17 	ldw	r4,172(sp)
     e80:	1d87883a 	add	r3,r3,r22
     e84:	10800044 	addi	r2,r2,1
     e88:	41000015 	stw	r4,0(r8)
     e8c:	45800115 	stw	r22,4(r8)
     e90:	d8c02015 	stw	r3,128(sp)
     e94:	d8801f15 	stw	r2,124(sp)
     e98:	010001c4 	movi	r4,7
     e9c:	2081ee16 	blt	r4,r2,1658 <___vfprintf_internal_r+0x1154>
     ea0:	42000204 	addi	r8,r8,8
     ea4:	9080400c 	andi	r2,r18,256
     ea8:	1001181e 	bne	r2,zero,130c <___vfprintf_internal_r+0xe08>
     eac:	d9402e17 	ldw	r5,184(sp)
     eb0:	d8801f17 	ldw	r2,124(sp)
     eb4:	44000015 	stw	r16,0(r8)
     eb8:	1947883a 	add	r3,r3,r5
     ebc:	10800044 	addi	r2,r2,1
     ec0:	41400115 	stw	r5,4(r8)
     ec4:	d8c02015 	stw	r3,128(sp)
     ec8:	d8801f15 	stw	r2,124(sp)
     ecc:	010001c4 	movi	r4,7
     ed0:	2081d316 	blt	r4,r2,1620 <___vfprintf_internal_r+0x111c>
     ed4:	42000204 	addi	r8,r8,8
     ed8:	9480010c 	andi	r18,r18,4
     edc:	90003226 	beq	r18,zero,fa8 <___vfprintf_internal_r+0xaa4>
     ee0:	d9403117 	ldw	r5,196(sp)
     ee4:	d8802a17 	ldw	r2,168(sp)
     ee8:	28a1c83a 	sub	r16,r5,r2
     eec:	04002e0e 	bge	zero,r16,fa8 <___vfprintf_internal_r+0xaa4>
     ef0:	04400404 	movi	r17,16
     ef4:	d8801f17 	ldw	r2,124(sp)
     ef8:	8c04a20e 	bge	r17,r16,2184 <___vfprintf_internal_r+0x1c80>
     efc:	01400074 	movhi	r5,1
     f00:	29414084 	addi	r5,r5,1282
     f04:	d9403515 	stw	r5,212(sp)
     f08:	048001c4 	movi	r18,7
     f0c:	dcc02c17 	ldw	r19,176(sp)
     f10:	00000306 	br	f20 <___vfprintf_internal_r+0xa1c>
     f14:	843ffc04 	addi	r16,r16,-16
     f18:	42000204 	addi	r8,r8,8
     f1c:	8c00130e 	bge	r17,r16,f6c <___vfprintf_internal_r+0xa68>
     f20:	01000074 	movhi	r4,1
     f24:	18c00404 	addi	r3,r3,16
     f28:	10800044 	addi	r2,r2,1
     f2c:	21014084 	addi	r4,r4,1282
     f30:	41000015 	stw	r4,0(r8)
     f34:	44400115 	stw	r17,4(r8)
     f38:	d8c02015 	stw	r3,128(sp)
     f3c:	d8801f15 	stw	r2,124(sp)
     f40:	90bff40e 	bge	r18,r2,f14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000f14>
     f44:	d9801e04 	addi	r6,sp,120
     f48:	b80b883a 	mov	r5,r23
     f4c:	9809883a 	mov	r4,r19
     f50:	000701c0 	call	701c <__sprint_r>
     f54:	103e6d1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
     f58:	843ffc04 	addi	r16,r16,-16
     f5c:	d8c02017 	ldw	r3,128(sp)
     f60:	d8801f17 	ldw	r2,124(sp)
     f64:	da000404 	addi	r8,sp,16
     f68:	8c3fed16 	blt	r17,r16,f20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000f20>
     f6c:	d9403517 	ldw	r5,212(sp)
     f70:	1c07883a 	add	r3,r3,r16
     f74:	10800044 	addi	r2,r2,1
     f78:	41400015 	stw	r5,0(r8)
     f7c:	44000115 	stw	r16,4(r8)
     f80:	d8c02015 	stw	r3,128(sp)
     f84:	d8801f15 	stw	r2,124(sp)
     f88:	010001c4 	movi	r4,7
     f8c:	2080060e 	bge	r4,r2,fa8 <___vfprintf_internal_r+0xaa4>
     f90:	d9002c17 	ldw	r4,176(sp)
     f94:	d9801e04 	addi	r6,sp,120
     f98:	b80b883a 	mov	r5,r23
     f9c:	000701c0 	call	701c <__sprint_r>
     fa0:	103e5a1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
     fa4:	d8c02017 	ldw	r3,128(sp)
     fa8:	d8803117 	ldw	r2,196(sp)
     fac:	d9002a17 	ldw	r4,168(sp)
     fb0:	1100010e 	bge	r2,r4,fb8 <___vfprintf_internal_r+0xab4>
     fb4:	2005883a 	mov	r2,r4
     fb8:	d9402f17 	ldw	r5,188(sp)
     fbc:	288b883a 	add	r5,r5,r2
     fc0:	d9402f15 	stw	r5,188(sp)
     fc4:	18019e1e 	bne	r3,zero,1640 <___vfprintf_internal_r+0x113c>
     fc8:	a8800007 	ldb	r2,0(r21)
     fcc:	d8001f15 	stw	zero,124(sp)
     fd0:	da000404 	addi	r8,sp,16
     fd4:	103d851e 	bne	r2,zero,5ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005ec>
     fd8:	a821883a 	mov	r16,r21
     fdc:	003d9b06 	br	64c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000064c>
     fe0:	18c03fcc 	andi	r3,r3,255
     fe4:	1805c11e 	bne	r3,zero,26ec <___vfprintf_internal_r+0x21e8>
     fe8:	94800414 	ori	r18,r18,16
     fec:	9080080c 	andi	r2,r18,32
     ff0:	10020c26 	beq	r2,zero,1824 <___vfprintf_internal_r+0x1320>
     ff4:	d8802d17 	ldw	r2,180(sp)
     ff8:	d9002917 	ldw	r4,164(sp)
     ffc:	d8002785 	stb	zero,158(sp)
    1000:	10c00204 	addi	r3,r2,8
    1004:	14c00017 	ldw	r19,0(r2)
    1008:	15800117 	ldw	r22,4(r2)
    100c:	20040f16 	blt	r4,zero,204c <___vfprintf_internal_r+0x1b48>
    1010:	013fdfc4 	movi	r4,-129
    1014:	9d84b03a 	or	r2,r19,r22
    1018:	d8c02d15 	stw	r3,180(sp)
    101c:	9124703a 	and	r18,r18,r4
    1020:	0039883a 	mov	fp,zero
    1024:	103e891e 	bne	r2,zero,a4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a4c>
    1028:	d9002917 	ldw	r4,164(sp)
    102c:	2002c11e 	bne	r4,zero,1b34 <___vfprintf_internal_r+0x1630>
    1030:	d8002915 	stw	zero,164(sp)
    1034:	d8002e15 	stw	zero,184(sp)
    1038:	dc001e04 	addi	r16,sp,120
    103c:	003ef806 	br	c20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c20>
    1040:	18c03fcc 	andi	r3,r3,255
    1044:	18059d1e 	bne	r3,zero,26bc <___vfprintf_internal_r+0x21b8>
    1048:	01400074 	movhi	r5,1
    104c:	29413004 	addi	r5,r5,1216
    1050:	d9403915 	stw	r5,228(sp)
    1054:	9080080c 	andi	r2,r18,32
    1058:	10005226 	beq	r2,zero,11a4 <___vfprintf_internal_r+0xca0>
    105c:	d8802d17 	ldw	r2,180(sp)
    1060:	14c00017 	ldw	r19,0(r2)
    1064:	15800117 	ldw	r22,4(r2)
    1068:	10800204 	addi	r2,r2,8
    106c:	d8802d15 	stw	r2,180(sp)
    1070:	9080004c 	andi	r2,r18,1
    1074:	10019026 	beq	r2,zero,16b8 <___vfprintf_internal_r+0x11b4>
    1078:	9d84b03a 	or	r2,r19,r22
    107c:	10036926 	beq	r2,zero,1e24 <___vfprintf_internal_r+0x1920>
    1080:	d8c02917 	ldw	r3,164(sp)
    1084:	00800c04 	movi	r2,48
    1088:	d8802705 	stb	r2,156(sp)
    108c:	dc402745 	stb	r17,157(sp)
    1090:	d8002785 	stb	zero,158(sp)
    1094:	90800094 	ori	r2,r18,2
    1098:	18045d16 	blt	r3,zero,2210 <___vfprintf_internal_r+0x1d0c>
    109c:	00bfdfc4 	movi	r2,-129
    10a0:	90a4703a 	and	r18,r18,r2
    10a4:	94800094 	ori	r18,r18,2
    10a8:	0039883a 	mov	fp,zero
    10ac:	d9003917 	ldw	r4,228(sp)
    10b0:	dc001e04 	addi	r16,sp,120
    10b4:	988003cc 	andi	r2,r19,15
    10b8:	b006973a 	slli	r3,r22,28
    10bc:	2085883a 	add	r2,r4,r2
    10c0:	9826d13a 	srli	r19,r19,4
    10c4:	10800003 	ldbu	r2,0(r2)
    10c8:	b02cd13a 	srli	r22,r22,4
    10cc:	843fffc4 	addi	r16,r16,-1
    10d0:	1ce6b03a 	or	r19,r3,r19
    10d4:	80800005 	stb	r2,0(r16)
    10d8:	9d84b03a 	or	r2,r19,r22
    10dc:	103ff51e 	bne	r2,zero,10b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010b4>
    10e0:	d8c02817 	ldw	r3,160(sp)
    10e4:	1c07c83a 	sub	r3,r3,r16
    10e8:	d8c02e15 	stw	r3,184(sp)
    10ec:	003ecc06 	br	c20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c20>
    10f0:	18c03fcc 	andi	r3,r3,255
    10f4:	183e9f26 	beq	r3,zero,b74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b74>
    10f8:	d9c02785 	stb	r7,158(sp)
    10fc:	003e9d06 	br	b74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b74>
    1100:	00c00044 	movi	r3,1
    1104:	01c00ac4 	movi	r7,43
    1108:	ac400007 	ldb	r17,0(r21)
    110c:	003d5e06 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    1110:	94800814 	ori	r18,r18,32
    1114:	ac400007 	ldb	r17,0(r21)
    1118:	003d5b06 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    111c:	d8c02d17 	ldw	r3,180(sp)
    1120:	d8002785 	stb	zero,158(sp)
    1124:	1c000017 	ldw	r16,0(r3)
    1128:	1cc00104 	addi	r19,r3,4
    112c:	80041926 	beq	r16,zero,2194 <___vfprintf_internal_r+0x1c90>
    1130:	d9002917 	ldw	r4,164(sp)
    1134:	2003d016 	blt	r4,zero,2078 <___vfprintf_internal_r+0x1b74>
    1138:	200d883a 	mov	r6,r4
    113c:	000b883a 	mov	r5,zero
    1140:	8009883a 	mov	r4,r16
    1144:	da003d15 	stw	r8,244(sp)
    1148:	00058580 	call	5858 <memchr>
    114c:	da003d17 	ldw	r8,244(sp)
    1150:	10045426 	beq	r2,zero,22a4 <___vfprintf_internal_r+0x1da0>
    1154:	1405c83a 	sub	r2,r2,r16
    1158:	d8802e15 	stw	r2,184(sp)
    115c:	1003cc16 	blt	r2,zero,2090 <___vfprintf_internal_r+0x1b8c>
    1160:	df002783 	ldbu	fp,158(sp)
    1164:	d8802a15 	stw	r2,168(sp)
    1168:	dcc02d15 	stw	r19,180(sp)
    116c:	d8002915 	stw	zero,164(sp)
    1170:	d8003215 	stw	zero,200(sp)
    1174:	003eb006 	br	c38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c38>
    1178:	18c03fcc 	andi	r3,r3,255
    117c:	183f9b26 	beq	r3,zero,fec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fec>
    1180:	d9c02785 	stb	r7,158(sp)
    1184:	003f9906 	br	fec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fec>
    1188:	18c03fcc 	andi	r3,r3,255
    118c:	1805551e 	bne	r3,zero,26e4 <___vfprintf_internal_r+0x21e0>
    1190:	01400074 	movhi	r5,1
    1194:	29413504 	addi	r5,r5,1236
    1198:	d9403915 	stw	r5,228(sp)
    119c:	9080080c 	andi	r2,r18,32
    11a0:	103fae1e 	bne	r2,zero,105c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000105c>
    11a4:	9080040c 	andi	r2,r18,16
    11a8:	1002de26 	beq	r2,zero,1d24 <___vfprintf_internal_r+0x1820>
    11ac:	d8c02d17 	ldw	r3,180(sp)
    11b0:	002d883a 	mov	r22,zero
    11b4:	1cc00017 	ldw	r19,0(r3)
    11b8:	18c00104 	addi	r3,r3,4
    11bc:	d8c02d15 	stw	r3,180(sp)
    11c0:	003fab06 	br	1070 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001070>
    11c4:	38803fcc 	andi	r2,r7,255
    11c8:	1080201c 	xori	r2,r2,128
    11cc:	10bfe004 	addi	r2,r2,-128
    11d0:	1002d21e 	bne	r2,zero,1d1c <___vfprintf_internal_r+0x1818>
    11d4:	00c00044 	movi	r3,1
    11d8:	01c00804 	movi	r7,32
    11dc:	ac400007 	ldb	r17,0(r21)
    11e0:	003d2906 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    11e4:	94800054 	ori	r18,r18,1
    11e8:	ac400007 	ldb	r17,0(r21)
    11ec:	003d2606 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    11f0:	18c03fcc 	andi	r3,r3,255
    11f4:	183e0526 	beq	r3,zero,a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a0c>
    11f8:	d9c02785 	stb	r7,158(sp)
    11fc:	003e0306 	br	a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a0c>
    1200:	94801014 	ori	r18,r18,64
    1204:	ac400007 	ldb	r17,0(r21)
    1208:	003d1f06 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    120c:	ac400007 	ldb	r17,0(r21)
    1210:	8a438726 	beq	r17,r9,2030 <___vfprintf_internal_r+0x1b2c>
    1214:	94800414 	ori	r18,r18,16
    1218:	003d1b06 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    121c:	18c03fcc 	andi	r3,r3,255
    1220:	1805341e 	bne	r3,zero,26f4 <___vfprintf_internal_r+0x21f0>
    1224:	9080080c 	andi	r2,r18,32
    1228:	1002cd26 	beq	r2,zero,1d60 <___vfprintf_internal_r+0x185c>
    122c:	d9402d17 	ldw	r5,180(sp)
    1230:	d9002f17 	ldw	r4,188(sp)
    1234:	28800017 	ldw	r2,0(r5)
    1238:	2007d7fa 	srai	r3,r4,31
    123c:	29400104 	addi	r5,r5,4
    1240:	d9402d15 	stw	r5,180(sp)
    1244:	11000015 	stw	r4,0(r2)
    1248:	10c00115 	stw	r3,4(r2)
    124c:	003ce506 	br	5e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005e4>
    1250:	d8c02d17 	ldw	r3,180(sp)
    1254:	d9002d17 	ldw	r4,180(sp)
    1258:	d8002785 	stb	zero,158(sp)
    125c:	18800017 	ldw	r2,0(r3)
    1260:	21000104 	addi	r4,r4,4
    1264:	00c00044 	movi	r3,1
    1268:	d8c02a15 	stw	r3,168(sp)
    126c:	d8801405 	stb	r2,80(sp)
    1270:	d9002d15 	stw	r4,180(sp)
    1274:	d8c02e15 	stw	r3,184(sp)
    1278:	d8002915 	stw	zero,164(sp)
    127c:	d8003215 	stw	zero,200(sp)
    1280:	dc001404 	addi	r16,sp,80
    1284:	0039883a 	mov	fp,zero
    1288:	003e7206 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    128c:	01000074 	movhi	r4,1
    1290:	21013504 	addi	r4,r4,1236
    1294:	0039883a 	mov	fp,zero
    1298:	d9003915 	stw	r4,228(sp)
    129c:	04401e04 	movi	r17,120
    12a0:	003f8206 	br	10ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010ac>
    12a4:	18c03fcc 	andi	r3,r3,255
    12a8:	1805061e 	bne	r3,zero,26c4 <___vfprintf_internal_r+0x21c0>
    12ac:	883d9126 	beq	r17,zero,8f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00008f4>
    12b0:	00c00044 	movi	r3,1
    12b4:	d8c02a15 	stw	r3,168(sp)
    12b8:	dc401405 	stb	r17,80(sp)
    12bc:	d8002785 	stb	zero,158(sp)
    12c0:	003fec06 	br	1274 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001274>
    12c4:	01400074 	movhi	r5,1
    12c8:	29413504 	addi	r5,r5,1236
    12cc:	d9403915 	stw	r5,228(sp)
    12d0:	d8c02d15 	stw	r3,180(sp)
    12d4:	1025883a 	mov	r18,r2
    12d8:	04401e04 	movi	r17,120
    12dc:	9d84b03a 	or	r2,r19,r22
    12e0:	1000fc1e 	bne	r2,zero,16d4 <___vfprintf_internal_r+0x11d0>
    12e4:	0039883a 	mov	fp,zero
    12e8:	00800084 	movi	r2,2
    12ec:	10803fcc 	andi	r2,r2,255
    12f0:	00c00044 	movi	r3,1
    12f4:	10c20f26 	beq	r2,r3,1b34 <___vfprintf_internal_r+0x1630>
    12f8:	00c00084 	movi	r3,2
    12fc:	10fd6326 	beq	r2,r3,88c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000088c>
    1300:	003e2d06 	br	bb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bb8>
    1304:	d8c02017 	ldw	r3,128(sp)
    1308:	003e9306 	br	d58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000d58>
    130c:	00801944 	movi	r2,101
    1310:	14407e0e 	bge	r2,r17,150c <___vfprintf_internal_r+0x1008>
    1314:	d9003617 	ldw	r4,216(sp)
    1318:	d9403817 	ldw	r5,224(sp)
    131c:	000d883a 	mov	r6,zero
    1320:	000f883a 	mov	r7,zero
    1324:	d8c03c15 	stw	r3,240(sp)
    1328:	da003d15 	stw	r8,244(sp)
    132c:	000b8100 	call	b810 <__eqdf2>
    1330:	d8c03c17 	ldw	r3,240(sp)
    1334:	da003d17 	ldw	r8,244(sp)
    1338:	1000f71e 	bne	r2,zero,1718 <___vfprintf_internal_r+0x1214>
    133c:	d8801f17 	ldw	r2,124(sp)
    1340:	01000074 	movhi	r4,1
    1344:	21013c04 	addi	r4,r4,1264
    1348:	18c00044 	addi	r3,r3,1
    134c:	10800044 	addi	r2,r2,1
    1350:	41000015 	stw	r4,0(r8)
    1354:	01000044 	movi	r4,1
    1358:	41000115 	stw	r4,4(r8)
    135c:	d8c02015 	stw	r3,128(sp)
    1360:	d8801f15 	stw	r2,124(sp)
    1364:	010001c4 	movi	r4,7
    1368:	2082b816 	blt	r4,r2,1e4c <___vfprintf_internal_r+0x1948>
    136c:	42000204 	addi	r8,r8,8
    1370:	d8802617 	ldw	r2,152(sp)
    1374:	d9403317 	ldw	r5,204(sp)
    1378:	11400216 	blt	r2,r5,1384 <___vfprintf_internal_r+0xe80>
    137c:	9080004c 	andi	r2,r18,1
    1380:	103ed526 	beq	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1384:	d8803717 	ldw	r2,220(sp)
    1388:	d9003417 	ldw	r4,208(sp)
    138c:	d9403717 	ldw	r5,220(sp)
    1390:	1887883a 	add	r3,r3,r2
    1394:	d8801f17 	ldw	r2,124(sp)
    1398:	41000015 	stw	r4,0(r8)
    139c:	41400115 	stw	r5,4(r8)
    13a0:	10800044 	addi	r2,r2,1
    13a4:	d8c02015 	stw	r3,128(sp)
    13a8:	d8801f15 	stw	r2,124(sp)
    13ac:	010001c4 	movi	r4,7
    13b0:	20832916 	blt	r4,r2,2058 <___vfprintf_internal_r+0x1b54>
    13b4:	42000204 	addi	r8,r8,8
    13b8:	d8803317 	ldw	r2,204(sp)
    13bc:	143fffc4 	addi	r16,r2,-1
    13c0:	043ec50e 	bge	zero,r16,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    13c4:	04400404 	movi	r17,16
    13c8:	d8801f17 	ldw	r2,124(sp)
    13cc:	8c00880e 	bge	r17,r16,15f0 <___vfprintf_internal_r+0x10ec>
    13d0:	01400074 	movhi	r5,1
    13d4:	29413c84 	addi	r5,r5,1266
    13d8:	d9402b15 	stw	r5,172(sp)
    13dc:	058001c4 	movi	r22,7
    13e0:	dcc02c17 	ldw	r19,176(sp)
    13e4:	00000306 	br	13f4 <___vfprintf_internal_r+0xef0>
    13e8:	42000204 	addi	r8,r8,8
    13ec:	843ffc04 	addi	r16,r16,-16
    13f0:	8c00820e 	bge	r17,r16,15fc <___vfprintf_internal_r+0x10f8>
    13f4:	18c00404 	addi	r3,r3,16
    13f8:	10800044 	addi	r2,r2,1
    13fc:	45000015 	stw	r20,0(r8)
    1400:	44400115 	stw	r17,4(r8)
    1404:	d8c02015 	stw	r3,128(sp)
    1408:	d8801f15 	stw	r2,124(sp)
    140c:	b0bff60e 	bge	r22,r2,13e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00013e8>
    1410:	d9801e04 	addi	r6,sp,120
    1414:	b80b883a 	mov	r5,r23
    1418:	9809883a 	mov	r4,r19
    141c:	000701c0 	call	701c <__sprint_r>
    1420:	103d3a1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1424:	d8c02017 	ldw	r3,128(sp)
    1428:	d8801f17 	ldw	r2,124(sp)
    142c:	da000404 	addi	r8,sp,16
    1430:	003fee06 	br	13ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00013ec>
    1434:	d9403117 	ldw	r5,196(sp)
    1438:	d8802a17 	ldw	r2,168(sp)
    143c:	28adc83a 	sub	r22,r5,r2
    1440:	05be630e 	bge	zero,r22,dd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000dd0>
    1444:	07000404 	movi	fp,16
    1448:	d8801f17 	ldw	r2,124(sp)
    144c:	e5838f0e 	bge	fp,r22,228c <___vfprintf_internal_r+0x1d88>
    1450:	01400074 	movhi	r5,1
    1454:	29413c84 	addi	r5,r5,1266
    1458:	dc403015 	stw	r17,192(sp)
    145c:	d9402b15 	stw	r5,172(sp)
    1460:	b023883a 	mov	r17,r22
    1464:	04c001c4 	movi	r19,7
    1468:	a82d883a 	mov	r22,r21
    146c:	902b883a 	mov	r21,r18
    1470:	8025883a 	mov	r18,r16
    1474:	dc002c17 	ldw	r16,176(sp)
    1478:	00000306 	br	1488 <___vfprintf_internal_r+0xf84>
    147c:	8c7ffc04 	addi	r17,r17,-16
    1480:	42000204 	addi	r8,r8,8
    1484:	e440110e 	bge	fp,r17,14cc <___vfprintf_internal_r+0xfc8>
    1488:	18c00404 	addi	r3,r3,16
    148c:	10800044 	addi	r2,r2,1
    1490:	45000015 	stw	r20,0(r8)
    1494:	47000115 	stw	fp,4(r8)
    1498:	d8c02015 	stw	r3,128(sp)
    149c:	d8801f15 	stw	r2,124(sp)
    14a0:	98bff60e 	bge	r19,r2,147c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000147c>
    14a4:	d9801e04 	addi	r6,sp,120
    14a8:	b80b883a 	mov	r5,r23
    14ac:	8009883a 	mov	r4,r16
    14b0:	000701c0 	call	701c <__sprint_r>
    14b4:	103d151e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    14b8:	8c7ffc04 	addi	r17,r17,-16
    14bc:	d8c02017 	ldw	r3,128(sp)
    14c0:	d8801f17 	ldw	r2,124(sp)
    14c4:	da000404 	addi	r8,sp,16
    14c8:	e47fef16 	blt	fp,r17,1488 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001488>
    14cc:	9021883a 	mov	r16,r18
    14d0:	a825883a 	mov	r18,r21
    14d4:	b02b883a 	mov	r21,r22
    14d8:	882d883a 	mov	r22,r17
    14dc:	dc403017 	ldw	r17,192(sp)
    14e0:	d9002b17 	ldw	r4,172(sp)
    14e4:	1d87883a 	add	r3,r3,r22
    14e8:	10800044 	addi	r2,r2,1
    14ec:	41000015 	stw	r4,0(r8)
    14f0:	45800115 	stw	r22,4(r8)
    14f4:	d8c02015 	stw	r3,128(sp)
    14f8:	d8801f15 	stw	r2,124(sp)
    14fc:	010001c4 	movi	r4,7
    1500:	20818e16 	blt	r4,r2,1b3c <___vfprintf_internal_r+0x1638>
    1504:	42000204 	addi	r8,r8,8
    1508:	003e3106 	br	dd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000dd0>
    150c:	d9403317 	ldw	r5,204(sp)
    1510:	00800044 	movi	r2,1
    1514:	18c00044 	addi	r3,r3,1
    1518:	1141530e 	bge	r2,r5,1a68 <___vfprintf_internal_r+0x1564>
    151c:	dc401f17 	ldw	r17,124(sp)
    1520:	00800044 	movi	r2,1
    1524:	40800115 	stw	r2,4(r8)
    1528:	8c400044 	addi	r17,r17,1
    152c:	44000015 	stw	r16,0(r8)
    1530:	d8c02015 	stw	r3,128(sp)
    1534:	dc401f15 	stw	r17,124(sp)
    1538:	008001c4 	movi	r2,7
    153c:	14416b16 	blt	r2,r17,1aec <___vfprintf_internal_r+0x15e8>
    1540:	42000204 	addi	r8,r8,8
    1544:	d8803717 	ldw	r2,220(sp)
    1548:	d9003417 	ldw	r4,208(sp)
    154c:	8c400044 	addi	r17,r17,1
    1550:	10c7883a 	add	r3,r2,r3
    1554:	40800115 	stw	r2,4(r8)
    1558:	41000015 	stw	r4,0(r8)
    155c:	d8c02015 	stw	r3,128(sp)
    1560:	dc401f15 	stw	r17,124(sp)
    1564:	008001c4 	movi	r2,7
    1568:	14416916 	blt	r2,r17,1b10 <___vfprintf_internal_r+0x160c>
    156c:	45800204 	addi	r22,r8,8
    1570:	d9003617 	ldw	r4,216(sp)
    1574:	d9403817 	ldw	r5,224(sp)
    1578:	000d883a 	mov	r6,zero
    157c:	000f883a 	mov	r7,zero
    1580:	d8c03c15 	stw	r3,240(sp)
    1584:	000b8100 	call	b810 <__eqdf2>
    1588:	d8c03c17 	ldw	r3,240(sp)
    158c:	1000bc26 	beq	r2,zero,1880 <___vfprintf_internal_r+0x137c>
    1590:	d9403317 	ldw	r5,204(sp)
    1594:	84000044 	addi	r16,r16,1
    1598:	8c400044 	addi	r17,r17,1
    159c:	28bfffc4 	addi	r2,r5,-1
    15a0:	1887883a 	add	r3,r3,r2
    15a4:	b0800115 	stw	r2,4(r22)
    15a8:	b4000015 	stw	r16,0(r22)
    15ac:	d8c02015 	stw	r3,128(sp)
    15b0:	dc401f15 	stw	r17,124(sp)
    15b4:	008001c4 	movi	r2,7
    15b8:	14414316 	blt	r2,r17,1ac8 <___vfprintf_internal_r+0x15c4>
    15bc:	b5800204 	addi	r22,r22,8
    15c0:	d9003a17 	ldw	r4,232(sp)
    15c4:	df0022c4 	addi	fp,sp,139
    15c8:	8c400044 	addi	r17,r17,1
    15cc:	20c7883a 	add	r3,r4,r3
    15d0:	b7000015 	stw	fp,0(r22)
    15d4:	b1000115 	stw	r4,4(r22)
    15d8:	d8c02015 	stw	r3,128(sp)
    15dc:	dc401f15 	stw	r17,124(sp)
    15e0:	008001c4 	movi	r2,7
    15e4:	14400e16 	blt	r2,r17,1620 <___vfprintf_internal_r+0x111c>
    15e8:	b2000204 	addi	r8,r22,8
    15ec:	003e3a06 	br	ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    15f0:	01000074 	movhi	r4,1
    15f4:	21013c84 	addi	r4,r4,1266
    15f8:	d9002b15 	stw	r4,172(sp)
    15fc:	d9002b17 	ldw	r4,172(sp)
    1600:	1c07883a 	add	r3,r3,r16
    1604:	44000115 	stw	r16,4(r8)
    1608:	41000015 	stw	r4,0(r8)
    160c:	10800044 	addi	r2,r2,1
    1610:	d8c02015 	stw	r3,128(sp)
    1614:	d8801f15 	stw	r2,124(sp)
    1618:	010001c4 	movi	r4,7
    161c:	20be2d0e 	bge	r4,r2,ed4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed4>
    1620:	d9002c17 	ldw	r4,176(sp)
    1624:	d9801e04 	addi	r6,sp,120
    1628:	b80b883a 	mov	r5,r23
    162c:	000701c0 	call	701c <__sprint_r>
    1630:	103cb61e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1634:	d8c02017 	ldw	r3,128(sp)
    1638:	da000404 	addi	r8,sp,16
    163c:	003e2606 	br	ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1640:	d9002c17 	ldw	r4,176(sp)
    1644:	d9801e04 	addi	r6,sp,120
    1648:	b80b883a 	mov	r5,r23
    164c:	000701c0 	call	701c <__sprint_r>
    1650:	103e5d26 	beq	r2,zero,fc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fc8>
    1654:	003cad06 	br	90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1658:	d9002c17 	ldw	r4,176(sp)
    165c:	d9801e04 	addi	r6,sp,120
    1660:	b80b883a 	mov	r5,r23
    1664:	000701c0 	call	701c <__sprint_r>
    1668:	103ca81e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    166c:	d8c02017 	ldw	r3,128(sp)
    1670:	da000404 	addi	r8,sp,16
    1674:	003e0b06 	br	ea4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ea4>
    1678:	d9002c17 	ldw	r4,176(sp)
    167c:	d9801e04 	addi	r6,sp,120
    1680:	b80b883a 	mov	r5,r23
    1684:	000701c0 	call	701c <__sprint_r>
    1688:	103ca01e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    168c:	d8c02017 	ldw	r3,128(sp)
    1690:	da000404 	addi	r8,sp,16
    1694:	003dbd06 	br	d8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000d8c>
    1698:	d9002c17 	ldw	r4,176(sp)
    169c:	d9801e04 	addi	r6,sp,120
    16a0:	b80b883a 	mov	r5,r23
    16a4:	000701c0 	call	701c <__sprint_r>
    16a8:	103c981e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    16ac:	d8c02017 	ldw	r3,128(sp)
    16b0:	da000404 	addi	r8,sp,16
    16b4:	003dc306 	br	dc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000dc4>
    16b8:	d8802917 	ldw	r2,164(sp)
    16bc:	d8002785 	stb	zero,158(sp)
    16c0:	103f0616 	blt	r2,zero,12dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00012dc>
    16c4:	00ffdfc4 	movi	r3,-129
    16c8:	9d84b03a 	or	r2,r19,r22
    16cc:	90e4703a 	and	r18,r18,r3
    16d0:	103c6b26 	beq	r2,zero,880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000880>
    16d4:	0039883a 	mov	fp,zero
    16d8:	003e7406 	br	10ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010ac>
    16dc:	9080040c 	andi	r2,r18,16
    16e0:	1001b326 	beq	r2,zero,1db0 <___vfprintf_internal_r+0x18ac>
    16e4:	d9002d17 	ldw	r4,180(sp)
    16e8:	d9402917 	ldw	r5,164(sp)
    16ec:	d8002785 	stb	zero,158(sp)
    16f0:	20800104 	addi	r2,r4,4
    16f4:	24c00017 	ldw	r19,0(r4)
    16f8:	002d883a 	mov	r22,zero
    16fc:	2801b516 	blt	r5,zero,1dd4 <___vfprintf_internal_r+0x18d0>
    1700:	00ffdfc4 	movi	r3,-129
    1704:	d8802d15 	stw	r2,180(sp)
    1708:	90e4703a 	and	r18,r18,r3
    170c:	983d2726 	beq	r19,zero,bac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bac>
    1710:	0039883a 	mov	fp,zero
    1714:	003d2a06 	br	bc0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bc0>
    1718:	dc402617 	ldw	r17,152(sp)
    171c:	0441d30e 	bge	zero,r17,1e6c <___vfprintf_internal_r+0x1968>
    1720:	dc403217 	ldw	r17,200(sp)
    1724:	d8803317 	ldw	r2,204(sp)
    1728:	1440010e 	bge	r2,r17,1730 <___vfprintf_internal_r+0x122c>
    172c:	1023883a 	mov	r17,r2
    1730:	04400a0e 	bge	zero,r17,175c <___vfprintf_internal_r+0x1258>
    1734:	d8801f17 	ldw	r2,124(sp)
    1738:	1c47883a 	add	r3,r3,r17
    173c:	44000015 	stw	r16,0(r8)
    1740:	10800044 	addi	r2,r2,1
    1744:	44400115 	stw	r17,4(r8)
    1748:	d8c02015 	stw	r3,128(sp)
    174c:	d8801f15 	stw	r2,124(sp)
    1750:	010001c4 	movi	r4,7
    1754:	20826516 	blt	r4,r2,20ec <___vfprintf_internal_r+0x1be8>
    1758:	42000204 	addi	r8,r8,8
    175c:	88026116 	blt	r17,zero,20e4 <___vfprintf_internal_r+0x1be0>
    1760:	d9003217 	ldw	r4,200(sp)
    1764:	2463c83a 	sub	r17,r4,r17
    1768:	04407b0e 	bge	zero,r17,1958 <___vfprintf_internal_r+0x1454>
    176c:	05800404 	movi	r22,16
    1770:	d8801f17 	ldw	r2,124(sp)
    1774:	b4419d0e 	bge	r22,r17,1dec <___vfprintf_internal_r+0x18e8>
    1778:	01000074 	movhi	r4,1
    177c:	21013c84 	addi	r4,r4,1266
    1780:	d9002b15 	stw	r4,172(sp)
    1784:	070001c4 	movi	fp,7
    1788:	dcc02c17 	ldw	r19,176(sp)
    178c:	00000306 	br	179c <___vfprintf_internal_r+0x1298>
    1790:	42000204 	addi	r8,r8,8
    1794:	8c7ffc04 	addi	r17,r17,-16
    1798:	b441970e 	bge	r22,r17,1df8 <___vfprintf_internal_r+0x18f4>
    179c:	18c00404 	addi	r3,r3,16
    17a0:	10800044 	addi	r2,r2,1
    17a4:	45000015 	stw	r20,0(r8)
    17a8:	45800115 	stw	r22,4(r8)
    17ac:	d8c02015 	stw	r3,128(sp)
    17b0:	d8801f15 	stw	r2,124(sp)
    17b4:	e0bff60e 	bge	fp,r2,1790 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001790>
    17b8:	d9801e04 	addi	r6,sp,120
    17bc:	b80b883a 	mov	r5,r23
    17c0:	9809883a 	mov	r4,r19
    17c4:	000701c0 	call	701c <__sprint_r>
    17c8:	103c501e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    17cc:	d8c02017 	ldw	r3,128(sp)
    17d0:	d8801f17 	ldw	r2,124(sp)
    17d4:	da000404 	addi	r8,sp,16
    17d8:	003fee06 	br	1794 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001794>
    17dc:	d9002c17 	ldw	r4,176(sp)
    17e0:	d9801e04 	addi	r6,sp,120
    17e4:	b80b883a 	mov	r5,r23
    17e8:	000701c0 	call	701c <__sprint_r>
    17ec:	103c471e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    17f0:	d8c02017 	ldw	r3,128(sp)
    17f4:	df002787 	ldb	fp,158(sp)
    17f8:	da000404 	addi	r8,sp,16
    17fc:	003d5606 	br	d58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000d58>
    1800:	9080040c 	andi	r2,r18,16
    1804:	10016126 	beq	r2,zero,1d8c <___vfprintf_internal_r+0x1888>
    1808:	d8802d17 	ldw	r2,180(sp)
    180c:	14c00017 	ldw	r19,0(r2)
    1810:	10800104 	addi	r2,r2,4
    1814:	d8802d15 	stw	r2,180(sp)
    1818:	982dd7fa 	srai	r22,r19,31
    181c:	b005883a 	mov	r2,r22
    1820:	003c8206 	br	a2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a2c>
    1824:	9080040c 	andi	r2,r18,16
    1828:	10003526 	beq	r2,zero,1900 <___vfprintf_internal_r+0x13fc>
    182c:	d9402d17 	ldw	r5,180(sp)
    1830:	d8c02917 	ldw	r3,164(sp)
    1834:	d8002785 	stb	zero,158(sp)
    1838:	28800104 	addi	r2,r5,4
    183c:	2cc00017 	ldw	r19,0(r5)
    1840:	002d883a 	mov	r22,zero
    1844:	18003716 	blt	r3,zero,1924 <___vfprintf_internal_r+0x1420>
    1848:	00ffdfc4 	movi	r3,-129
    184c:	d8802d15 	stw	r2,180(sp)
    1850:	90e4703a 	and	r18,r18,r3
    1854:	0039883a 	mov	fp,zero
    1858:	983df326 	beq	r19,zero,1028 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001028>
    185c:	00800244 	movi	r2,9
    1860:	14fc7b36 	bltu	r2,r19,a50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a50>
    1864:	d8c02817 	ldw	r3,160(sp)
    1868:	dc001dc4 	addi	r16,sp,119
    186c:	9cc00c04 	addi	r19,r19,48
    1870:	1c07c83a 	sub	r3,r3,r16
    1874:	dcc01dc5 	stb	r19,119(sp)
    1878:	d8c02e15 	stw	r3,184(sp)
    187c:	003ce806 	br	c20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c20>
    1880:	d8803317 	ldw	r2,204(sp)
    1884:	143fffc4 	addi	r16,r2,-1
    1888:	043f4d0e 	bge	zero,r16,15c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015c0>
    188c:	07000404 	movi	fp,16
    1890:	e400810e 	bge	fp,r16,1a98 <___vfprintf_internal_r+0x1594>
    1894:	01400074 	movhi	r5,1
    1898:	29413c84 	addi	r5,r5,1266
    189c:	d9402b15 	stw	r5,172(sp)
    18a0:	01c001c4 	movi	r7,7
    18a4:	dcc02c17 	ldw	r19,176(sp)
    18a8:	00000306 	br	18b8 <___vfprintf_internal_r+0x13b4>
    18ac:	b5800204 	addi	r22,r22,8
    18b0:	843ffc04 	addi	r16,r16,-16
    18b4:	e4007b0e 	bge	fp,r16,1aa4 <___vfprintf_internal_r+0x15a0>
    18b8:	18c00404 	addi	r3,r3,16
    18bc:	8c400044 	addi	r17,r17,1
    18c0:	b5000015 	stw	r20,0(r22)
    18c4:	b7000115 	stw	fp,4(r22)
    18c8:	d8c02015 	stw	r3,128(sp)
    18cc:	dc401f15 	stw	r17,124(sp)
    18d0:	3c7ff60e 	bge	r7,r17,18ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00018ac>
    18d4:	d9801e04 	addi	r6,sp,120
    18d8:	b80b883a 	mov	r5,r23
    18dc:	9809883a 	mov	r4,r19
    18e0:	d9c03c15 	stw	r7,240(sp)
    18e4:	000701c0 	call	701c <__sprint_r>
    18e8:	d9c03c17 	ldw	r7,240(sp)
    18ec:	103c071e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    18f0:	d8c02017 	ldw	r3,128(sp)
    18f4:	dc401f17 	ldw	r17,124(sp)
    18f8:	dd800404 	addi	r22,sp,16
    18fc:	003fec06 	br	18b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00018b0>
    1900:	9080100c 	andi	r2,r18,64
    1904:	d8002785 	stb	zero,158(sp)
    1908:	10010e26 	beq	r2,zero,1d44 <___vfprintf_internal_r+0x1840>
    190c:	d9002d17 	ldw	r4,180(sp)
    1910:	d9402917 	ldw	r5,164(sp)
    1914:	002d883a 	mov	r22,zero
    1918:	20800104 	addi	r2,r4,4
    191c:	24c0000b 	ldhu	r19,0(r4)
    1920:	283fc90e 	bge	r5,zero,1848 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001848>
    1924:	d8802d15 	stw	r2,180(sp)
    1928:	0039883a 	mov	fp,zero
    192c:	9d84b03a 	or	r2,r19,r22
    1930:	103c461e 	bne	r2,zero,a4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a4c>
    1934:	00800044 	movi	r2,1
    1938:	003e6c06 	br	12ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00012ec>
    193c:	d9002c17 	ldw	r4,176(sp)
    1940:	d9801e04 	addi	r6,sp,120
    1944:	b80b883a 	mov	r5,r23
    1948:	000701c0 	call	701c <__sprint_r>
    194c:	103bef1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1950:	d8c02017 	ldw	r3,128(sp)
    1954:	da000404 	addi	r8,sp,16
    1958:	d9003217 	ldw	r4,200(sp)
    195c:	d8802617 	ldw	r2,152(sp)
    1960:	d9403317 	ldw	r5,204(sp)
    1964:	8123883a 	add	r17,r16,r4
    1968:	11400216 	blt	r2,r5,1974 <___vfprintf_internal_r+0x1470>
    196c:	9100004c 	andi	r4,r18,1
    1970:	20000d26 	beq	r4,zero,19a8 <___vfprintf_internal_r+0x14a4>
    1974:	d9003717 	ldw	r4,220(sp)
    1978:	d9403417 	ldw	r5,208(sp)
    197c:	1907883a 	add	r3,r3,r4
    1980:	d9001f17 	ldw	r4,124(sp)
    1984:	41400015 	stw	r5,0(r8)
    1988:	d9403717 	ldw	r5,220(sp)
    198c:	21000044 	addi	r4,r4,1
    1990:	d8c02015 	stw	r3,128(sp)
    1994:	41400115 	stw	r5,4(r8)
    1998:	d9001f15 	stw	r4,124(sp)
    199c:	014001c4 	movi	r5,7
    19a0:	2901e816 	blt	r5,r4,2144 <___vfprintf_internal_r+0x1c40>
    19a4:	42000204 	addi	r8,r8,8
    19a8:	d9003317 	ldw	r4,204(sp)
    19ac:	8121883a 	add	r16,r16,r4
    19b0:	2085c83a 	sub	r2,r4,r2
    19b4:	8461c83a 	sub	r16,r16,r17
    19b8:	1400010e 	bge	r2,r16,19c0 <___vfprintf_internal_r+0x14bc>
    19bc:	1021883a 	mov	r16,r2
    19c0:	04000a0e 	bge	zero,r16,19ec <___vfprintf_internal_r+0x14e8>
    19c4:	d9001f17 	ldw	r4,124(sp)
    19c8:	1c07883a 	add	r3,r3,r16
    19cc:	44400015 	stw	r17,0(r8)
    19d0:	21000044 	addi	r4,r4,1
    19d4:	44000115 	stw	r16,4(r8)
    19d8:	d8c02015 	stw	r3,128(sp)
    19dc:	d9001f15 	stw	r4,124(sp)
    19e0:	014001c4 	movi	r5,7
    19e4:	2901fb16 	blt	r5,r4,21d4 <___vfprintf_internal_r+0x1cd0>
    19e8:	42000204 	addi	r8,r8,8
    19ec:	8001f716 	blt	r16,zero,21cc <___vfprintf_internal_r+0x1cc8>
    19f0:	1421c83a 	sub	r16,r2,r16
    19f4:	043d380e 	bge	zero,r16,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    19f8:	04400404 	movi	r17,16
    19fc:	d8801f17 	ldw	r2,124(sp)
    1a00:	8c3efb0e 	bge	r17,r16,15f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015f0>
    1a04:	01400074 	movhi	r5,1
    1a08:	29413c84 	addi	r5,r5,1266
    1a0c:	d9402b15 	stw	r5,172(sp)
    1a10:	058001c4 	movi	r22,7
    1a14:	dcc02c17 	ldw	r19,176(sp)
    1a18:	00000306 	br	1a28 <___vfprintf_internal_r+0x1524>
    1a1c:	42000204 	addi	r8,r8,8
    1a20:	843ffc04 	addi	r16,r16,-16
    1a24:	8c3ef50e 	bge	r17,r16,15fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015fc>
    1a28:	18c00404 	addi	r3,r3,16
    1a2c:	10800044 	addi	r2,r2,1
    1a30:	45000015 	stw	r20,0(r8)
    1a34:	44400115 	stw	r17,4(r8)
    1a38:	d8c02015 	stw	r3,128(sp)
    1a3c:	d8801f15 	stw	r2,124(sp)
    1a40:	b0bff60e 	bge	r22,r2,1a1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001a1c>
    1a44:	d9801e04 	addi	r6,sp,120
    1a48:	b80b883a 	mov	r5,r23
    1a4c:	9809883a 	mov	r4,r19
    1a50:	000701c0 	call	701c <__sprint_r>
    1a54:	103bad1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1a58:	d8c02017 	ldw	r3,128(sp)
    1a5c:	d8801f17 	ldw	r2,124(sp)
    1a60:	da000404 	addi	r8,sp,16
    1a64:	003fee06 	br	1a20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001a20>
    1a68:	9088703a 	and	r4,r18,r2
    1a6c:	203eab1e 	bne	r4,zero,151c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000151c>
    1a70:	dc401f17 	ldw	r17,124(sp)
    1a74:	40800115 	stw	r2,4(r8)
    1a78:	44000015 	stw	r16,0(r8)
    1a7c:	8c400044 	addi	r17,r17,1
    1a80:	d8c02015 	stw	r3,128(sp)
    1a84:	dc401f15 	stw	r17,124(sp)
    1a88:	008001c4 	movi	r2,7
    1a8c:	14400e16 	blt	r2,r17,1ac8 <___vfprintf_internal_r+0x15c4>
    1a90:	45800204 	addi	r22,r8,8
    1a94:	003eca06 	br	15c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015c0>
    1a98:	01000074 	movhi	r4,1
    1a9c:	21013c84 	addi	r4,r4,1266
    1aa0:	d9002b15 	stw	r4,172(sp)
    1aa4:	d8802b17 	ldw	r2,172(sp)
    1aa8:	1c07883a 	add	r3,r3,r16
    1aac:	8c400044 	addi	r17,r17,1
    1ab0:	b0800015 	stw	r2,0(r22)
    1ab4:	b4000115 	stw	r16,4(r22)
    1ab8:	d8c02015 	stw	r3,128(sp)
    1abc:	dc401f15 	stw	r17,124(sp)
    1ac0:	008001c4 	movi	r2,7
    1ac4:	147ebd0e 	bge	r2,r17,15bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015bc>
    1ac8:	d9002c17 	ldw	r4,176(sp)
    1acc:	d9801e04 	addi	r6,sp,120
    1ad0:	b80b883a 	mov	r5,r23
    1ad4:	000701c0 	call	701c <__sprint_r>
    1ad8:	103b8c1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1adc:	d8c02017 	ldw	r3,128(sp)
    1ae0:	dc401f17 	ldw	r17,124(sp)
    1ae4:	dd800404 	addi	r22,sp,16
    1ae8:	003eb506 	br	15c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015c0>
    1aec:	d9002c17 	ldw	r4,176(sp)
    1af0:	d9801e04 	addi	r6,sp,120
    1af4:	b80b883a 	mov	r5,r23
    1af8:	000701c0 	call	701c <__sprint_r>
    1afc:	103b831e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1b00:	d8c02017 	ldw	r3,128(sp)
    1b04:	dc401f17 	ldw	r17,124(sp)
    1b08:	da000404 	addi	r8,sp,16
    1b0c:	003e8d06 	br	1544 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001544>
    1b10:	d9002c17 	ldw	r4,176(sp)
    1b14:	d9801e04 	addi	r6,sp,120
    1b18:	b80b883a 	mov	r5,r23
    1b1c:	000701c0 	call	701c <__sprint_r>
    1b20:	103b7a1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1b24:	d8c02017 	ldw	r3,128(sp)
    1b28:	dc401f17 	ldw	r17,124(sp)
    1b2c:	dd800404 	addi	r22,sp,16
    1b30:	003e8f06 	br	1570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001570>
    1b34:	0027883a 	mov	r19,zero
    1b38:	003f4a06 	br	1864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001864>
    1b3c:	d9002c17 	ldw	r4,176(sp)
    1b40:	d9801e04 	addi	r6,sp,120
    1b44:	b80b883a 	mov	r5,r23
    1b48:	000701c0 	call	701c <__sprint_r>
    1b4c:	103b6f1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1b50:	d8c02017 	ldw	r3,128(sp)
    1b54:	da000404 	addi	r8,sp,16
    1b58:	003c9d06 	br	dd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000dd0>
    1b5c:	04e7c83a 	sub	r19,zero,r19
    1b60:	9804c03a 	cmpne	r2,r19,zero
    1b64:	05adc83a 	sub	r22,zero,r22
    1b68:	b0adc83a 	sub	r22,r22,r2
    1b6c:	d8802917 	ldw	r2,164(sp)
    1b70:	07000b44 	movi	fp,45
    1b74:	df002785 	stb	fp,158(sp)
    1b78:	10017b16 	blt	r2,zero,2168 <___vfprintf_internal_r+0x1c64>
    1b7c:	00bfdfc4 	movi	r2,-129
    1b80:	90a4703a 	and	r18,r18,r2
    1b84:	003bb106 	br	a4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a4c>
    1b88:	d9003617 	ldw	r4,216(sp)
    1b8c:	d9403817 	ldw	r5,224(sp)
    1b90:	da003d15 	stw	r8,244(sp)
    1b94:	0006ba80 	call	6ba8 <__fpclassifyd>
    1b98:	da003d17 	ldw	r8,244(sp)
    1b9c:	1000f026 	beq	r2,zero,1f60 <___vfprintf_internal_r+0x1a5c>
    1ba0:	d9002917 	ldw	r4,164(sp)
    1ba4:	05bff7c4 	movi	r22,-33
    1ba8:	00bfffc4 	movi	r2,-1
    1bac:	8dac703a 	and	r22,r17,r22
    1bb0:	20820026 	beq	r4,r2,23b4 <___vfprintf_internal_r+0x1eb0>
    1bb4:	008011c4 	movi	r2,71
    1bb8:	b081f726 	beq	r22,r2,2398 <___vfprintf_internal_r+0x1e94>
    1bbc:	d9003817 	ldw	r4,224(sp)
    1bc0:	90c04014 	ori	r3,r18,256
    1bc4:	d8c02b15 	stw	r3,172(sp)
    1bc8:	20021516 	blt	r4,zero,2420 <___vfprintf_internal_r+0x1f1c>
    1bcc:	dcc03817 	ldw	r19,224(sp)
    1bd0:	d8002a05 	stb	zero,168(sp)
    1bd4:	00801984 	movi	r2,102
    1bd8:	8881f926 	beq	r17,r2,23c0 <___vfprintf_internal_r+0x1ebc>
    1bdc:	00801184 	movi	r2,70
    1be0:	88821c26 	beq	r17,r2,2454 <___vfprintf_internal_r+0x1f50>
    1be4:	00801144 	movi	r2,69
    1be8:	b081ef26 	beq	r22,r2,23a8 <___vfprintf_internal_r+0x1ea4>
    1bec:	d8c02917 	ldw	r3,164(sp)
    1bf0:	d8802104 	addi	r2,sp,132
    1bf4:	d8800315 	stw	r2,12(sp)
    1bf8:	d9403617 	ldw	r5,216(sp)
    1bfc:	d8802504 	addi	r2,sp,148
    1c00:	d9002c17 	ldw	r4,176(sp)
    1c04:	d8800215 	stw	r2,8(sp)
    1c08:	d8802604 	addi	r2,sp,152
    1c0c:	d8c00015 	stw	r3,0(sp)
    1c10:	d8800115 	stw	r2,4(sp)
    1c14:	01c00084 	movi	r7,2
    1c18:	980d883a 	mov	r6,r19
    1c1c:	d8c03c15 	stw	r3,240(sp)
    1c20:	da003d15 	stw	r8,244(sp)
    1c24:	0002b280 	call	2b28 <_dtoa_r>
    1c28:	1021883a 	mov	r16,r2
    1c2c:	008019c4 	movi	r2,103
    1c30:	d8c03c17 	ldw	r3,240(sp)
    1c34:	da003d17 	ldw	r8,244(sp)
    1c38:	88817126 	beq	r17,r2,2200 <___vfprintf_internal_r+0x1cfc>
    1c3c:	008011c4 	movi	r2,71
    1c40:	88829226 	beq	r17,r2,268c <___vfprintf_internal_r+0x2188>
    1c44:	80f9883a 	add	fp,r16,r3
    1c48:	d9003617 	ldw	r4,216(sp)
    1c4c:	000d883a 	mov	r6,zero
    1c50:	000f883a 	mov	r7,zero
    1c54:	980b883a 	mov	r5,r19
    1c58:	da003d15 	stw	r8,244(sp)
    1c5c:	000b8100 	call	b810 <__eqdf2>
    1c60:	da003d17 	ldw	r8,244(sp)
    1c64:	10018d26 	beq	r2,zero,229c <___vfprintf_internal_r+0x1d98>
    1c68:	d8802117 	ldw	r2,132(sp)
    1c6c:	1700062e 	bgeu	r2,fp,1c88 <___vfprintf_internal_r+0x1784>
    1c70:	01000c04 	movi	r4,48
    1c74:	10c00044 	addi	r3,r2,1
    1c78:	d8c02115 	stw	r3,132(sp)
    1c7c:	11000005 	stb	r4,0(r2)
    1c80:	d8802117 	ldw	r2,132(sp)
    1c84:	173ffb36 	bltu	r2,fp,1c74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001c74>
    1c88:	1405c83a 	sub	r2,r2,r16
    1c8c:	d8803315 	stw	r2,204(sp)
    1c90:	008011c4 	movi	r2,71
    1c94:	b0817626 	beq	r22,r2,2270 <___vfprintf_internal_r+0x1d6c>
    1c98:	00801944 	movi	r2,101
    1c9c:	1442810e 	bge	r2,r17,26a4 <___vfprintf_internal_r+0x21a0>
    1ca0:	d8c02617 	ldw	r3,152(sp)
    1ca4:	00801984 	movi	r2,102
    1ca8:	d8c03215 	stw	r3,200(sp)
    1cac:	8881fe26 	beq	r17,r2,24a8 <___vfprintf_internal_r+0x1fa4>
    1cb0:	d8c03217 	ldw	r3,200(sp)
    1cb4:	d9003317 	ldw	r4,204(sp)
    1cb8:	1901dd16 	blt	r3,r4,2430 <___vfprintf_internal_r+0x1f2c>
    1cbc:	9480004c 	andi	r18,r18,1
    1cc0:	90022b1e 	bne	r18,zero,2570 <___vfprintf_internal_r+0x206c>
    1cc4:	1805883a 	mov	r2,r3
    1cc8:	18028016 	blt	r3,zero,26cc <___vfprintf_internal_r+0x21c8>
    1ccc:	d8c03217 	ldw	r3,200(sp)
    1cd0:	044019c4 	movi	r17,103
    1cd4:	d8c02e15 	stw	r3,184(sp)
    1cd8:	df002a07 	ldb	fp,168(sp)
    1cdc:	e001531e 	bne	fp,zero,222c <___vfprintf_internal_r+0x1d28>
    1ce0:	df002783 	ldbu	fp,158(sp)
    1ce4:	d8802a15 	stw	r2,168(sp)
    1ce8:	dc802b17 	ldw	r18,172(sp)
    1cec:	d8002915 	stw	zero,164(sp)
    1cf0:	003bd106 	br	c38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c38>
    1cf4:	d8802d17 	ldw	r2,180(sp)
    1cf8:	d8c02d17 	ldw	r3,180(sp)
    1cfc:	d9002d17 	ldw	r4,180(sp)
    1d00:	10800017 	ldw	r2,0(r2)
    1d04:	18c00117 	ldw	r3,4(r3)
    1d08:	21000204 	addi	r4,r4,8
    1d0c:	d8803615 	stw	r2,216(sp)
    1d10:	d8c03815 	stw	r3,224(sp)
    1d14:	d9002d15 	stw	r4,180(sp)
    1d18:	003b7506 	br	af0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000af0>
    1d1c:	ac400007 	ldb	r17,0(r21)
    1d20:	003a5906 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    1d24:	9080100c 	andi	r2,r18,64
    1d28:	1000a826 	beq	r2,zero,1fcc <___vfprintf_internal_r+0x1ac8>
    1d2c:	d9002d17 	ldw	r4,180(sp)
    1d30:	002d883a 	mov	r22,zero
    1d34:	24c0000b 	ldhu	r19,0(r4)
    1d38:	21000104 	addi	r4,r4,4
    1d3c:	d9002d15 	stw	r4,180(sp)
    1d40:	003ccb06 	br	1070 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001070>
    1d44:	d8c02d17 	ldw	r3,180(sp)
    1d48:	d9002917 	ldw	r4,164(sp)
    1d4c:	002d883a 	mov	r22,zero
    1d50:	18800104 	addi	r2,r3,4
    1d54:	1cc00017 	ldw	r19,0(r3)
    1d58:	203ebb0e 	bge	r4,zero,1848 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001848>
    1d5c:	003ef106 	br	1924 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001924>
    1d60:	9080040c 	andi	r2,r18,16
    1d64:	1000921e 	bne	r2,zero,1fb0 <___vfprintf_internal_r+0x1aac>
    1d68:	9480100c 	andi	r18,r18,64
    1d6c:	90013926 	beq	r18,zero,2254 <___vfprintf_internal_r+0x1d50>
    1d70:	d9002d17 	ldw	r4,180(sp)
    1d74:	d9402f17 	ldw	r5,188(sp)
    1d78:	20800017 	ldw	r2,0(r4)
    1d7c:	21000104 	addi	r4,r4,4
    1d80:	d9002d15 	stw	r4,180(sp)
    1d84:	1140000d 	sth	r5,0(r2)
    1d88:	003a1606 	br	5e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005e4>
    1d8c:	9080100c 	andi	r2,r18,64
    1d90:	10008026 	beq	r2,zero,1f94 <___vfprintf_internal_r+0x1a90>
    1d94:	d8c02d17 	ldw	r3,180(sp)
    1d98:	1cc0000f 	ldh	r19,0(r3)
    1d9c:	18c00104 	addi	r3,r3,4
    1da0:	d8c02d15 	stw	r3,180(sp)
    1da4:	982dd7fa 	srai	r22,r19,31
    1da8:	b005883a 	mov	r2,r22
    1dac:	003b1f06 	br	a2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a2c>
    1db0:	9080100c 	andi	r2,r18,64
    1db4:	d8002785 	stb	zero,158(sp)
    1db8:	10008a1e 	bne	r2,zero,1fe4 <___vfprintf_internal_r+0x1ae0>
    1dbc:	d9402d17 	ldw	r5,180(sp)
    1dc0:	d8c02917 	ldw	r3,164(sp)
    1dc4:	002d883a 	mov	r22,zero
    1dc8:	28800104 	addi	r2,r5,4
    1dcc:	2cc00017 	ldw	r19,0(r5)
    1dd0:	183e4b0e 	bge	r3,zero,1700 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001700>
    1dd4:	9d86b03a 	or	r3,r19,r22
    1dd8:	d8802d15 	stw	r2,180(sp)
    1ddc:	183e4c1e 	bne	r3,zero,1710 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001710>
    1de0:	0039883a 	mov	fp,zero
    1de4:	0005883a 	mov	r2,zero
    1de8:	003d4006 	br	12ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00012ec>
    1dec:	01400074 	movhi	r5,1
    1df0:	29413c84 	addi	r5,r5,1266
    1df4:	d9402b15 	stw	r5,172(sp)
    1df8:	d9402b17 	ldw	r5,172(sp)
    1dfc:	1c47883a 	add	r3,r3,r17
    1e00:	10800044 	addi	r2,r2,1
    1e04:	41400015 	stw	r5,0(r8)
    1e08:	44400115 	stw	r17,4(r8)
    1e0c:	d8c02015 	stw	r3,128(sp)
    1e10:	d8801f15 	stw	r2,124(sp)
    1e14:	010001c4 	movi	r4,7
    1e18:	20bec816 	blt	r4,r2,193c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000193c>
    1e1c:	42000204 	addi	r8,r8,8
    1e20:	003ecd06 	br	1958 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001958>
    1e24:	d9002917 	ldw	r4,164(sp)
    1e28:	d8002785 	stb	zero,158(sp)
    1e2c:	203d2d16 	blt	r4,zero,12e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00012e4>
    1e30:	00bfdfc4 	movi	r2,-129
    1e34:	90a4703a 	and	r18,r18,r2
    1e38:	003a9106 	br	880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000880>
    1e3c:	01000074 	movhi	r4,1
    1e40:	21013c84 	addi	r4,r4,1266
    1e44:	d9002b15 	stw	r4,172(sp)
    1e48:	003c0c06 	br	e7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000e7c>
    1e4c:	d9002c17 	ldw	r4,176(sp)
    1e50:	d9801e04 	addi	r6,sp,120
    1e54:	b80b883a 	mov	r5,r23
    1e58:	000701c0 	call	701c <__sprint_r>
    1e5c:	103aab1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1e60:	d8c02017 	ldw	r3,128(sp)
    1e64:	da000404 	addi	r8,sp,16
    1e68:	003d4106 	br	1370 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001370>
    1e6c:	d8801f17 	ldw	r2,124(sp)
    1e70:	01400074 	movhi	r5,1
    1e74:	01000044 	movi	r4,1
    1e78:	18c00044 	addi	r3,r3,1
    1e7c:	10800044 	addi	r2,r2,1
    1e80:	29413c04 	addi	r5,r5,1264
    1e84:	41000115 	stw	r4,4(r8)
    1e88:	41400015 	stw	r5,0(r8)
    1e8c:	d8c02015 	stw	r3,128(sp)
    1e90:	d8801f15 	stw	r2,124(sp)
    1e94:	010001c4 	movi	r4,7
    1e98:	20805c16 	blt	r4,r2,200c <___vfprintf_internal_r+0x1b08>
    1e9c:	42000204 	addi	r8,r8,8
    1ea0:	8800041e 	bne	r17,zero,1eb4 <___vfprintf_internal_r+0x19b0>
    1ea4:	d8803317 	ldw	r2,204(sp)
    1ea8:	1000021e 	bne	r2,zero,1eb4 <___vfprintf_internal_r+0x19b0>
    1eac:	9080004c 	andi	r2,r18,1
    1eb0:	103c0926 	beq	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1eb4:	d9003717 	ldw	r4,220(sp)
    1eb8:	d8801f17 	ldw	r2,124(sp)
    1ebc:	d9403417 	ldw	r5,208(sp)
    1ec0:	20c7883a 	add	r3,r4,r3
    1ec4:	10800044 	addi	r2,r2,1
    1ec8:	41000115 	stw	r4,4(r8)
    1ecc:	41400015 	stw	r5,0(r8)
    1ed0:	d8c02015 	stw	r3,128(sp)
    1ed4:	d8801f15 	stw	r2,124(sp)
    1ed8:	010001c4 	movi	r4,7
    1edc:	20812116 	blt	r4,r2,2364 <___vfprintf_internal_r+0x1e60>
    1ee0:	42000204 	addi	r8,r8,8
    1ee4:	0463c83a 	sub	r17,zero,r17
    1ee8:	0440730e 	bge	zero,r17,20b8 <___vfprintf_internal_r+0x1bb4>
    1eec:	05800404 	movi	r22,16
    1ef0:	b440860e 	bge	r22,r17,210c <___vfprintf_internal_r+0x1c08>
    1ef4:	01400074 	movhi	r5,1
    1ef8:	29413c84 	addi	r5,r5,1266
    1efc:	d9402b15 	stw	r5,172(sp)
    1f00:	070001c4 	movi	fp,7
    1f04:	dcc02c17 	ldw	r19,176(sp)
    1f08:	00000306 	br	1f18 <___vfprintf_internal_r+0x1a14>
    1f0c:	42000204 	addi	r8,r8,8
    1f10:	8c7ffc04 	addi	r17,r17,-16
    1f14:	b440800e 	bge	r22,r17,2118 <___vfprintf_internal_r+0x1c14>
    1f18:	18c00404 	addi	r3,r3,16
    1f1c:	10800044 	addi	r2,r2,1
    1f20:	45000015 	stw	r20,0(r8)
    1f24:	45800115 	stw	r22,4(r8)
    1f28:	d8c02015 	stw	r3,128(sp)
    1f2c:	d8801f15 	stw	r2,124(sp)
    1f30:	e0bff60e 	bge	fp,r2,1f0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001f0c>
    1f34:	d9801e04 	addi	r6,sp,120
    1f38:	b80b883a 	mov	r5,r23
    1f3c:	9809883a 	mov	r4,r19
    1f40:	000701c0 	call	701c <__sprint_r>
    1f44:	103a711e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    1f48:	d8c02017 	ldw	r3,128(sp)
    1f4c:	d8801f17 	ldw	r2,124(sp)
    1f50:	da000404 	addi	r8,sp,16
    1f54:	003fee06 	br	1f10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001f10>
    1f58:	00bfffc4 	movi	r2,-1
    1f5c:	003a6f06 	br	91c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000091c>
    1f60:	008011c4 	movi	r2,71
    1f64:	1440b816 	blt	r2,r17,2248 <___vfprintf_internal_r+0x1d44>
    1f68:	04000074 	movhi	r16,1
    1f6c:	84012e04 	addi	r16,r16,1208
    1f70:	00c000c4 	movi	r3,3
    1f74:	00bfdfc4 	movi	r2,-129
    1f78:	d8c02a15 	stw	r3,168(sp)
    1f7c:	90a4703a 	and	r18,r18,r2
    1f80:	df002783 	ldbu	fp,158(sp)
    1f84:	d8c02e15 	stw	r3,184(sp)
    1f88:	d8002915 	stw	zero,164(sp)
    1f8c:	d8003215 	stw	zero,200(sp)
    1f90:	003b2906 	br	c38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c38>
    1f94:	d9002d17 	ldw	r4,180(sp)
    1f98:	24c00017 	ldw	r19,0(r4)
    1f9c:	21000104 	addi	r4,r4,4
    1fa0:	d9002d15 	stw	r4,180(sp)
    1fa4:	982dd7fa 	srai	r22,r19,31
    1fa8:	b005883a 	mov	r2,r22
    1fac:	003a9f06 	br	a2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a2c>
    1fb0:	d9402d17 	ldw	r5,180(sp)
    1fb4:	d8c02f17 	ldw	r3,188(sp)
    1fb8:	28800017 	ldw	r2,0(r5)
    1fbc:	29400104 	addi	r5,r5,4
    1fc0:	d9402d15 	stw	r5,180(sp)
    1fc4:	10c00015 	stw	r3,0(r2)
    1fc8:	00398606 	br	5e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005e4>
    1fcc:	d9402d17 	ldw	r5,180(sp)
    1fd0:	002d883a 	mov	r22,zero
    1fd4:	2cc00017 	ldw	r19,0(r5)
    1fd8:	29400104 	addi	r5,r5,4
    1fdc:	d9402d15 	stw	r5,180(sp)
    1fe0:	003c2306 	br	1070 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001070>
    1fe4:	d8c02d17 	ldw	r3,180(sp)
    1fe8:	d9002917 	ldw	r4,164(sp)
    1fec:	002d883a 	mov	r22,zero
    1ff0:	18800104 	addi	r2,r3,4
    1ff4:	1cc0000b 	ldhu	r19,0(r3)
    1ff8:	203dc10e 	bge	r4,zero,1700 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001700>
    1ffc:	003f7506 	br	1dd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001dd4>
    2000:	04000074 	movhi	r16,1
    2004:	84012c04 	addi	r16,r16,1200
    2008:	003acc06 	br	b3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b3c>
    200c:	d9002c17 	ldw	r4,176(sp)
    2010:	d9801e04 	addi	r6,sp,120
    2014:	b80b883a 	mov	r5,r23
    2018:	000701c0 	call	701c <__sprint_r>
    201c:	103a3b1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    2020:	dc402617 	ldw	r17,152(sp)
    2024:	d8c02017 	ldw	r3,128(sp)
    2028:	da000404 	addi	r8,sp,16
    202c:	003f9c06 	br	1ea0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ea0>
    2030:	ac400043 	ldbu	r17,1(r21)
    2034:	94800814 	ori	r18,r18,32
    2038:	ad400044 	addi	r21,r21,1
    203c:	8c403fcc 	andi	r17,r17,255
    2040:	8c40201c 	xori	r17,r17,128
    2044:	8c7fe004 	addi	r17,r17,-128
    2048:	00398f06 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    204c:	d8c02d15 	stw	r3,180(sp)
    2050:	0039883a 	mov	fp,zero
    2054:	003e3506 	br	192c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000192c>
    2058:	d9002c17 	ldw	r4,176(sp)
    205c:	d9801e04 	addi	r6,sp,120
    2060:	b80b883a 	mov	r5,r23
    2064:	000701c0 	call	701c <__sprint_r>
    2068:	103a281e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    206c:	d8c02017 	ldw	r3,128(sp)
    2070:	da000404 	addi	r8,sp,16
    2074:	003cd006 	br	13b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00013b8>
    2078:	8009883a 	mov	r4,r16
    207c:	da003d15 	stw	r8,244(sp)
    2080:	0006e880 	call	6e88 <strlen>
    2084:	d8802e15 	stw	r2,184(sp)
    2088:	da003d17 	ldw	r8,244(sp)
    208c:	103c340e 	bge	r2,zero,1160 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001160>
    2090:	0005883a 	mov	r2,zero
    2094:	003c3206 	br	1160 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001160>
    2098:	d9002c17 	ldw	r4,176(sp)
    209c:	d9801e04 	addi	r6,sp,120
    20a0:	b80b883a 	mov	r5,r23
    20a4:	000701c0 	call	701c <__sprint_r>
    20a8:	103a181e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    20ac:	d8c02017 	ldw	r3,128(sp)
    20b0:	d8801f17 	ldw	r2,124(sp)
    20b4:	da000404 	addi	r8,sp,16
    20b8:	d9403317 	ldw	r5,204(sp)
    20bc:	10800044 	addi	r2,r2,1
    20c0:	44000015 	stw	r16,0(r8)
    20c4:	28c7883a 	add	r3,r5,r3
    20c8:	003b7d06 	br	ec0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ec0>
    20cc:	01000074 	movhi	r4,1
    20d0:	21014084 	addi	r4,r4,1282
    20d4:	d9003515 	stw	r4,212(sp)
    20d8:	003b1406 	br	d2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000d2c>
    20dc:	013fffc4 	movi	r4,-1
    20e0:	003a3506 	br	9b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00009b8>
    20e4:	0023883a 	mov	r17,zero
    20e8:	003d9d06 	br	1760 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001760>
    20ec:	d9002c17 	ldw	r4,176(sp)
    20f0:	d9801e04 	addi	r6,sp,120
    20f4:	b80b883a 	mov	r5,r23
    20f8:	000701c0 	call	701c <__sprint_r>
    20fc:	103a031e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    2100:	d8c02017 	ldw	r3,128(sp)
    2104:	da000404 	addi	r8,sp,16
    2108:	003d9406 	br	175c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000175c>
    210c:	01000074 	movhi	r4,1
    2110:	21013c84 	addi	r4,r4,1266
    2114:	d9002b15 	stw	r4,172(sp)
    2118:	d9002b17 	ldw	r4,172(sp)
    211c:	1c47883a 	add	r3,r3,r17
    2120:	10800044 	addi	r2,r2,1
    2124:	41000015 	stw	r4,0(r8)
    2128:	44400115 	stw	r17,4(r8)
    212c:	d8c02015 	stw	r3,128(sp)
    2130:	d8801f15 	stw	r2,124(sp)
    2134:	010001c4 	movi	r4,7
    2138:	20bfd716 	blt	r4,r2,2098 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002098>
    213c:	42000204 	addi	r8,r8,8
    2140:	003fdd06 	br	20b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00020b8>
    2144:	d9002c17 	ldw	r4,176(sp)
    2148:	d9801e04 	addi	r6,sp,120
    214c:	b80b883a 	mov	r5,r23
    2150:	000701c0 	call	701c <__sprint_r>
    2154:	1039ed1e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    2158:	d8802617 	ldw	r2,152(sp)
    215c:	d8c02017 	ldw	r3,128(sp)
    2160:	da000404 	addi	r8,sp,16
    2164:	003e1006 	br	19a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00019a8>
    2168:	00800044 	movi	r2,1
    216c:	10803fcc 	andi	r2,r2,255
    2170:	00c00044 	movi	r3,1
    2174:	10fa3526 	beq	r2,r3,a4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a4c>
    2178:	00c00084 	movi	r3,2
    217c:	10fbcb26 	beq	r2,r3,10ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010ac>
    2180:	003a8f06 	br	bc0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bc0>
    2184:	01000074 	movhi	r4,1
    2188:	21014084 	addi	r4,r4,1282
    218c:	d9003515 	stw	r4,212(sp)
    2190:	003b7606 	br	f6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000f6c>
    2194:	d8802917 	ldw	r2,164(sp)
    2198:	00c00184 	movi	r3,6
    219c:	1880012e 	bgeu	r3,r2,21a4 <___vfprintf_internal_r+0x1ca0>
    21a0:	1805883a 	mov	r2,r3
    21a4:	d8802e15 	stw	r2,184(sp)
    21a8:	1000ef16 	blt	r2,zero,2568 <___vfprintf_internal_r+0x2064>
    21ac:	04000074 	movhi	r16,1
    21b0:	d8802a15 	stw	r2,168(sp)
    21b4:	dcc02d15 	stw	r19,180(sp)
    21b8:	d8002915 	stw	zero,164(sp)
    21bc:	d8003215 	stw	zero,200(sp)
    21c0:	84013a04 	addi	r16,r16,1256
    21c4:	0039883a 	mov	fp,zero
    21c8:	003aa206 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    21cc:	0021883a 	mov	r16,zero
    21d0:	003e0706 	br	19f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00019f0>
    21d4:	d9002c17 	ldw	r4,176(sp)
    21d8:	d9801e04 	addi	r6,sp,120
    21dc:	b80b883a 	mov	r5,r23
    21e0:	000701c0 	call	701c <__sprint_r>
    21e4:	1039c91e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    21e8:	d8802617 	ldw	r2,152(sp)
    21ec:	d9403317 	ldw	r5,204(sp)
    21f0:	d8c02017 	ldw	r3,128(sp)
    21f4:	da000404 	addi	r8,sp,16
    21f8:	2885c83a 	sub	r2,r5,r2
    21fc:	003dfb06 	br	19ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00019ec>
    2200:	9080004c 	andi	r2,r18,1
    2204:	103e8f1e 	bne	r2,zero,1c44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001c44>
    2208:	d8802117 	ldw	r2,132(sp)
    220c:	003e9e06 	br	1c88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001c88>
    2210:	1025883a 	mov	r18,r2
    2214:	0039883a 	mov	fp,zero
    2218:	00800084 	movi	r2,2
    221c:	003fd306 	br	216c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000216c>
    2220:	07000b44 	movi	fp,45
    2224:	df002785 	stb	fp,158(sp)
    2228:	003a4006 	br	b2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b2c>
    222c:	00c00b44 	movi	r3,45
    2230:	d8c02785 	stb	r3,158(sp)
    2234:	d8802a15 	stw	r2,168(sp)
    2238:	dc802b17 	ldw	r18,172(sp)
    223c:	d8002915 	stw	zero,164(sp)
    2240:	07000b44 	movi	fp,45
    2244:	003a8006 	br	c48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c48>
    2248:	04000074 	movhi	r16,1
    224c:	84012f04 	addi	r16,r16,1212
    2250:	003f4706 	br	1f70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001f70>
    2254:	d8c02d17 	ldw	r3,180(sp)
    2258:	d9002f17 	ldw	r4,188(sp)
    225c:	18800017 	ldw	r2,0(r3)
    2260:	18c00104 	addi	r3,r3,4
    2264:	d8c02d15 	stw	r3,180(sp)
    2268:	11000015 	stw	r4,0(r2)
    226c:	0038dd06 	br	5e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00005e4>
    2270:	dd802617 	ldw	r22,152(sp)
    2274:	00bfff44 	movi	r2,-3
    2278:	b0801c16 	blt	r22,r2,22ec <___vfprintf_internal_r+0x1de8>
    227c:	d9402917 	ldw	r5,164(sp)
    2280:	2d801a16 	blt	r5,r22,22ec <___vfprintf_internal_r+0x1de8>
    2284:	dd803215 	stw	r22,200(sp)
    2288:	003e8906 	br	1cb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cb0>
    228c:	01000074 	movhi	r4,1
    2290:	21013c84 	addi	r4,r4,1266
    2294:	d9002b15 	stw	r4,172(sp)
    2298:	003c9106 	br	14e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014e0>
    229c:	e005883a 	mov	r2,fp
    22a0:	003e7906 	br	1c88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001c88>
    22a4:	d9402917 	ldw	r5,164(sp)
    22a8:	df002783 	ldbu	fp,158(sp)
    22ac:	dcc02d15 	stw	r19,180(sp)
    22b0:	d9402a15 	stw	r5,168(sp)
    22b4:	d9402e15 	stw	r5,184(sp)
    22b8:	d8002915 	stw	zero,164(sp)
    22bc:	d8003215 	stw	zero,200(sp)
    22c0:	003a5d06 	br	c38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c38>
    22c4:	9080004c 	andi	r2,r18,1
    22c8:	0039883a 	mov	fp,zero
    22cc:	10000426 	beq	r2,zero,22e0 <___vfprintf_internal_r+0x1ddc>
    22d0:	00800c04 	movi	r2,48
    22d4:	dc001dc4 	addi	r16,sp,119
    22d8:	d8801dc5 	stb	r2,119(sp)
    22dc:	003b8006 	br	10e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010e0>
    22e0:	d8002e15 	stw	zero,184(sp)
    22e4:	dc001e04 	addi	r16,sp,120
    22e8:	003a4d06 	br	c20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c20>
    22ec:	8c7fff84 	addi	r17,r17,-2
    22f0:	b5bfffc4 	addi	r22,r22,-1
    22f4:	dd802615 	stw	r22,152(sp)
    22f8:	dc4022c5 	stb	r17,139(sp)
    22fc:	b000bf16 	blt	r22,zero,25fc <___vfprintf_internal_r+0x20f8>
    2300:	00800ac4 	movi	r2,43
    2304:	d8802305 	stb	r2,140(sp)
    2308:	00800244 	movi	r2,9
    230c:	15807016 	blt	r2,r22,24d0 <___vfprintf_internal_r+0x1fcc>
    2310:	00800c04 	movi	r2,48
    2314:	b5800c04 	addi	r22,r22,48
    2318:	d8802345 	stb	r2,141(sp)
    231c:	dd802385 	stb	r22,142(sp)
    2320:	d88023c4 	addi	r2,sp,143
    2324:	df0022c4 	addi	fp,sp,139
    2328:	d8c03317 	ldw	r3,204(sp)
    232c:	1739c83a 	sub	fp,r2,fp
    2330:	d9003317 	ldw	r4,204(sp)
    2334:	e0c7883a 	add	r3,fp,r3
    2338:	df003a15 	stw	fp,232(sp)
    233c:	d8c02e15 	stw	r3,184(sp)
    2340:	00800044 	movi	r2,1
    2344:	1100b30e 	bge	r2,r4,2614 <___vfprintf_internal_r+0x2110>
    2348:	d8c02e17 	ldw	r3,184(sp)
    234c:	18c00044 	addi	r3,r3,1
    2350:	d8c02e15 	stw	r3,184(sp)
    2354:	1805883a 	mov	r2,r3
    2358:	1800ac16 	blt	r3,zero,260c <___vfprintf_internal_r+0x2108>
    235c:	d8003215 	stw	zero,200(sp)
    2360:	003e5d06 	br	1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    2364:	d9002c17 	ldw	r4,176(sp)
    2368:	d9801e04 	addi	r6,sp,120
    236c:	b80b883a 	mov	r5,r23
    2370:	000701c0 	call	701c <__sprint_r>
    2374:	1039651e 	bne	r2,zero,90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000090c>
    2378:	dc402617 	ldw	r17,152(sp)
    237c:	d8c02017 	ldw	r3,128(sp)
    2380:	d8801f17 	ldw	r2,124(sp)
    2384:	da000404 	addi	r8,sp,16
    2388:	003ed606 	br	1ee4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ee4>
    238c:	582b883a 	mov	r21,r11
    2390:	d8002915 	stw	zero,164(sp)
    2394:	0038bd06 	br	68c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000068c>
    2398:	d8802917 	ldw	r2,164(sp)
    239c:	103e071e 	bne	r2,zero,1bbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bbc>
    23a0:	dc002915 	stw	r16,164(sp)
    23a4:	003e0506 	br	1bbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bbc>
    23a8:	d9002917 	ldw	r4,164(sp)
    23ac:	20c00044 	addi	r3,r4,1
    23b0:	003e0f06 	br	1bf0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bf0>
    23b4:	01400184 	movi	r5,6
    23b8:	d9402915 	stw	r5,164(sp)
    23bc:	003dff06 	br	1bbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bbc>
    23c0:	d8802104 	addi	r2,sp,132
    23c4:	d8800315 	stw	r2,12(sp)
    23c8:	d8802504 	addi	r2,sp,148
    23cc:	d8800215 	stw	r2,8(sp)
    23d0:	d8802604 	addi	r2,sp,152
    23d4:	d8800115 	stw	r2,4(sp)
    23d8:	d8802917 	ldw	r2,164(sp)
    23dc:	d9403617 	ldw	r5,216(sp)
    23e0:	d9002c17 	ldw	r4,176(sp)
    23e4:	d8800015 	stw	r2,0(sp)
    23e8:	01c000c4 	movi	r7,3
    23ec:	980d883a 	mov	r6,r19
    23f0:	da003d15 	stw	r8,244(sp)
    23f4:	0002b280 	call	2b28 <_dtoa_r>
    23f8:	d8c02917 	ldw	r3,164(sp)
    23fc:	da003d17 	ldw	r8,244(sp)
    2400:	1021883a 	mov	r16,r2
    2404:	10f9883a 	add	fp,r2,r3
    2408:	81000007 	ldb	r4,0(r16)
    240c:	00800c04 	movi	r2,48
    2410:	20805e26 	beq	r4,r2,258c <___vfprintf_internal_r+0x2088>
    2414:	d8c02617 	ldw	r3,152(sp)
    2418:	e0f9883a 	add	fp,fp,r3
    241c:	003e0a06 	br	1c48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001c48>
    2420:	00c00b44 	movi	r3,45
    2424:	24e0003c 	xorhi	r19,r4,32768
    2428:	d8c02a05 	stb	r3,168(sp)
    242c:	003de906 	br	1bd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bd4>
    2430:	d8c03217 	ldw	r3,200(sp)
    2434:	00c07a0e 	bge	zero,r3,2620 <___vfprintf_internal_r+0x211c>
    2438:	00800044 	movi	r2,1
    243c:	d9003317 	ldw	r4,204(sp)
    2440:	1105883a 	add	r2,r2,r4
    2444:	d8802e15 	stw	r2,184(sp)
    2448:	10004e16 	blt	r2,zero,2584 <___vfprintf_internal_r+0x2080>
    244c:	044019c4 	movi	r17,103
    2450:	003e2106 	br	1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    2454:	d9002917 	ldw	r4,164(sp)
    2458:	d8802104 	addi	r2,sp,132
    245c:	d8800315 	stw	r2,12(sp)
    2460:	d9000015 	stw	r4,0(sp)
    2464:	d8802504 	addi	r2,sp,148
    2468:	d9403617 	ldw	r5,216(sp)
    246c:	d9002c17 	ldw	r4,176(sp)
    2470:	d8800215 	stw	r2,8(sp)
    2474:	d8802604 	addi	r2,sp,152
    2478:	d8800115 	stw	r2,4(sp)
    247c:	01c000c4 	movi	r7,3
    2480:	980d883a 	mov	r6,r19
    2484:	da003d15 	stw	r8,244(sp)
    2488:	0002b280 	call	2b28 <_dtoa_r>
    248c:	d8c02917 	ldw	r3,164(sp)
    2490:	da003d17 	ldw	r8,244(sp)
    2494:	1021883a 	mov	r16,r2
    2498:	00801184 	movi	r2,70
    249c:	80f9883a 	add	fp,r16,r3
    24a0:	88bfd926 	beq	r17,r2,2408 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002408>
    24a4:	003de806 	br	1c48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001c48>
    24a8:	d9002917 	ldw	r4,164(sp)
    24ac:	00c04d0e 	bge	zero,r3,25e4 <___vfprintf_internal_r+0x20e0>
    24b0:	2000441e 	bne	r4,zero,25c4 <___vfprintf_internal_r+0x20c0>
    24b4:	9480004c 	andi	r18,r18,1
    24b8:	9000421e 	bne	r18,zero,25c4 <___vfprintf_internal_r+0x20c0>
    24bc:	1805883a 	mov	r2,r3
    24c0:	18007016 	blt	r3,zero,2684 <___vfprintf_internal_r+0x2180>
    24c4:	d8c03217 	ldw	r3,200(sp)
    24c8:	d8c02e15 	stw	r3,184(sp)
    24cc:	003e0206 	br	1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    24d0:	df0022c4 	addi	fp,sp,139
    24d4:	dc002915 	stw	r16,164(sp)
    24d8:	4027883a 	mov	r19,r8
    24dc:	e021883a 	mov	r16,fp
    24e0:	b009883a 	mov	r4,r22
    24e4:	01400284 	movi	r5,10
    24e8:	000a54c0 	call	a54c <__modsi3>
    24ec:	10800c04 	addi	r2,r2,48
    24f0:	843fffc4 	addi	r16,r16,-1
    24f4:	b009883a 	mov	r4,r22
    24f8:	01400284 	movi	r5,10
    24fc:	80800005 	stb	r2,0(r16)
    2500:	000a4c80 	call	a4c8 <__divsi3>
    2504:	102d883a 	mov	r22,r2
    2508:	00800244 	movi	r2,9
    250c:	15bff416 	blt	r2,r22,24e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00024e0>
    2510:	9811883a 	mov	r8,r19
    2514:	b0800c04 	addi	r2,r22,48
    2518:	8027883a 	mov	r19,r16
    251c:	997fffc4 	addi	r5,r19,-1
    2520:	98bfffc5 	stb	r2,-1(r19)
    2524:	dc002917 	ldw	r16,164(sp)
    2528:	2f006a2e 	bgeu	r5,fp,26d4 <___vfprintf_internal_r+0x21d0>
    252c:	d9c02384 	addi	r7,sp,142
    2530:	3ccfc83a 	sub	r7,r7,r19
    2534:	d9002344 	addi	r4,sp,141
    2538:	e1cf883a 	add	r7,fp,r7
    253c:	00000106 	br	2544 <___vfprintf_internal_r+0x2040>
    2540:	28800003 	ldbu	r2,0(r5)
    2544:	20800005 	stb	r2,0(r4)
    2548:	21000044 	addi	r4,r4,1
    254c:	29400044 	addi	r5,r5,1
    2550:	393ffb1e 	bne	r7,r4,2540 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002540>
    2554:	d8802304 	addi	r2,sp,140
    2558:	14c5c83a 	sub	r2,r2,r19
    255c:	d8c02344 	addi	r3,sp,141
    2560:	1885883a 	add	r2,r3,r2
    2564:	003f7006 	br	2328 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002328>
    2568:	0005883a 	mov	r2,zero
    256c:	003f0f06 	br	21ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00021ac>
    2570:	d8c03217 	ldw	r3,200(sp)
    2574:	18c00044 	addi	r3,r3,1
    2578:	d8c02e15 	stw	r3,184(sp)
    257c:	1805883a 	mov	r2,r3
    2580:	183fb20e 	bge	r3,zero,244c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000244c>
    2584:	0005883a 	mov	r2,zero
    2588:	003fb006 	br	244c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000244c>
    258c:	d9003617 	ldw	r4,216(sp)
    2590:	000d883a 	mov	r6,zero
    2594:	000f883a 	mov	r7,zero
    2598:	980b883a 	mov	r5,r19
    259c:	d8c03c15 	stw	r3,240(sp)
    25a0:	da003d15 	stw	r8,244(sp)
    25a4:	000b8100 	call	b810 <__eqdf2>
    25a8:	d8c03c17 	ldw	r3,240(sp)
    25ac:	da003d17 	ldw	r8,244(sp)
    25b0:	103f9826 	beq	r2,zero,2414 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002414>
    25b4:	00800044 	movi	r2,1
    25b8:	10c7c83a 	sub	r3,r2,r3
    25bc:	d8c02615 	stw	r3,152(sp)
    25c0:	003f9506 	br	2418 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002418>
    25c4:	d9002917 	ldw	r4,164(sp)
    25c8:	d8c03217 	ldw	r3,200(sp)
    25cc:	20800044 	addi	r2,r4,1
    25d0:	1885883a 	add	r2,r3,r2
    25d4:	d8802e15 	stw	r2,184(sp)
    25d8:	103dbf0e 	bge	r2,zero,1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    25dc:	0005883a 	mov	r2,zero
    25e0:	003dbd06 	br	1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    25e4:	2000211e 	bne	r4,zero,266c <___vfprintf_internal_r+0x2168>
    25e8:	9480004c 	andi	r18,r18,1
    25ec:	90001f1e 	bne	r18,zero,266c <___vfprintf_internal_r+0x2168>
    25f0:	00800044 	movi	r2,1
    25f4:	d8802e15 	stw	r2,184(sp)
    25f8:	003db706 	br	1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    25fc:	00800b44 	movi	r2,45
    2600:	05adc83a 	sub	r22,zero,r22
    2604:	d8802305 	stb	r2,140(sp)
    2608:	003f3f06 	br	2308 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002308>
    260c:	0005883a 	mov	r2,zero
    2610:	003f5206 	br	235c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000235c>
    2614:	90a4703a 	and	r18,r18,r2
    2618:	903f4e26 	beq	r18,zero,2354 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002354>
    261c:	003f4a06 	br	2348 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002348>
    2620:	00800084 	movi	r2,2
    2624:	10c5c83a 	sub	r2,r2,r3
    2628:	003f8406 	br	243c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000243c>
    262c:	d8802d17 	ldw	r2,180(sp)
    2630:	d9002d17 	ldw	r4,180(sp)
    2634:	ac400043 	ldbu	r17,1(r21)
    2638:	10800017 	ldw	r2,0(r2)
    263c:	582b883a 	mov	r21,r11
    2640:	d8802915 	stw	r2,164(sp)
    2644:	20800104 	addi	r2,r4,4
    2648:	d9002917 	ldw	r4,164(sp)
    264c:	d8802d15 	stw	r2,180(sp)
    2650:	203e7a0e 	bge	r4,zero,203c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000203c>
    2654:	8c403fcc 	andi	r17,r17,255
    2658:	00bfffc4 	movi	r2,-1
    265c:	8c40201c 	xori	r17,r17,128
    2660:	d8802915 	stw	r2,164(sp)
    2664:	8c7fe004 	addi	r17,r17,-128
    2668:	00380706 	br	688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000688>
    266c:	d8c02917 	ldw	r3,164(sp)
    2670:	18c00084 	addi	r3,r3,2
    2674:	d8c02e15 	stw	r3,184(sp)
    2678:	1805883a 	mov	r2,r3
    267c:	183d960e 	bge	r3,zero,1cd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cd8>
    2680:	003fd606 	br	25dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00025dc>
    2684:	0005883a 	mov	r2,zero
    2688:	003f8e06 	br	24c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00024c4>
    268c:	9080004c 	andi	r2,r18,1
    2690:	103f811e 	bne	r2,zero,2498 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002498>
    2694:	d8802117 	ldw	r2,132(sp)
    2698:	1405c83a 	sub	r2,r2,r16
    269c:	d8803315 	stw	r2,204(sp)
    26a0:	b47ef326 	beq	r22,r17,2270 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002270>
    26a4:	dd802617 	ldw	r22,152(sp)
    26a8:	003f1106 	br	22f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022f0>
    26ac:	d9c02785 	stb	r7,158(sp)
    26b0:	00390406 	br	ac4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ac4>
    26b4:	d9c02785 	stb	r7,158(sp)
    26b8:	0038d306 	br	a08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a08>
    26bc:	d9c02785 	stb	r7,158(sp)
    26c0:	003a6106 	br	1048 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001048>
    26c4:	d9c02785 	stb	r7,158(sp)
    26c8:	003af806 	br	12ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00012ac>
    26cc:	0005883a 	mov	r2,zero
    26d0:	003d7e06 	br	1ccc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ccc>
    26d4:	d8802344 	addi	r2,sp,141
    26d8:	003f1306 	br	2328 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002328>
    26dc:	d9c02785 	stb	r7,158(sp)
    26e0:	00392306 	br	b70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b70>
    26e4:	d9c02785 	stb	r7,158(sp)
    26e8:	003aa906 	br	1190 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001190>
    26ec:	d9c02785 	stb	r7,158(sp)
    26f0:	003a3d06 	br	fe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fe8>
    26f4:	d9c02785 	stb	r7,158(sp)
    26f8:	003aca06 	br	1224 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001224>

000026fc <__vfprintf_internal>:
    26fc:	00800074 	movhi	r2,1
    2700:	10896104 	addi	r2,r2,9604
    2704:	300f883a 	mov	r7,r6
    2708:	280d883a 	mov	r6,r5
    270c:	200b883a 	mov	r5,r4
    2710:	11000017 	ldw	r4,0(r2)
    2714:	00005041 	jmpi	504 <___vfprintf_internal_r>

00002718 <__sbprintf>:
    2718:	2880030b 	ldhu	r2,12(r5)
    271c:	2ac01917 	ldw	r11,100(r5)
    2720:	2a80038b 	ldhu	r10,14(r5)
    2724:	2a400717 	ldw	r9,28(r5)
    2728:	2a000917 	ldw	r8,36(r5)
    272c:	defee204 	addi	sp,sp,-1144
    2730:	00c10004 	movi	r3,1024
    2734:	dc011a15 	stw	r16,1128(sp)
    2738:	10bfff4c 	andi	r2,r2,65533
    273c:	2821883a 	mov	r16,r5
    2740:	d8cb883a 	add	r5,sp,r3
    2744:	dc811c15 	stw	r18,1136(sp)
    2748:	dc411b15 	stw	r17,1132(sp)
    274c:	dfc11d15 	stw	ra,1140(sp)
    2750:	2025883a 	mov	r18,r4
    2754:	d881030d 	sth	r2,1036(sp)
    2758:	dac11915 	stw	r11,1124(sp)
    275c:	da81038d 	sth	r10,1038(sp)
    2760:	da410715 	stw	r9,1052(sp)
    2764:	da010915 	stw	r8,1060(sp)
    2768:	dec10015 	stw	sp,1024(sp)
    276c:	dec10415 	stw	sp,1040(sp)
    2770:	d8c10215 	stw	r3,1032(sp)
    2774:	d8c10515 	stw	r3,1044(sp)
    2778:	d8010615 	stw	zero,1048(sp)
    277c:	00005040 	call	504 <___vfprintf_internal_r>
    2780:	1023883a 	mov	r17,r2
    2784:	10000416 	blt	r2,zero,2798 <__sbprintf+0x80>
    2788:	d9410004 	addi	r5,sp,1024
    278c:	9009883a 	mov	r4,r18
    2790:	00043cc0 	call	43cc <_fflush_r>
    2794:	10000d1e 	bne	r2,zero,27cc <__sbprintf+0xb4>
    2798:	d881030b 	ldhu	r2,1036(sp)
    279c:	1080100c 	andi	r2,r2,64
    27a0:	10000326 	beq	r2,zero,27b0 <__sbprintf+0x98>
    27a4:	8080030b 	ldhu	r2,12(r16)
    27a8:	10801014 	ori	r2,r2,64
    27ac:	8080030d 	sth	r2,12(r16)
    27b0:	8805883a 	mov	r2,r17
    27b4:	dfc11d17 	ldw	ra,1140(sp)
    27b8:	dc811c17 	ldw	r18,1136(sp)
    27bc:	dc411b17 	ldw	r17,1132(sp)
    27c0:	dc011a17 	ldw	r16,1128(sp)
    27c4:	dec11e04 	addi	sp,sp,1144
    27c8:	f800283a 	ret
    27cc:	047fffc4 	movi	r17,-1
    27d0:	003ff106 	br	2798 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002798>

000027d4 <__swsetup_r>:
    27d4:	00800074 	movhi	r2,1
    27d8:	defffd04 	addi	sp,sp,-12
    27dc:	10896104 	addi	r2,r2,9604
    27e0:	dc400115 	stw	r17,4(sp)
    27e4:	2023883a 	mov	r17,r4
    27e8:	11000017 	ldw	r4,0(r2)
    27ec:	dc000015 	stw	r16,0(sp)
    27f0:	dfc00215 	stw	ra,8(sp)
    27f4:	2821883a 	mov	r16,r5
    27f8:	20000226 	beq	r4,zero,2804 <__swsetup_r+0x30>
    27fc:	20800e17 	ldw	r2,56(r4)
    2800:	10003126 	beq	r2,zero,28c8 <__swsetup_r+0xf4>
    2804:	8080030b 	ldhu	r2,12(r16)
    2808:	10c0020c 	andi	r3,r2,8
    280c:	1009883a 	mov	r4,r2
    2810:	18000f26 	beq	r3,zero,2850 <__swsetup_r+0x7c>
    2814:	80c00417 	ldw	r3,16(r16)
    2818:	18001526 	beq	r3,zero,2870 <__swsetup_r+0x9c>
    281c:	1100004c 	andi	r4,r2,1
    2820:	20001c1e 	bne	r4,zero,2894 <__swsetup_r+0xc0>
    2824:	1080008c 	andi	r2,r2,2
    2828:	1000291e 	bne	r2,zero,28d0 <__swsetup_r+0xfc>
    282c:	80800517 	ldw	r2,20(r16)
    2830:	80800215 	stw	r2,8(r16)
    2834:	18001c26 	beq	r3,zero,28a8 <__swsetup_r+0xd4>
    2838:	0005883a 	mov	r2,zero
    283c:	dfc00217 	ldw	ra,8(sp)
    2840:	dc400117 	ldw	r17,4(sp)
    2844:	dc000017 	ldw	r16,0(sp)
    2848:	dec00304 	addi	sp,sp,12
    284c:	f800283a 	ret
    2850:	2080040c 	andi	r2,r4,16
    2854:	10002e26 	beq	r2,zero,2910 <__swsetup_r+0x13c>
    2858:	2080010c 	andi	r2,r4,4
    285c:	10001e1e 	bne	r2,zero,28d8 <__swsetup_r+0x104>
    2860:	80c00417 	ldw	r3,16(r16)
    2864:	20800214 	ori	r2,r4,8
    2868:	8080030d 	sth	r2,12(r16)
    286c:	183feb1e 	bne	r3,zero,281c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000281c>
    2870:	1100a00c 	andi	r4,r2,640
    2874:	01408004 	movi	r5,512
    2878:	217fe826 	beq	r4,r5,281c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000281c>
    287c:	800b883a 	mov	r5,r16
    2880:	8809883a 	mov	r4,r17
    2884:	0004e900 	call	4e90 <__smakebuf_r>
    2888:	8080030b 	ldhu	r2,12(r16)
    288c:	80c00417 	ldw	r3,16(r16)
    2890:	003fe206 	br	281c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000281c>
    2894:	80800517 	ldw	r2,20(r16)
    2898:	80000215 	stw	zero,8(r16)
    289c:	0085c83a 	sub	r2,zero,r2
    28a0:	80800615 	stw	r2,24(r16)
    28a4:	183fe41e 	bne	r3,zero,2838 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002838>
    28a8:	80c0030b 	ldhu	r3,12(r16)
    28ac:	0005883a 	mov	r2,zero
    28b0:	1900200c 	andi	r4,r3,128
    28b4:	203fe126 	beq	r4,zero,283c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000283c>
    28b8:	18c01014 	ori	r3,r3,64
    28bc:	80c0030d 	sth	r3,12(r16)
    28c0:	00bfffc4 	movi	r2,-1
    28c4:	003fdd06 	br	283c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000283c>
    28c8:	00047a80 	call	47a8 <__sinit>
    28cc:	003fcd06 	br	2804 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002804>
    28d0:	0005883a 	mov	r2,zero
    28d4:	003fd606 	br	2830 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002830>
    28d8:	81400c17 	ldw	r5,48(r16)
    28dc:	28000626 	beq	r5,zero,28f8 <__swsetup_r+0x124>
    28e0:	80801004 	addi	r2,r16,64
    28e4:	28800326 	beq	r5,r2,28f4 <__swsetup_r+0x120>
    28e8:	8809883a 	mov	r4,r17
    28ec:	000491c0 	call	491c <_free_r>
    28f0:	8100030b 	ldhu	r4,12(r16)
    28f4:	80000c15 	stw	zero,48(r16)
    28f8:	80c00417 	ldw	r3,16(r16)
    28fc:	00bff6c4 	movi	r2,-37
    2900:	1108703a 	and	r4,r2,r4
    2904:	80000115 	stw	zero,4(r16)
    2908:	80c00015 	stw	r3,0(r16)
    290c:	003fd506 	br	2864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002864>
    2910:	00800244 	movi	r2,9
    2914:	88800015 	stw	r2,0(r17)
    2918:	20801014 	ori	r2,r4,64
    291c:	8080030d 	sth	r2,12(r16)
    2920:	00bfffc4 	movi	r2,-1
    2924:	003fc506 	br	283c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000283c>

00002928 <quorem>:
    2928:	defff704 	addi	sp,sp,-36
    292c:	dc800215 	stw	r18,8(sp)
    2930:	20800417 	ldw	r2,16(r4)
    2934:	2c800417 	ldw	r18,16(r5)
    2938:	dfc00815 	stw	ra,32(sp)
    293c:	ddc00715 	stw	r23,28(sp)
    2940:	dd800615 	stw	r22,24(sp)
    2944:	dd400515 	stw	r21,20(sp)
    2948:	dd000415 	stw	r20,16(sp)
    294c:	dcc00315 	stw	r19,12(sp)
    2950:	dc400115 	stw	r17,4(sp)
    2954:	dc000015 	stw	r16,0(sp)
    2958:	14807116 	blt	r2,r18,2b20 <quorem+0x1f8>
    295c:	94bfffc4 	addi	r18,r18,-1
    2960:	94ad883a 	add	r22,r18,r18
    2964:	b5ad883a 	add	r22,r22,r22
    2968:	2c400504 	addi	r17,r5,20
    296c:	8da9883a 	add	r20,r17,r22
    2970:	25400504 	addi	r21,r4,20
    2974:	282f883a 	mov	r23,r5
    2978:	adad883a 	add	r22,r21,r22
    297c:	a1400017 	ldw	r5,0(r20)
    2980:	2021883a 	mov	r16,r4
    2984:	b1000017 	ldw	r4,0(r22)
    2988:	29400044 	addi	r5,r5,1
    298c:	000a5c00 	call	a5c0 <__udivsi3>
    2990:	1027883a 	mov	r19,r2
    2994:	10002c26 	beq	r2,zero,2a48 <quorem+0x120>
    2998:	a813883a 	mov	r9,r21
    299c:	880b883a 	mov	r5,r17
    29a0:	0009883a 	mov	r4,zero
    29a4:	000d883a 	mov	r6,zero
    29a8:	2a000017 	ldw	r8,0(r5)
    29ac:	49c00017 	ldw	r7,0(r9)
    29b0:	29400104 	addi	r5,r5,4
    29b4:	40bfffcc 	andi	r2,r8,65535
    29b8:	14c5383a 	mul	r2,r2,r19
    29bc:	4010d43a 	srli	r8,r8,16
    29c0:	38ffffcc 	andi	r3,r7,65535
    29c4:	1105883a 	add	r2,r2,r4
    29c8:	1008d43a 	srli	r4,r2,16
    29cc:	44d1383a 	mul	r8,r8,r19
    29d0:	198d883a 	add	r6,r3,r6
    29d4:	10ffffcc 	andi	r3,r2,65535
    29d8:	30c7c83a 	sub	r3,r6,r3
    29dc:	380ed43a 	srli	r7,r7,16
    29e0:	4105883a 	add	r2,r8,r4
    29e4:	180dd43a 	srai	r6,r3,16
    29e8:	113fffcc 	andi	r4,r2,65535
    29ec:	390fc83a 	sub	r7,r7,r4
    29f0:	398d883a 	add	r6,r7,r6
    29f4:	300e943a 	slli	r7,r6,16
    29f8:	18ffffcc 	andi	r3,r3,65535
    29fc:	1008d43a 	srli	r4,r2,16
    2a00:	38ceb03a 	or	r7,r7,r3
    2a04:	49c00015 	stw	r7,0(r9)
    2a08:	300dd43a 	srai	r6,r6,16
    2a0c:	4a400104 	addi	r9,r9,4
    2a10:	a17fe52e 	bgeu	r20,r5,29a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00029a8>
    2a14:	b0800017 	ldw	r2,0(r22)
    2a18:	10000b1e 	bne	r2,zero,2a48 <quorem+0x120>
    2a1c:	b0bfff04 	addi	r2,r22,-4
    2a20:	a880082e 	bgeu	r21,r2,2a44 <quorem+0x11c>
    2a24:	b0ffff17 	ldw	r3,-4(r22)
    2a28:	18000326 	beq	r3,zero,2a38 <quorem+0x110>
    2a2c:	00000506 	br	2a44 <quorem+0x11c>
    2a30:	10c00017 	ldw	r3,0(r2)
    2a34:	1800031e 	bne	r3,zero,2a44 <quorem+0x11c>
    2a38:	10bfff04 	addi	r2,r2,-4
    2a3c:	94bfffc4 	addi	r18,r18,-1
    2a40:	a8bffb36 	bltu	r21,r2,2a30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a30>
    2a44:	84800415 	stw	r18,16(r16)
    2a48:	b80b883a 	mov	r5,r23
    2a4c:	8009883a 	mov	r4,r16
    2a50:	00064740 	call	6474 <__mcmp>
    2a54:	10002616 	blt	r2,zero,2af0 <quorem+0x1c8>
    2a58:	9cc00044 	addi	r19,r19,1
    2a5c:	a805883a 	mov	r2,r21
    2a60:	000b883a 	mov	r5,zero
    2a64:	11000017 	ldw	r4,0(r2)
    2a68:	89800017 	ldw	r6,0(r17)
    2a6c:	10800104 	addi	r2,r2,4
    2a70:	20ffffcc 	andi	r3,r4,65535
    2a74:	194b883a 	add	r5,r3,r5
    2a78:	30ffffcc 	andi	r3,r6,65535
    2a7c:	28c7c83a 	sub	r3,r5,r3
    2a80:	300cd43a 	srli	r6,r6,16
    2a84:	2008d43a 	srli	r4,r4,16
    2a88:	180bd43a 	srai	r5,r3,16
    2a8c:	18ffffcc 	andi	r3,r3,65535
    2a90:	2189c83a 	sub	r4,r4,r6
    2a94:	2149883a 	add	r4,r4,r5
    2a98:	200c943a 	slli	r6,r4,16
    2a9c:	8c400104 	addi	r17,r17,4
    2aa0:	200bd43a 	srai	r5,r4,16
    2aa4:	30c6b03a 	or	r3,r6,r3
    2aa8:	10ffff15 	stw	r3,-4(r2)
    2aac:	a47fed2e 	bgeu	r20,r17,2a64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a64>
    2ab0:	9485883a 	add	r2,r18,r18
    2ab4:	1085883a 	add	r2,r2,r2
    2ab8:	a887883a 	add	r3,r21,r2
    2abc:	18800017 	ldw	r2,0(r3)
    2ac0:	10000b1e 	bne	r2,zero,2af0 <quorem+0x1c8>
    2ac4:	18bfff04 	addi	r2,r3,-4
    2ac8:	a880082e 	bgeu	r21,r2,2aec <quorem+0x1c4>
    2acc:	18ffff17 	ldw	r3,-4(r3)
    2ad0:	18000326 	beq	r3,zero,2ae0 <quorem+0x1b8>
    2ad4:	00000506 	br	2aec <quorem+0x1c4>
    2ad8:	10c00017 	ldw	r3,0(r2)
    2adc:	1800031e 	bne	r3,zero,2aec <quorem+0x1c4>
    2ae0:	10bfff04 	addi	r2,r2,-4
    2ae4:	94bfffc4 	addi	r18,r18,-1
    2ae8:	a8bffb36 	bltu	r21,r2,2ad8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002ad8>
    2aec:	84800415 	stw	r18,16(r16)
    2af0:	9805883a 	mov	r2,r19
    2af4:	dfc00817 	ldw	ra,32(sp)
    2af8:	ddc00717 	ldw	r23,28(sp)
    2afc:	dd800617 	ldw	r22,24(sp)
    2b00:	dd400517 	ldw	r21,20(sp)
    2b04:	dd000417 	ldw	r20,16(sp)
    2b08:	dcc00317 	ldw	r19,12(sp)
    2b0c:	dc800217 	ldw	r18,8(sp)
    2b10:	dc400117 	ldw	r17,4(sp)
    2b14:	dc000017 	ldw	r16,0(sp)
    2b18:	dec00904 	addi	sp,sp,36
    2b1c:	f800283a 	ret
    2b20:	0005883a 	mov	r2,zero
    2b24:	003ff306 	br	2af4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002af4>

00002b28 <_dtoa_r>:
    2b28:	20801017 	ldw	r2,64(r4)
    2b2c:	deffde04 	addi	sp,sp,-136
    2b30:	df002015 	stw	fp,128(sp)
    2b34:	dcc01b15 	stw	r19,108(sp)
    2b38:	dc801a15 	stw	r18,104(sp)
    2b3c:	dc401915 	stw	r17,100(sp)
    2b40:	dc001815 	stw	r16,96(sp)
    2b44:	dfc02115 	stw	ra,132(sp)
    2b48:	ddc01f15 	stw	r23,124(sp)
    2b4c:	dd801e15 	stw	r22,120(sp)
    2b50:	dd401d15 	stw	r21,116(sp)
    2b54:	dd001c15 	stw	r20,112(sp)
    2b58:	d9c00315 	stw	r7,12(sp)
    2b5c:	2039883a 	mov	fp,r4
    2b60:	3023883a 	mov	r17,r6
    2b64:	2825883a 	mov	r18,r5
    2b68:	dc002417 	ldw	r16,144(sp)
    2b6c:	3027883a 	mov	r19,r6
    2b70:	10000826 	beq	r2,zero,2b94 <_dtoa_r+0x6c>
    2b74:	21801117 	ldw	r6,68(r4)
    2b78:	00c00044 	movi	r3,1
    2b7c:	100b883a 	mov	r5,r2
    2b80:	1986983a 	sll	r3,r3,r6
    2b84:	11800115 	stw	r6,4(r2)
    2b88:	10c00215 	stw	r3,8(r2)
    2b8c:	0005c540 	call	5c54 <_Bfree>
    2b90:	e0001015 	stw	zero,64(fp)
    2b94:	88002e16 	blt	r17,zero,2c50 <_dtoa_r+0x128>
    2b98:	80000015 	stw	zero,0(r16)
    2b9c:	889ffc2c 	andhi	r2,r17,32752
    2ba0:	00dffc34 	movhi	r3,32752
    2ba4:	10c01c26 	beq	r2,r3,2c18 <_dtoa_r+0xf0>
    2ba8:	000d883a 	mov	r6,zero
    2bac:	000f883a 	mov	r7,zero
    2bb0:	9009883a 	mov	r4,r18
    2bb4:	980b883a 	mov	r5,r19
    2bb8:	000b8100 	call	b810 <__eqdf2>
    2bbc:	10002b1e 	bne	r2,zero,2c6c <_dtoa_r+0x144>
    2bc0:	d9c02317 	ldw	r7,140(sp)
    2bc4:	00800044 	movi	r2,1
    2bc8:	38800015 	stw	r2,0(r7)
    2bcc:	d8802517 	ldw	r2,148(sp)
    2bd0:	10019e26 	beq	r2,zero,324c <_dtoa_r+0x724>
    2bd4:	d8c02517 	ldw	r3,148(sp)
    2bd8:	00800074 	movhi	r2,1
    2bdc:	10813c44 	addi	r2,r2,1265
    2be0:	18800015 	stw	r2,0(r3)
    2be4:	10bfffc4 	addi	r2,r2,-1
    2be8:	dfc02117 	ldw	ra,132(sp)
    2bec:	df002017 	ldw	fp,128(sp)
    2bf0:	ddc01f17 	ldw	r23,124(sp)
    2bf4:	dd801e17 	ldw	r22,120(sp)
    2bf8:	dd401d17 	ldw	r21,116(sp)
    2bfc:	dd001c17 	ldw	r20,112(sp)
    2c00:	dcc01b17 	ldw	r19,108(sp)
    2c04:	dc801a17 	ldw	r18,104(sp)
    2c08:	dc401917 	ldw	r17,100(sp)
    2c0c:	dc001817 	ldw	r16,96(sp)
    2c10:	dec02204 	addi	sp,sp,136
    2c14:	f800283a 	ret
    2c18:	d8c02317 	ldw	r3,140(sp)
    2c1c:	0089c3c4 	movi	r2,9999
    2c20:	18800015 	stw	r2,0(r3)
    2c24:	90017726 	beq	r18,zero,3204 <_dtoa_r+0x6dc>
    2c28:	00800074 	movhi	r2,1
    2c2c:	10814804 	addi	r2,r2,1312
    2c30:	d9002517 	ldw	r4,148(sp)
    2c34:	203fec26 	beq	r4,zero,2be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002be8>
    2c38:	10c000c7 	ldb	r3,3(r2)
    2c3c:	1801781e 	bne	r3,zero,3220 <_dtoa_r+0x6f8>
    2c40:	10c000c4 	addi	r3,r2,3
    2c44:	d9802517 	ldw	r6,148(sp)
    2c48:	30c00015 	stw	r3,0(r6)
    2c4c:	003fe606 	br	2be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002be8>
    2c50:	04e00034 	movhi	r19,32768
    2c54:	9cffffc4 	addi	r19,r19,-1
    2c58:	00800044 	movi	r2,1
    2c5c:	8ce6703a 	and	r19,r17,r19
    2c60:	80800015 	stw	r2,0(r16)
    2c64:	9823883a 	mov	r17,r19
    2c68:	003fcc06 	br	2b9c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002b9c>
    2c6c:	d8800204 	addi	r2,sp,8
    2c70:	d8800015 	stw	r2,0(sp)
    2c74:	d9c00104 	addi	r7,sp,4
    2c78:	900b883a 	mov	r5,r18
    2c7c:	980d883a 	mov	r6,r19
    2c80:	e009883a 	mov	r4,fp
    2c84:	8820d53a 	srli	r16,r17,20
    2c88:	00068400 	call	6840 <__d2b>
    2c8c:	d8800915 	stw	r2,36(sp)
    2c90:	8001651e 	bne	r16,zero,3228 <_dtoa_r+0x700>
    2c94:	dd800217 	ldw	r22,8(sp)
    2c98:	dc000117 	ldw	r16,4(sp)
    2c9c:	00800804 	movi	r2,32
    2ca0:	b421883a 	add	r16,r22,r16
    2ca4:	80c10c84 	addi	r3,r16,1074
    2ca8:	10c2d10e 	bge	r2,r3,37f0 <_dtoa_r+0xcc8>
    2cac:	00801004 	movi	r2,64
    2cb0:	81010484 	addi	r4,r16,1042
    2cb4:	10c7c83a 	sub	r3,r2,r3
    2cb8:	9108d83a 	srl	r4,r18,r4
    2cbc:	88e2983a 	sll	r17,r17,r3
    2cc0:	2448b03a 	or	r4,r4,r17
    2cc4:	000cbd80 	call	cbd8 <__floatunsidf>
    2cc8:	017f8434 	movhi	r5,65040
    2ccc:	01800044 	movi	r6,1
    2cd0:	1009883a 	mov	r4,r2
    2cd4:	194b883a 	add	r5,r3,r5
    2cd8:	843fffc4 	addi	r16,r16,-1
    2cdc:	d9801115 	stw	r6,68(sp)
    2ce0:	000d883a 	mov	r6,zero
    2ce4:	01cffe34 	movhi	r7,16376
    2ce8:	000c1800 	call	c180 <__subdf3>
    2cec:	0198dbf4 	movhi	r6,25455
    2cf0:	01cff4f4 	movhi	r7,16339
    2cf4:	3190d844 	addi	r6,r6,17249
    2cf8:	39e1e9c4 	addi	r7,r7,-30809
    2cfc:	1009883a 	mov	r4,r2
    2d00:	180b883a 	mov	r5,r3
    2d04:	000ba680 	call	ba68 <__muldf3>
    2d08:	01a2d874 	movhi	r6,35681
    2d0c:	01cff1f4 	movhi	r7,16327
    2d10:	31b22cc4 	addi	r6,r6,-14157
    2d14:	39e28a04 	addi	r7,r7,-30168
    2d18:	180b883a 	mov	r5,r3
    2d1c:	1009883a 	mov	r4,r2
    2d20:	000a67c0 	call	a67c <__adddf3>
    2d24:	8009883a 	mov	r4,r16
    2d28:	1029883a 	mov	r20,r2
    2d2c:	1823883a 	mov	r17,r3
    2d30:	000cafc0 	call	cafc <__floatsidf>
    2d34:	019427f4 	movhi	r6,20639
    2d38:	01cff4f4 	movhi	r7,16339
    2d3c:	319e7ec4 	addi	r6,r6,31227
    2d40:	39d104c4 	addi	r7,r7,17427
    2d44:	1009883a 	mov	r4,r2
    2d48:	180b883a 	mov	r5,r3
    2d4c:	000ba680 	call	ba68 <__muldf3>
    2d50:	100d883a 	mov	r6,r2
    2d54:	180f883a 	mov	r7,r3
    2d58:	a009883a 	mov	r4,r20
    2d5c:	880b883a 	mov	r5,r17
    2d60:	000a67c0 	call	a67c <__adddf3>
    2d64:	1009883a 	mov	r4,r2
    2d68:	180b883a 	mov	r5,r3
    2d6c:	1029883a 	mov	r20,r2
    2d70:	1823883a 	mov	r17,r3
    2d74:	000ca7c0 	call	ca7c <__fixdfsi>
    2d78:	000d883a 	mov	r6,zero
    2d7c:	000f883a 	mov	r7,zero
    2d80:	a009883a 	mov	r4,r20
    2d84:	880b883a 	mov	r5,r17
    2d88:	d8800515 	stw	r2,20(sp)
    2d8c:	000b9740 	call	b974 <__ledf2>
    2d90:	10028716 	blt	r2,zero,37b0 <_dtoa_r+0xc88>
    2d94:	d8c00517 	ldw	r3,20(sp)
    2d98:	00800584 	movi	r2,22
    2d9c:	10c27536 	bltu	r2,r3,3774 <_dtoa_r+0xc4c>
    2da0:	180490fa 	slli	r2,r3,3
    2da4:	00c00074 	movhi	r3,1
    2da8:	18c16404 	addi	r3,r3,1424
    2dac:	1885883a 	add	r2,r3,r2
    2db0:	11000017 	ldw	r4,0(r2)
    2db4:	11400117 	ldw	r5,4(r2)
    2db8:	900d883a 	mov	r6,r18
    2dbc:	980f883a 	mov	r7,r19
    2dc0:	000b8980 	call	b898 <__gedf2>
    2dc4:	00828d0e 	bge	zero,r2,37fc <_dtoa_r+0xcd4>
    2dc8:	d9000517 	ldw	r4,20(sp)
    2dcc:	d8000e15 	stw	zero,56(sp)
    2dd0:	213fffc4 	addi	r4,r4,-1
    2dd4:	d9000515 	stw	r4,20(sp)
    2dd8:	b42dc83a 	sub	r22,r22,r16
    2ddc:	b5bfffc4 	addi	r22,r22,-1
    2de0:	b0026f16 	blt	r22,zero,37a0 <_dtoa_r+0xc78>
    2de4:	d8000815 	stw	zero,32(sp)
    2de8:	d9c00517 	ldw	r7,20(sp)
    2dec:	38026416 	blt	r7,zero,3780 <_dtoa_r+0xc58>
    2df0:	b1ed883a 	add	r22,r22,r7
    2df4:	d9c00d15 	stw	r7,52(sp)
    2df8:	d8000a15 	stw	zero,40(sp)
    2dfc:	d9800317 	ldw	r6,12(sp)
    2e00:	00800244 	movi	r2,9
    2e04:	11811436 	bltu	r2,r6,3258 <_dtoa_r+0x730>
    2e08:	00800144 	movi	r2,5
    2e0c:	1184e10e 	bge	r2,r6,4194 <_dtoa_r+0x166c>
    2e10:	31bfff04 	addi	r6,r6,-4
    2e14:	d9800315 	stw	r6,12(sp)
    2e18:	0023883a 	mov	r17,zero
    2e1c:	d9800317 	ldw	r6,12(sp)
    2e20:	008000c4 	movi	r2,3
    2e24:	30836726 	beq	r6,r2,3bc4 <_dtoa_r+0x109c>
    2e28:	1183410e 	bge	r2,r6,3b30 <_dtoa_r+0x1008>
    2e2c:	d9c00317 	ldw	r7,12(sp)
    2e30:	00800104 	movi	r2,4
    2e34:	38827c26 	beq	r7,r2,3828 <_dtoa_r+0xd00>
    2e38:	00800144 	movi	r2,5
    2e3c:	3884c41e 	bne	r7,r2,4150 <_dtoa_r+0x1628>
    2e40:	00800044 	movi	r2,1
    2e44:	d8800b15 	stw	r2,44(sp)
    2e48:	d8c00517 	ldw	r3,20(sp)
    2e4c:	d9002217 	ldw	r4,136(sp)
    2e50:	1907883a 	add	r3,r3,r4
    2e54:	19800044 	addi	r6,r3,1
    2e58:	d8c00c15 	stw	r3,48(sp)
    2e5c:	d9800615 	stw	r6,24(sp)
    2e60:	0183a40e 	bge	zero,r6,3cf4 <_dtoa_r+0x11cc>
    2e64:	d9800617 	ldw	r6,24(sp)
    2e68:	3021883a 	mov	r16,r6
    2e6c:	e0001115 	stw	zero,68(fp)
    2e70:	008005c4 	movi	r2,23
    2e74:	1184c92e 	bgeu	r2,r6,419c <_dtoa_r+0x1674>
    2e78:	00c00044 	movi	r3,1
    2e7c:	00800104 	movi	r2,4
    2e80:	1085883a 	add	r2,r2,r2
    2e84:	11000504 	addi	r4,r2,20
    2e88:	180b883a 	mov	r5,r3
    2e8c:	18c00044 	addi	r3,r3,1
    2e90:	313ffb2e 	bgeu	r6,r4,2e80 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e80>
    2e94:	e1401115 	stw	r5,68(fp)
    2e98:	e009883a 	mov	r4,fp
    2e9c:	0005bac0 	call	5bac <_Balloc>
    2ea0:	d8800715 	stw	r2,28(sp)
    2ea4:	e0801015 	stw	r2,64(fp)
    2ea8:	00800384 	movi	r2,14
    2eac:	1400f736 	bltu	r2,r16,328c <_dtoa_r+0x764>
    2eb0:	8800f626 	beq	r17,zero,328c <_dtoa_r+0x764>
    2eb4:	d9c00517 	ldw	r7,20(sp)
    2eb8:	01c39a0e 	bge	zero,r7,3d24 <_dtoa_r+0x11fc>
    2ebc:	388003cc 	andi	r2,r7,15
    2ec0:	100490fa 	slli	r2,r2,3
    2ec4:	382bd13a 	srai	r21,r7,4
    2ec8:	00c00074 	movhi	r3,1
    2ecc:	18c16404 	addi	r3,r3,1424
    2ed0:	1885883a 	add	r2,r3,r2
    2ed4:	a8c0040c 	andi	r3,r21,16
    2ed8:	12400017 	ldw	r9,0(r2)
    2edc:	12000117 	ldw	r8,4(r2)
    2ee0:	18037926 	beq	r3,zero,3cc8 <_dtoa_r+0x11a0>
    2ee4:	00800074 	movhi	r2,1
    2ee8:	10815a04 	addi	r2,r2,1384
    2eec:	11800817 	ldw	r6,32(r2)
    2ef0:	11c00917 	ldw	r7,36(r2)
    2ef4:	9009883a 	mov	r4,r18
    2ef8:	980b883a 	mov	r5,r19
    2efc:	da001715 	stw	r8,92(sp)
    2f00:	da401615 	stw	r9,88(sp)
    2f04:	000af280 	call	af28 <__divdf3>
    2f08:	da001717 	ldw	r8,92(sp)
    2f0c:	da401617 	ldw	r9,88(sp)
    2f10:	ad4003cc 	andi	r21,r21,15
    2f14:	040000c4 	movi	r16,3
    2f18:	1023883a 	mov	r17,r2
    2f1c:	1829883a 	mov	r20,r3
    2f20:	a8001126 	beq	r21,zero,2f68 <_dtoa_r+0x440>
    2f24:	05c00074 	movhi	r23,1
    2f28:	bdc15a04 	addi	r23,r23,1384
    2f2c:	4805883a 	mov	r2,r9
    2f30:	4007883a 	mov	r3,r8
    2f34:	a980004c 	andi	r6,r21,1
    2f38:	1009883a 	mov	r4,r2
    2f3c:	a82bd07a 	srai	r21,r21,1
    2f40:	180b883a 	mov	r5,r3
    2f44:	30000426 	beq	r6,zero,2f58 <_dtoa_r+0x430>
    2f48:	b9800017 	ldw	r6,0(r23)
    2f4c:	b9c00117 	ldw	r7,4(r23)
    2f50:	84000044 	addi	r16,r16,1
    2f54:	000ba680 	call	ba68 <__muldf3>
    2f58:	bdc00204 	addi	r23,r23,8
    2f5c:	a83ff51e 	bne	r21,zero,2f34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002f34>
    2f60:	1013883a 	mov	r9,r2
    2f64:	1811883a 	mov	r8,r3
    2f68:	480d883a 	mov	r6,r9
    2f6c:	400f883a 	mov	r7,r8
    2f70:	8809883a 	mov	r4,r17
    2f74:	a00b883a 	mov	r5,r20
    2f78:	000af280 	call	af28 <__divdf3>
    2f7c:	d8800f15 	stw	r2,60(sp)
    2f80:	d8c01015 	stw	r3,64(sp)
    2f84:	d8c00e17 	ldw	r3,56(sp)
    2f88:	18000626 	beq	r3,zero,2fa4 <_dtoa_r+0x47c>
    2f8c:	d9000f17 	ldw	r4,60(sp)
    2f90:	d9401017 	ldw	r5,64(sp)
    2f94:	000d883a 	mov	r6,zero
    2f98:	01cffc34 	movhi	r7,16368
    2f9c:	000b9740 	call	b974 <__ledf2>
    2fa0:	10040b16 	blt	r2,zero,3fd0 <_dtoa_r+0x14a8>
    2fa4:	8009883a 	mov	r4,r16
    2fa8:	000cafc0 	call	cafc <__floatsidf>
    2fac:	d9800f17 	ldw	r6,60(sp)
    2fb0:	d9c01017 	ldw	r7,64(sp)
    2fb4:	1009883a 	mov	r4,r2
    2fb8:	180b883a 	mov	r5,r3
    2fbc:	000ba680 	call	ba68 <__muldf3>
    2fc0:	000d883a 	mov	r6,zero
    2fc4:	01d00734 	movhi	r7,16412
    2fc8:	1009883a 	mov	r4,r2
    2fcc:	180b883a 	mov	r5,r3
    2fd0:	000a67c0 	call	a67c <__adddf3>
    2fd4:	1021883a 	mov	r16,r2
    2fd8:	d8800617 	ldw	r2,24(sp)
    2fdc:	047f3034 	movhi	r17,64704
    2fe0:	1c63883a 	add	r17,r3,r17
    2fe4:	10031826 	beq	r2,zero,3c48 <_dtoa_r+0x1120>
    2fe8:	d8c00517 	ldw	r3,20(sp)
    2fec:	db000617 	ldw	r12,24(sp)
    2ff0:	d8c01315 	stw	r3,76(sp)
    2ff4:	d9000b17 	ldw	r4,44(sp)
    2ff8:	20038f26 	beq	r4,zero,3e38 <_dtoa_r+0x1310>
    2ffc:	60bfffc4 	addi	r2,r12,-1
    3000:	100490fa 	slli	r2,r2,3
    3004:	00c00074 	movhi	r3,1
    3008:	18c16404 	addi	r3,r3,1424
    300c:	1885883a 	add	r2,r3,r2
    3010:	11800017 	ldw	r6,0(r2)
    3014:	11c00117 	ldw	r7,4(r2)
    3018:	d8800717 	ldw	r2,28(sp)
    301c:	0009883a 	mov	r4,zero
    3020:	014ff834 	movhi	r5,16352
    3024:	db001615 	stw	r12,88(sp)
    3028:	15c00044 	addi	r23,r2,1
    302c:	000af280 	call	af28 <__divdf3>
    3030:	800d883a 	mov	r6,r16
    3034:	880f883a 	mov	r7,r17
    3038:	1009883a 	mov	r4,r2
    303c:	180b883a 	mov	r5,r3
    3040:	000c1800 	call	c180 <__subdf3>
    3044:	d9401017 	ldw	r5,64(sp)
    3048:	d9000f17 	ldw	r4,60(sp)
    304c:	102b883a 	mov	r21,r2
    3050:	d8c01215 	stw	r3,72(sp)
    3054:	000ca7c0 	call	ca7c <__fixdfsi>
    3058:	1009883a 	mov	r4,r2
    305c:	1029883a 	mov	r20,r2
    3060:	000cafc0 	call	cafc <__floatsidf>
    3064:	d9000f17 	ldw	r4,60(sp)
    3068:	d9401017 	ldw	r5,64(sp)
    306c:	100d883a 	mov	r6,r2
    3070:	180f883a 	mov	r7,r3
    3074:	000c1800 	call	c180 <__subdf3>
    3078:	1823883a 	mov	r17,r3
    307c:	d8c00717 	ldw	r3,28(sp)
    3080:	d9401217 	ldw	r5,72(sp)
    3084:	a2000c04 	addi	r8,r20,48
    3088:	1021883a 	mov	r16,r2
    308c:	1a000005 	stb	r8,0(r3)
    3090:	800d883a 	mov	r6,r16
    3094:	880f883a 	mov	r7,r17
    3098:	a809883a 	mov	r4,r21
    309c:	4029883a 	mov	r20,r8
    30a0:	000b8980 	call	b898 <__gedf2>
    30a4:	00841d16 	blt	zero,r2,411c <_dtoa_r+0x15f4>
    30a8:	800d883a 	mov	r6,r16
    30ac:	880f883a 	mov	r7,r17
    30b0:	0009883a 	mov	r4,zero
    30b4:	014ffc34 	movhi	r5,16368
    30b8:	000c1800 	call	c180 <__subdf3>
    30bc:	d9401217 	ldw	r5,72(sp)
    30c0:	100d883a 	mov	r6,r2
    30c4:	180f883a 	mov	r7,r3
    30c8:	a809883a 	mov	r4,r21
    30cc:	000b8980 	call	b898 <__gedf2>
    30d0:	db001617 	ldw	r12,88(sp)
    30d4:	00840e16 	blt	zero,r2,4110 <_dtoa_r+0x15e8>
    30d8:	00800044 	movi	r2,1
    30dc:	13006b0e 	bge	r2,r12,328c <_dtoa_r+0x764>
    30e0:	d9000717 	ldw	r4,28(sp)
    30e4:	dd800f15 	stw	r22,60(sp)
    30e8:	dcc01015 	stw	r19,64(sp)
    30ec:	2319883a 	add	r12,r4,r12
    30f0:	dcc01217 	ldw	r19,72(sp)
    30f4:	602d883a 	mov	r22,r12
    30f8:	dc801215 	stw	r18,72(sp)
    30fc:	b825883a 	mov	r18,r23
    3100:	00000906 	br	3128 <_dtoa_r+0x600>
    3104:	000c1800 	call	c180 <__subdf3>
    3108:	a80d883a 	mov	r6,r21
    310c:	980f883a 	mov	r7,r19
    3110:	1009883a 	mov	r4,r2
    3114:	180b883a 	mov	r5,r3
    3118:	000b9740 	call	b974 <__ledf2>
    311c:	1003e816 	blt	r2,zero,40c0 <_dtoa_r+0x1598>
    3120:	b825883a 	mov	r18,r23
    3124:	bd83e926 	beq	r23,r22,40cc <_dtoa_r+0x15a4>
    3128:	a809883a 	mov	r4,r21
    312c:	980b883a 	mov	r5,r19
    3130:	000d883a 	mov	r6,zero
    3134:	01d00934 	movhi	r7,16420
    3138:	000ba680 	call	ba68 <__muldf3>
    313c:	000d883a 	mov	r6,zero
    3140:	01d00934 	movhi	r7,16420
    3144:	8009883a 	mov	r4,r16
    3148:	880b883a 	mov	r5,r17
    314c:	102b883a 	mov	r21,r2
    3150:	1827883a 	mov	r19,r3
    3154:	000ba680 	call	ba68 <__muldf3>
    3158:	180b883a 	mov	r5,r3
    315c:	1009883a 	mov	r4,r2
    3160:	1821883a 	mov	r16,r3
    3164:	1023883a 	mov	r17,r2
    3168:	000ca7c0 	call	ca7c <__fixdfsi>
    316c:	1009883a 	mov	r4,r2
    3170:	1029883a 	mov	r20,r2
    3174:	000cafc0 	call	cafc <__floatsidf>
    3178:	8809883a 	mov	r4,r17
    317c:	800b883a 	mov	r5,r16
    3180:	100d883a 	mov	r6,r2
    3184:	180f883a 	mov	r7,r3
    3188:	000c1800 	call	c180 <__subdf3>
    318c:	a5000c04 	addi	r20,r20,48
    3190:	a80d883a 	mov	r6,r21
    3194:	980f883a 	mov	r7,r19
    3198:	1009883a 	mov	r4,r2
    319c:	180b883a 	mov	r5,r3
    31a0:	95000005 	stb	r20,0(r18)
    31a4:	1021883a 	mov	r16,r2
    31a8:	1823883a 	mov	r17,r3
    31ac:	000b9740 	call	b974 <__ledf2>
    31b0:	bdc00044 	addi	r23,r23,1
    31b4:	800d883a 	mov	r6,r16
    31b8:	880f883a 	mov	r7,r17
    31bc:	0009883a 	mov	r4,zero
    31c0:	014ffc34 	movhi	r5,16368
    31c4:	103fcf0e 	bge	r2,zero,3104 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003104>
    31c8:	d8c01317 	ldw	r3,76(sp)
    31cc:	d8c00515 	stw	r3,20(sp)
    31d0:	d9400917 	ldw	r5,36(sp)
    31d4:	e009883a 	mov	r4,fp
    31d8:	0005c540 	call	5c54 <_Bfree>
    31dc:	d9000517 	ldw	r4,20(sp)
    31e0:	d9802317 	ldw	r6,140(sp)
    31e4:	d9c02517 	ldw	r7,148(sp)
    31e8:	b8000005 	stb	zero,0(r23)
    31ec:	20800044 	addi	r2,r4,1
    31f0:	30800015 	stw	r2,0(r6)
    31f4:	3802aa26 	beq	r7,zero,3ca0 <_dtoa_r+0x1178>
    31f8:	3dc00015 	stw	r23,0(r7)
    31fc:	d8800717 	ldw	r2,28(sp)
    3200:	003e7906 	br	2be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002be8>
    3204:	00800434 	movhi	r2,16
    3208:	10bfffc4 	addi	r2,r2,-1
    320c:	88a2703a 	and	r17,r17,r2
    3210:	883e851e 	bne	r17,zero,2c28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002c28>
    3214:	00800074 	movhi	r2,1
    3218:	10814504 	addi	r2,r2,1300
    321c:	003e8406 	br	2c30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002c30>
    3220:	10c00204 	addi	r3,r2,8
    3224:	003e8706 	br	2c44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002c44>
    3228:	01400434 	movhi	r5,16
    322c:	297fffc4 	addi	r5,r5,-1
    3230:	994a703a 	and	r5,r19,r5
    3234:	9009883a 	mov	r4,r18
    3238:	843f0044 	addi	r16,r16,-1023
    323c:	294ffc34 	orhi	r5,r5,16368
    3240:	dd800217 	ldw	r22,8(sp)
    3244:	d8001115 	stw	zero,68(sp)
    3248:	003ea506 	br	2ce0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002ce0>
    324c:	00800074 	movhi	r2,1
    3250:	10813c04 	addi	r2,r2,1264
    3254:	003e6406 	br	2be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002be8>
    3258:	e0001115 	stw	zero,68(fp)
    325c:	000b883a 	mov	r5,zero
    3260:	e009883a 	mov	r4,fp
    3264:	0005bac0 	call	5bac <_Balloc>
    3268:	01bfffc4 	movi	r6,-1
    326c:	01c00044 	movi	r7,1
    3270:	d8800715 	stw	r2,28(sp)
    3274:	d9800c15 	stw	r6,48(sp)
    3278:	e0801015 	stw	r2,64(fp)
    327c:	d8000315 	stw	zero,12(sp)
    3280:	d9c00b15 	stw	r7,44(sp)
    3284:	d9800615 	stw	r6,24(sp)
    3288:	d8002215 	stw	zero,136(sp)
    328c:	d8800117 	ldw	r2,4(sp)
    3290:	10008916 	blt	r2,zero,34b8 <_dtoa_r+0x990>
    3294:	d9000517 	ldw	r4,20(sp)
    3298:	00c00384 	movi	r3,14
    329c:	19008616 	blt	r3,r4,34b8 <_dtoa_r+0x990>
    32a0:	200490fa 	slli	r2,r4,3
    32a4:	00c00074 	movhi	r3,1
    32a8:	d9802217 	ldw	r6,136(sp)
    32ac:	18c16404 	addi	r3,r3,1424
    32b0:	1885883a 	add	r2,r3,r2
    32b4:	14000017 	ldw	r16,0(r2)
    32b8:	14400117 	ldw	r17,4(r2)
    32bc:	30016316 	blt	r6,zero,384c <_dtoa_r+0xd24>
    32c0:	800d883a 	mov	r6,r16
    32c4:	880f883a 	mov	r7,r17
    32c8:	9009883a 	mov	r4,r18
    32cc:	980b883a 	mov	r5,r19
    32d0:	000af280 	call	af28 <__divdf3>
    32d4:	180b883a 	mov	r5,r3
    32d8:	1009883a 	mov	r4,r2
    32dc:	000ca7c0 	call	ca7c <__fixdfsi>
    32e0:	1009883a 	mov	r4,r2
    32e4:	102b883a 	mov	r21,r2
    32e8:	000cafc0 	call	cafc <__floatsidf>
    32ec:	800d883a 	mov	r6,r16
    32f0:	880f883a 	mov	r7,r17
    32f4:	1009883a 	mov	r4,r2
    32f8:	180b883a 	mov	r5,r3
    32fc:	000ba680 	call	ba68 <__muldf3>
    3300:	100d883a 	mov	r6,r2
    3304:	180f883a 	mov	r7,r3
    3308:	9009883a 	mov	r4,r18
    330c:	980b883a 	mov	r5,r19
    3310:	000c1800 	call	c180 <__subdf3>
    3314:	d9c00717 	ldw	r7,28(sp)
    3318:	1009883a 	mov	r4,r2
    331c:	a8800c04 	addi	r2,r21,48
    3320:	38800005 	stb	r2,0(r7)
    3324:	3dc00044 	addi	r23,r7,1
    3328:	d9c00617 	ldw	r7,24(sp)
    332c:	01800044 	movi	r6,1
    3330:	180b883a 	mov	r5,r3
    3334:	2005883a 	mov	r2,r4
    3338:	39803826 	beq	r7,r6,341c <_dtoa_r+0x8f4>
    333c:	000d883a 	mov	r6,zero
    3340:	01d00934 	movhi	r7,16420
    3344:	000ba680 	call	ba68 <__muldf3>
    3348:	000d883a 	mov	r6,zero
    334c:	000f883a 	mov	r7,zero
    3350:	1009883a 	mov	r4,r2
    3354:	180b883a 	mov	r5,r3
    3358:	1025883a 	mov	r18,r2
    335c:	1827883a 	mov	r19,r3
    3360:	000b8100 	call	b810 <__eqdf2>
    3364:	103f9a26 	beq	r2,zero,31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    3368:	d9c00617 	ldw	r7,24(sp)
    336c:	d8c00717 	ldw	r3,28(sp)
    3370:	b829883a 	mov	r20,r23
    3374:	38bfffc4 	addi	r2,r7,-1
    3378:	18ad883a 	add	r22,r3,r2
    337c:	00000a06 	br	33a8 <_dtoa_r+0x880>
    3380:	000ba680 	call	ba68 <__muldf3>
    3384:	000d883a 	mov	r6,zero
    3388:	000f883a 	mov	r7,zero
    338c:	1009883a 	mov	r4,r2
    3390:	180b883a 	mov	r5,r3
    3394:	1025883a 	mov	r18,r2
    3398:	1827883a 	mov	r19,r3
    339c:	b829883a 	mov	r20,r23
    33a0:	000b8100 	call	b810 <__eqdf2>
    33a4:	103f8a26 	beq	r2,zero,31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    33a8:	800d883a 	mov	r6,r16
    33ac:	880f883a 	mov	r7,r17
    33b0:	9009883a 	mov	r4,r18
    33b4:	980b883a 	mov	r5,r19
    33b8:	000af280 	call	af28 <__divdf3>
    33bc:	180b883a 	mov	r5,r3
    33c0:	1009883a 	mov	r4,r2
    33c4:	000ca7c0 	call	ca7c <__fixdfsi>
    33c8:	1009883a 	mov	r4,r2
    33cc:	102b883a 	mov	r21,r2
    33d0:	000cafc0 	call	cafc <__floatsidf>
    33d4:	800d883a 	mov	r6,r16
    33d8:	880f883a 	mov	r7,r17
    33dc:	1009883a 	mov	r4,r2
    33e0:	180b883a 	mov	r5,r3
    33e4:	000ba680 	call	ba68 <__muldf3>
    33e8:	100d883a 	mov	r6,r2
    33ec:	180f883a 	mov	r7,r3
    33f0:	9009883a 	mov	r4,r18
    33f4:	980b883a 	mov	r5,r19
    33f8:	000c1800 	call	c180 <__subdf3>
    33fc:	aa000c04 	addi	r8,r21,48
    3400:	a2000005 	stb	r8,0(r20)
    3404:	000d883a 	mov	r6,zero
    3408:	01d00934 	movhi	r7,16420
    340c:	1009883a 	mov	r4,r2
    3410:	180b883a 	mov	r5,r3
    3414:	a5c00044 	addi	r23,r20,1
    3418:	b53fd91e 	bne	r22,r20,3380 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003380>
    341c:	100d883a 	mov	r6,r2
    3420:	180f883a 	mov	r7,r3
    3424:	1009883a 	mov	r4,r2
    3428:	180b883a 	mov	r5,r3
    342c:	000a67c0 	call	a67c <__adddf3>
    3430:	100d883a 	mov	r6,r2
    3434:	180f883a 	mov	r7,r3
    3438:	8009883a 	mov	r4,r16
    343c:	880b883a 	mov	r5,r17
    3440:	1027883a 	mov	r19,r2
    3444:	1825883a 	mov	r18,r3
    3448:	000b9740 	call	b974 <__ledf2>
    344c:	10000816 	blt	r2,zero,3470 <_dtoa_r+0x948>
    3450:	980d883a 	mov	r6,r19
    3454:	900f883a 	mov	r7,r18
    3458:	8009883a 	mov	r4,r16
    345c:	880b883a 	mov	r5,r17
    3460:	000b8100 	call	b810 <__eqdf2>
    3464:	103f5a1e 	bne	r2,zero,31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    3468:	ad40004c 	andi	r21,r21,1
    346c:	a83f5826 	beq	r21,zero,31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    3470:	bd3fffc3 	ldbu	r20,-1(r23)
    3474:	b8bfffc4 	addi	r2,r23,-1
    3478:	1007883a 	mov	r3,r2
    347c:	01400e44 	movi	r5,57
    3480:	d9800717 	ldw	r6,28(sp)
    3484:	00000506 	br	349c <_dtoa_r+0x974>
    3488:	18ffffc4 	addi	r3,r3,-1
    348c:	11824726 	beq	r2,r6,3dac <_dtoa_r+0x1284>
    3490:	1d000003 	ldbu	r20,0(r3)
    3494:	102f883a 	mov	r23,r2
    3498:	10bfffc4 	addi	r2,r2,-1
    349c:	a1003fcc 	andi	r4,r20,255
    34a0:	2100201c 	xori	r4,r4,128
    34a4:	213fe004 	addi	r4,r4,-128
    34a8:	217ff726 	beq	r4,r5,3488 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003488>
    34ac:	a2000044 	addi	r8,r20,1
    34b0:	12000005 	stb	r8,0(r2)
    34b4:	003f4606 	br	31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    34b8:	d9000b17 	ldw	r4,44(sp)
    34bc:	2000c826 	beq	r4,zero,37e0 <_dtoa_r+0xcb8>
    34c0:	d9800317 	ldw	r6,12(sp)
    34c4:	00c00044 	movi	r3,1
    34c8:	1980f90e 	bge	r3,r6,38b0 <_dtoa_r+0xd88>
    34cc:	d8800617 	ldw	r2,24(sp)
    34d0:	d8c00a17 	ldw	r3,40(sp)
    34d4:	157fffc4 	addi	r21,r2,-1
    34d8:	1d41f316 	blt	r3,r21,3ca8 <_dtoa_r+0x1180>
    34dc:	1d6bc83a 	sub	r21,r3,r21
    34e0:	d9c00617 	ldw	r7,24(sp)
    34e4:	3802aa16 	blt	r7,zero,3f90 <_dtoa_r+0x1468>
    34e8:	dd000817 	ldw	r20,32(sp)
    34ec:	d8800617 	ldw	r2,24(sp)
    34f0:	d8c00817 	ldw	r3,32(sp)
    34f4:	01400044 	movi	r5,1
    34f8:	e009883a 	mov	r4,fp
    34fc:	1887883a 	add	r3,r3,r2
    3500:	d8c00815 	stw	r3,32(sp)
    3504:	b0ad883a 	add	r22,r22,r2
    3508:	0005fb80 	call	5fb8 <__i2b>
    350c:	1023883a 	mov	r17,r2
    3510:	a0000826 	beq	r20,zero,3534 <_dtoa_r+0xa0c>
    3514:	0580070e 	bge	zero,r22,3534 <_dtoa_r+0xa0c>
    3518:	a005883a 	mov	r2,r20
    351c:	b500b916 	blt	r22,r20,3804 <_dtoa_r+0xcdc>
    3520:	d9000817 	ldw	r4,32(sp)
    3524:	a0a9c83a 	sub	r20,r20,r2
    3528:	b0adc83a 	sub	r22,r22,r2
    352c:	2089c83a 	sub	r4,r4,r2
    3530:	d9000815 	stw	r4,32(sp)
    3534:	d9800a17 	ldw	r6,40(sp)
    3538:	0181810e 	bge	zero,r6,3b40 <_dtoa_r+0x1018>
    353c:	d9c00b17 	ldw	r7,44(sp)
    3540:	3800b326 	beq	r7,zero,3810 <_dtoa_r+0xce8>
    3544:	a800b226 	beq	r21,zero,3810 <_dtoa_r+0xce8>
    3548:	880b883a 	mov	r5,r17
    354c:	a80d883a 	mov	r6,r21
    3550:	e009883a 	mov	r4,fp
    3554:	00061ec0 	call	61ec <__pow5mult>
    3558:	d9800917 	ldw	r6,36(sp)
    355c:	100b883a 	mov	r5,r2
    3560:	e009883a 	mov	r4,fp
    3564:	1023883a 	mov	r17,r2
    3568:	0005ff40 	call	5ff4 <__multiply>
    356c:	1021883a 	mov	r16,r2
    3570:	d8800a17 	ldw	r2,40(sp)
    3574:	d9400917 	ldw	r5,36(sp)
    3578:	e009883a 	mov	r4,fp
    357c:	1545c83a 	sub	r2,r2,r21
    3580:	d8800a15 	stw	r2,40(sp)
    3584:	0005c540 	call	5c54 <_Bfree>
    3588:	d8c00a17 	ldw	r3,40(sp)
    358c:	18009f1e 	bne	r3,zero,380c <_dtoa_r+0xce4>
    3590:	05c00044 	movi	r23,1
    3594:	e009883a 	mov	r4,fp
    3598:	b80b883a 	mov	r5,r23
    359c:	0005fb80 	call	5fb8 <__i2b>
    35a0:	d9000d17 	ldw	r4,52(sp)
    35a4:	102b883a 	mov	r21,r2
    35a8:	2000ce26 	beq	r4,zero,38e4 <_dtoa_r+0xdbc>
    35ac:	200d883a 	mov	r6,r4
    35b0:	100b883a 	mov	r5,r2
    35b4:	e009883a 	mov	r4,fp
    35b8:	00061ec0 	call	61ec <__pow5mult>
    35bc:	d9800317 	ldw	r6,12(sp)
    35c0:	102b883a 	mov	r21,r2
    35c4:	b981810e 	bge	r23,r6,3bcc <_dtoa_r+0x10a4>
    35c8:	0027883a 	mov	r19,zero
    35cc:	a8800417 	ldw	r2,16(r21)
    35d0:	05c00804 	movi	r23,32
    35d4:	10800104 	addi	r2,r2,4
    35d8:	1085883a 	add	r2,r2,r2
    35dc:	1085883a 	add	r2,r2,r2
    35e0:	a885883a 	add	r2,r21,r2
    35e4:	11000017 	ldw	r4,0(r2)
    35e8:	0005ea00 	call	5ea0 <__hi0bits>
    35ec:	b885c83a 	sub	r2,r23,r2
    35f0:	1585883a 	add	r2,r2,r22
    35f4:	108007cc 	andi	r2,r2,31
    35f8:	1000b326 	beq	r2,zero,38c8 <_dtoa_r+0xda0>
    35fc:	00c00804 	movi	r3,32
    3600:	1887c83a 	sub	r3,r3,r2
    3604:	01000104 	movi	r4,4
    3608:	20c2cd0e 	bge	r4,r3,4140 <_dtoa_r+0x1618>
    360c:	00c00704 	movi	r3,28
    3610:	1885c83a 	sub	r2,r3,r2
    3614:	d8c00817 	ldw	r3,32(sp)
    3618:	a0a9883a 	add	r20,r20,r2
    361c:	b0ad883a 	add	r22,r22,r2
    3620:	1887883a 	add	r3,r3,r2
    3624:	d8c00815 	stw	r3,32(sp)
    3628:	d9800817 	ldw	r6,32(sp)
    362c:	0180040e 	bge	zero,r6,3640 <_dtoa_r+0xb18>
    3630:	800b883a 	mov	r5,r16
    3634:	e009883a 	mov	r4,fp
    3638:	000632c0 	call	632c <__lshift>
    363c:	1021883a 	mov	r16,r2
    3640:	0580050e 	bge	zero,r22,3658 <_dtoa_r+0xb30>
    3644:	a80b883a 	mov	r5,r21
    3648:	b00d883a 	mov	r6,r22
    364c:	e009883a 	mov	r4,fp
    3650:	000632c0 	call	632c <__lshift>
    3654:	102b883a 	mov	r21,r2
    3658:	d9c00e17 	ldw	r7,56(sp)
    365c:	3801211e 	bne	r7,zero,3ae4 <_dtoa_r+0xfbc>
    3660:	d9800617 	ldw	r6,24(sp)
    3664:	0181380e 	bge	zero,r6,3b48 <_dtoa_r+0x1020>
    3668:	d8c00b17 	ldw	r3,44(sp)
    366c:	1800ab1e 	bne	r3,zero,391c <_dtoa_r+0xdf4>
    3670:	dc800717 	ldw	r18,28(sp)
    3674:	dcc00617 	ldw	r19,24(sp)
    3678:	9029883a 	mov	r20,r18
    367c:	00000206 	br	3688 <_dtoa_r+0xb60>
    3680:	0005c7c0 	call	5c7c <__multadd>
    3684:	1021883a 	mov	r16,r2
    3688:	a80b883a 	mov	r5,r21
    368c:	8009883a 	mov	r4,r16
    3690:	00029280 	call	2928 <quorem>
    3694:	10800c04 	addi	r2,r2,48
    3698:	90800005 	stb	r2,0(r18)
    369c:	94800044 	addi	r18,r18,1
    36a0:	9507c83a 	sub	r3,r18,r20
    36a4:	000f883a 	mov	r7,zero
    36a8:	01800284 	movi	r6,10
    36ac:	800b883a 	mov	r5,r16
    36b0:	e009883a 	mov	r4,fp
    36b4:	1cfff216 	blt	r3,r19,3680 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003680>
    36b8:	1011883a 	mov	r8,r2
    36bc:	d8800617 	ldw	r2,24(sp)
    36c0:	0082370e 	bge	zero,r2,3fa0 <_dtoa_r+0x1478>
    36c4:	d9000717 	ldw	r4,28(sp)
    36c8:	0025883a 	mov	r18,zero
    36cc:	20af883a 	add	r23,r4,r2
    36d0:	01800044 	movi	r6,1
    36d4:	800b883a 	mov	r5,r16
    36d8:	e009883a 	mov	r4,fp
    36dc:	da001715 	stw	r8,92(sp)
    36e0:	000632c0 	call	632c <__lshift>
    36e4:	a80b883a 	mov	r5,r21
    36e8:	1009883a 	mov	r4,r2
    36ec:	d8800915 	stw	r2,36(sp)
    36f0:	00064740 	call	6474 <__mcmp>
    36f4:	da001717 	ldw	r8,92(sp)
    36f8:	0081800e 	bge	zero,r2,3cfc <_dtoa_r+0x11d4>
    36fc:	b93fffc3 	ldbu	r4,-1(r23)
    3700:	b8bfffc4 	addi	r2,r23,-1
    3704:	1007883a 	mov	r3,r2
    3708:	01800e44 	movi	r6,57
    370c:	d9c00717 	ldw	r7,28(sp)
    3710:	00000506 	br	3728 <_dtoa_r+0xc00>
    3714:	18ffffc4 	addi	r3,r3,-1
    3718:	11c12326 	beq	r2,r7,3ba8 <_dtoa_r+0x1080>
    371c:	19000003 	ldbu	r4,0(r3)
    3720:	102f883a 	mov	r23,r2
    3724:	10bfffc4 	addi	r2,r2,-1
    3728:	21403fcc 	andi	r5,r4,255
    372c:	2940201c 	xori	r5,r5,128
    3730:	297fe004 	addi	r5,r5,-128
    3734:	29bff726 	beq	r5,r6,3714 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003714>
    3738:	21000044 	addi	r4,r4,1
    373c:	11000005 	stb	r4,0(r2)
    3740:	a80b883a 	mov	r5,r21
    3744:	e009883a 	mov	r4,fp
    3748:	0005c540 	call	5c54 <_Bfree>
    374c:	883ea026 	beq	r17,zero,31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    3750:	90000426 	beq	r18,zero,3764 <_dtoa_r+0xc3c>
    3754:	94400326 	beq	r18,r17,3764 <_dtoa_r+0xc3c>
    3758:	900b883a 	mov	r5,r18
    375c:	e009883a 	mov	r4,fp
    3760:	0005c540 	call	5c54 <_Bfree>
    3764:	880b883a 	mov	r5,r17
    3768:	e009883a 	mov	r4,fp
    376c:	0005c540 	call	5c54 <_Bfree>
    3770:	003e9706 	br	31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    3774:	01800044 	movi	r6,1
    3778:	d9800e15 	stw	r6,56(sp)
    377c:	003d9606 	br	2dd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002dd8>
    3780:	d8800817 	ldw	r2,32(sp)
    3784:	d8c00517 	ldw	r3,20(sp)
    3788:	d8000d15 	stw	zero,52(sp)
    378c:	10c5c83a 	sub	r2,r2,r3
    3790:	00c9c83a 	sub	r4,zero,r3
    3794:	d8800815 	stw	r2,32(sp)
    3798:	d9000a15 	stw	r4,40(sp)
    379c:	003d9706 	br	2dfc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002dfc>
    37a0:	05adc83a 	sub	r22,zero,r22
    37a4:	dd800815 	stw	r22,32(sp)
    37a8:	002d883a 	mov	r22,zero
    37ac:	003d8e06 	br	2de8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002de8>
    37b0:	d9000517 	ldw	r4,20(sp)
    37b4:	000cafc0 	call	cafc <__floatsidf>
    37b8:	100d883a 	mov	r6,r2
    37bc:	180f883a 	mov	r7,r3
    37c0:	a009883a 	mov	r4,r20
    37c4:	880b883a 	mov	r5,r17
    37c8:	000b8100 	call	b810 <__eqdf2>
    37cc:	103d7126 	beq	r2,zero,2d94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002d94>
    37d0:	d9c00517 	ldw	r7,20(sp)
    37d4:	39ffffc4 	addi	r7,r7,-1
    37d8:	d9c00515 	stw	r7,20(sp)
    37dc:	003d6d06 	br	2d94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002d94>
    37e0:	dd400a17 	ldw	r21,40(sp)
    37e4:	dd000817 	ldw	r20,32(sp)
    37e8:	0023883a 	mov	r17,zero
    37ec:	003f4806 	br	3510 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003510>
    37f0:	10e3c83a 	sub	r17,r2,r3
    37f4:	9448983a 	sll	r4,r18,r17
    37f8:	003d3206 	br	2cc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002cc4>
    37fc:	d8000e15 	stw	zero,56(sp)
    3800:	003d7506 	br	2dd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002dd8>
    3804:	b005883a 	mov	r2,r22
    3808:	003f4506 	br	3520 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003520>
    380c:	dc000915 	stw	r16,36(sp)
    3810:	d9800a17 	ldw	r6,40(sp)
    3814:	d9400917 	ldw	r5,36(sp)
    3818:	e009883a 	mov	r4,fp
    381c:	00061ec0 	call	61ec <__pow5mult>
    3820:	1021883a 	mov	r16,r2
    3824:	003f5a06 	br	3590 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003590>
    3828:	01c00044 	movi	r7,1
    382c:	d9c00b15 	stw	r7,44(sp)
    3830:	d8802217 	ldw	r2,136(sp)
    3834:	0081280e 	bge	zero,r2,3cd8 <_dtoa_r+0x11b0>
    3838:	100d883a 	mov	r6,r2
    383c:	1021883a 	mov	r16,r2
    3840:	d8800c15 	stw	r2,48(sp)
    3844:	d8800615 	stw	r2,24(sp)
    3848:	003d8806 	br	2e6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e6c>
    384c:	d8800617 	ldw	r2,24(sp)
    3850:	00be9b16 	blt	zero,r2,32c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00032c0>
    3854:	10010f1e 	bne	r2,zero,3c94 <_dtoa_r+0x116c>
    3858:	880b883a 	mov	r5,r17
    385c:	000d883a 	mov	r6,zero
    3860:	01d00534 	movhi	r7,16404
    3864:	8009883a 	mov	r4,r16
    3868:	000ba680 	call	ba68 <__muldf3>
    386c:	900d883a 	mov	r6,r18
    3870:	980f883a 	mov	r7,r19
    3874:	1009883a 	mov	r4,r2
    3878:	180b883a 	mov	r5,r3
    387c:	000b8980 	call	b898 <__gedf2>
    3880:	002b883a 	mov	r21,zero
    3884:	0023883a 	mov	r17,zero
    3888:	1000bf16 	blt	r2,zero,3b88 <_dtoa_r+0x1060>
    388c:	d9802217 	ldw	r6,136(sp)
    3890:	ddc00717 	ldw	r23,28(sp)
    3894:	018c303a 	nor	r6,zero,r6
    3898:	d9800515 	stw	r6,20(sp)
    389c:	a80b883a 	mov	r5,r21
    38a0:	e009883a 	mov	r4,fp
    38a4:	0005c540 	call	5c54 <_Bfree>
    38a8:	883e4926 	beq	r17,zero,31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    38ac:	003fad06 	br	3764 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003764>
    38b0:	d9c01117 	ldw	r7,68(sp)
    38b4:	3801bc26 	beq	r7,zero,3fa8 <_dtoa_r+0x1480>
    38b8:	10810cc4 	addi	r2,r2,1075
    38bc:	dd400a17 	ldw	r21,40(sp)
    38c0:	dd000817 	ldw	r20,32(sp)
    38c4:	003f0a06 	br	34f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00034f0>
    38c8:	00800704 	movi	r2,28
    38cc:	d9000817 	ldw	r4,32(sp)
    38d0:	a0a9883a 	add	r20,r20,r2
    38d4:	b0ad883a 	add	r22,r22,r2
    38d8:	2089883a 	add	r4,r4,r2
    38dc:	d9000815 	stw	r4,32(sp)
    38e0:	003f5106 	br	3628 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003628>
    38e4:	d8c00317 	ldw	r3,12(sp)
    38e8:	b8c1fc0e 	bge	r23,r3,40dc <_dtoa_r+0x15b4>
    38ec:	0027883a 	mov	r19,zero
    38f0:	b805883a 	mov	r2,r23
    38f4:	003f3e06 	br	35f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00035f0>
    38f8:	880b883a 	mov	r5,r17
    38fc:	e009883a 	mov	r4,fp
    3900:	000f883a 	mov	r7,zero
    3904:	01800284 	movi	r6,10
    3908:	0005c7c0 	call	5c7c <__multadd>
    390c:	d9000c17 	ldw	r4,48(sp)
    3910:	1023883a 	mov	r17,r2
    3914:	0102040e 	bge	zero,r4,4128 <_dtoa_r+0x1600>
    3918:	d9000615 	stw	r4,24(sp)
    391c:	0500050e 	bge	zero,r20,3934 <_dtoa_r+0xe0c>
    3920:	880b883a 	mov	r5,r17
    3924:	a00d883a 	mov	r6,r20
    3928:	e009883a 	mov	r4,fp
    392c:	000632c0 	call	632c <__lshift>
    3930:	1023883a 	mov	r17,r2
    3934:	9801241e 	bne	r19,zero,3dc8 <_dtoa_r+0x12a0>
    3938:	8829883a 	mov	r20,r17
    393c:	d9000617 	ldw	r4,24(sp)
    3940:	dcc00717 	ldw	r19,28(sp)
    3944:	9480004c 	andi	r18,r18,1
    3948:	20bfffc4 	addi	r2,r4,-1
    394c:	9885883a 	add	r2,r19,r2
    3950:	d8800415 	stw	r2,16(sp)
    3954:	dc800615 	stw	r18,24(sp)
    3958:	a80b883a 	mov	r5,r21
    395c:	8009883a 	mov	r4,r16
    3960:	00029280 	call	2928 <quorem>
    3964:	880b883a 	mov	r5,r17
    3968:	8009883a 	mov	r4,r16
    396c:	102f883a 	mov	r23,r2
    3970:	00064740 	call	6474 <__mcmp>
    3974:	a80b883a 	mov	r5,r21
    3978:	a00d883a 	mov	r6,r20
    397c:	e009883a 	mov	r4,fp
    3980:	102d883a 	mov	r22,r2
    3984:	00064d40 	call	64d4 <__mdiff>
    3988:	1007883a 	mov	r3,r2
    398c:	10800317 	ldw	r2,12(r2)
    3990:	bc800c04 	addi	r18,r23,48
    3994:	180b883a 	mov	r5,r3
    3998:	10004e1e 	bne	r2,zero,3ad4 <_dtoa_r+0xfac>
    399c:	8009883a 	mov	r4,r16
    39a0:	d8c01615 	stw	r3,88(sp)
    39a4:	00064740 	call	6474 <__mcmp>
    39a8:	d8c01617 	ldw	r3,88(sp)
    39ac:	e009883a 	mov	r4,fp
    39b0:	d8801615 	stw	r2,88(sp)
    39b4:	180b883a 	mov	r5,r3
    39b8:	0005c540 	call	5c54 <_Bfree>
    39bc:	d8801617 	ldw	r2,88(sp)
    39c0:	1000041e 	bne	r2,zero,39d4 <_dtoa_r+0xeac>
    39c4:	d9800317 	ldw	r6,12(sp)
    39c8:	3000021e 	bne	r6,zero,39d4 <_dtoa_r+0xeac>
    39cc:	d8c00617 	ldw	r3,24(sp)
    39d0:	18003726 	beq	r3,zero,3ab0 <_dtoa_r+0xf88>
    39d4:	b0002016 	blt	r22,zero,3a58 <_dtoa_r+0xf30>
    39d8:	b000041e 	bne	r22,zero,39ec <_dtoa_r+0xec4>
    39dc:	d9000317 	ldw	r4,12(sp)
    39e0:	2000021e 	bne	r4,zero,39ec <_dtoa_r+0xec4>
    39e4:	d8c00617 	ldw	r3,24(sp)
    39e8:	18001b26 	beq	r3,zero,3a58 <_dtoa_r+0xf30>
    39ec:	00810716 	blt	zero,r2,3e0c <_dtoa_r+0x12e4>
    39f0:	d8c00417 	ldw	r3,16(sp)
    39f4:	9d800044 	addi	r22,r19,1
    39f8:	9c800005 	stb	r18,0(r19)
    39fc:	b02f883a 	mov	r23,r22
    3a00:	98c10626 	beq	r19,r3,3e1c <_dtoa_r+0x12f4>
    3a04:	800b883a 	mov	r5,r16
    3a08:	000f883a 	mov	r7,zero
    3a0c:	01800284 	movi	r6,10
    3a10:	e009883a 	mov	r4,fp
    3a14:	0005c7c0 	call	5c7c <__multadd>
    3a18:	1021883a 	mov	r16,r2
    3a1c:	000f883a 	mov	r7,zero
    3a20:	01800284 	movi	r6,10
    3a24:	880b883a 	mov	r5,r17
    3a28:	e009883a 	mov	r4,fp
    3a2c:	8d002526 	beq	r17,r20,3ac4 <_dtoa_r+0xf9c>
    3a30:	0005c7c0 	call	5c7c <__multadd>
    3a34:	a00b883a 	mov	r5,r20
    3a38:	000f883a 	mov	r7,zero
    3a3c:	01800284 	movi	r6,10
    3a40:	e009883a 	mov	r4,fp
    3a44:	1023883a 	mov	r17,r2
    3a48:	0005c7c0 	call	5c7c <__multadd>
    3a4c:	1029883a 	mov	r20,r2
    3a50:	b027883a 	mov	r19,r22
    3a54:	003fc006 	br	3958 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003958>
    3a58:	9011883a 	mov	r8,r18
    3a5c:	00800e0e 	bge	zero,r2,3a98 <_dtoa_r+0xf70>
    3a60:	800b883a 	mov	r5,r16
    3a64:	01800044 	movi	r6,1
    3a68:	e009883a 	mov	r4,fp
    3a6c:	da001715 	stw	r8,92(sp)
    3a70:	000632c0 	call	632c <__lshift>
    3a74:	a80b883a 	mov	r5,r21
    3a78:	1009883a 	mov	r4,r2
    3a7c:	1021883a 	mov	r16,r2
    3a80:	00064740 	call	6474 <__mcmp>
    3a84:	da001717 	ldw	r8,92(sp)
    3a88:	0081960e 	bge	zero,r2,40e4 <_dtoa_r+0x15bc>
    3a8c:	00800e44 	movi	r2,57
    3a90:	40817026 	beq	r8,r2,4054 <_dtoa_r+0x152c>
    3a94:	ba000c44 	addi	r8,r23,49
    3a98:	8825883a 	mov	r18,r17
    3a9c:	9dc00044 	addi	r23,r19,1
    3aa0:	9a000005 	stb	r8,0(r19)
    3aa4:	a023883a 	mov	r17,r20
    3aa8:	dc000915 	stw	r16,36(sp)
    3aac:	003f2406 	br	3740 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003740>
    3ab0:	00800e44 	movi	r2,57
    3ab4:	9011883a 	mov	r8,r18
    3ab8:	90816626 	beq	r18,r2,4054 <_dtoa_r+0x152c>
    3abc:	05bff516 	blt	zero,r22,3a94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a94>
    3ac0:	003ff506 	br	3a98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a98>
    3ac4:	0005c7c0 	call	5c7c <__multadd>
    3ac8:	1023883a 	mov	r17,r2
    3acc:	1029883a 	mov	r20,r2
    3ad0:	003fdf06 	br	3a50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a50>
    3ad4:	e009883a 	mov	r4,fp
    3ad8:	0005c540 	call	5c54 <_Bfree>
    3adc:	00800044 	movi	r2,1
    3ae0:	003fbc06 	br	39d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00039d4>
    3ae4:	a80b883a 	mov	r5,r21
    3ae8:	8009883a 	mov	r4,r16
    3aec:	00064740 	call	6474 <__mcmp>
    3af0:	103edb0e 	bge	r2,zero,3660 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003660>
    3af4:	800b883a 	mov	r5,r16
    3af8:	000f883a 	mov	r7,zero
    3afc:	01800284 	movi	r6,10
    3b00:	e009883a 	mov	r4,fp
    3b04:	0005c7c0 	call	5c7c <__multadd>
    3b08:	1021883a 	mov	r16,r2
    3b0c:	d8800517 	ldw	r2,20(sp)
    3b10:	d8c00b17 	ldw	r3,44(sp)
    3b14:	10bfffc4 	addi	r2,r2,-1
    3b18:	d8800515 	stw	r2,20(sp)
    3b1c:	183f761e 	bne	r3,zero,38f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00038f8>
    3b20:	d9000c17 	ldw	r4,48(sp)
    3b24:	0101730e 	bge	zero,r4,40f4 <_dtoa_r+0x15cc>
    3b28:	d9000615 	stw	r4,24(sp)
    3b2c:	003ed006 	br	3670 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003670>
    3b30:	00800084 	movi	r2,2
    3b34:	3081861e 	bne	r6,r2,4150 <_dtoa_r+0x1628>
    3b38:	d8000b15 	stw	zero,44(sp)
    3b3c:	003f3c06 	br	3830 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003830>
    3b40:	dc000917 	ldw	r16,36(sp)
    3b44:	003e9206 	br	3590 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003590>
    3b48:	d9c00317 	ldw	r7,12(sp)
    3b4c:	00800084 	movi	r2,2
    3b50:	11fec50e 	bge	r2,r7,3668 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003668>
    3b54:	d9000617 	ldw	r4,24(sp)
    3b58:	20013c1e 	bne	r4,zero,404c <_dtoa_r+0x1524>
    3b5c:	a80b883a 	mov	r5,r21
    3b60:	000f883a 	mov	r7,zero
    3b64:	01800144 	movi	r6,5
    3b68:	e009883a 	mov	r4,fp
    3b6c:	0005c7c0 	call	5c7c <__multadd>
    3b70:	100b883a 	mov	r5,r2
    3b74:	8009883a 	mov	r4,r16
    3b78:	102b883a 	mov	r21,r2
    3b7c:	00064740 	call	6474 <__mcmp>
    3b80:	dc000915 	stw	r16,36(sp)
    3b84:	00bf410e 	bge	zero,r2,388c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000388c>
    3b88:	d9c00717 	ldw	r7,28(sp)
    3b8c:	00800c44 	movi	r2,49
    3b90:	38800005 	stb	r2,0(r7)
    3b94:	d8800517 	ldw	r2,20(sp)
    3b98:	3dc00044 	addi	r23,r7,1
    3b9c:	10800044 	addi	r2,r2,1
    3ba0:	d8800515 	stw	r2,20(sp)
    3ba4:	003f3d06 	br	389c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000389c>
    3ba8:	d9800517 	ldw	r6,20(sp)
    3bac:	d9c00717 	ldw	r7,28(sp)
    3bb0:	00800c44 	movi	r2,49
    3bb4:	31800044 	addi	r6,r6,1
    3bb8:	d9800515 	stw	r6,20(sp)
    3bbc:	38800005 	stb	r2,0(r7)
    3bc0:	003edf06 	br	3740 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003740>
    3bc4:	d8000b15 	stw	zero,44(sp)
    3bc8:	003c9f06 	br	2e48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e48>
    3bcc:	903e7e1e 	bne	r18,zero,35c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00035c8>
    3bd0:	00800434 	movhi	r2,16
    3bd4:	10bfffc4 	addi	r2,r2,-1
    3bd8:	9884703a 	and	r2,r19,r2
    3bdc:	1000ea1e 	bne	r2,zero,3f88 <_dtoa_r+0x1460>
    3be0:	9cdffc2c 	andhi	r19,r19,32752
    3be4:	9800e826 	beq	r19,zero,3f88 <_dtoa_r+0x1460>
    3be8:	d9c00817 	ldw	r7,32(sp)
    3bec:	b5800044 	addi	r22,r22,1
    3bf0:	04c00044 	movi	r19,1
    3bf4:	39c00044 	addi	r7,r7,1
    3bf8:	d9c00815 	stw	r7,32(sp)
    3bfc:	d8800d17 	ldw	r2,52(sp)
    3c00:	103e721e 	bne	r2,zero,35cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00035cc>
    3c04:	00800044 	movi	r2,1
    3c08:	003e7906 	br	35f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00035f0>
    3c0c:	8009883a 	mov	r4,r16
    3c10:	000cafc0 	call	cafc <__floatsidf>
    3c14:	d9800f17 	ldw	r6,60(sp)
    3c18:	d9c01017 	ldw	r7,64(sp)
    3c1c:	1009883a 	mov	r4,r2
    3c20:	180b883a 	mov	r5,r3
    3c24:	000ba680 	call	ba68 <__muldf3>
    3c28:	000d883a 	mov	r6,zero
    3c2c:	01d00734 	movhi	r7,16412
    3c30:	1009883a 	mov	r4,r2
    3c34:	180b883a 	mov	r5,r3
    3c38:	000a67c0 	call	a67c <__adddf3>
    3c3c:	047f3034 	movhi	r17,64704
    3c40:	1021883a 	mov	r16,r2
    3c44:	1c63883a 	add	r17,r3,r17
    3c48:	d9000f17 	ldw	r4,60(sp)
    3c4c:	d9401017 	ldw	r5,64(sp)
    3c50:	000d883a 	mov	r6,zero
    3c54:	01d00534 	movhi	r7,16404
    3c58:	000c1800 	call	c180 <__subdf3>
    3c5c:	800d883a 	mov	r6,r16
    3c60:	880f883a 	mov	r7,r17
    3c64:	1009883a 	mov	r4,r2
    3c68:	180b883a 	mov	r5,r3
    3c6c:	102b883a 	mov	r21,r2
    3c70:	1829883a 	mov	r20,r3
    3c74:	000b8980 	call	b898 <__gedf2>
    3c78:	00806c16 	blt	zero,r2,3e2c <_dtoa_r+0x1304>
    3c7c:	89e0003c 	xorhi	r7,r17,32768
    3c80:	800d883a 	mov	r6,r16
    3c84:	a809883a 	mov	r4,r21
    3c88:	a00b883a 	mov	r5,r20
    3c8c:	000b9740 	call	b974 <__ledf2>
    3c90:	103d7e0e 	bge	r2,zero,328c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000328c>
    3c94:	002b883a 	mov	r21,zero
    3c98:	0023883a 	mov	r17,zero
    3c9c:	003efb06 	br	388c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000388c>
    3ca0:	d8800717 	ldw	r2,28(sp)
    3ca4:	003bd006 	br	2be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002be8>
    3ca8:	d9000a17 	ldw	r4,40(sp)
    3cac:	d9800d17 	ldw	r6,52(sp)
    3cb0:	dd400a15 	stw	r21,40(sp)
    3cb4:	a905c83a 	sub	r2,r21,r4
    3cb8:	308d883a 	add	r6,r6,r2
    3cbc:	d9800d15 	stw	r6,52(sp)
    3cc0:	002b883a 	mov	r21,zero
    3cc4:	003e0606 	br	34e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00034e0>
    3cc8:	9023883a 	mov	r17,r18
    3ccc:	9829883a 	mov	r20,r19
    3cd0:	04000084 	movi	r16,2
    3cd4:	003c9206 	br	2f20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002f20>
    3cd8:	04000044 	movi	r16,1
    3cdc:	dc000c15 	stw	r16,48(sp)
    3ce0:	dc000615 	stw	r16,24(sp)
    3ce4:	dc002215 	stw	r16,136(sp)
    3ce8:	e0001115 	stw	zero,68(fp)
    3cec:	000b883a 	mov	r5,zero
    3cf0:	003c6906 	br	2e98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e98>
    3cf4:	3021883a 	mov	r16,r6
    3cf8:	003ffb06 	br	3ce8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003ce8>
    3cfc:	1000021e 	bne	r2,zero,3d08 <_dtoa_r+0x11e0>
    3d00:	4200004c 	andi	r8,r8,1
    3d04:	403e7d1e 	bne	r8,zero,36fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00036fc>
    3d08:	01000c04 	movi	r4,48
    3d0c:	00000106 	br	3d14 <_dtoa_r+0x11ec>
    3d10:	102f883a 	mov	r23,r2
    3d14:	b8bfffc4 	addi	r2,r23,-1
    3d18:	10c00007 	ldb	r3,0(r2)
    3d1c:	193ffc26 	beq	r3,r4,3d10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003d10>
    3d20:	003e8706 	br	3740 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003740>
    3d24:	d8800517 	ldw	r2,20(sp)
    3d28:	00a3c83a 	sub	r17,zero,r2
    3d2c:	8800a426 	beq	r17,zero,3fc0 <_dtoa_r+0x1498>
    3d30:	888003cc 	andi	r2,r17,15
    3d34:	100490fa 	slli	r2,r2,3
    3d38:	00c00074 	movhi	r3,1
    3d3c:	18c16404 	addi	r3,r3,1424
    3d40:	1885883a 	add	r2,r3,r2
    3d44:	11800017 	ldw	r6,0(r2)
    3d48:	11c00117 	ldw	r7,4(r2)
    3d4c:	9009883a 	mov	r4,r18
    3d50:	980b883a 	mov	r5,r19
    3d54:	8823d13a 	srai	r17,r17,4
    3d58:	000ba680 	call	ba68 <__muldf3>
    3d5c:	d8800f15 	stw	r2,60(sp)
    3d60:	d8c01015 	stw	r3,64(sp)
    3d64:	8800e826 	beq	r17,zero,4108 <_dtoa_r+0x15e0>
    3d68:	05000074 	movhi	r20,1
    3d6c:	a5015a04 	addi	r20,r20,1384
    3d70:	04000084 	movi	r16,2
    3d74:	8980004c 	andi	r6,r17,1
    3d78:	1009883a 	mov	r4,r2
    3d7c:	8823d07a 	srai	r17,r17,1
    3d80:	180b883a 	mov	r5,r3
    3d84:	30000426 	beq	r6,zero,3d98 <_dtoa_r+0x1270>
    3d88:	a1800017 	ldw	r6,0(r20)
    3d8c:	a1c00117 	ldw	r7,4(r20)
    3d90:	84000044 	addi	r16,r16,1
    3d94:	000ba680 	call	ba68 <__muldf3>
    3d98:	a5000204 	addi	r20,r20,8
    3d9c:	883ff51e 	bne	r17,zero,3d74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003d74>
    3da0:	d8800f15 	stw	r2,60(sp)
    3da4:	d8c01015 	stw	r3,64(sp)
    3da8:	003c7606 	br	2f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002f84>
    3dac:	00c00c04 	movi	r3,48
    3db0:	10c00005 	stb	r3,0(r2)
    3db4:	d8c00517 	ldw	r3,20(sp)
    3db8:	bd3fffc3 	ldbu	r20,-1(r23)
    3dbc:	18c00044 	addi	r3,r3,1
    3dc0:	d8c00515 	stw	r3,20(sp)
    3dc4:	003db906 	br	34ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00034ac>
    3dc8:	89400117 	ldw	r5,4(r17)
    3dcc:	e009883a 	mov	r4,fp
    3dd0:	0005bac0 	call	5bac <_Balloc>
    3dd4:	89800417 	ldw	r6,16(r17)
    3dd8:	89400304 	addi	r5,r17,12
    3ddc:	11000304 	addi	r4,r2,12
    3de0:	31800084 	addi	r6,r6,2
    3de4:	318d883a 	add	r6,r6,r6
    3de8:	318d883a 	add	r6,r6,r6
    3dec:	1027883a 	mov	r19,r2
    3df0:	000593c0 	call	593c <memcpy>
    3df4:	01800044 	movi	r6,1
    3df8:	980b883a 	mov	r5,r19
    3dfc:	e009883a 	mov	r4,fp
    3e00:	000632c0 	call	632c <__lshift>
    3e04:	1029883a 	mov	r20,r2
    3e08:	003ecc06 	br	393c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000393c>
    3e0c:	00800e44 	movi	r2,57
    3e10:	90809026 	beq	r18,r2,4054 <_dtoa_r+0x152c>
    3e14:	92000044 	addi	r8,r18,1
    3e18:	003f1f06 	br	3a98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a98>
    3e1c:	9011883a 	mov	r8,r18
    3e20:	8825883a 	mov	r18,r17
    3e24:	a023883a 	mov	r17,r20
    3e28:	003e2906 	br	36d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00036d0>
    3e2c:	002b883a 	mov	r21,zero
    3e30:	0023883a 	mov	r17,zero
    3e34:	003f5406 	br	3b88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b88>
    3e38:	61bfffc4 	addi	r6,r12,-1
    3e3c:	300490fa 	slli	r2,r6,3
    3e40:	00c00074 	movhi	r3,1
    3e44:	18c16404 	addi	r3,r3,1424
    3e48:	1885883a 	add	r2,r3,r2
    3e4c:	11000017 	ldw	r4,0(r2)
    3e50:	11400117 	ldw	r5,4(r2)
    3e54:	d8800717 	ldw	r2,28(sp)
    3e58:	880f883a 	mov	r7,r17
    3e5c:	d9801215 	stw	r6,72(sp)
    3e60:	800d883a 	mov	r6,r16
    3e64:	db001615 	stw	r12,88(sp)
    3e68:	15c00044 	addi	r23,r2,1
    3e6c:	000ba680 	call	ba68 <__muldf3>
    3e70:	d9401017 	ldw	r5,64(sp)
    3e74:	d9000f17 	ldw	r4,60(sp)
    3e78:	d8c01515 	stw	r3,84(sp)
    3e7c:	d8801415 	stw	r2,80(sp)
    3e80:	000ca7c0 	call	ca7c <__fixdfsi>
    3e84:	1009883a 	mov	r4,r2
    3e88:	1021883a 	mov	r16,r2
    3e8c:	000cafc0 	call	cafc <__floatsidf>
    3e90:	d9000f17 	ldw	r4,60(sp)
    3e94:	d9401017 	ldw	r5,64(sp)
    3e98:	100d883a 	mov	r6,r2
    3e9c:	180f883a 	mov	r7,r3
    3ea0:	000c1800 	call	c180 <__subdf3>
    3ea4:	1829883a 	mov	r20,r3
    3ea8:	d8c00717 	ldw	r3,28(sp)
    3eac:	84000c04 	addi	r16,r16,48
    3eb0:	1023883a 	mov	r17,r2
    3eb4:	1c000005 	stb	r16,0(r3)
    3eb8:	db001617 	ldw	r12,88(sp)
    3ebc:	00800044 	movi	r2,1
    3ec0:	60802226 	beq	r12,r2,3f4c <_dtoa_r+0x1424>
    3ec4:	d9c00717 	ldw	r7,28(sp)
    3ec8:	8805883a 	mov	r2,r17
    3ecc:	b82b883a 	mov	r21,r23
    3ed0:	3b19883a 	add	r12,r7,r12
    3ed4:	6023883a 	mov	r17,r12
    3ed8:	a007883a 	mov	r3,r20
    3edc:	dc800f15 	stw	r18,60(sp)
    3ee0:	000d883a 	mov	r6,zero
    3ee4:	01d00934 	movhi	r7,16420
    3ee8:	1009883a 	mov	r4,r2
    3eec:	180b883a 	mov	r5,r3
    3ef0:	000ba680 	call	ba68 <__muldf3>
    3ef4:	180b883a 	mov	r5,r3
    3ef8:	1009883a 	mov	r4,r2
    3efc:	1829883a 	mov	r20,r3
    3f00:	1025883a 	mov	r18,r2
    3f04:	000ca7c0 	call	ca7c <__fixdfsi>
    3f08:	1009883a 	mov	r4,r2
    3f0c:	1021883a 	mov	r16,r2
    3f10:	000cafc0 	call	cafc <__floatsidf>
    3f14:	100d883a 	mov	r6,r2
    3f18:	180f883a 	mov	r7,r3
    3f1c:	9009883a 	mov	r4,r18
    3f20:	a00b883a 	mov	r5,r20
    3f24:	84000c04 	addi	r16,r16,48
    3f28:	000c1800 	call	c180 <__subdf3>
    3f2c:	ad400044 	addi	r21,r21,1
    3f30:	ac3fffc5 	stb	r16,-1(r21)
    3f34:	ac7fea1e 	bne	r21,r17,3ee0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003ee0>
    3f38:	1023883a 	mov	r17,r2
    3f3c:	d8801217 	ldw	r2,72(sp)
    3f40:	dc800f17 	ldw	r18,60(sp)
    3f44:	1829883a 	mov	r20,r3
    3f48:	b8af883a 	add	r23,r23,r2
    3f4c:	d9001417 	ldw	r4,80(sp)
    3f50:	d9401517 	ldw	r5,84(sp)
    3f54:	000d883a 	mov	r6,zero
    3f58:	01cff834 	movhi	r7,16352
    3f5c:	000a67c0 	call	a67c <__adddf3>
    3f60:	880d883a 	mov	r6,r17
    3f64:	a00f883a 	mov	r7,r20
    3f68:	1009883a 	mov	r4,r2
    3f6c:	180b883a 	mov	r5,r3
    3f70:	000b9740 	call	b974 <__ledf2>
    3f74:	10003e0e 	bge	r2,zero,4070 <_dtoa_r+0x1548>
    3f78:	d9001317 	ldw	r4,76(sp)
    3f7c:	bd3fffc3 	ldbu	r20,-1(r23)
    3f80:	d9000515 	stw	r4,20(sp)
    3f84:	003d3b06 	br	3474 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003474>
    3f88:	0027883a 	mov	r19,zero
    3f8c:	003f1b06 	br	3bfc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003bfc>
    3f90:	d8800817 	ldw	r2,32(sp)
    3f94:	11e9c83a 	sub	r20,r2,r7
    3f98:	0005883a 	mov	r2,zero
    3f9c:	003d5406 	br	34f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00034f0>
    3fa0:	00800044 	movi	r2,1
    3fa4:	003dc706 	br	36c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00036c4>
    3fa8:	d8c00217 	ldw	r3,8(sp)
    3fac:	00800d84 	movi	r2,54
    3fb0:	dd400a17 	ldw	r21,40(sp)
    3fb4:	10c5c83a 	sub	r2,r2,r3
    3fb8:	dd000817 	ldw	r20,32(sp)
    3fbc:	003d4c06 	br	34f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00034f0>
    3fc0:	dc800f15 	stw	r18,60(sp)
    3fc4:	dcc01015 	stw	r19,64(sp)
    3fc8:	04000084 	movi	r16,2
    3fcc:	003bed06 	br	2f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002f84>
    3fd0:	d9000617 	ldw	r4,24(sp)
    3fd4:	203f0d26 	beq	r4,zero,3c0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c0c>
    3fd8:	d9800c17 	ldw	r6,48(sp)
    3fdc:	01bcab0e 	bge	zero,r6,328c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000328c>
    3fe0:	d9401017 	ldw	r5,64(sp)
    3fe4:	d9000f17 	ldw	r4,60(sp)
    3fe8:	000d883a 	mov	r6,zero
    3fec:	01d00934 	movhi	r7,16420
    3ff0:	000ba680 	call	ba68 <__muldf3>
    3ff4:	81000044 	addi	r4,r16,1
    3ff8:	d8800f15 	stw	r2,60(sp)
    3ffc:	d8c01015 	stw	r3,64(sp)
    4000:	000cafc0 	call	cafc <__floatsidf>
    4004:	d9800f17 	ldw	r6,60(sp)
    4008:	d9c01017 	ldw	r7,64(sp)
    400c:	1009883a 	mov	r4,r2
    4010:	180b883a 	mov	r5,r3
    4014:	000ba680 	call	ba68 <__muldf3>
    4018:	01d00734 	movhi	r7,16412
    401c:	000d883a 	mov	r6,zero
    4020:	1009883a 	mov	r4,r2
    4024:	180b883a 	mov	r5,r3
    4028:	000a67c0 	call	a67c <__adddf3>
    402c:	d9c00517 	ldw	r7,20(sp)
    4030:	047f3034 	movhi	r17,64704
    4034:	1021883a 	mov	r16,r2
    4038:	39ffffc4 	addi	r7,r7,-1
    403c:	d9c01315 	stw	r7,76(sp)
    4040:	1c63883a 	add	r17,r3,r17
    4044:	db000c17 	ldw	r12,48(sp)
    4048:	003bea06 	br	2ff4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002ff4>
    404c:	dc000915 	stw	r16,36(sp)
    4050:	003e0e06 	br	388c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000388c>
    4054:	01000e44 	movi	r4,57
    4058:	8825883a 	mov	r18,r17
    405c:	9dc00044 	addi	r23,r19,1
    4060:	99000005 	stb	r4,0(r19)
    4064:	a023883a 	mov	r17,r20
    4068:	dc000915 	stw	r16,36(sp)
    406c:	003da406 	br	3700 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003700>
    4070:	d9801417 	ldw	r6,80(sp)
    4074:	d9c01517 	ldw	r7,84(sp)
    4078:	0009883a 	mov	r4,zero
    407c:	014ff834 	movhi	r5,16352
    4080:	000c1800 	call	c180 <__subdf3>
    4084:	880d883a 	mov	r6,r17
    4088:	a00f883a 	mov	r7,r20
    408c:	1009883a 	mov	r4,r2
    4090:	180b883a 	mov	r5,r3
    4094:	000b8980 	call	b898 <__gedf2>
    4098:	00bc7c0e 	bge	zero,r2,328c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000328c>
    409c:	01000c04 	movi	r4,48
    40a0:	00000106 	br	40a8 <_dtoa_r+0x1580>
    40a4:	102f883a 	mov	r23,r2
    40a8:	b8bfffc4 	addi	r2,r23,-1
    40ac:	10c00007 	ldb	r3,0(r2)
    40b0:	193ffc26 	beq	r3,r4,40a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00040a4>
    40b4:	d9801317 	ldw	r6,76(sp)
    40b8:	d9800515 	stw	r6,20(sp)
    40bc:	003c4406 	br	31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    40c0:	d9801317 	ldw	r6,76(sp)
    40c4:	d9800515 	stw	r6,20(sp)
    40c8:	003cea06 	br	3474 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003474>
    40cc:	dd800f17 	ldw	r22,60(sp)
    40d0:	dcc01017 	ldw	r19,64(sp)
    40d4:	dc801217 	ldw	r18,72(sp)
    40d8:	003c6c06 	br	328c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000328c>
    40dc:	903e031e 	bne	r18,zero,38ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00038ec>
    40e0:	003ebb06 	br	3bd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003bd0>
    40e4:	103e6c1e 	bne	r2,zero,3a98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a98>
    40e8:	4080004c 	andi	r2,r8,1
    40ec:	103e6a26 	beq	r2,zero,3a98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a98>
    40f0:	003e6606 	br	3a8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a8c>
    40f4:	d8c00317 	ldw	r3,12(sp)
    40f8:	00800084 	movi	r2,2
    40fc:	10c02916 	blt	r2,r3,41a4 <_dtoa_r+0x167c>
    4100:	d9000c17 	ldw	r4,48(sp)
    4104:	003e8806 	br	3b28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b28>
    4108:	04000084 	movi	r16,2
    410c:	003b9d06 	br	2f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002f84>
    4110:	d9001317 	ldw	r4,76(sp)
    4114:	d9000515 	stw	r4,20(sp)
    4118:	003cd606 	br	3474 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003474>
    411c:	d8801317 	ldw	r2,76(sp)
    4120:	d8800515 	stw	r2,20(sp)
    4124:	003c2a06 	br	31d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031d0>
    4128:	d9800317 	ldw	r6,12(sp)
    412c:	00800084 	movi	r2,2
    4130:	11801516 	blt	r2,r6,4188 <_dtoa_r+0x1660>
    4134:	d9c00c17 	ldw	r7,48(sp)
    4138:	d9c00615 	stw	r7,24(sp)
    413c:	003df706 	br	391c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000391c>
    4140:	193d3926 	beq	r3,r4,3628 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003628>
    4144:	00c00f04 	movi	r3,60
    4148:	1885c83a 	sub	r2,r3,r2
    414c:	003ddf06 	br	38cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00038cc>
    4150:	e009883a 	mov	r4,fp
    4154:	e0001115 	stw	zero,68(fp)
    4158:	000b883a 	mov	r5,zero
    415c:	0005bac0 	call	5bac <_Balloc>
    4160:	d8800715 	stw	r2,28(sp)
    4164:	d8c00717 	ldw	r3,28(sp)
    4168:	00bfffc4 	movi	r2,-1
    416c:	01000044 	movi	r4,1
    4170:	d8800c15 	stw	r2,48(sp)
    4174:	e0c01015 	stw	r3,64(fp)
    4178:	d9000b15 	stw	r4,44(sp)
    417c:	d8800615 	stw	r2,24(sp)
    4180:	d8002215 	stw	zero,136(sp)
    4184:	003c4106 	br	328c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000328c>
    4188:	d8c00c17 	ldw	r3,48(sp)
    418c:	d8c00615 	stw	r3,24(sp)
    4190:	003e7006 	br	3b54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b54>
    4194:	04400044 	movi	r17,1
    4198:	003b2006 	br	2e1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e1c>
    419c:	000b883a 	mov	r5,zero
    41a0:	003b3d06 	br	2e98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e98>
    41a4:	d8800c17 	ldw	r2,48(sp)
    41a8:	d8800615 	stw	r2,24(sp)
    41ac:	003e6906 	br	3b54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b54>

000041b0 <__sflush_r>:
    41b0:	2880030b 	ldhu	r2,12(r5)
    41b4:	defffb04 	addi	sp,sp,-20
    41b8:	dcc00315 	stw	r19,12(sp)
    41bc:	dc400115 	stw	r17,4(sp)
    41c0:	dfc00415 	stw	ra,16(sp)
    41c4:	dc800215 	stw	r18,8(sp)
    41c8:	dc000015 	stw	r16,0(sp)
    41cc:	10c0020c 	andi	r3,r2,8
    41d0:	2823883a 	mov	r17,r5
    41d4:	2027883a 	mov	r19,r4
    41d8:	1800311e 	bne	r3,zero,42a0 <__sflush_r+0xf0>
    41dc:	28c00117 	ldw	r3,4(r5)
    41e0:	10820014 	ori	r2,r2,2048
    41e4:	2880030d 	sth	r2,12(r5)
    41e8:	00c04b0e 	bge	zero,r3,4318 <__sflush_r+0x168>
    41ec:	8a000a17 	ldw	r8,40(r17)
    41f0:	40002326 	beq	r8,zero,4280 <__sflush_r+0xd0>
    41f4:	9c000017 	ldw	r16,0(r19)
    41f8:	10c4000c 	andi	r3,r2,4096
    41fc:	98000015 	stw	zero,0(r19)
    4200:	18004826 	beq	r3,zero,4324 <__sflush_r+0x174>
    4204:	89801417 	ldw	r6,80(r17)
    4208:	10c0010c 	andi	r3,r2,4
    420c:	18000626 	beq	r3,zero,4228 <__sflush_r+0x78>
    4210:	88c00117 	ldw	r3,4(r17)
    4214:	88800c17 	ldw	r2,48(r17)
    4218:	30cdc83a 	sub	r6,r6,r3
    421c:	10000226 	beq	r2,zero,4228 <__sflush_r+0x78>
    4220:	88800f17 	ldw	r2,60(r17)
    4224:	308dc83a 	sub	r6,r6,r2
    4228:	89400717 	ldw	r5,28(r17)
    422c:	000f883a 	mov	r7,zero
    4230:	9809883a 	mov	r4,r19
    4234:	403ee83a 	callr	r8
    4238:	00ffffc4 	movi	r3,-1
    423c:	10c04426 	beq	r2,r3,4350 <__sflush_r+0x1a0>
    4240:	88c0030b 	ldhu	r3,12(r17)
    4244:	89000417 	ldw	r4,16(r17)
    4248:	88000115 	stw	zero,4(r17)
    424c:	197dffcc 	andi	r5,r3,63487
    4250:	8940030d 	sth	r5,12(r17)
    4254:	89000015 	stw	r4,0(r17)
    4258:	18c4000c 	andi	r3,r3,4096
    425c:	18002c1e 	bne	r3,zero,4310 <__sflush_r+0x160>
    4260:	89400c17 	ldw	r5,48(r17)
    4264:	9c000015 	stw	r16,0(r19)
    4268:	28000526 	beq	r5,zero,4280 <__sflush_r+0xd0>
    426c:	88801004 	addi	r2,r17,64
    4270:	28800226 	beq	r5,r2,427c <__sflush_r+0xcc>
    4274:	9809883a 	mov	r4,r19
    4278:	000491c0 	call	491c <_free_r>
    427c:	88000c15 	stw	zero,48(r17)
    4280:	0005883a 	mov	r2,zero
    4284:	dfc00417 	ldw	ra,16(sp)
    4288:	dcc00317 	ldw	r19,12(sp)
    428c:	dc800217 	ldw	r18,8(sp)
    4290:	dc400117 	ldw	r17,4(sp)
    4294:	dc000017 	ldw	r16,0(sp)
    4298:	dec00504 	addi	sp,sp,20
    429c:	f800283a 	ret
    42a0:	2c800417 	ldw	r18,16(r5)
    42a4:	903ff626 	beq	r18,zero,4280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004280>
    42a8:	2c000017 	ldw	r16,0(r5)
    42ac:	108000cc 	andi	r2,r2,3
    42b0:	2c800015 	stw	r18,0(r5)
    42b4:	84a1c83a 	sub	r16,r16,r18
    42b8:	1000131e 	bne	r2,zero,4308 <__sflush_r+0x158>
    42bc:	28800517 	ldw	r2,20(r5)
    42c0:	88800215 	stw	r2,8(r17)
    42c4:	04000316 	blt	zero,r16,42d4 <__sflush_r+0x124>
    42c8:	003fed06 	br	4280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004280>
    42cc:	90a5883a 	add	r18,r18,r2
    42d0:	043feb0e 	bge	zero,r16,4280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004280>
    42d4:	88800917 	ldw	r2,36(r17)
    42d8:	89400717 	ldw	r5,28(r17)
    42dc:	800f883a 	mov	r7,r16
    42e0:	900d883a 	mov	r6,r18
    42e4:	9809883a 	mov	r4,r19
    42e8:	103ee83a 	callr	r2
    42ec:	80a1c83a 	sub	r16,r16,r2
    42f0:	00bff616 	blt	zero,r2,42cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00042cc>
    42f4:	88c0030b 	ldhu	r3,12(r17)
    42f8:	00bfffc4 	movi	r2,-1
    42fc:	18c01014 	ori	r3,r3,64
    4300:	88c0030d 	sth	r3,12(r17)
    4304:	003fdf06 	br	4284 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004284>
    4308:	0005883a 	mov	r2,zero
    430c:	003fec06 	br	42c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00042c0>
    4310:	88801415 	stw	r2,80(r17)
    4314:	003fd206 	br	4260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004260>
    4318:	28c00f17 	ldw	r3,60(r5)
    431c:	00ffb316 	blt	zero,r3,41ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00041ec>
    4320:	003fd706 	br	4280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004280>
    4324:	89400717 	ldw	r5,28(r17)
    4328:	000d883a 	mov	r6,zero
    432c:	01c00044 	movi	r7,1
    4330:	9809883a 	mov	r4,r19
    4334:	403ee83a 	callr	r8
    4338:	100d883a 	mov	r6,r2
    433c:	00bfffc4 	movi	r2,-1
    4340:	30801426 	beq	r6,r2,4394 <__sflush_r+0x1e4>
    4344:	8880030b 	ldhu	r2,12(r17)
    4348:	8a000a17 	ldw	r8,40(r17)
    434c:	003fae06 	br	4208 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004208>
    4350:	98c00017 	ldw	r3,0(r19)
    4354:	183fba26 	beq	r3,zero,4240 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004240>
    4358:	01000744 	movi	r4,29
    435c:	19000626 	beq	r3,r4,4378 <__sflush_r+0x1c8>
    4360:	01000584 	movi	r4,22
    4364:	19000426 	beq	r3,r4,4378 <__sflush_r+0x1c8>
    4368:	88c0030b 	ldhu	r3,12(r17)
    436c:	18c01014 	ori	r3,r3,64
    4370:	88c0030d 	sth	r3,12(r17)
    4374:	003fc306 	br	4284 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004284>
    4378:	8880030b 	ldhu	r2,12(r17)
    437c:	88c00417 	ldw	r3,16(r17)
    4380:	88000115 	stw	zero,4(r17)
    4384:	10bdffcc 	andi	r2,r2,63487
    4388:	8880030d 	sth	r2,12(r17)
    438c:	88c00015 	stw	r3,0(r17)
    4390:	003fb306 	br	4260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004260>
    4394:	98800017 	ldw	r2,0(r19)
    4398:	103fea26 	beq	r2,zero,4344 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004344>
    439c:	00c00744 	movi	r3,29
    43a0:	10c00226 	beq	r2,r3,43ac <__sflush_r+0x1fc>
    43a4:	00c00584 	movi	r3,22
    43a8:	10c0031e 	bne	r2,r3,43b8 <__sflush_r+0x208>
    43ac:	9c000015 	stw	r16,0(r19)
    43b0:	0005883a 	mov	r2,zero
    43b4:	003fb306 	br	4284 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004284>
    43b8:	88c0030b 	ldhu	r3,12(r17)
    43bc:	3005883a 	mov	r2,r6
    43c0:	18c01014 	ori	r3,r3,64
    43c4:	88c0030d 	sth	r3,12(r17)
    43c8:	003fae06 	br	4284 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004284>

000043cc <_fflush_r>:
    43cc:	defffd04 	addi	sp,sp,-12
    43d0:	dc000115 	stw	r16,4(sp)
    43d4:	dfc00215 	stw	ra,8(sp)
    43d8:	2021883a 	mov	r16,r4
    43dc:	20000226 	beq	r4,zero,43e8 <_fflush_r+0x1c>
    43e0:	20800e17 	ldw	r2,56(r4)
    43e4:	10000c26 	beq	r2,zero,4418 <_fflush_r+0x4c>
    43e8:	2880030f 	ldh	r2,12(r5)
    43ec:	1000051e 	bne	r2,zero,4404 <_fflush_r+0x38>
    43f0:	0005883a 	mov	r2,zero
    43f4:	dfc00217 	ldw	ra,8(sp)
    43f8:	dc000117 	ldw	r16,4(sp)
    43fc:	dec00304 	addi	sp,sp,12
    4400:	f800283a 	ret
    4404:	8009883a 	mov	r4,r16
    4408:	dfc00217 	ldw	ra,8(sp)
    440c:	dc000117 	ldw	r16,4(sp)
    4410:	dec00304 	addi	sp,sp,12
    4414:	00041b01 	jmpi	41b0 <__sflush_r>
    4418:	d9400015 	stw	r5,0(sp)
    441c:	00047a80 	call	47a8 <__sinit>
    4420:	d9400017 	ldw	r5,0(sp)
    4424:	003ff006 	br	43e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00043e8>

00004428 <fflush>:
    4428:	20000526 	beq	r4,zero,4440 <fflush+0x18>
    442c:	00800074 	movhi	r2,1
    4430:	10896104 	addi	r2,r2,9604
    4434:	200b883a 	mov	r5,r4
    4438:	11000017 	ldw	r4,0(r2)
    443c:	00043cc1 	jmpi	43cc <_fflush_r>
    4440:	00800074 	movhi	r2,1
    4444:	10896004 	addi	r2,r2,9600
    4448:	11000017 	ldw	r4,0(r2)
    444c:	01400034 	movhi	r5,0
    4450:	2950f304 	addi	r5,r5,17356
    4454:	0004cf01 	jmpi	4cf0 <_fwalk_reent>

00004458 <__fp_unlock>:
    4458:	0005883a 	mov	r2,zero
    445c:	f800283a 	ret

00004460 <_cleanup_r>:
    4460:	01400074 	movhi	r5,1
    4464:	2961b804 	addi	r5,r5,-31008
    4468:	0004cf01 	jmpi	4cf0 <_fwalk_reent>

0000446c <__sinit.part.1>:
    446c:	defff704 	addi	sp,sp,-36
    4470:	00c00034 	movhi	r3,0
    4474:	dfc00815 	stw	ra,32(sp)
    4478:	ddc00715 	stw	r23,28(sp)
    447c:	dd800615 	stw	r22,24(sp)
    4480:	dd400515 	stw	r21,20(sp)
    4484:	dd000415 	stw	r20,16(sp)
    4488:	dcc00315 	stw	r19,12(sp)
    448c:	dc800215 	stw	r18,8(sp)
    4490:	dc400115 	stw	r17,4(sp)
    4494:	dc000015 	stw	r16,0(sp)
    4498:	18d11804 	addi	r3,r3,17504
    449c:	24000117 	ldw	r16,4(r4)
    44a0:	20c00f15 	stw	r3,60(r4)
    44a4:	2080bb04 	addi	r2,r4,748
    44a8:	00c000c4 	movi	r3,3
    44ac:	20c0b915 	stw	r3,740(r4)
    44b0:	2080ba15 	stw	r2,744(r4)
    44b4:	2000b815 	stw	zero,736(r4)
    44b8:	05c00204 	movi	r23,8
    44bc:	00800104 	movi	r2,4
    44c0:	2025883a 	mov	r18,r4
    44c4:	b80d883a 	mov	r6,r23
    44c8:	81001704 	addi	r4,r16,92
    44cc:	000b883a 	mov	r5,zero
    44d0:	80000015 	stw	zero,0(r16)
    44d4:	80000115 	stw	zero,4(r16)
    44d8:	80000215 	stw	zero,8(r16)
    44dc:	8080030d 	sth	r2,12(r16)
    44e0:	80001915 	stw	zero,100(r16)
    44e4:	8000038d 	sth	zero,14(r16)
    44e8:	80000415 	stw	zero,16(r16)
    44ec:	80000515 	stw	zero,20(r16)
    44f0:	80000615 	stw	zero,24(r16)
    44f4:	0005a840 	call	5a84 <memset>
    44f8:	05800034 	movhi	r22,0
    44fc:	94400217 	ldw	r17,8(r18)
    4500:	05400034 	movhi	r21,0
    4504:	05000034 	movhi	r20,0
    4508:	04c00034 	movhi	r19,0
    450c:	b59b1c04 	addi	r22,r22,27760
    4510:	ad5b3304 	addi	r21,r21,27852
    4514:	a51b5204 	addi	r20,r20,27976
    4518:	9cdb6904 	addi	r19,r19,28068
    451c:	85800815 	stw	r22,32(r16)
    4520:	85400915 	stw	r21,36(r16)
    4524:	85000a15 	stw	r20,40(r16)
    4528:	84c00b15 	stw	r19,44(r16)
    452c:	84000715 	stw	r16,28(r16)
    4530:	00800284 	movi	r2,10
    4534:	8880030d 	sth	r2,12(r17)
    4538:	00800044 	movi	r2,1
    453c:	b80d883a 	mov	r6,r23
    4540:	89001704 	addi	r4,r17,92
    4544:	000b883a 	mov	r5,zero
    4548:	88000015 	stw	zero,0(r17)
    454c:	88000115 	stw	zero,4(r17)
    4550:	88000215 	stw	zero,8(r17)
    4554:	88001915 	stw	zero,100(r17)
    4558:	8880038d 	sth	r2,14(r17)
    455c:	88000415 	stw	zero,16(r17)
    4560:	88000515 	stw	zero,20(r17)
    4564:	88000615 	stw	zero,24(r17)
    4568:	0005a840 	call	5a84 <memset>
    456c:	94000317 	ldw	r16,12(r18)
    4570:	00800484 	movi	r2,18
    4574:	8c400715 	stw	r17,28(r17)
    4578:	8d800815 	stw	r22,32(r17)
    457c:	8d400915 	stw	r21,36(r17)
    4580:	8d000a15 	stw	r20,40(r17)
    4584:	8cc00b15 	stw	r19,44(r17)
    4588:	8080030d 	sth	r2,12(r16)
    458c:	00800084 	movi	r2,2
    4590:	80000015 	stw	zero,0(r16)
    4594:	80000115 	stw	zero,4(r16)
    4598:	80000215 	stw	zero,8(r16)
    459c:	80001915 	stw	zero,100(r16)
    45a0:	8080038d 	sth	r2,14(r16)
    45a4:	80000415 	stw	zero,16(r16)
    45a8:	80000515 	stw	zero,20(r16)
    45ac:	80000615 	stw	zero,24(r16)
    45b0:	b80d883a 	mov	r6,r23
    45b4:	000b883a 	mov	r5,zero
    45b8:	81001704 	addi	r4,r16,92
    45bc:	0005a840 	call	5a84 <memset>
    45c0:	00800044 	movi	r2,1
    45c4:	84000715 	stw	r16,28(r16)
    45c8:	85800815 	stw	r22,32(r16)
    45cc:	85400915 	stw	r21,36(r16)
    45d0:	85000a15 	stw	r20,40(r16)
    45d4:	84c00b15 	stw	r19,44(r16)
    45d8:	90800e15 	stw	r2,56(r18)
    45dc:	dfc00817 	ldw	ra,32(sp)
    45e0:	ddc00717 	ldw	r23,28(sp)
    45e4:	dd800617 	ldw	r22,24(sp)
    45e8:	dd400517 	ldw	r21,20(sp)
    45ec:	dd000417 	ldw	r20,16(sp)
    45f0:	dcc00317 	ldw	r19,12(sp)
    45f4:	dc800217 	ldw	r18,8(sp)
    45f8:	dc400117 	ldw	r17,4(sp)
    45fc:	dc000017 	ldw	r16,0(sp)
    4600:	dec00904 	addi	sp,sp,36
    4604:	f800283a 	ret

00004608 <__fp_lock>:
    4608:	0005883a 	mov	r2,zero
    460c:	f800283a 	ret

00004610 <__sfmoreglue>:
    4610:	defffc04 	addi	sp,sp,-16
    4614:	dc400115 	stw	r17,4(sp)
    4618:	2c7fffc4 	addi	r17,r5,-1
    461c:	8c401a24 	muli	r17,r17,104
    4620:	dc800215 	stw	r18,8(sp)
    4624:	2825883a 	mov	r18,r5
    4628:	89401d04 	addi	r5,r17,116
    462c:	dc000015 	stw	r16,0(sp)
    4630:	dfc00315 	stw	ra,12(sp)
    4634:	000504c0 	call	504c <_malloc_r>
    4638:	1021883a 	mov	r16,r2
    463c:	10000726 	beq	r2,zero,465c <__sfmoreglue+0x4c>
    4640:	11000304 	addi	r4,r2,12
    4644:	10000015 	stw	zero,0(r2)
    4648:	14800115 	stw	r18,4(r2)
    464c:	11000215 	stw	r4,8(r2)
    4650:	89801a04 	addi	r6,r17,104
    4654:	000b883a 	mov	r5,zero
    4658:	0005a840 	call	5a84 <memset>
    465c:	8005883a 	mov	r2,r16
    4660:	dfc00317 	ldw	ra,12(sp)
    4664:	dc800217 	ldw	r18,8(sp)
    4668:	dc400117 	ldw	r17,4(sp)
    466c:	dc000017 	ldw	r16,0(sp)
    4670:	dec00404 	addi	sp,sp,16
    4674:	f800283a 	ret

00004678 <__sfp>:
    4678:	defffb04 	addi	sp,sp,-20
    467c:	dc000015 	stw	r16,0(sp)
    4680:	04000074 	movhi	r16,1
    4684:	84096004 	addi	r16,r16,9600
    4688:	dcc00315 	stw	r19,12(sp)
    468c:	2027883a 	mov	r19,r4
    4690:	81000017 	ldw	r4,0(r16)
    4694:	dfc00415 	stw	ra,16(sp)
    4698:	dc800215 	stw	r18,8(sp)
    469c:	20800e17 	ldw	r2,56(r4)
    46a0:	dc400115 	stw	r17,4(sp)
    46a4:	1000021e 	bne	r2,zero,46b0 <__sfp+0x38>
    46a8:	000446c0 	call	446c <__sinit.part.1>
    46ac:	81000017 	ldw	r4,0(r16)
    46b0:	2480b804 	addi	r18,r4,736
    46b4:	047fffc4 	movi	r17,-1
    46b8:	91000117 	ldw	r4,4(r18)
    46bc:	94000217 	ldw	r16,8(r18)
    46c0:	213fffc4 	addi	r4,r4,-1
    46c4:	20000a16 	blt	r4,zero,46f0 <__sfp+0x78>
    46c8:	8080030f 	ldh	r2,12(r16)
    46cc:	10000c26 	beq	r2,zero,4700 <__sfp+0x88>
    46d0:	80c01d04 	addi	r3,r16,116
    46d4:	00000206 	br	46e0 <__sfp+0x68>
    46d8:	18bfe60f 	ldh	r2,-104(r3)
    46dc:	10000826 	beq	r2,zero,4700 <__sfp+0x88>
    46e0:	213fffc4 	addi	r4,r4,-1
    46e4:	1c3ffd04 	addi	r16,r3,-12
    46e8:	18c01a04 	addi	r3,r3,104
    46ec:	247ffa1e 	bne	r4,r17,46d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00046d8>
    46f0:	90800017 	ldw	r2,0(r18)
    46f4:	10001d26 	beq	r2,zero,476c <__sfp+0xf4>
    46f8:	1025883a 	mov	r18,r2
    46fc:	003fee06 	br	46b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00046b8>
    4700:	00bfffc4 	movi	r2,-1
    4704:	8080038d 	sth	r2,14(r16)
    4708:	00800044 	movi	r2,1
    470c:	8080030d 	sth	r2,12(r16)
    4710:	80001915 	stw	zero,100(r16)
    4714:	80000015 	stw	zero,0(r16)
    4718:	80000215 	stw	zero,8(r16)
    471c:	80000115 	stw	zero,4(r16)
    4720:	80000415 	stw	zero,16(r16)
    4724:	80000515 	stw	zero,20(r16)
    4728:	80000615 	stw	zero,24(r16)
    472c:	01800204 	movi	r6,8
    4730:	000b883a 	mov	r5,zero
    4734:	81001704 	addi	r4,r16,92
    4738:	0005a840 	call	5a84 <memset>
    473c:	8005883a 	mov	r2,r16
    4740:	80000c15 	stw	zero,48(r16)
    4744:	80000d15 	stw	zero,52(r16)
    4748:	80001115 	stw	zero,68(r16)
    474c:	80001215 	stw	zero,72(r16)
    4750:	dfc00417 	ldw	ra,16(sp)
    4754:	dcc00317 	ldw	r19,12(sp)
    4758:	dc800217 	ldw	r18,8(sp)
    475c:	dc400117 	ldw	r17,4(sp)
    4760:	dc000017 	ldw	r16,0(sp)
    4764:	dec00504 	addi	sp,sp,20
    4768:	f800283a 	ret
    476c:	01400104 	movi	r5,4
    4770:	9809883a 	mov	r4,r19
    4774:	00046100 	call	4610 <__sfmoreglue>
    4778:	90800015 	stw	r2,0(r18)
    477c:	103fde1e 	bne	r2,zero,46f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00046f8>
    4780:	00800304 	movi	r2,12
    4784:	98800015 	stw	r2,0(r19)
    4788:	0005883a 	mov	r2,zero
    478c:	003ff006 	br	4750 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004750>

00004790 <_cleanup>:
    4790:	00800074 	movhi	r2,1
    4794:	10896004 	addi	r2,r2,9600
    4798:	11000017 	ldw	r4,0(r2)
    479c:	01400074 	movhi	r5,1
    47a0:	2961b804 	addi	r5,r5,-31008
    47a4:	0004cf01 	jmpi	4cf0 <_fwalk_reent>

000047a8 <__sinit>:
    47a8:	20800e17 	ldw	r2,56(r4)
    47ac:	10000126 	beq	r2,zero,47b4 <__sinit+0xc>
    47b0:	f800283a 	ret
    47b4:	000446c1 	jmpi	446c <__sinit.part.1>

000047b8 <__sfp_lock_acquire>:
    47b8:	f800283a 	ret

000047bc <__sfp_lock_release>:
    47bc:	f800283a 	ret

000047c0 <__sinit_lock_acquire>:
    47c0:	f800283a 	ret

000047c4 <__sinit_lock_release>:
    47c4:	f800283a 	ret

000047c8 <__fp_lock_all>:
    47c8:	00800074 	movhi	r2,1
    47cc:	10896104 	addi	r2,r2,9604
    47d0:	11000017 	ldw	r4,0(r2)
    47d4:	01400034 	movhi	r5,0
    47d8:	29518204 	addi	r5,r5,17928
    47dc:	0004c2c1 	jmpi	4c2c <_fwalk>

000047e0 <__fp_unlock_all>:
    47e0:	00800074 	movhi	r2,1
    47e4:	10896104 	addi	r2,r2,9604
    47e8:	11000017 	ldw	r4,0(r2)
    47ec:	01400034 	movhi	r5,0
    47f0:	29511604 	addi	r5,r5,17496
    47f4:	0004c2c1 	jmpi	4c2c <_fwalk>

000047f8 <_malloc_trim_r>:
    47f8:	defffb04 	addi	sp,sp,-20
    47fc:	dcc00315 	stw	r19,12(sp)
    4800:	04c00074 	movhi	r19,1
    4804:	dc800215 	stw	r18,8(sp)
    4808:	dc400115 	stw	r17,4(sp)
    480c:	dc000015 	stw	r16,0(sp)
    4810:	dfc00415 	stw	ra,16(sp)
    4814:	2821883a 	mov	r16,r5
    4818:	9cc34a04 	addi	r19,r19,3368
    481c:	2025883a 	mov	r18,r4
    4820:	000d3e00 	call	d3e0 <__malloc_lock>
    4824:	98800217 	ldw	r2,8(r19)
    4828:	14400117 	ldw	r17,4(r2)
    482c:	00bfff04 	movi	r2,-4
    4830:	88a2703a 	and	r17,r17,r2
    4834:	8c21c83a 	sub	r16,r17,r16
    4838:	8403fbc4 	addi	r16,r16,4079
    483c:	8020d33a 	srli	r16,r16,12
    4840:	0083ffc4 	movi	r2,4095
    4844:	843fffc4 	addi	r16,r16,-1
    4848:	8020933a 	slli	r16,r16,12
    484c:	1400060e 	bge	r2,r16,4868 <_malloc_trim_r+0x70>
    4850:	000b883a 	mov	r5,zero
    4854:	9009883a 	mov	r4,r18
    4858:	0006c1c0 	call	6c1c <_sbrk_r>
    485c:	98c00217 	ldw	r3,8(r19)
    4860:	1c47883a 	add	r3,r3,r17
    4864:	10c00a26 	beq	r2,r3,4890 <_malloc_trim_r+0x98>
    4868:	9009883a 	mov	r4,r18
    486c:	000d4040 	call	d404 <__malloc_unlock>
    4870:	0005883a 	mov	r2,zero
    4874:	dfc00417 	ldw	ra,16(sp)
    4878:	dcc00317 	ldw	r19,12(sp)
    487c:	dc800217 	ldw	r18,8(sp)
    4880:	dc400117 	ldw	r17,4(sp)
    4884:	dc000017 	ldw	r16,0(sp)
    4888:	dec00504 	addi	sp,sp,20
    488c:	f800283a 	ret
    4890:	040bc83a 	sub	r5,zero,r16
    4894:	9009883a 	mov	r4,r18
    4898:	0006c1c0 	call	6c1c <_sbrk_r>
    489c:	00ffffc4 	movi	r3,-1
    48a0:	10c00d26 	beq	r2,r3,48d8 <_malloc_trim_r+0xe0>
    48a4:	00c00074 	movhi	r3,1
    48a8:	18d0ce04 	addi	r3,r3,17208
    48ac:	18800017 	ldw	r2,0(r3)
    48b0:	99000217 	ldw	r4,8(r19)
    48b4:	8c23c83a 	sub	r17,r17,r16
    48b8:	8c400054 	ori	r17,r17,1
    48bc:	1421c83a 	sub	r16,r2,r16
    48c0:	24400115 	stw	r17,4(r4)
    48c4:	9009883a 	mov	r4,r18
    48c8:	1c000015 	stw	r16,0(r3)
    48cc:	000d4040 	call	d404 <__malloc_unlock>
    48d0:	00800044 	movi	r2,1
    48d4:	003fe706 	br	4874 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004874>
    48d8:	000b883a 	mov	r5,zero
    48dc:	9009883a 	mov	r4,r18
    48e0:	0006c1c0 	call	6c1c <_sbrk_r>
    48e4:	99000217 	ldw	r4,8(r19)
    48e8:	014003c4 	movi	r5,15
    48ec:	1107c83a 	sub	r3,r2,r4
    48f0:	28ffdd0e 	bge	r5,r3,4868 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004868>
    48f4:	01400074 	movhi	r5,1
    48f8:	29496304 	addi	r5,r5,9612
    48fc:	29400017 	ldw	r5,0(r5)
    4900:	18c00054 	ori	r3,r3,1
    4904:	20c00115 	stw	r3,4(r4)
    4908:	00c00074 	movhi	r3,1
    490c:	1145c83a 	sub	r2,r2,r5
    4910:	18d0ce04 	addi	r3,r3,17208
    4914:	18800015 	stw	r2,0(r3)
    4918:	003fd306 	br	4868 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004868>

0000491c <_free_r>:
    491c:	28004126 	beq	r5,zero,4a24 <_free_r+0x108>
    4920:	defffd04 	addi	sp,sp,-12
    4924:	dc400115 	stw	r17,4(sp)
    4928:	dc000015 	stw	r16,0(sp)
    492c:	2023883a 	mov	r17,r4
    4930:	2821883a 	mov	r16,r5
    4934:	dfc00215 	stw	ra,8(sp)
    4938:	000d3e00 	call	d3e0 <__malloc_lock>
    493c:	81ffff17 	ldw	r7,-4(r16)
    4940:	00bfff84 	movi	r2,-2
    4944:	01000074 	movhi	r4,1
    4948:	81bffe04 	addi	r6,r16,-8
    494c:	3884703a 	and	r2,r7,r2
    4950:	21034a04 	addi	r4,r4,3368
    4954:	308b883a 	add	r5,r6,r2
    4958:	2a400117 	ldw	r9,4(r5)
    495c:	22000217 	ldw	r8,8(r4)
    4960:	00ffff04 	movi	r3,-4
    4964:	48c6703a 	and	r3,r9,r3
    4968:	2a005726 	beq	r5,r8,4ac8 <_free_r+0x1ac>
    496c:	28c00115 	stw	r3,4(r5)
    4970:	39c0004c 	andi	r7,r7,1
    4974:	3800091e 	bne	r7,zero,499c <_free_r+0x80>
    4978:	823ffe17 	ldw	r8,-8(r16)
    497c:	22400204 	addi	r9,r4,8
    4980:	320dc83a 	sub	r6,r6,r8
    4984:	31c00217 	ldw	r7,8(r6)
    4988:	1205883a 	add	r2,r2,r8
    498c:	3a406526 	beq	r7,r9,4b24 <_free_r+0x208>
    4990:	32000317 	ldw	r8,12(r6)
    4994:	3a000315 	stw	r8,12(r7)
    4998:	41c00215 	stw	r7,8(r8)
    499c:	28cf883a 	add	r7,r5,r3
    49a0:	39c00117 	ldw	r7,4(r7)
    49a4:	39c0004c 	andi	r7,r7,1
    49a8:	38003a26 	beq	r7,zero,4a94 <_free_r+0x178>
    49ac:	10c00054 	ori	r3,r2,1
    49b0:	30c00115 	stw	r3,4(r6)
    49b4:	3087883a 	add	r3,r6,r2
    49b8:	18800015 	stw	r2,0(r3)
    49bc:	00c07fc4 	movi	r3,511
    49c0:	18801936 	bltu	r3,r2,4a28 <_free_r+0x10c>
    49c4:	1004d0fa 	srli	r2,r2,3
    49c8:	01c00044 	movi	r7,1
    49cc:	21400117 	ldw	r5,4(r4)
    49d0:	10c00044 	addi	r3,r2,1
    49d4:	18c7883a 	add	r3,r3,r3
    49d8:	1005d0ba 	srai	r2,r2,2
    49dc:	18c7883a 	add	r3,r3,r3
    49e0:	18c7883a 	add	r3,r3,r3
    49e4:	1907883a 	add	r3,r3,r4
    49e8:	3884983a 	sll	r2,r7,r2
    49ec:	19c00017 	ldw	r7,0(r3)
    49f0:	1a3ffe04 	addi	r8,r3,-8
    49f4:	1144b03a 	or	r2,r2,r5
    49f8:	32000315 	stw	r8,12(r6)
    49fc:	31c00215 	stw	r7,8(r6)
    4a00:	20800115 	stw	r2,4(r4)
    4a04:	19800015 	stw	r6,0(r3)
    4a08:	39800315 	stw	r6,12(r7)
    4a0c:	8809883a 	mov	r4,r17
    4a10:	dfc00217 	ldw	ra,8(sp)
    4a14:	dc400117 	ldw	r17,4(sp)
    4a18:	dc000017 	ldw	r16,0(sp)
    4a1c:	dec00304 	addi	sp,sp,12
    4a20:	000d4041 	jmpi	d404 <__malloc_unlock>
    4a24:	f800283a 	ret
    4a28:	100ad27a 	srli	r5,r2,9
    4a2c:	00c00104 	movi	r3,4
    4a30:	19404a36 	bltu	r3,r5,4b5c <_free_r+0x240>
    4a34:	100ad1ba 	srli	r5,r2,6
    4a38:	28c00e44 	addi	r3,r5,57
    4a3c:	18c7883a 	add	r3,r3,r3
    4a40:	29400e04 	addi	r5,r5,56
    4a44:	18c7883a 	add	r3,r3,r3
    4a48:	18c7883a 	add	r3,r3,r3
    4a4c:	1909883a 	add	r4,r3,r4
    4a50:	20c00017 	ldw	r3,0(r4)
    4a54:	01c00074 	movhi	r7,1
    4a58:	213ffe04 	addi	r4,r4,-8
    4a5c:	39c34a04 	addi	r7,r7,3368
    4a60:	20c04426 	beq	r4,r3,4b74 <_free_r+0x258>
    4a64:	01ffff04 	movi	r7,-4
    4a68:	19400117 	ldw	r5,4(r3)
    4a6c:	29ca703a 	and	r5,r5,r7
    4a70:	1140022e 	bgeu	r2,r5,4a7c <_free_r+0x160>
    4a74:	18c00217 	ldw	r3,8(r3)
    4a78:	20fffb1e 	bne	r4,r3,4a68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a68>
    4a7c:	19000317 	ldw	r4,12(r3)
    4a80:	31000315 	stw	r4,12(r6)
    4a84:	30c00215 	stw	r3,8(r6)
    4a88:	21800215 	stw	r6,8(r4)
    4a8c:	19800315 	stw	r6,12(r3)
    4a90:	003fde06 	br	4a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a0c>
    4a94:	29c00217 	ldw	r7,8(r5)
    4a98:	10c5883a 	add	r2,r2,r3
    4a9c:	00c00074 	movhi	r3,1
    4aa0:	18c34c04 	addi	r3,r3,3376
    4aa4:	38c03b26 	beq	r7,r3,4b94 <_free_r+0x278>
    4aa8:	2a000317 	ldw	r8,12(r5)
    4aac:	11400054 	ori	r5,r2,1
    4ab0:	3087883a 	add	r3,r6,r2
    4ab4:	3a000315 	stw	r8,12(r7)
    4ab8:	41c00215 	stw	r7,8(r8)
    4abc:	31400115 	stw	r5,4(r6)
    4ac0:	18800015 	stw	r2,0(r3)
    4ac4:	003fbd06 	br	49bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00049bc>
    4ac8:	39c0004c 	andi	r7,r7,1
    4acc:	10c5883a 	add	r2,r2,r3
    4ad0:	3800071e 	bne	r7,zero,4af0 <_free_r+0x1d4>
    4ad4:	81fffe17 	ldw	r7,-8(r16)
    4ad8:	31cdc83a 	sub	r6,r6,r7
    4adc:	30c00317 	ldw	r3,12(r6)
    4ae0:	31400217 	ldw	r5,8(r6)
    4ae4:	11c5883a 	add	r2,r2,r7
    4ae8:	28c00315 	stw	r3,12(r5)
    4aec:	19400215 	stw	r5,8(r3)
    4af0:	10c00054 	ori	r3,r2,1
    4af4:	30c00115 	stw	r3,4(r6)
    4af8:	00c00074 	movhi	r3,1
    4afc:	18c96404 	addi	r3,r3,9616
    4b00:	18c00017 	ldw	r3,0(r3)
    4b04:	21800215 	stw	r6,8(r4)
    4b08:	10ffc036 	bltu	r2,r3,4a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a0c>
    4b0c:	00800074 	movhi	r2,1
    4b10:	1090c504 	addi	r2,r2,17172
    4b14:	11400017 	ldw	r5,0(r2)
    4b18:	8809883a 	mov	r4,r17
    4b1c:	00047f80 	call	47f8 <_malloc_trim_r>
    4b20:	003fba06 	br	4a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a0c>
    4b24:	28c9883a 	add	r4,r5,r3
    4b28:	21000117 	ldw	r4,4(r4)
    4b2c:	2100004c 	andi	r4,r4,1
    4b30:	2000391e 	bne	r4,zero,4c18 <_free_r+0x2fc>
    4b34:	29c00217 	ldw	r7,8(r5)
    4b38:	29000317 	ldw	r4,12(r5)
    4b3c:	1885883a 	add	r2,r3,r2
    4b40:	10c00054 	ori	r3,r2,1
    4b44:	39000315 	stw	r4,12(r7)
    4b48:	21c00215 	stw	r7,8(r4)
    4b4c:	30c00115 	stw	r3,4(r6)
    4b50:	308d883a 	add	r6,r6,r2
    4b54:	30800015 	stw	r2,0(r6)
    4b58:	003fac06 	br	4a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a0c>
    4b5c:	00c00504 	movi	r3,20
    4b60:	19401536 	bltu	r3,r5,4bb8 <_free_r+0x29c>
    4b64:	28c01704 	addi	r3,r5,92
    4b68:	18c7883a 	add	r3,r3,r3
    4b6c:	294016c4 	addi	r5,r5,91
    4b70:	003fb406 	br	4a44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a44>
    4b74:	280bd0ba 	srai	r5,r5,2
    4b78:	00c00044 	movi	r3,1
    4b7c:	38800117 	ldw	r2,4(r7)
    4b80:	194a983a 	sll	r5,r3,r5
    4b84:	2007883a 	mov	r3,r4
    4b88:	2884b03a 	or	r2,r5,r2
    4b8c:	38800115 	stw	r2,4(r7)
    4b90:	003fbb06 	br	4a80 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a80>
    4b94:	21800515 	stw	r6,20(r4)
    4b98:	21800415 	stw	r6,16(r4)
    4b9c:	10c00054 	ori	r3,r2,1
    4ba0:	31c00315 	stw	r7,12(r6)
    4ba4:	31c00215 	stw	r7,8(r6)
    4ba8:	30c00115 	stw	r3,4(r6)
    4bac:	308d883a 	add	r6,r6,r2
    4bb0:	30800015 	stw	r2,0(r6)
    4bb4:	003f9506 	br	4a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a0c>
    4bb8:	00c01504 	movi	r3,84
    4bbc:	19400536 	bltu	r3,r5,4bd4 <_free_r+0x2b8>
    4bc0:	100ad33a 	srli	r5,r2,12
    4bc4:	28c01bc4 	addi	r3,r5,111
    4bc8:	18c7883a 	add	r3,r3,r3
    4bcc:	29401b84 	addi	r5,r5,110
    4bd0:	003f9c06 	br	4a44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a44>
    4bd4:	00c05504 	movi	r3,340
    4bd8:	19400536 	bltu	r3,r5,4bf0 <_free_r+0x2d4>
    4bdc:	100ad3fa 	srli	r5,r2,15
    4be0:	28c01e04 	addi	r3,r5,120
    4be4:	18c7883a 	add	r3,r3,r3
    4be8:	29401dc4 	addi	r5,r5,119
    4bec:	003f9506 	br	4a44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a44>
    4bf0:	00c15504 	movi	r3,1364
    4bf4:	19400536 	bltu	r3,r5,4c0c <_free_r+0x2f0>
    4bf8:	100ad4ba 	srli	r5,r2,18
    4bfc:	28c01f44 	addi	r3,r5,125
    4c00:	18c7883a 	add	r3,r3,r3
    4c04:	29401f04 	addi	r5,r5,124
    4c08:	003f8e06 	br	4a44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a44>
    4c0c:	00c03f84 	movi	r3,254
    4c10:	01401f84 	movi	r5,126
    4c14:	003f8b06 	br	4a44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a44>
    4c18:	10c00054 	ori	r3,r2,1
    4c1c:	30c00115 	stw	r3,4(r6)
    4c20:	308d883a 	add	r6,r6,r2
    4c24:	30800015 	stw	r2,0(r6)
    4c28:	003f7806 	br	4a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004a0c>

00004c2c <_fwalk>:
    4c2c:	defff704 	addi	sp,sp,-36
    4c30:	dd000415 	stw	r20,16(sp)
    4c34:	dfc00815 	stw	ra,32(sp)
    4c38:	ddc00715 	stw	r23,28(sp)
    4c3c:	dd800615 	stw	r22,24(sp)
    4c40:	dd400515 	stw	r21,20(sp)
    4c44:	dcc00315 	stw	r19,12(sp)
    4c48:	dc800215 	stw	r18,8(sp)
    4c4c:	dc400115 	stw	r17,4(sp)
    4c50:	dc000015 	stw	r16,0(sp)
    4c54:	2500b804 	addi	r20,r4,736
    4c58:	a0002326 	beq	r20,zero,4ce8 <_fwalk+0xbc>
    4c5c:	282b883a 	mov	r21,r5
    4c60:	002f883a 	mov	r23,zero
    4c64:	05800044 	movi	r22,1
    4c68:	04ffffc4 	movi	r19,-1
    4c6c:	a4400117 	ldw	r17,4(r20)
    4c70:	a4800217 	ldw	r18,8(r20)
    4c74:	8c7fffc4 	addi	r17,r17,-1
    4c78:	88000d16 	blt	r17,zero,4cb0 <_fwalk+0x84>
    4c7c:	94000304 	addi	r16,r18,12
    4c80:	94800384 	addi	r18,r18,14
    4c84:	8080000b 	ldhu	r2,0(r16)
    4c88:	8c7fffc4 	addi	r17,r17,-1
    4c8c:	813ffd04 	addi	r4,r16,-12
    4c90:	b080042e 	bgeu	r22,r2,4ca4 <_fwalk+0x78>
    4c94:	9080000f 	ldh	r2,0(r18)
    4c98:	14c00226 	beq	r2,r19,4ca4 <_fwalk+0x78>
    4c9c:	a83ee83a 	callr	r21
    4ca0:	b8aeb03a 	or	r23,r23,r2
    4ca4:	84001a04 	addi	r16,r16,104
    4ca8:	94801a04 	addi	r18,r18,104
    4cac:	8cfff51e 	bne	r17,r19,4c84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004c84>
    4cb0:	a5000017 	ldw	r20,0(r20)
    4cb4:	a03fed1e 	bne	r20,zero,4c6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004c6c>
    4cb8:	b805883a 	mov	r2,r23
    4cbc:	dfc00817 	ldw	ra,32(sp)
    4cc0:	ddc00717 	ldw	r23,28(sp)
    4cc4:	dd800617 	ldw	r22,24(sp)
    4cc8:	dd400517 	ldw	r21,20(sp)
    4ccc:	dd000417 	ldw	r20,16(sp)
    4cd0:	dcc00317 	ldw	r19,12(sp)
    4cd4:	dc800217 	ldw	r18,8(sp)
    4cd8:	dc400117 	ldw	r17,4(sp)
    4cdc:	dc000017 	ldw	r16,0(sp)
    4ce0:	dec00904 	addi	sp,sp,36
    4ce4:	f800283a 	ret
    4ce8:	002f883a 	mov	r23,zero
    4cec:	003ff206 	br	4cb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004cb8>

00004cf0 <_fwalk_reent>:
    4cf0:	defff704 	addi	sp,sp,-36
    4cf4:	dd000415 	stw	r20,16(sp)
    4cf8:	dfc00815 	stw	ra,32(sp)
    4cfc:	ddc00715 	stw	r23,28(sp)
    4d00:	dd800615 	stw	r22,24(sp)
    4d04:	dd400515 	stw	r21,20(sp)
    4d08:	dcc00315 	stw	r19,12(sp)
    4d0c:	dc800215 	stw	r18,8(sp)
    4d10:	dc400115 	stw	r17,4(sp)
    4d14:	dc000015 	stw	r16,0(sp)
    4d18:	2500b804 	addi	r20,r4,736
    4d1c:	a0002326 	beq	r20,zero,4dac <_fwalk_reent+0xbc>
    4d20:	282b883a 	mov	r21,r5
    4d24:	2027883a 	mov	r19,r4
    4d28:	002f883a 	mov	r23,zero
    4d2c:	05800044 	movi	r22,1
    4d30:	04bfffc4 	movi	r18,-1
    4d34:	a4400117 	ldw	r17,4(r20)
    4d38:	a4000217 	ldw	r16,8(r20)
    4d3c:	8c7fffc4 	addi	r17,r17,-1
    4d40:	88000c16 	blt	r17,zero,4d74 <_fwalk_reent+0x84>
    4d44:	84000304 	addi	r16,r16,12
    4d48:	8080000b 	ldhu	r2,0(r16)
    4d4c:	8c7fffc4 	addi	r17,r17,-1
    4d50:	817ffd04 	addi	r5,r16,-12
    4d54:	b080052e 	bgeu	r22,r2,4d6c <_fwalk_reent+0x7c>
    4d58:	8080008f 	ldh	r2,2(r16)
    4d5c:	9809883a 	mov	r4,r19
    4d60:	14800226 	beq	r2,r18,4d6c <_fwalk_reent+0x7c>
    4d64:	a83ee83a 	callr	r21
    4d68:	b8aeb03a 	or	r23,r23,r2
    4d6c:	84001a04 	addi	r16,r16,104
    4d70:	8cbff51e 	bne	r17,r18,4d48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004d48>
    4d74:	a5000017 	ldw	r20,0(r20)
    4d78:	a03fee1e 	bne	r20,zero,4d34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004d34>
    4d7c:	b805883a 	mov	r2,r23
    4d80:	dfc00817 	ldw	ra,32(sp)
    4d84:	ddc00717 	ldw	r23,28(sp)
    4d88:	dd800617 	ldw	r22,24(sp)
    4d8c:	dd400517 	ldw	r21,20(sp)
    4d90:	dd000417 	ldw	r20,16(sp)
    4d94:	dcc00317 	ldw	r19,12(sp)
    4d98:	dc800217 	ldw	r18,8(sp)
    4d9c:	dc400117 	ldw	r17,4(sp)
    4da0:	dc000017 	ldw	r16,0(sp)
    4da4:	dec00904 	addi	sp,sp,36
    4da8:	f800283a 	ret
    4dac:	002f883a 	mov	r23,zero
    4db0:	003ff206 	br	4d7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004d7c>

00004db4 <_setlocale_r>:
    4db4:	30001b26 	beq	r6,zero,4e24 <_setlocale_r+0x70>
    4db8:	01400074 	movhi	r5,1
    4dbc:	defffe04 	addi	sp,sp,-8
    4dc0:	29414a04 	addi	r5,r5,1320
    4dc4:	3009883a 	mov	r4,r6
    4dc8:	dc000015 	stw	r16,0(sp)
    4dcc:	dfc00115 	stw	ra,4(sp)
    4dd0:	3021883a 	mov	r16,r6
    4dd4:	0006dac0 	call	6dac <strcmp>
    4dd8:	1000061e 	bne	r2,zero,4df4 <_setlocale_r+0x40>
    4ddc:	00800074 	movhi	r2,1
    4de0:	10814904 	addi	r2,r2,1316
    4de4:	dfc00117 	ldw	ra,4(sp)
    4de8:	dc000017 	ldw	r16,0(sp)
    4dec:	dec00204 	addi	sp,sp,8
    4df0:	f800283a 	ret
    4df4:	01400074 	movhi	r5,1
    4df8:	29414904 	addi	r5,r5,1316
    4dfc:	8009883a 	mov	r4,r16
    4e00:	0006dac0 	call	6dac <strcmp>
    4e04:	103ff526 	beq	r2,zero,4ddc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004ddc>
    4e08:	01400074 	movhi	r5,1
    4e0c:	29413404 	addi	r5,r5,1232
    4e10:	8009883a 	mov	r4,r16
    4e14:	0006dac0 	call	6dac <strcmp>
    4e18:	103ff026 	beq	r2,zero,4ddc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004ddc>
    4e1c:	0005883a 	mov	r2,zero
    4e20:	003ff006 	br	4de4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004de4>
    4e24:	00800074 	movhi	r2,1
    4e28:	10814904 	addi	r2,r2,1316
    4e2c:	f800283a 	ret

00004e30 <__locale_charset>:
    4e30:	00800074 	movhi	r2,1
    4e34:	10833404 	addi	r2,r2,3280
    4e38:	f800283a 	ret

00004e3c <__locale_mb_cur_max>:
    4e3c:	00800074 	movhi	r2,1
    4e40:	10896204 	addi	r2,r2,9608
    4e44:	10800017 	ldw	r2,0(r2)
    4e48:	f800283a 	ret

00004e4c <__locale_msgcharset>:
    4e4c:	00800074 	movhi	r2,1
    4e50:	10832c04 	addi	r2,r2,3248
    4e54:	f800283a 	ret

00004e58 <__locale_cjk_lang>:
    4e58:	0005883a 	mov	r2,zero
    4e5c:	f800283a 	ret

00004e60 <_localeconv_r>:
    4e60:	00800074 	movhi	r2,1
    4e64:	10833c04 	addi	r2,r2,3312
    4e68:	f800283a 	ret

00004e6c <setlocale>:
    4e6c:	00800074 	movhi	r2,1
    4e70:	10896104 	addi	r2,r2,9604
    4e74:	280d883a 	mov	r6,r5
    4e78:	200b883a 	mov	r5,r4
    4e7c:	11000017 	ldw	r4,0(r2)
    4e80:	0004db41 	jmpi	4db4 <_setlocale_r>

00004e84 <localeconv>:
    4e84:	00800074 	movhi	r2,1
    4e88:	10833c04 	addi	r2,r2,3312
    4e8c:	f800283a 	ret

00004e90 <__smakebuf_r>:
    4e90:	2880030b 	ldhu	r2,12(r5)
    4e94:	10c0008c 	andi	r3,r2,2
    4e98:	1800411e 	bne	r3,zero,4fa0 <__smakebuf_r+0x110>
    4e9c:	deffec04 	addi	sp,sp,-80
    4ea0:	dc000f15 	stw	r16,60(sp)
    4ea4:	2821883a 	mov	r16,r5
    4ea8:	2940038f 	ldh	r5,14(r5)
    4eac:	dc401015 	stw	r17,64(sp)
    4eb0:	dfc01315 	stw	ra,76(sp)
    4eb4:	dcc01215 	stw	r19,72(sp)
    4eb8:	dc801115 	stw	r18,68(sp)
    4ebc:	2023883a 	mov	r17,r4
    4ec0:	28001c16 	blt	r5,zero,4f34 <__smakebuf_r+0xa4>
    4ec4:	d80d883a 	mov	r6,sp
    4ec8:	00089ec0 	call	89ec <_fstat_r>
    4ecc:	10001816 	blt	r2,zero,4f30 <__smakebuf_r+0xa0>
    4ed0:	d8800117 	ldw	r2,4(sp)
    4ed4:	00e00014 	movui	r3,32768
    4ed8:	10bc000c 	andi	r2,r2,61440
    4edc:	14c80020 	cmpeqi	r19,r2,8192
    4ee0:	10c03726 	beq	r2,r3,4fc0 <__smakebuf_r+0x130>
    4ee4:	80c0030b 	ldhu	r3,12(r16)
    4ee8:	18c20014 	ori	r3,r3,2048
    4eec:	80c0030d 	sth	r3,12(r16)
    4ef0:	00c80004 	movi	r3,8192
    4ef4:	10c0521e 	bne	r2,r3,5040 <__smakebuf_r+0x1b0>
    4ef8:	8140038f 	ldh	r5,14(r16)
    4efc:	8809883a 	mov	r4,r17
    4f00:	0008f040 	call	8f04 <_isatty_r>
    4f04:	10004c26 	beq	r2,zero,5038 <__smakebuf_r+0x1a8>
    4f08:	8080030b 	ldhu	r2,12(r16)
    4f0c:	80c010c4 	addi	r3,r16,67
    4f10:	80c00015 	stw	r3,0(r16)
    4f14:	10800054 	ori	r2,r2,1
    4f18:	8080030d 	sth	r2,12(r16)
    4f1c:	00800044 	movi	r2,1
    4f20:	80c00415 	stw	r3,16(r16)
    4f24:	80800515 	stw	r2,20(r16)
    4f28:	04810004 	movi	r18,1024
    4f2c:	00000706 	br	4f4c <__smakebuf_r+0xbc>
    4f30:	8080030b 	ldhu	r2,12(r16)
    4f34:	10c0200c 	andi	r3,r2,128
    4f38:	18001f1e 	bne	r3,zero,4fb8 <__smakebuf_r+0x128>
    4f3c:	04810004 	movi	r18,1024
    4f40:	10820014 	ori	r2,r2,2048
    4f44:	8080030d 	sth	r2,12(r16)
    4f48:	0027883a 	mov	r19,zero
    4f4c:	900b883a 	mov	r5,r18
    4f50:	8809883a 	mov	r4,r17
    4f54:	000504c0 	call	504c <_malloc_r>
    4f58:	10002c26 	beq	r2,zero,500c <__smakebuf_r+0x17c>
    4f5c:	80c0030b 	ldhu	r3,12(r16)
    4f60:	01000034 	movhi	r4,0
    4f64:	21111804 	addi	r4,r4,17504
    4f68:	89000f15 	stw	r4,60(r17)
    4f6c:	18c02014 	ori	r3,r3,128
    4f70:	80c0030d 	sth	r3,12(r16)
    4f74:	80800015 	stw	r2,0(r16)
    4f78:	80800415 	stw	r2,16(r16)
    4f7c:	84800515 	stw	r18,20(r16)
    4f80:	98001a1e 	bne	r19,zero,4fec <__smakebuf_r+0x15c>
    4f84:	dfc01317 	ldw	ra,76(sp)
    4f88:	dcc01217 	ldw	r19,72(sp)
    4f8c:	dc801117 	ldw	r18,68(sp)
    4f90:	dc401017 	ldw	r17,64(sp)
    4f94:	dc000f17 	ldw	r16,60(sp)
    4f98:	dec01404 	addi	sp,sp,80
    4f9c:	f800283a 	ret
    4fa0:	288010c4 	addi	r2,r5,67
    4fa4:	28800015 	stw	r2,0(r5)
    4fa8:	28800415 	stw	r2,16(r5)
    4fac:	00800044 	movi	r2,1
    4fb0:	28800515 	stw	r2,20(r5)
    4fb4:	f800283a 	ret
    4fb8:	04801004 	movi	r18,64
    4fbc:	003fe006 	br	4f40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f40>
    4fc0:	81000a17 	ldw	r4,40(r16)
    4fc4:	00c00034 	movhi	r3,0
    4fc8:	18db5204 	addi	r3,r3,27976
    4fcc:	20ffc51e 	bne	r4,r3,4ee4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004ee4>
    4fd0:	8080030b 	ldhu	r2,12(r16)
    4fd4:	04810004 	movi	r18,1024
    4fd8:	84801315 	stw	r18,76(r16)
    4fdc:	1484b03a 	or	r2,r2,r18
    4fe0:	8080030d 	sth	r2,12(r16)
    4fe4:	0027883a 	mov	r19,zero
    4fe8:	003fd806 	br	4f4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f4c>
    4fec:	8140038f 	ldh	r5,14(r16)
    4ff0:	8809883a 	mov	r4,r17
    4ff4:	0008f040 	call	8f04 <_isatty_r>
    4ff8:	103fe226 	beq	r2,zero,4f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f84>
    4ffc:	8080030b 	ldhu	r2,12(r16)
    5000:	10800054 	ori	r2,r2,1
    5004:	8080030d 	sth	r2,12(r16)
    5008:	003fde06 	br	4f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f84>
    500c:	8080030b 	ldhu	r2,12(r16)
    5010:	10c0800c 	andi	r3,r2,512
    5014:	183fdb1e 	bne	r3,zero,4f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f84>
    5018:	10800094 	ori	r2,r2,2
    501c:	80c010c4 	addi	r3,r16,67
    5020:	8080030d 	sth	r2,12(r16)
    5024:	00800044 	movi	r2,1
    5028:	80c00015 	stw	r3,0(r16)
    502c:	80c00415 	stw	r3,16(r16)
    5030:	80800515 	stw	r2,20(r16)
    5034:	003fd306 	br	4f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f84>
    5038:	04810004 	movi	r18,1024
    503c:	003fc306 	br	4f4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f4c>
    5040:	0027883a 	mov	r19,zero
    5044:	04810004 	movi	r18,1024
    5048:	003fc006 	br	4f4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f4c>

0000504c <_malloc_r>:
    504c:	defff504 	addi	sp,sp,-44
    5050:	dc800315 	stw	r18,12(sp)
    5054:	dfc00a15 	stw	ra,40(sp)
    5058:	df000915 	stw	fp,36(sp)
    505c:	ddc00815 	stw	r23,32(sp)
    5060:	dd800715 	stw	r22,28(sp)
    5064:	dd400615 	stw	r21,24(sp)
    5068:	dd000515 	stw	r20,20(sp)
    506c:	dcc00415 	stw	r19,16(sp)
    5070:	dc400215 	stw	r17,8(sp)
    5074:	dc000115 	stw	r16,4(sp)
    5078:	288002c4 	addi	r2,r5,11
    507c:	00c00584 	movi	r3,22
    5080:	2025883a 	mov	r18,r4
    5084:	18807f2e 	bgeu	r3,r2,5284 <_malloc_r+0x238>
    5088:	047ffe04 	movi	r17,-8
    508c:	1462703a 	and	r17,r2,r17
    5090:	8800a316 	blt	r17,zero,5320 <_malloc_r+0x2d4>
    5094:	8940a236 	bltu	r17,r5,5320 <_malloc_r+0x2d4>
    5098:	000d3e00 	call	d3e0 <__malloc_lock>
    509c:	00807dc4 	movi	r2,503
    50a0:	1441e92e 	bgeu	r2,r17,5848 <_malloc_r+0x7fc>
    50a4:	8804d27a 	srli	r2,r17,9
    50a8:	1000a126 	beq	r2,zero,5330 <_malloc_r+0x2e4>
    50ac:	00c00104 	movi	r3,4
    50b0:	18811e36 	bltu	r3,r2,552c <_malloc_r+0x4e0>
    50b4:	8804d1ba 	srli	r2,r17,6
    50b8:	12000e44 	addi	r8,r2,57
    50bc:	11c00e04 	addi	r7,r2,56
    50c0:	4209883a 	add	r4,r8,r8
    50c4:	04c00074 	movhi	r19,1
    50c8:	2109883a 	add	r4,r4,r4
    50cc:	9cc34a04 	addi	r19,r19,3368
    50d0:	2109883a 	add	r4,r4,r4
    50d4:	9909883a 	add	r4,r19,r4
    50d8:	24000117 	ldw	r16,4(r4)
    50dc:	213ffe04 	addi	r4,r4,-8
    50e0:	24009726 	beq	r4,r16,5340 <_malloc_r+0x2f4>
    50e4:	80800117 	ldw	r2,4(r16)
    50e8:	01bfff04 	movi	r6,-4
    50ec:	014003c4 	movi	r5,15
    50f0:	1184703a 	and	r2,r2,r6
    50f4:	1447c83a 	sub	r3,r2,r17
    50f8:	28c00716 	blt	r5,r3,5118 <_malloc_r+0xcc>
    50fc:	1800920e 	bge	r3,zero,5348 <_malloc_r+0x2fc>
    5100:	84000317 	ldw	r16,12(r16)
    5104:	24008e26 	beq	r4,r16,5340 <_malloc_r+0x2f4>
    5108:	80800117 	ldw	r2,4(r16)
    510c:	1184703a 	and	r2,r2,r6
    5110:	1447c83a 	sub	r3,r2,r17
    5114:	28fff90e 	bge	r5,r3,50fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050fc>
    5118:	3809883a 	mov	r4,r7
    511c:	01800074 	movhi	r6,1
    5120:	9c000417 	ldw	r16,16(r19)
    5124:	31834a04 	addi	r6,r6,3368
    5128:	32000204 	addi	r8,r6,8
    512c:	82013426 	beq	r16,r8,5600 <_malloc_r+0x5b4>
    5130:	80c00117 	ldw	r3,4(r16)
    5134:	00bfff04 	movi	r2,-4
    5138:	188e703a 	and	r7,r3,r2
    513c:	3c45c83a 	sub	r2,r7,r17
    5140:	00c003c4 	movi	r3,15
    5144:	18811f16 	blt	r3,r2,55c4 <_malloc_r+0x578>
    5148:	32000515 	stw	r8,20(r6)
    514c:	32000415 	stw	r8,16(r6)
    5150:	10007f0e 	bge	r2,zero,5350 <_malloc_r+0x304>
    5154:	00807fc4 	movi	r2,511
    5158:	11c0fd36 	bltu	r2,r7,5550 <_malloc_r+0x504>
    515c:	3806d0fa 	srli	r3,r7,3
    5160:	01c00044 	movi	r7,1
    5164:	30800117 	ldw	r2,4(r6)
    5168:	19400044 	addi	r5,r3,1
    516c:	294b883a 	add	r5,r5,r5
    5170:	1807d0ba 	srai	r3,r3,2
    5174:	294b883a 	add	r5,r5,r5
    5178:	294b883a 	add	r5,r5,r5
    517c:	298b883a 	add	r5,r5,r6
    5180:	38c6983a 	sll	r3,r7,r3
    5184:	29c00017 	ldw	r7,0(r5)
    5188:	2a7ffe04 	addi	r9,r5,-8
    518c:	1886b03a 	or	r3,r3,r2
    5190:	82400315 	stw	r9,12(r16)
    5194:	81c00215 	stw	r7,8(r16)
    5198:	30c00115 	stw	r3,4(r6)
    519c:	2c000015 	stw	r16,0(r5)
    51a0:	3c000315 	stw	r16,12(r7)
    51a4:	2005d0ba 	srai	r2,r4,2
    51a8:	01400044 	movi	r5,1
    51ac:	288a983a 	sll	r5,r5,r2
    51b0:	19406f36 	bltu	r3,r5,5370 <_malloc_r+0x324>
    51b4:	28c4703a 	and	r2,r5,r3
    51b8:	10000a1e 	bne	r2,zero,51e4 <_malloc_r+0x198>
    51bc:	00bfff04 	movi	r2,-4
    51c0:	294b883a 	add	r5,r5,r5
    51c4:	2088703a 	and	r4,r4,r2
    51c8:	28c4703a 	and	r2,r5,r3
    51cc:	21000104 	addi	r4,r4,4
    51d0:	1000041e 	bne	r2,zero,51e4 <_malloc_r+0x198>
    51d4:	294b883a 	add	r5,r5,r5
    51d8:	28c4703a 	and	r2,r5,r3
    51dc:	21000104 	addi	r4,r4,4
    51e0:	103ffc26 	beq	r2,zero,51d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00051d4>
    51e4:	02bfff04 	movi	r10,-4
    51e8:	024003c4 	movi	r9,15
    51ec:	21800044 	addi	r6,r4,1
    51f0:	318d883a 	add	r6,r6,r6
    51f4:	318d883a 	add	r6,r6,r6
    51f8:	318d883a 	add	r6,r6,r6
    51fc:	998d883a 	add	r6,r19,r6
    5200:	333ffe04 	addi	r12,r6,-8
    5204:	2017883a 	mov	r11,r4
    5208:	31800104 	addi	r6,r6,4
    520c:	34000017 	ldw	r16,0(r6)
    5210:	31fffd04 	addi	r7,r6,-12
    5214:	81c0041e 	bne	r16,r7,5228 <_malloc_r+0x1dc>
    5218:	0000fb06 	br	5608 <_malloc_r+0x5bc>
    521c:	1801030e 	bge	r3,zero,562c <_malloc_r+0x5e0>
    5220:	84000317 	ldw	r16,12(r16)
    5224:	81c0f826 	beq	r16,r7,5608 <_malloc_r+0x5bc>
    5228:	80800117 	ldw	r2,4(r16)
    522c:	1284703a 	and	r2,r2,r10
    5230:	1447c83a 	sub	r3,r2,r17
    5234:	48fff90e 	bge	r9,r3,521c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000521c>
    5238:	80800317 	ldw	r2,12(r16)
    523c:	81000217 	ldw	r4,8(r16)
    5240:	89400054 	ori	r5,r17,1
    5244:	81400115 	stw	r5,4(r16)
    5248:	20800315 	stw	r2,12(r4)
    524c:	11000215 	stw	r4,8(r2)
    5250:	8463883a 	add	r17,r16,r17
    5254:	9c400515 	stw	r17,20(r19)
    5258:	9c400415 	stw	r17,16(r19)
    525c:	18800054 	ori	r2,r3,1
    5260:	88800115 	stw	r2,4(r17)
    5264:	8a000315 	stw	r8,12(r17)
    5268:	8a000215 	stw	r8,8(r17)
    526c:	88e3883a 	add	r17,r17,r3
    5270:	88c00015 	stw	r3,0(r17)
    5274:	9009883a 	mov	r4,r18
    5278:	000d4040 	call	d404 <__malloc_unlock>
    527c:	80800204 	addi	r2,r16,8
    5280:	00001b06 	br	52f0 <_malloc_r+0x2a4>
    5284:	04400404 	movi	r17,16
    5288:	89402536 	bltu	r17,r5,5320 <_malloc_r+0x2d4>
    528c:	000d3e00 	call	d3e0 <__malloc_lock>
    5290:	00800184 	movi	r2,6
    5294:	01000084 	movi	r4,2
    5298:	04c00074 	movhi	r19,1
    529c:	1085883a 	add	r2,r2,r2
    52a0:	9cc34a04 	addi	r19,r19,3368
    52a4:	1085883a 	add	r2,r2,r2
    52a8:	9885883a 	add	r2,r19,r2
    52ac:	14000117 	ldw	r16,4(r2)
    52b0:	10fffe04 	addi	r3,r2,-8
    52b4:	80c0d926 	beq	r16,r3,561c <_malloc_r+0x5d0>
    52b8:	80c00117 	ldw	r3,4(r16)
    52bc:	81000317 	ldw	r4,12(r16)
    52c0:	00bfff04 	movi	r2,-4
    52c4:	1884703a 	and	r2,r3,r2
    52c8:	81400217 	ldw	r5,8(r16)
    52cc:	8085883a 	add	r2,r16,r2
    52d0:	10c00117 	ldw	r3,4(r2)
    52d4:	29000315 	stw	r4,12(r5)
    52d8:	21400215 	stw	r5,8(r4)
    52dc:	18c00054 	ori	r3,r3,1
    52e0:	10c00115 	stw	r3,4(r2)
    52e4:	9009883a 	mov	r4,r18
    52e8:	000d4040 	call	d404 <__malloc_unlock>
    52ec:	80800204 	addi	r2,r16,8
    52f0:	dfc00a17 	ldw	ra,40(sp)
    52f4:	df000917 	ldw	fp,36(sp)
    52f8:	ddc00817 	ldw	r23,32(sp)
    52fc:	dd800717 	ldw	r22,28(sp)
    5300:	dd400617 	ldw	r21,24(sp)
    5304:	dd000517 	ldw	r20,20(sp)
    5308:	dcc00417 	ldw	r19,16(sp)
    530c:	dc800317 	ldw	r18,12(sp)
    5310:	dc400217 	ldw	r17,8(sp)
    5314:	dc000117 	ldw	r16,4(sp)
    5318:	dec00b04 	addi	sp,sp,44
    531c:	f800283a 	ret
    5320:	00800304 	movi	r2,12
    5324:	90800015 	stw	r2,0(r18)
    5328:	0005883a 	mov	r2,zero
    532c:	003ff006 	br	52f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052f0>
    5330:	01002004 	movi	r4,128
    5334:	02001004 	movi	r8,64
    5338:	01c00fc4 	movi	r7,63
    533c:	003f6106 	br	50c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050c4>
    5340:	4009883a 	mov	r4,r8
    5344:	003f7506 	br	511c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000511c>
    5348:	81000317 	ldw	r4,12(r16)
    534c:	003fde06 	br	52c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052c8>
    5350:	81c5883a 	add	r2,r16,r7
    5354:	11400117 	ldw	r5,4(r2)
    5358:	9009883a 	mov	r4,r18
    535c:	29400054 	ori	r5,r5,1
    5360:	11400115 	stw	r5,4(r2)
    5364:	000d4040 	call	d404 <__malloc_unlock>
    5368:	80800204 	addi	r2,r16,8
    536c:	003fe006 	br	52f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052f0>
    5370:	9c000217 	ldw	r16,8(r19)
    5374:	00bfff04 	movi	r2,-4
    5378:	85800117 	ldw	r22,4(r16)
    537c:	b0ac703a 	and	r22,r22,r2
    5380:	b4400336 	bltu	r22,r17,5390 <_malloc_r+0x344>
    5384:	b445c83a 	sub	r2,r22,r17
    5388:	00c003c4 	movi	r3,15
    538c:	18805d16 	blt	r3,r2,5504 <_malloc_r+0x4b8>
    5390:	05c00074 	movhi	r23,1
    5394:	00800074 	movhi	r2,1
    5398:	1090c504 	addi	r2,r2,17172
    539c:	bdc96304 	addi	r23,r23,9612
    53a0:	15400017 	ldw	r21,0(r2)
    53a4:	b8c00017 	ldw	r3,0(r23)
    53a8:	00bfffc4 	movi	r2,-1
    53ac:	858d883a 	add	r6,r16,r22
    53b0:	8d6b883a 	add	r21,r17,r21
    53b4:	1880ea26 	beq	r3,r2,5760 <_malloc_r+0x714>
    53b8:	ad4403c4 	addi	r21,r21,4111
    53bc:	00bc0004 	movi	r2,-4096
    53c0:	a8aa703a 	and	r21,r21,r2
    53c4:	a80b883a 	mov	r5,r21
    53c8:	9009883a 	mov	r4,r18
    53cc:	d9800015 	stw	r6,0(sp)
    53d0:	0006c1c0 	call	6c1c <_sbrk_r>
    53d4:	1029883a 	mov	r20,r2
    53d8:	00bfffc4 	movi	r2,-1
    53dc:	d9800017 	ldw	r6,0(sp)
    53e0:	a080e826 	beq	r20,r2,5784 <_malloc_r+0x738>
    53e4:	a180a636 	bltu	r20,r6,5680 <_malloc_r+0x634>
    53e8:	07000074 	movhi	fp,1
    53ec:	e710ce04 	addi	fp,fp,17208
    53f0:	e0800017 	ldw	r2,0(fp)
    53f4:	a887883a 	add	r3,r21,r2
    53f8:	e0c00015 	stw	r3,0(fp)
    53fc:	3500e626 	beq	r6,r20,5798 <_malloc_r+0x74c>
    5400:	b9000017 	ldw	r4,0(r23)
    5404:	00bfffc4 	movi	r2,-1
    5408:	2080ee26 	beq	r4,r2,57c4 <_malloc_r+0x778>
    540c:	a185c83a 	sub	r2,r20,r6
    5410:	10c5883a 	add	r2,r2,r3
    5414:	e0800015 	stw	r2,0(fp)
    5418:	a0c001cc 	andi	r3,r20,7
    541c:	1800bc26 	beq	r3,zero,5710 <_malloc_r+0x6c4>
    5420:	a0e9c83a 	sub	r20,r20,r3
    5424:	00840204 	movi	r2,4104
    5428:	a5000204 	addi	r20,r20,8
    542c:	10c7c83a 	sub	r3,r2,r3
    5430:	a545883a 	add	r2,r20,r21
    5434:	1083ffcc 	andi	r2,r2,4095
    5438:	18abc83a 	sub	r21,r3,r2
    543c:	a80b883a 	mov	r5,r21
    5440:	9009883a 	mov	r4,r18
    5444:	0006c1c0 	call	6c1c <_sbrk_r>
    5448:	00ffffc4 	movi	r3,-1
    544c:	10c0e126 	beq	r2,r3,57d4 <_malloc_r+0x788>
    5450:	1505c83a 	sub	r2,r2,r20
    5454:	1545883a 	add	r2,r2,r21
    5458:	10800054 	ori	r2,r2,1
    545c:	e0c00017 	ldw	r3,0(fp)
    5460:	9d000215 	stw	r20,8(r19)
    5464:	a0800115 	stw	r2,4(r20)
    5468:	a8c7883a 	add	r3,r21,r3
    546c:	e0c00015 	stw	r3,0(fp)
    5470:	84c00e26 	beq	r16,r19,54ac <_malloc_r+0x460>
    5474:	018003c4 	movi	r6,15
    5478:	3580a72e 	bgeu	r6,r22,5718 <_malloc_r+0x6cc>
    547c:	81400117 	ldw	r5,4(r16)
    5480:	013ffe04 	movi	r4,-8
    5484:	b0bffd04 	addi	r2,r22,-12
    5488:	1104703a 	and	r2,r2,r4
    548c:	2900004c 	andi	r4,r5,1
    5490:	2088b03a 	or	r4,r4,r2
    5494:	81000115 	stw	r4,4(r16)
    5498:	01400144 	movi	r5,5
    549c:	8089883a 	add	r4,r16,r2
    54a0:	21400115 	stw	r5,4(r4)
    54a4:	21400215 	stw	r5,8(r4)
    54a8:	3080cd36 	bltu	r6,r2,57e0 <_malloc_r+0x794>
    54ac:	00800074 	movhi	r2,1
    54b0:	1090c404 	addi	r2,r2,17168
    54b4:	11000017 	ldw	r4,0(r2)
    54b8:	20c0012e 	bgeu	r4,r3,54c0 <_malloc_r+0x474>
    54bc:	10c00015 	stw	r3,0(r2)
    54c0:	00800074 	movhi	r2,1
    54c4:	1090c304 	addi	r2,r2,17164
    54c8:	11000017 	ldw	r4,0(r2)
    54cc:	9c000217 	ldw	r16,8(r19)
    54d0:	20c0012e 	bgeu	r4,r3,54d8 <_malloc_r+0x48c>
    54d4:	10c00015 	stw	r3,0(r2)
    54d8:	80c00117 	ldw	r3,4(r16)
    54dc:	00bfff04 	movi	r2,-4
    54e0:	1886703a 	and	r3,r3,r2
    54e4:	1c45c83a 	sub	r2,r3,r17
    54e8:	1c400236 	bltu	r3,r17,54f4 <_malloc_r+0x4a8>
    54ec:	00c003c4 	movi	r3,15
    54f0:	18800416 	blt	r3,r2,5504 <_malloc_r+0x4b8>
    54f4:	9009883a 	mov	r4,r18
    54f8:	000d4040 	call	d404 <__malloc_unlock>
    54fc:	0005883a 	mov	r2,zero
    5500:	003f7b06 	br	52f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052f0>
    5504:	88c00054 	ori	r3,r17,1
    5508:	80c00115 	stw	r3,4(r16)
    550c:	8463883a 	add	r17,r16,r17
    5510:	10800054 	ori	r2,r2,1
    5514:	9c400215 	stw	r17,8(r19)
    5518:	88800115 	stw	r2,4(r17)
    551c:	9009883a 	mov	r4,r18
    5520:	000d4040 	call	d404 <__malloc_unlock>
    5524:	80800204 	addi	r2,r16,8
    5528:	003f7106 	br	52f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052f0>
    552c:	00c00504 	movi	r3,20
    5530:	18804a2e 	bgeu	r3,r2,565c <_malloc_r+0x610>
    5534:	00c01504 	movi	r3,84
    5538:	18806e36 	bltu	r3,r2,56f4 <_malloc_r+0x6a8>
    553c:	8804d33a 	srli	r2,r17,12
    5540:	12001bc4 	addi	r8,r2,111
    5544:	11c01b84 	addi	r7,r2,110
    5548:	4209883a 	add	r4,r8,r8
    554c:	003edd06 	br	50c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050c4>
    5550:	3804d27a 	srli	r2,r7,9
    5554:	00c00104 	movi	r3,4
    5558:	1880442e 	bgeu	r3,r2,566c <_malloc_r+0x620>
    555c:	00c00504 	movi	r3,20
    5560:	18808136 	bltu	r3,r2,5768 <_malloc_r+0x71c>
    5564:	11401704 	addi	r5,r2,92
    5568:	10c016c4 	addi	r3,r2,91
    556c:	294b883a 	add	r5,r5,r5
    5570:	294b883a 	add	r5,r5,r5
    5574:	294b883a 	add	r5,r5,r5
    5578:	994b883a 	add	r5,r19,r5
    557c:	28800017 	ldw	r2,0(r5)
    5580:	01800074 	movhi	r6,1
    5584:	297ffe04 	addi	r5,r5,-8
    5588:	31834a04 	addi	r6,r6,3368
    558c:	28806526 	beq	r5,r2,5724 <_malloc_r+0x6d8>
    5590:	01bfff04 	movi	r6,-4
    5594:	10c00117 	ldw	r3,4(r2)
    5598:	1986703a 	and	r3,r3,r6
    559c:	38c0022e 	bgeu	r7,r3,55a8 <_malloc_r+0x55c>
    55a0:	10800217 	ldw	r2,8(r2)
    55a4:	28bffb1e 	bne	r5,r2,5594 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005594>
    55a8:	11400317 	ldw	r5,12(r2)
    55ac:	98c00117 	ldw	r3,4(r19)
    55b0:	81400315 	stw	r5,12(r16)
    55b4:	80800215 	stw	r2,8(r16)
    55b8:	2c000215 	stw	r16,8(r5)
    55bc:	14000315 	stw	r16,12(r2)
    55c0:	003ef806 	br	51a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00051a4>
    55c4:	88c00054 	ori	r3,r17,1
    55c8:	80c00115 	stw	r3,4(r16)
    55cc:	8463883a 	add	r17,r16,r17
    55d0:	34400515 	stw	r17,20(r6)
    55d4:	34400415 	stw	r17,16(r6)
    55d8:	10c00054 	ori	r3,r2,1
    55dc:	8a000315 	stw	r8,12(r17)
    55e0:	8a000215 	stw	r8,8(r17)
    55e4:	88c00115 	stw	r3,4(r17)
    55e8:	88a3883a 	add	r17,r17,r2
    55ec:	88800015 	stw	r2,0(r17)
    55f0:	9009883a 	mov	r4,r18
    55f4:	000d4040 	call	d404 <__malloc_unlock>
    55f8:	80800204 	addi	r2,r16,8
    55fc:	003f3c06 	br	52f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052f0>
    5600:	30c00117 	ldw	r3,4(r6)
    5604:	003ee706 	br	51a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00051a4>
    5608:	5ac00044 	addi	r11,r11,1
    560c:	588000cc 	andi	r2,r11,3
    5610:	31800204 	addi	r6,r6,8
    5614:	103efd1e 	bne	r2,zero,520c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000520c>
    5618:	00002406 	br	56ac <_malloc_r+0x660>
    561c:	14000317 	ldw	r16,12(r2)
    5620:	143f251e 	bne	r2,r16,52b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052b8>
    5624:	21000084 	addi	r4,r4,2
    5628:	003ebc06 	br	511c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000511c>
    562c:	8085883a 	add	r2,r16,r2
    5630:	10c00117 	ldw	r3,4(r2)
    5634:	81000317 	ldw	r4,12(r16)
    5638:	81400217 	ldw	r5,8(r16)
    563c:	18c00054 	ori	r3,r3,1
    5640:	10c00115 	stw	r3,4(r2)
    5644:	29000315 	stw	r4,12(r5)
    5648:	21400215 	stw	r5,8(r4)
    564c:	9009883a 	mov	r4,r18
    5650:	000d4040 	call	d404 <__malloc_unlock>
    5654:	80800204 	addi	r2,r16,8
    5658:	003f2506 	br	52f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052f0>
    565c:	12001704 	addi	r8,r2,92
    5660:	11c016c4 	addi	r7,r2,91
    5664:	4209883a 	add	r4,r8,r8
    5668:	003e9606 	br	50c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050c4>
    566c:	3804d1ba 	srli	r2,r7,6
    5670:	11400e44 	addi	r5,r2,57
    5674:	10c00e04 	addi	r3,r2,56
    5678:	294b883a 	add	r5,r5,r5
    567c:	003fbc06 	br	5570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005570>
    5680:	84ff5926 	beq	r16,r19,53e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053e8>
    5684:	00800074 	movhi	r2,1
    5688:	10834a04 	addi	r2,r2,3368
    568c:	14000217 	ldw	r16,8(r2)
    5690:	00bfff04 	movi	r2,-4
    5694:	80c00117 	ldw	r3,4(r16)
    5698:	1886703a 	and	r3,r3,r2
    569c:	003f9106 	br	54e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00054e4>
    56a0:	60800217 	ldw	r2,8(r12)
    56a4:	213fffc4 	addi	r4,r4,-1
    56a8:	1300651e 	bne	r2,r12,5840 <_malloc_r+0x7f4>
    56ac:	208000cc 	andi	r2,r4,3
    56b0:	633ffe04 	addi	r12,r12,-8
    56b4:	103ffa1e 	bne	r2,zero,56a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00056a0>
    56b8:	98800117 	ldw	r2,4(r19)
    56bc:	0146303a 	nor	r3,zero,r5
    56c0:	1884703a 	and	r2,r3,r2
    56c4:	98800115 	stw	r2,4(r19)
    56c8:	294b883a 	add	r5,r5,r5
    56cc:	117f2836 	bltu	r2,r5,5370 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005370>
    56d0:	283f2726 	beq	r5,zero,5370 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005370>
    56d4:	2886703a 	and	r3,r5,r2
    56d8:	5809883a 	mov	r4,r11
    56dc:	183ec31e 	bne	r3,zero,51ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00051ec>
    56e0:	294b883a 	add	r5,r5,r5
    56e4:	2886703a 	and	r3,r5,r2
    56e8:	21000104 	addi	r4,r4,4
    56ec:	183ffc26 	beq	r3,zero,56e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00056e0>
    56f0:	003ebe06 	br	51ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00051ec>
    56f4:	00c05504 	movi	r3,340
    56f8:	18801236 	bltu	r3,r2,5744 <_malloc_r+0x6f8>
    56fc:	8804d3fa 	srli	r2,r17,15
    5700:	12001e04 	addi	r8,r2,120
    5704:	11c01dc4 	addi	r7,r2,119
    5708:	4209883a 	add	r4,r8,r8
    570c:	003e6d06 	br	50c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050c4>
    5710:	00c40004 	movi	r3,4096
    5714:	003f4606 	br	5430 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005430>
    5718:	00800044 	movi	r2,1
    571c:	a0800115 	stw	r2,4(r20)
    5720:	003f7406 	br	54f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00054f4>
    5724:	1805d0ba 	srai	r2,r3,2
    5728:	01c00044 	movi	r7,1
    572c:	30c00117 	ldw	r3,4(r6)
    5730:	388e983a 	sll	r7,r7,r2
    5734:	2805883a 	mov	r2,r5
    5738:	38c6b03a 	or	r3,r7,r3
    573c:	30c00115 	stw	r3,4(r6)
    5740:	003f9b06 	br	55b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00055b0>
    5744:	00c15504 	movi	r3,1364
    5748:	18801a36 	bltu	r3,r2,57b4 <_malloc_r+0x768>
    574c:	8804d4ba 	srli	r2,r17,18
    5750:	12001f44 	addi	r8,r2,125
    5754:	11c01f04 	addi	r7,r2,124
    5758:	4209883a 	add	r4,r8,r8
    575c:	003e5906 	br	50c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050c4>
    5760:	ad400404 	addi	r21,r21,16
    5764:	003f1706 	br	53c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053c4>
    5768:	00c01504 	movi	r3,84
    576c:	18802336 	bltu	r3,r2,57fc <_malloc_r+0x7b0>
    5770:	3804d33a 	srli	r2,r7,12
    5774:	11401bc4 	addi	r5,r2,111
    5778:	10c01b84 	addi	r3,r2,110
    577c:	294b883a 	add	r5,r5,r5
    5780:	003f7b06 	br	5570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005570>
    5784:	9c000217 	ldw	r16,8(r19)
    5788:	00bfff04 	movi	r2,-4
    578c:	80c00117 	ldw	r3,4(r16)
    5790:	1886703a 	and	r3,r3,r2
    5794:	003f5306 	br	54e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00054e4>
    5798:	3083ffcc 	andi	r2,r6,4095
    579c:	103f181e 	bne	r2,zero,5400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005400>
    57a0:	99000217 	ldw	r4,8(r19)
    57a4:	b545883a 	add	r2,r22,r21
    57a8:	10800054 	ori	r2,r2,1
    57ac:	20800115 	stw	r2,4(r4)
    57b0:	003f3e06 	br	54ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00054ac>
    57b4:	01003f84 	movi	r4,254
    57b8:	02001fc4 	movi	r8,127
    57bc:	01c01f84 	movi	r7,126
    57c0:	003e4006 	br	50c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00050c4>
    57c4:	00800074 	movhi	r2,1
    57c8:	10896304 	addi	r2,r2,9612
    57cc:	15000015 	stw	r20,0(r2)
    57d0:	003f1106 	br	5418 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005418>
    57d4:	00800044 	movi	r2,1
    57d8:	002b883a 	mov	r21,zero
    57dc:	003f1f06 	br	545c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000545c>
    57e0:	81400204 	addi	r5,r16,8
    57e4:	9009883a 	mov	r4,r18
    57e8:	000491c0 	call	491c <_free_r>
    57ec:	00800074 	movhi	r2,1
    57f0:	1090ce04 	addi	r2,r2,17208
    57f4:	10c00017 	ldw	r3,0(r2)
    57f8:	003f2c06 	br	54ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00054ac>
    57fc:	00c05504 	movi	r3,340
    5800:	18800536 	bltu	r3,r2,5818 <_malloc_r+0x7cc>
    5804:	3804d3fa 	srli	r2,r7,15
    5808:	11401e04 	addi	r5,r2,120
    580c:	10c01dc4 	addi	r3,r2,119
    5810:	294b883a 	add	r5,r5,r5
    5814:	003f5606 	br	5570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005570>
    5818:	00c15504 	movi	r3,1364
    581c:	18800536 	bltu	r3,r2,5834 <_malloc_r+0x7e8>
    5820:	3804d4ba 	srli	r2,r7,18
    5824:	11401f44 	addi	r5,r2,125
    5828:	10c01f04 	addi	r3,r2,124
    582c:	294b883a 	add	r5,r5,r5
    5830:	003f4f06 	br	5570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005570>
    5834:	01403f84 	movi	r5,254
    5838:	00c01f84 	movi	r3,126
    583c:	003f4c06 	br	5570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005570>
    5840:	98800117 	ldw	r2,4(r19)
    5844:	003fa006 	br	56c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00056c8>
    5848:	8808d0fa 	srli	r4,r17,3
    584c:	20800044 	addi	r2,r4,1
    5850:	1085883a 	add	r2,r2,r2
    5854:	003e9006 	br	5298 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005298>

00005858 <memchr>:
    5858:	208000cc 	andi	r2,r4,3
    585c:	280f883a 	mov	r7,r5
    5860:	10003426 	beq	r2,zero,5934 <memchr+0xdc>
    5864:	30bfffc4 	addi	r2,r6,-1
    5868:	30001a26 	beq	r6,zero,58d4 <memchr+0x7c>
    586c:	20c00003 	ldbu	r3,0(r4)
    5870:	29803fcc 	andi	r6,r5,255
    5874:	30c0051e 	bne	r6,r3,588c <memchr+0x34>
    5878:	00001806 	br	58dc <memchr+0x84>
    587c:	10001526 	beq	r2,zero,58d4 <memchr+0x7c>
    5880:	20c00003 	ldbu	r3,0(r4)
    5884:	10bfffc4 	addi	r2,r2,-1
    5888:	30c01426 	beq	r6,r3,58dc <memchr+0x84>
    588c:	21000044 	addi	r4,r4,1
    5890:	20c000cc 	andi	r3,r4,3
    5894:	183ff91e 	bne	r3,zero,587c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000587c>
    5898:	020000c4 	movi	r8,3
    589c:	40801136 	bltu	r8,r2,58e4 <memchr+0x8c>
    58a0:	10000c26 	beq	r2,zero,58d4 <memchr+0x7c>
    58a4:	20c00003 	ldbu	r3,0(r4)
    58a8:	29403fcc 	andi	r5,r5,255
    58ac:	28c00b26 	beq	r5,r3,58dc <memchr+0x84>
    58b0:	20c00044 	addi	r3,r4,1
    58b4:	39803fcc 	andi	r6,r7,255
    58b8:	2089883a 	add	r4,r4,r2
    58bc:	00000306 	br	58cc <memchr+0x74>
    58c0:	18c00044 	addi	r3,r3,1
    58c4:	197fffc3 	ldbu	r5,-1(r3)
    58c8:	31400526 	beq	r6,r5,58e0 <memchr+0x88>
    58cc:	1805883a 	mov	r2,r3
    58d0:	20fffb1e 	bne	r4,r3,58c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00058c0>
    58d4:	0005883a 	mov	r2,zero
    58d8:	f800283a 	ret
    58dc:	2005883a 	mov	r2,r4
    58e0:	f800283a 	ret
    58e4:	28c03fcc 	andi	r3,r5,255
    58e8:	1812923a 	slli	r9,r3,8
    58ec:	02ffbff4 	movhi	r11,65279
    58f0:	02a02074 	movhi	r10,32897
    58f4:	48d2b03a 	or	r9,r9,r3
    58f8:	4806943a 	slli	r3,r9,16
    58fc:	5affbfc4 	addi	r11,r11,-257
    5900:	52a02004 	addi	r10,r10,-32640
    5904:	48d2b03a 	or	r9,r9,r3
    5908:	20c00017 	ldw	r3,0(r4)
    590c:	48c6f03a 	xor	r3,r9,r3
    5910:	1acd883a 	add	r6,r3,r11
    5914:	00c6303a 	nor	r3,zero,r3
    5918:	30c6703a 	and	r3,r6,r3
    591c:	1a86703a 	and	r3,r3,r10
    5920:	183fe01e 	bne	r3,zero,58a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00058a4>
    5924:	10bfff04 	addi	r2,r2,-4
    5928:	21000104 	addi	r4,r4,4
    592c:	40bff636 	bltu	r8,r2,5908 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005908>
    5930:	003fdb06 	br	58a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00058a0>
    5934:	3005883a 	mov	r2,r6
    5938:	003fd706 	br	5898 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005898>

0000593c <memcpy>:
    593c:	defffd04 	addi	sp,sp,-12
    5940:	dfc00215 	stw	ra,8(sp)
    5944:	dc400115 	stw	r17,4(sp)
    5948:	dc000015 	stw	r16,0(sp)
    594c:	00c003c4 	movi	r3,15
    5950:	2005883a 	mov	r2,r4
    5954:	1980452e 	bgeu	r3,r6,5a6c <memcpy+0x130>
    5958:	2906b03a 	or	r3,r5,r4
    595c:	18c000cc 	andi	r3,r3,3
    5960:	1800441e 	bne	r3,zero,5a74 <memcpy+0x138>
    5964:	347ffc04 	addi	r17,r6,-16
    5968:	8822d13a 	srli	r17,r17,4
    596c:	28c00104 	addi	r3,r5,4
    5970:	23400104 	addi	r13,r4,4
    5974:	8820913a 	slli	r16,r17,4
    5978:	2b000204 	addi	r12,r5,8
    597c:	22c00204 	addi	r11,r4,8
    5980:	84000504 	addi	r16,r16,20
    5984:	2a800304 	addi	r10,r5,12
    5988:	22400304 	addi	r9,r4,12
    598c:	2c21883a 	add	r16,r5,r16
    5990:	2811883a 	mov	r8,r5
    5994:	200f883a 	mov	r7,r4
    5998:	41000017 	ldw	r4,0(r8)
    599c:	1fc00017 	ldw	ra,0(r3)
    59a0:	63c00017 	ldw	r15,0(r12)
    59a4:	39000015 	stw	r4,0(r7)
    59a8:	53800017 	ldw	r14,0(r10)
    59ac:	6fc00015 	stw	ra,0(r13)
    59b0:	5bc00015 	stw	r15,0(r11)
    59b4:	4b800015 	stw	r14,0(r9)
    59b8:	18c00404 	addi	r3,r3,16
    59bc:	39c00404 	addi	r7,r7,16
    59c0:	42000404 	addi	r8,r8,16
    59c4:	6b400404 	addi	r13,r13,16
    59c8:	63000404 	addi	r12,r12,16
    59cc:	5ac00404 	addi	r11,r11,16
    59d0:	52800404 	addi	r10,r10,16
    59d4:	4a400404 	addi	r9,r9,16
    59d8:	1c3fef1e 	bne	r3,r16,5998 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005998>
    59dc:	89c00044 	addi	r7,r17,1
    59e0:	380e913a 	slli	r7,r7,4
    59e4:	310003cc 	andi	r4,r6,15
    59e8:	02c000c4 	movi	r11,3
    59ec:	11c7883a 	add	r3,r2,r7
    59f0:	29cb883a 	add	r5,r5,r7
    59f4:	5900212e 	bgeu	r11,r4,5a7c <memcpy+0x140>
    59f8:	1813883a 	mov	r9,r3
    59fc:	2811883a 	mov	r8,r5
    5a00:	200f883a 	mov	r7,r4
    5a04:	42800017 	ldw	r10,0(r8)
    5a08:	4a400104 	addi	r9,r9,4
    5a0c:	39ffff04 	addi	r7,r7,-4
    5a10:	4abfff15 	stw	r10,-4(r9)
    5a14:	42000104 	addi	r8,r8,4
    5a18:	59fffa36 	bltu	r11,r7,5a04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a04>
    5a1c:	213fff04 	addi	r4,r4,-4
    5a20:	2008d0ba 	srli	r4,r4,2
    5a24:	318000cc 	andi	r6,r6,3
    5a28:	21000044 	addi	r4,r4,1
    5a2c:	2109883a 	add	r4,r4,r4
    5a30:	2109883a 	add	r4,r4,r4
    5a34:	1907883a 	add	r3,r3,r4
    5a38:	290b883a 	add	r5,r5,r4
    5a3c:	30000626 	beq	r6,zero,5a58 <memcpy+0x11c>
    5a40:	198d883a 	add	r6,r3,r6
    5a44:	29c00003 	ldbu	r7,0(r5)
    5a48:	18c00044 	addi	r3,r3,1
    5a4c:	29400044 	addi	r5,r5,1
    5a50:	19ffffc5 	stb	r7,-1(r3)
    5a54:	19bffb1e 	bne	r3,r6,5a44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a44>
    5a58:	dfc00217 	ldw	ra,8(sp)
    5a5c:	dc400117 	ldw	r17,4(sp)
    5a60:	dc000017 	ldw	r16,0(sp)
    5a64:	dec00304 	addi	sp,sp,12
    5a68:	f800283a 	ret
    5a6c:	2007883a 	mov	r3,r4
    5a70:	003ff206 	br	5a3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a3c>
    5a74:	2007883a 	mov	r3,r4
    5a78:	003ff106 	br	5a40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a40>
    5a7c:	200d883a 	mov	r6,r4
    5a80:	003fee06 	br	5a3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a3c>

00005a84 <memset>:
    5a84:	20c000cc 	andi	r3,r4,3
    5a88:	2005883a 	mov	r2,r4
    5a8c:	18004426 	beq	r3,zero,5ba0 <memset+0x11c>
    5a90:	31ffffc4 	addi	r7,r6,-1
    5a94:	30004026 	beq	r6,zero,5b98 <memset+0x114>
    5a98:	2813883a 	mov	r9,r5
    5a9c:	200d883a 	mov	r6,r4
    5aa0:	2007883a 	mov	r3,r4
    5aa4:	00000406 	br	5ab8 <memset+0x34>
    5aa8:	3a3fffc4 	addi	r8,r7,-1
    5aac:	31800044 	addi	r6,r6,1
    5ab0:	38003926 	beq	r7,zero,5b98 <memset+0x114>
    5ab4:	400f883a 	mov	r7,r8
    5ab8:	18c00044 	addi	r3,r3,1
    5abc:	32400005 	stb	r9,0(r6)
    5ac0:	1a0000cc 	andi	r8,r3,3
    5ac4:	403ff81e 	bne	r8,zero,5aa8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005aa8>
    5ac8:	010000c4 	movi	r4,3
    5acc:	21c02d2e 	bgeu	r4,r7,5b84 <memset+0x100>
    5ad0:	29003fcc 	andi	r4,r5,255
    5ad4:	200c923a 	slli	r6,r4,8
    5ad8:	3108b03a 	or	r4,r6,r4
    5adc:	200c943a 	slli	r6,r4,16
    5ae0:	218cb03a 	or	r6,r4,r6
    5ae4:	010003c4 	movi	r4,15
    5ae8:	21c0182e 	bgeu	r4,r7,5b4c <memset+0xc8>
    5aec:	3b3ffc04 	addi	r12,r7,-16
    5af0:	6018d13a 	srli	r12,r12,4
    5af4:	1a000104 	addi	r8,r3,4
    5af8:	1ac00204 	addi	r11,r3,8
    5afc:	6008913a 	slli	r4,r12,4
    5b00:	1a800304 	addi	r10,r3,12
    5b04:	1813883a 	mov	r9,r3
    5b08:	21000504 	addi	r4,r4,20
    5b0c:	1909883a 	add	r4,r3,r4
    5b10:	49800015 	stw	r6,0(r9)
    5b14:	41800015 	stw	r6,0(r8)
    5b18:	59800015 	stw	r6,0(r11)
    5b1c:	51800015 	stw	r6,0(r10)
    5b20:	42000404 	addi	r8,r8,16
    5b24:	4a400404 	addi	r9,r9,16
    5b28:	5ac00404 	addi	r11,r11,16
    5b2c:	52800404 	addi	r10,r10,16
    5b30:	413ff71e 	bne	r8,r4,5b10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b10>
    5b34:	63000044 	addi	r12,r12,1
    5b38:	6018913a 	slli	r12,r12,4
    5b3c:	39c003cc 	andi	r7,r7,15
    5b40:	010000c4 	movi	r4,3
    5b44:	1b07883a 	add	r3,r3,r12
    5b48:	21c00e2e 	bgeu	r4,r7,5b84 <memset+0x100>
    5b4c:	1813883a 	mov	r9,r3
    5b50:	3811883a 	mov	r8,r7
    5b54:	010000c4 	movi	r4,3
    5b58:	49800015 	stw	r6,0(r9)
    5b5c:	423fff04 	addi	r8,r8,-4
    5b60:	4a400104 	addi	r9,r9,4
    5b64:	223ffc36 	bltu	r4,r8,5b58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b58>
    5b68:	393fff04 	addi	r4,r7,-4
    5b6c:	2008d0ba 	srli	r4,r4,2
    5b70:	39c000cc 	andi	r7,r7,3
    5b74:	21000044 	addi	r4,r4,1
    5b78:	2109883a 	add	r4,r4,r4
    5b7c:	2109883a 	add	r4,r4,r4
    5b80:	1907883a 	add	r3,r3,r4
    5b84:	38000526 	beq	r7,zero,5b9c <memset+0x118>
    5b88:	19cf883a 	add	r7,r3,r7
    5b8c:	19400005 	stb	r5,0(r3)
    5b90:	18c00044 	addi	r3,r3,1
    5b94:	38fffd1e 	bne	r7,r3,5b8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b8c>
    5b98:	f800283a 	ret
    5b9c:	f800283a 	ret
    5ba0:	2007883a 	mov	r3,r4
    5ba4:	300f883a 	mov	r7,r6
    5ba8:	003fc706 	br	5ac8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ac8>

00005bac <_Balloc>:
    5bac:	20801317 	ldw	r2,76(r4)
    5bb0:	defffc04 	addi	sp,sp,-16
    5bb4:	dc400115 	stw	r17,4(sp)
    5bb8:	dc000015 	stw	r16,0(sp)
    5bbc:	dfc00315 	stw	ra,12(sp)
    5bc0:	dc800215 	stw	r18,8(sp)
    5bc4:	2023883a 	mov	r17,r4
    5bc8:	2821883a 	mov	r16,r5
    5bcc:	10000f26 	beq	r2,zero,5c0c <_Balloc+0x60>
    5bd0:	8407883a 	add	r3,r16,r16
    5bd4:	18c7883a 	add	r3,r3,r3
    5bd8:	10c7883a 	add	r3,r2,r3
    5bdc:	18800017 	ldw	r2,0(r3)
    5be0:	10001126 	beq	r2,zero,5c28 <_Balloc+0x7c>
    5be4:	11000017 	ldw	r4,0(r2)
    5be8:	19000015 	stw	r4,0(r3)
    5bec:	10000415 	stw	zero,16(r2)
    5bf0:	10000315 	stw	zero,12(r2)
    5bf4:	dfc00317 	ldw	ra,12(sp)
    5bf8:	dc800217 	ldw	r18,8(sp)
    5bfc:	dc400117 	ldw	r17,4(sp)
    5c00:	dc000017 	ldw	r16,0(sp)
    5c04:	dec00404 	addi	sp,sp,16
    5c08:	f800283a 	ret
    5c0c:	01800844 	movi	r6,33
    5c10:	01400104 	movi	r5,4
    5c14:	000861c0 	call	861c <_calloc_r>
    5c18:	88801315 	stw	r2,76(r17)
    5c1c:	103fec1e 	bne	r2,zero,5bd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005bd0>
    5c20:	0005883a 	mov	r2,zero
    5c24:	003ff306 	br	5bf4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005bf4>
    5c28:	01400044 	movi	r5,1
    5c2c:	2c24983a 	sll	r18,r5,r16
    5c30:	8809883a 	mov	r4,r17
    5c34:	91800144 	addi	r6,r18,5
    5c38:	318d883a 	add	r6,r6,r6
    5c3c:	318d883a 	add	r6,r6,r6
    5c40:	000861c0 	call	861c <_calloc_r>
    5c44:	103ff626 	beq	r2,zero,5c20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c20>
    5c48:	14000115 	stw	r16,4(r2)
    5c4c:	14800215 	stw	r18,8(r2)
    5c50:	003fe606 	br	5bec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005bec>

00005c54 <_Bfree>:
    5c54:	28000826 	beq	r5,zero,5c78 <_Bfree+0x24>
    5c58:	28c00117 	ldw	r3,4(r5)
    5c5c:	20801317 	ldw	r2,76(r4)
    5c60:	18c7883a 	add	r3,r3,r3
    5c64:	18c7883a 	add	r3,r3,r3
    5c68:	10c5883a 	add	r2,r2,r3
    5c6c:	10c00017 	ldw	r3,0(r2)
    5c70:	28c00015 	stw	r3,0(r5)
    5c74:	11400015 	stw	r5,0(r2)
    5c78:	f800283a 	ret

00005c7c <__multadd>:
    5c7c:	defffa04 	addi	sp,sp,-24
    5c80:	dc800315 	stw	r18,12(sp)
    5c84:	dc400215 	stw	r17,8(sp)
    5c88:	dc000115 	stw	r16,4(sp)
    5c8c:	2823883a 	mov	r17,r5
    5c90:	2c000417 	ldw	r16,16(r5)
    5c94:	dfc00515 	stw	ra,20(sp)
    5c98:	dcc00415 	stw	r19,16(sp)
    5c9c:	2025883a 	mov	r18,r4
    5ca0:	29400504 	addi	r5,r5,20
    5ca4:	0011883a 	mov	r8,zero
    5ca8:	28c00017 	ldw	r3,0(r5)
    5cac:	29400104 	addi	r5,r5,4
    5cb0:	42000044 	addi	r8,r8,1
    5cb4:	18bfffcc 	andi	r2,r3,65535
    5cb8:	1185383a 	mul	r2,r2,r6
    5cbc:	1806d43a 	srli	r3,r3,16
    5cc0:	11cf883a 	add	r7,r2,r7
    5cc4:	3808d43a 	srli	r4,r7,16
    5cc8:	1987383a 	mul	r3,r3,r6
    5ccc:	38bfffcc 	andi	r2,r7,65535
    5cd0:	1907883a 	add	r3,r3,r4
    5cd4:	1808943a 	slli	r4,r3,16
    5cd8:	180ed43a 	srli	r7,r3,16
    5cdc:	2085883a 	add	r2,r4,r2
    5ce0:	28bfff15 	stw	r2,-4(r5)
    5ce4:	443ff016 	blt	r8,r16,5ca8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ca8>
    5ce8:	38000926 	beq	r7,zero,5d10 <__multadd+0x94>
    5cec:	88800217 	ldw	r2,8(r17)
    5cf0:	80800f0e 	bge	r16,r2,5d30 <__multadd+0xb4>
    5cf4:	80800144 	addi	r2,r16,5
    5cf8:	1085883a 	add	r2,r2,r2
    5cfc:	1085883a 	add	r2,r2,r2
    5d00:	8885883a 	add	r2,r17,r2
    5d04:	11c00015 	stw	r7,0(r2)
    5d08:	84000044 	addi	r16,r16,1
    5d0c:	8c000415 	stw	r16,16(r17)
    5d10:	8805883a 	mov	r2,r17
    5d14:	dfc00517 	ldw	ra,20(sp)
    5d18:	dcc00417 	ldw	r19,16(sp)
    5d1c:	dc800317 	ldw	r18,12(sp)
    5d20:	dc400217 	ldw	r17,8(sp)
    5d24:	dc000117 	ldw	r16,4(sp)
    5d28:	dec00604 	addi	sp,sp,24
    5d2c:	f800283a 	ret
    5d30:	89400117 	ldw	r5,4(r17)
    5d34:	9009883a 	mov	r4,r18
    5d38:	d9c00015 	stw	r7,0(sp)
    5d3c:	29400044 	addi	r5,r5,1
    5d40:	0005bac0 	call	5bac <_Balloc>
    5d44:	89800417 	ldw	r6,16(r17)
    5d48:	89400304 	addi	r5,r17,12
    5d4c:	11000304 	addi	r4,r2,12
    5d50:	31800084 	addi	r6,r6,2
    5d54:	318d883a 	add	r6,r6,r6
    5d58:	318d883a 	add	r6,r6,r6
    5d5c:	1027883a 	mov	r19,r2
    5d60:	000593c0 	call	593c <memcpy>
    5d64:	d9c00017 	ldw	r7,0(sp)
    5d68:	88000a26 	beq	r17,zero,5d94 <__multadd+0x118>
    5d6c:	88c00117 	ldw	r3,4(r17)
    5d70:	90801317 	ldw	r2,76(r18)
    5d74:	18c7883a 	add	r3,r3,r3
    5d78:	18c7883a 	add	r3,r3,r3
    5d7c:	10c5883a 	add	r2,r2,r3
    5d80:	10c00017 	ldw	r3,0(r2)
    5d84:	88c00015 	stw	r3,0(r17)
    5d88:	14400015 	stw	r17,0(r2)
    5d8c:	9823883a 	mov	r17,r19
    5d90:	003fd806 	br	5cf4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005cf4>
    5d94:	9823883a 	mov	r17,r19
    5d98:	003fd606 	br	5cf4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005cf4>

00005d9c <__s2b>:
    5d9c:	defff904 	addi	sp,sp,-28
    5da0:	dc400115 	stw	r17,4(sp)
    5da4:	dc000015 	stw	r16,0(sp)
    5da8:	2023883a 	mov	r17,r4
    5dac:	2821883a 	mov	r16,r5
    5db0:	39000204 	addi	r4,r7,8
    5db4:	01400244 	movi	r5,9
    5db8:	dcc00315 	stw	r19,12(sp)
    5dbc:	dc800215 	stw	r18,8(sp)
    5dc0:	dfc00615 	stw	ra,24(sp)
    5dc4:	dd400515 	stw	r21,20(sp)
    5dc8:	dd000415 	stw	r20,16(sp)
    5dcc:	3825883a 	mov	r18,r7
    5dd0:	3027883a 	mov	r19,r6
    5dd4:	000a4c80 	call	a4c8 <__divsi3>
    5dd8:	00c00044 	movi	r3,1
    5ddc:	000b883a 	mov	r5,zero
    5de0:	1880030e 	bge	r3,r2,5df0 <__s2b+0x54>
    5de4:	18c7883a 	add	r3,r3,r3
    5de8:	29400044 	addi	r5,r5,1
    5dec:	18bffd16 	blt	r3,r2,5de4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005de4>
    5df0:	8809883a 	mov	r4,r17
    5df4:	0005bac0 	call	5bac <_Balloc>
    5df8:	d8c00717 	ldw	r3,28(sp)
    5dfc:	10c00515 	stw	r3,20(r2)
    5e00:	00c00044 	movi	r3,1
    5e04:	10c00415 	stw	r3,16(r2)
    5e08:	00c00244 	movi	r3,9
    5e0c:	1cc0210e 	bge	r3,r19,5e94 <__s2b+0xf8>
    5e10:	80eb883a 	add	r21,r16,r3
    5e14:	a829883a 	mov	r20,r21
    5e18:	84e1883a 	add	r16,r16,r19
    5e1c:	a1c00007 	ldb	r7,0(r20)
    5e20:	01800284 	movi	r6,10
    5e24:	a5000044 	addi	r20,r20,1
    5e28:	100b883a 	mov	r5,r2
    5e2c:	39fff404 	addi	r7,r7,-48
    5e30:	8809883a 	mov	r4,r17
    5e34:	0005c7c0 	call	5c7c <__multadd>
    5e38:	a43ff81e 	bne	r20,r16,5e1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005e1c>
    5e3c:	ace1883a 	add	r16,r21,r19
    5e40:	843ffe04 	addi	r16,r16,-8
    5e44:	9c800a0e 	bge	r19,r18,5e70 <__s2b+0xd4>
    5e48:	94e5c83a 	sub	r18,r18,r19
    5e4c:	84a5883a 	add	r18,r16,r18
    5e50:	81c00007 	ldb	r7,0(r16)
    5e54:	01800284 	movi	r6,10
    5e58:	84000044 	addi	r16,r16,1
    5e5c:	100b883a 	mov	r5,r2
    5e60:	39fff404 	addi	r7,r7,-48
    5e64:	8809883a 	mov	r4,r17
    5e68:	0005c7c0 	call	5c7c <__multadd>
    5e6c:	84bff81e 	bne	r16,r18,5e50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005e50>
    5e70:	dfc00617 	ldw	ra,24(sp)
    5e74:	dd400517 	ldw	r21,20(sp)
    5e78:	dd000417 	ldw	r20,16(sp)
    5e7c:	dcc00317 	ldw	r19,12(sp)
    5e80:	dc800217 	ldw	r18,8(sp)
    5e84:	dc400117 	ldw	r17,4(sp)
    5e88:	dc000017 	ldw	r16,0(sp)
    5e8c:	dec00704 	addi	sp,sp,28
    5e90:	f800283a 	ret
    5e94:	84000284 	addi	r16,r16,10
    5e98:	1827883a 	mov	r19,r3
    5e9c:	003fe906 	br	5e44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005e44>

00005ea0 <__hi0bits>:
    5ea0:	20bfffec 	andhi	r2,r4,65535
    5ea4:	1000141e 	bne	r2,zero,5ef8 <__hi0bits+0x58>
    5ea8:	2008943a 	slli	r4,r4,16
    5eac:	00800404 	movi	r2,16
    5eb0:	20ffc02c 	andhi	r3,r4,65280
    5eb4:	1800021e 	bne	r3,zero,5ec0 <__hi0bits+0x20>
    5eb8:	2008923a 	slli	r4,r4,8
    5ebc:	10800204 	addi	r2,r2,8
    5ec0:	20fc002c 	andhi	r3,r4,61440
    5ec4:	1800021e 	bne	r3,zero,5ed0 <__hi0bits+0x30>
    5ec8:	2008913a 	slli	r4,r4,4
    5ecc:	10800104 	addi	r2,r2,4
    5ed0:	20f0002c 	andhi	r3,r4,49152
    5ed4:	1800031e 	bne	r3,zero,5ee4 <__hi0bits+0x44>
    5ed8:	2109883a 	add	r4,r4,r4
    5edc:	10800084 	addi	r2,r2,2
    5ee0:	2109883a 	add	r4,r4,r4
    5ee4:	20000316 	blt	r4,zero,5ef4 <__hi0bits+0x54>
    5ee8:	2110002c 	andhi	r4,r4,16384
    5eec:	2000041e 	bne	r4,zero,5f00 <__hi0bits+0x60>
    5ef0:	00800804 	movi	r2,32
    5ef4:	f800283a 	ret
    5ef8:	0005883a 	mov	r2,zero
    5efc:	003fec06 	br	5eb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005eb0>
    5f00:	10800044 	addi	r2,r2,1
    5f04:	f800283a 	ret

00005f08 <__lo0bits>:
    5f08:	20c00017 	ldw	r3,0(r4)
    5f0c:	188001cc 	andi	r2,r3,7
    5f10:	10000826 	beq	r2,zero,5f34 <__lo0bits+0x2c>
    5f14:	1880004c 	andi	r2,r3,1
    5f18:	1000211e 	bne	r2,zero,5fa0 <__lo0bits+0x98>
    5f1c:	1880008c 	andi	r2,r3,2
    5f20:	1000211e 	bne	r2,zero,5fa8 <__lo0bits+0xa0>
    5f24:	1806d0ba 	srli	r3,r3,2
    5f28:	00800084 	movi	r2,2
    5f2c:	20c00015 	stw	r3,0(r4)
    5f30:	f800283a 	ret
    5f34:	18bfffcc 	andi	r2,r3,65535
    5f38:	10001326 	beq	r2,zero,5f88 <__lo0bits+0x80>
    5f3c:	0005883a 	mov	r2,zero
    5f40:	19403fcc 	andi	r5,r3,255
    5f44:	2800021e 	bne	r5,zero,5f50 <__lo0bits+0x48>
    5f48:	1806d23a 	srli	r3,r3,8
    5f4c:	10800204 	addi	r2,r2,8
    5f50:	194003cc 	andi	r5,r3,15
    5f54:	2800021e 	bne	r5,zero,5f60 <__lo0bits+0x58>
    5f58:	1806d13a 	srli	r3,r3,4
    5f5c:	10800104 	addi	r2,r2,4
    5f60:	194000cc 	andi	r5,r3,3
    5f64:	2800021e 	bne	r5,zero,5f70 <__lo0bits+0x68>
    5f68:	1806d0ba 	srli	r3,r3,2
    5f6c:	10800084 	addi	r2,r2,2
    5f70:	1940004c 	andi	r5,r3,1
    5f74:	2800081e 	bne	r5,zero,5f98 <__lo0bits+0x90>
    5f78:	1806d07a 	srli	r3,r3,1
    5f7c:	1800051e 	bne	r3,zero,5f94 <__lo0bits+0x8c>
    5f80:	00800804 	movi	r2,32
    5f84:	f800283a 	ret
    5f88:	1806d43a 	srli	r3,r3,16
    5f8c:	00800404 	movi	r2,16
    5f90:	003feb06 	br	5f40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005f40>
    5f94:	10800044 	addi	r2,r2,1
    5f98:	20c00015 	stw	r3,0(r4)
    5f9c:	f800283a 	ret
    5fa0:	0005883a 	mov	r2,zero
    5fa4:	f800283a 	ret
    5fa8:	1806d07a 	srli	r3,r3,1
    5fac:	00800044 	movi	r2,1
    5fb0:	20c00015 	stw	r3,0(r4)
    5fb4:	f800283a 	ret

00005fb8 <__i2b>:
    5fb8:	defffd04 	addi	sp,sp,-12
    5fbc:	dc000015 	stw	r16,0(sp)
    5fc0:	04000044 	movi	r16,1
    5fc4:	dc400115 	stw	r17,4(sp)
    5fc8:	2823883a 	mov	r17,r5
    5fcc:	800b883a 	mov	r5,r16
    5fd0:	dfc00215 	stw	ra,8(sp)
    5fd4:	0005bac0 	call	5bac <_Balloc>
    5fd8:	14400515 	stw	r17,20(r2)
    5fdc:	14000415 	stw	r16,16(r2)
    5fe0:	dfc00217 	ldw	ra,8(sp)
    5fe4:	dc400117 	ldw	r17,4(sp)
    5fe8:	dc000017 	ldw	r16,0(sp)
    5fec:	dec00304 	addi	sp,sp,12
    5ff0:	f800283a 	ret

00005ff4 <__multiply>:
    5ff4:	defffa04 	addi	sp,sp,-24
    5ff8:	dcc00315 	stw	r19,12(sp)
    5ffc:	dc800215 	stw	r18,8(sp)
    6000:	34c00417 	ldw	r19,16(r6)
    6004:	2c800417 	ldw	r18,16(r5)
    6008:	dd000415 	stw	r20,16(sp)
    600c:	dc400115 	stw	r17,4(sp)
    6010:	dfc00515 	stw	ra,20(sp)
    6014:	dc000015 	stw	r16,0(sp)
    6018:	2829883a 	mov	r20,r5
    601c:	3023883a 	mov	r17,r6
    6020:	94c0050e 	bge	r18,r19,6038 <__multiply+0x44>
    6024:	9007883a 	mov	r3,r18
    6028:	3029883a 	mov	r20,r6
    602c:	9825883a 	mov	r18,r19
    6030:	2823883a 	mov	r17,r5
    6034:	1827883a 	mov	r19,r3
    6038:	a0800217 	ldw	r2,8(r20)
    603c:	94e1883a 	add	r16,r18,r19
    6040:	a1400117 	ldw	r5,4(r20)
    6044:	1400010e 	bge	r2,r16,604c <__multiply+0x58>
    6048:	29400044 	addi	r5,r5,1
    604c:	0005bac0 	call	5bac <_Balloc>
    6050:	8415883a 	add	r10,r16,r16
    6054:	12c00504 	addi	r11,r2,20
    6058:	5295883a 	add	r10,r10,r10
    605c:	5a95883a 	add	r10,r11,r10
    6060:	5807883a 	mov	r3,r11
    6064:	5a80032e 	bgeu	r11,r10,6074 <__multiply+0x80>
    6068:	18000015 	stw	zero,0(r3)
    606c:	18c00104 	addi	r3,r3,4
    6070:	1abffd36 	bltu	r3,r10,6068 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006068>
    6074:	9ce7883a 	add	r19,r19,r19
    6078:	94a5883a 	add	r18,r18,r18
    607c:	89800504 	addi	r6,r17,20
    6080:	9ce7883a 	add	r19,r19,r19
    6084:	a3400504 	addi	r13,r20,20
    6088:	94a5883a 	add	r18,r18,r18
    608c:	34d9883a 	add	r12,r6,r19
    6090:	6c93883a 	add	r9,r13,r18
    6094:	3300422e 	bgeu	r6,r12,61a0 <__multiply+0x1ac>
    6098:	37c00017 	ldw	ra,0(r6)
    609c:	fbffffcc 	andi	r15,ra,65535
    60a0:	78001b26 	beq	r15,zero,6110 <__multiply+0x11c>
    60a4:	5811883a 	mov	r8,r11
    60a8:	681d883a 	mov	r14,r13
    60ac:	000f883a 	mov	r7,zero
    60b0:	71000017 	ldw	r4,0(r14)
    60b4:	40c00017 	ldw	r3,0(r8)
    60b8:	73800104 	addi	r14,r14,4
    60bc:	217fffcc 	andi	r5,r4,65535
    60c0:	2bcb383a 	mul	r5,r5,r15
    60c4:	2008d43a 	srli	r4,r4,16
    60c8:	1c7fffcc 	andi	r17,r3,65535
    60cc:	2c4b883a 	add	r5,r5,r17
    60d0:	29cb883a 	add	r5,r5,r7
    60d4:	23c9383a 	mul	r4,r4,r15
    60d8:	1806d43a 	srli	r3,r3,16
    60dc:	280ed43a 	srli	r7,r5,16
    60e0:	297fffcc 	andi	r5,r5,65535
    60e4:	20c7883a 	add	r3,r4,r3
    60e8:	19c7883a 	add	r3,r3,r7
    60ec:	1808943a 	slli	r4,r3,16
    60f0:	4023883a 	mov	r17,r8
    60f4:	180ed43a 	srli	r7,r3,16
    60f8:	214ab03a 	or	r5,r4,r5
    60fc:	41400015 	stw	r5,0(r8)
    6100:	42000104 	addi	r8,r8,4
    6104:	727fea36 	bltu	r14,r9,60b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00060b0>
    6108:	89c00115 	stw	r7,4(r17)
    610c:	37c00017 	ldw	ra,0(r6)
    6110:	f83ed43a 	srli	ra,ra,16
    6114:	f8001f26 	beq	ra,zero,6194 <__multiply+0x1a0>
    6118:	58c00017 	ldw	r3,0(r11)
    611c:	681d883a 	mov	r14,r13
    6120:	581f883a 	mov	r15,r11
    6124:	1811883a 	mov	r8,r3
    6128:	5825883a 	mov	r18,r11
    612c:	000f883a 	mov	r7,zero
    6130:	00000106 	br	6138 <__multiply+0x144>
    6134:	8825883a 	mov	r18,r17
    6138:	7140000b 	ldhu	r5,0(r14)
    613c:	4010d43a 	srli	r8,r8,16
    6140:	193fffcc 	andi	r4,r3,65535
    6144:	2fcb383a 	mul	r5,r5,ra
    6148:	7bc00104 	addi	r15,r15,4
    614c:	73800104 	addi	r14,r14,4
    6150:	2a0b883a 	add	r5,r5,r8
    6154:	29cb883a 	add	r5,r5,r7
    6158:	2806943a 	slli	r3,r5,16
    615c:	94400104 	addi	r17,r18,4
    6160:	280ad43a 	srli	r5,r5,16
    6164:	1908b03a 	or	r4,r3,r4
    6168:	793fff15 	stw	r4,-4(r15)
    616c:	70ffff17 	ldw	r3,-4(r14)
    6170:	8a000017 	ldw	r8,0(r17)
    6174:	1806d43a 	srli	r3,r3,16
    6178:	413fffcc 	andi	r4,r8,65535
    617c:	1fc7383a 	mul	r3,r3,ra
    6180:	1907883a 	add	r3,r3,r4
    6184:	1947883a 	add	r3,r3,r5
    6188:	180ed43a 	srli	r7,r3,16
    618c:	727fe936 	bltu	r14,r9,6134 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006134>
    6190:	90c00115 	stw	r3,4(r18)
    6194:	31800104 	addi	r6,r6,4
    6198:	5ac00104 	addi	r11,r11,4
    619c:	333fbe36 	bltu	r6,r12,6098 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006098>
    61a0:	0400090e 	bge	zero,r16,61c8 <__multiply+0x1d4>
    61a4:	50ffff17 	ldw	r3,-4(r10)
    61a8:	52bfff04 	addi	r10,r10,-4
    61ac:	18000326 	beq	r3,zero,61bc <__multiply+0x1c8>
    61b0:	00000506 	br	61c8 <__multiply+0x1d4>
    61b4:	50c00017 	ldw	r3,0(r10)
    61b8:	1800031e 	bne	r3,zero,61c8 <__multiply+0x1d4>
    61bc:	843fffc4 	addi	r16,r16,-1
    61c0:	52bfff04 	addi	r10,r10,-4
    61c4:	803ffb1e 	bne	r16,zero,61b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00061b4>
    61c8:	14000415 	stw	r16,16(r2)
    61cc:	dfc00517 	ldw	ra,20(sp)
    61d0:	dd000417 	ldw	r20,16(sp)
    61d4:	dcc00317 	ldw	r19,12(sp)
    61d8:	dc800217 	ldw	r18,8(sp)
    61dc:	dc400117 	ldw	r17,4(sp)
    61e0:	dc000017 	ldw	r16,0(sp)
    61e4:	dec00604 	addi	sp,sp,24
    61e8:	f800283a 	ret

000061ec <__pow5mult>:
    61ec:	defffa04 	addi	sp,sp,-24
    61f0:	dcc00315 	stw	r19,12(sp)
    61f4:	dc000015 	stw	r16,0(sp)
    61f8:	dfc00515 	stw	ra,20(sp)
    61fc:	dd000415 	stw	r20,16(sp)
    6200:	dc800215 	stw	r18,8(sp)
    6204:	dc400115 	stw	r17,4(sp)
    6208:	308000cc 	andi	r2,r6,3
    620c:	3021883a 	mov	r16,r6
    6210:	2027883a 	mov	r19,r4
    6214:	10002f1e 	bne	r2,zero,62d4 <__pow5mult+0xe8>
    6218:	2825883a 	mov	r18,r5
    621c:	8021d0ba 	srai	r16,r16,2
    6220:	80001a26 	beq	r16,zero,628c <__pow5mult+0xa0>
    6224:	9c401217 	ldw	r17,72(r19)
    6228:	8800061e 	bne	r17,zero,6244 <__pow5mult+0x58>
    622c:	00003406 	br	6300 <__pow5mult+0x114>
    6230:	8021d07a 	srai	r16,r16,1
    6234:	80001526 	beq	r16,zero,628c <__pow5mult+0xa0>
    6238:	88800017 	ldw	r2,0(r17)
    623c:	10001c26 	beq	r2,zero,62b0 <__pow5mult+0xc4>
    6240:	1023883a 	mov	r17,r2
    6244:	8080004c 	andi	r2,r16,1
    6248:	103ff926 	beq	r2,zero,6230 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006230>
    624c:	880d883a 	mov	r6,r17
    6250:	900b883a 	mov	r5,r18
    6254:	9809883a 	mov	r4,r19
    6258:	0005ff40 	call	5ff4 <__multiply>
    625c:	90001b26 	beq	r18,zero,62cc <__pow5mult+0xe0>
    6260:	91000117 	ldw	r4,4(r18)
    6264:	98c01317 	ldw	r3,76(r19)
    6268:	8021d07a 	srai	r16,r16,1
    626c:	2109883a 	add	r4,r4,r4
    6270:	2109883a 	add	r4,r4,r4
    6274:	1907883a 	add	r3,r3,r4
    6278:	19000017 	ldw	r4,0(r3)
    627c:	91000015 	stw	r4,0(r18)
    6280:	1c800015 	stw	r18,0(r3)
    6284:	1025883a 	mov	r18,r2
    6288:	803feb1e 	bne	r16,zero,6238 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006238>
    628c:	9005883a 	mov	r2,r18
    6290:	dfc00517 	ldw	ra,20(sp)
    6294:	dd000417 	ldw	r20,16(sp)
    6298:	dcc00317 	ldw	r19,12(sp)
    629c:	dc800217 	ldw	r18,8(sp)
    62a0:	dc400117 	ldw	r17,4(sp)
    62a4:	dc000017 	ldw	r16,0(sp)
    62a8:	dec00604 	addi	sp,sp,24
    62ac:	f800283a 	ret
    62b0:	880d883a 	mov	r6,r17
    62b4:	880b883a 	mov	r5,r17
    62b8:	9809883a 	mov	r4,r19
    62bc:	0005ff40 	call	5ff4 <__multiply>
    62c0:	88800015 	stw	r2,0(r17)
    62c4:	10000015 	stw	zero,0(r2)
    62c8:	003fdd06 	br	6240 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006240>
    62cc:	1025883a 	mov	r18,r2
    62d0:	003fd706 	br	6230 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006230>
    62d4:	10bfffc4 	addi	r2,r2,-1
    62d8:	1085883a 	add	r2,r2,r2
    62dc:	00c00074 	movhi	r3,1
    62e0:	18c14d04 	addi	r3,r3,1332
    62e4:	1085883a 	add	r2,r2,r2
    62e8:	1885883a 	add	r2,r3,r2
    62ec:	11800017 	ldw	r6,0(r2)
    62f0:	000f883a 	mov	r7,zero
    62f4:	0005c7c0 	call	5c7c <__multadd>
    62f8:	1025883a 	mov	r18,r2
    62fc:	003fc706 	br	621c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000621c>
    6300:	05000044 	movi	r20,1
    6304:	a00b883a 	mov	r5,r20
    6308:	9809883a 	mov	r4,r19
    630c:	0005bac0 	call	5bac <_Balloc>
    6310:	1023883a 	mov	r17,r2
    6314:	00809c44 	movi	r2,625
    6318:	88800515 	stw	r2,20(r17)
    631c:	8d000415 	stw	r20,16(r17)
    6320:	9c401215 	stw	r17,72(r19)
    6324:	88000015 	stw	zero,0(r17)
    6328:	003fc606 	br	6244 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006244>

0000632c <__lshift>:
    632c:	defff904 	addi	sp,sp,-28
    6330:	dd400515 	stw	r21,20(sp)
    6334:	dcc00315 	stw	r19,12(sp)
    6338:	302bd17a 	srai	r21,r6,5
    633c:	2cc00417 	ldw	r19,16(r5)
    6340:	28800217 	ldw	r2,8(r5)
    6344:	dd000415 	stw	r20,16(sp)
    6348:	ace7883a 	add	r19,r21,r19
    634c:	dc800215 	stw	r18,8(sp)
    6350:	dc400115 	stw	r17,4(sp)
    6354:	dc000015 	stw	r16,0(sp)
    6358:	dfc00615 	stw	ra,24(sp)
    635c:	9c000044 	addi	r16,r19,1
    6360:	2823883a 	mov	r17,r5
    6364:	3029883a 	mov	r20,r6
    6368:	2025883a 	mov	r18,r4
    636c:	29400117 	ldw	r5,4(r5)
    6370:	1400030e 	bge	r2,r16,6380 <__lshift+0x54>
    6374:	1085883a 	add	r2,r2,r2
    6378:	29400044 	addi	r5,r5,1
    637c:	143ffd16 	blt	r2,r16,6374 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006374>
    6380:	9009883a 	mov	r4,r18
    6384:	0005bac0 	call	5bac <_Balloc>
    6388:	10c00504 	addi	r3,r2,20
    638c:	0540070e 	bge	zero,r21,63ac <__lshift+0x80>
    6390:	ad6b883a 	add	r21,r21,r21
    6394:	ad6b883a 	add	r21,r21,r21
    6398:	1809883a 	mov	r4,r3
    639c:	1d47883a 	add	r3,r3,r21
    63a0:	20000015 	stw	zero,0(r4)
    63a4:	21000104 	addi	r4,r4,4
    63a8:	193ffd1e 	bne	r3,r4,63a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00063a0>
    63ac:	8a000417 	ldw	r8,16(r17)
    63b0:	89000504 	addi	r4,r17,20
    63b4:	a18007cc 	andi	r6,r20,31
    63b8:	4211883a 	add	r8,r8,r8
    63bc:	4211883a 	add	r8,r8,r8
    63c0:	2211883a 	add	r8,r4,r8
    63c4:	30002326 	beq	r6,zero,6454 <__lshift+0x128>
    63c8:	02400804 	movi	r9,32
    63cc:	4993c83a 	sub	r9,r9,r6
    63d0:	000b883a 	mov	r5,zero
    63d4:	21c00017 	ldw	r7,0(r4)
    63d8:	1815883a 	mov	r10,r3
    63dc:	18c00104 	addi	r3,r3,4
    63e0:	398e983a 	sll	r7,r7,r6
    63e4:	21000104 	addi	r4,r4,4
    63e8:	394ab03a 	or	r5,r7,r5
    63ec:	197fff15 	stw	r5,-4(r3)
    63f0:	217fff17 	ldw	r5,-4(r4)
    63f4:	2a4ad83a 	srl	r5,r5,r9
    63f8:	223ff636 	bltu	r4,r8,63d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00063d4>
    63fc:	51400115 	stw	r5,4(r10)
    6400:	28001a1e 	bne	r5,zero,646c <__lshift+0x140>
    6404:	843fffc4 	addi	r16,r16,-1
    6408:	14000415 	stw	r16,16(r2)
    640c:	88000826 	beq	r17,zero,6430 <__lshift+0x104>
    6410:	89000117 	ldw	r4,4(r17)
    6414:	90c01317 	ldw	r3,76(r18)
    6418:	2109883a 	add	r4,r4,r4
    641c:	2109883a 	add	r4,r4,r4
    6420:	1907883a 	add	r3,r3,r4
    6424:	19000017 	ldw	r4,0(r3)
    6428:	89000015 	stw	r4,0(r17)
    642c:	1c400015 	stw	r17,0(r3)
    6430:	dfc00617 	ldw	ra,24(sp)
    6434:	dd400517 	ldw	r21,20(sp)
    6438:	dd000417 	ldw	r20,16(sp)
    643c:	dcc00317 	ldw	r19,12(sp)
    6440:	dc800217 	ldw	r18,8(sp)
    6444:	dc400117 	ldw	r17,4(sp)
    6448:	dc000017 	ldw	r16,0(sp)
    644c:	dec00704 	addi	sp,sp,28
    6450:	f800283a 	ret
    6454:	21400017 	ldw	r5,0(r4)
    6458:	18c00104 	addi	r3,r3,4
    645c:	21000104 	addi	r4,r4,4
    6460:	197fff15 	stw	r5,-4(r3)
    6464:	223ffb36 	bltu	r4,r8,6454 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006454>
    6468:	003fe606 	br	6404 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006404>
    646c:	9c000084 	addi	r16,r19,2
    6470:	003fe406 	br	6404 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006404>

00006474 <__mcmp>:
    6474:	20800417 	ldw	r2,16(r4)
    6478:	28c00417 	ldw	r3,16(r5)
    647c:	10c5c83a 	sub	r2,r2,r3
    6480:	1000111e 	bne	r2,zero,64c8 <__mcmp+0x54>
    6484:	18c7883a 	add	r3,r3,r3
    6488:	18c7883a 	add	r3,r3,r3
    648c:	21000504 	addi	r4,r4,20
    6490:	29400504 	addi	r5,r5,20
    6494:	20c5883a 	add	r2,r4,r3
    6498:	28cb883a 	add	r5,r5,r3
    649c:	00000106 	br	64a4 <__mcmp+0x30>
    64a0:	20800a2e 	bgeu	r4,r2,64cc <__mcmp+0x58>
    64a4:	10bfff04 	addi	r2,r2,-4
    64a8:	297fff04 	addi	r5,r5,-4
    64ac:	11800017 	ldw	r6,0(r2)
    64b0:	28c00017 	ldw	r3,0(r5)
    64b4:	30fffa26 	beq	r6,r3,64a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00064a0>
    64b8:	30c00236 	bltu	r6,r3,64c4 <__mcmp+0x50>
    64bc:	00800044 	movi	r2,1
    64c0:	f800283a 	ret
    64c4:	00bfffc4 	movi	r2,-1
    64c8:	f800283a 	ret
    64cc:	0005883a 	mov	r2,zero
    64d0:	f800283a 	ret

000064d4 <__mdiff>:
    64d4:	28c00417 	ldw	r3,16(r5)
    64d8:	30800417 	ldw	r2,16(r6)
    64dc:	defffa04 	addi	sp,sp,-24
    64e0:	dcc00315 	stw	r19,12(sp)
    64e4:	dc800215 	stw	r18,8(sp)
    64e8:	dfc00515 	stw	ra,20(sp)
    64ec:	dd000415 	stw	r20,16(sp)
    64f0:	dc400115 	stw	r17,4(sp)
    64f4:	dc000015 	stw	r16,0(sp)
    64f8:	1887c83a 	sub	r3,r3,r2
    64fc:	2825883a 	mov	r18,r5
    6500:	3027883a 	mov	r19,r6
    6504:	1800141e 	bne	r3,zero,6558 <__mdiff+0x84>
    6508:	1085883a 	add	r2,r2,r2
    650c:	1085883a 	add	r2,r2,r2
    6510:	2a000504 	addi	r8,r5,20
    6514:	34000504 	addi	r16,r6,20
    6518:	4087883a 	add	r3,r8,r2
    651c:	8085883a 	add	r2,r16,r2
    6520:	00000106 	br	6528 <__mdiff+0x54>
    6524:	40c0592e 	bgeu	r8,r3,668c <__mdiff+0x1b8>
    6528:	18ffff04 	addi	r3,r3,-4
    652c:	10bfff04 	addi	r2,r2,-4
    6530:	19c00017 	ldw	r7,0(r3)
    6534:	11400017 	ldw	r5,0(r2)
    6538:	397ffa26 	beq	r7,r5,6524 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006524>
    653c:	3940592e 	bgeu	r7,r5,66a4 <__mdiff+0x1d0>
    6540:	9005883a 	mov	r2,r18
    6544:	4023883a 	mov	r17,r8
    6548:	9825883a 	mov	r18,r19
    654c:	05000044 	movi	r20,1
    6550:	1027883a 	mov	r19,r2
    6554:	00000406 	br	6568 <__mdiff+0x94>
    6558:	18005616 	blt	r3,zero,66b4 <__mdiff+0x1e0>
    655c:	34400504 	addi	r17,r6,20
    6560:	2c000504 	addi	r16,r5,20
    6564:	0029883a 	mov	r20,zero
    6568:	91400117 	ldw	r5,4(r18)
    656c:	0005bac0 	call	5bac <_Balloc>
    6570:	92400417 	ldw	r9,16(r18)
    6574:	9b000417 	ldw	r12,16(r19)
    6578:	12c00504 	addi	r11,r2,20
    657c:	4a51883a 	add	r8,r9,r9
    6580:	6319883a 	add	r12,r12,r12
    6584:	4211883a 	add	r8,r8,r8
    6588:	6319883a 	add	r12,r12,r12
    658c:	15000315 	stw	r20,12(r2)
    6590:	8211883a 	add	r8,r16,r8
    6594:	8b19883a 	add	r12,r17,r12
    6598:	0007883a 	mov	r3,zero
    659c:	81400017 	ldw	r5,0(r16)
    65a0:	89c00017 	ldw	r7,0(r17)
    65a4:	59800104 	addi	r6,r11,4
    65a8:	293fffcc 	andi	r4,r5,65535
    65ac:	20c7883a 	add	r3,r4,r3
    65b0:	393fffcc 	andi	r4,r7,65535
    65b4:	1909c83a 	sub	r4,r3,r4
    65b8:	280ad43a 	srli	r5,r5,16
    65bc:	380ed43a 	srli	r7,r7,16
    65c0:	2007d43a 	srai	r3,r4,16
    65c4:	213fffcc 	andi	r4,r4,65535
    65c8:	29cbc83a 	sub	r5,r5,r7
    65cc:	28c7883a 	add	r3,r5,r3
    65d0:	180a943a 	slli	r5,r3,16
    65d4:	8c400104 	addi	r17,r17,4
    65d8:	84000104 	addi	r16,r16,4
    65dc:	2908b03a 	or	r4,r5,r4
    65e0:	59000015 	stw	r4,0(r11)
    65e4:	1807d43a 	srai	r3,r3,16
    65e8:	3015883a 	mov	r10,r6
    65ec:	3017883a 	mov	r11,r6
    65f0:	8b3fea36 	bltu	r17,r12,659c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000659c>
    65f4:	8200162e 	bgeu	r16,r8,6650 <__mdiff+0x17c>
    65f8:	8017883a 	mov	r11,r16
    65fc:	59400017 	ldw	r5,0(r11)
    6600:	31800104 	addi	r6,r6,4
    6604:	5ac00104 	addi	r11,r11,4
    6608:	293fffcc 	andi	r4,r5,65535
    660c:	20c7883a 	add	r3,r4,r3
    6610:	280ed43a 	srli	r7,r5,16
    6614:	180bd43a 	srai	r5,r3,16
    6618:	193fffcc 	andi	r4,r3,65535
    661c:	3947883a 	add	r3,r7,r5
    6620:	180a943a 	slli	r5,r3,16
    6624:	1807d43a 	srai	r3,r3,16
    6628:	2908b03a 	or	r4,r5,r4
    662c:	313fff15 	stw	r4,-4(r6)
    6630:	5a3ff236 	bltu	r11,r8,65fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00065fc>
    6634:	0406303a 	nor	r3,zero,r16
    6638:	1a07883a 	add	r3,r3,r8
    663c:	1806d0ba 	srli	r3,r3,2
    6640:	18c00044 	addi	r3,r3,1
    6644:	18c7883a 	add	r3,r3,r3
    6648:	18c7883a 	add	r3,r3,r3
    664c:	50d5883a 	add	r10,r10,r3
    6650:	50ffff04 	addi	r3,r10,-4
    6654:	2000041e 	bne	r4,zero,6668 <__mdiff+0x194>
    6658:	18ffff04 	addi	r3,r3,-4
    665c:	19000017 	ldw	r4,0(r3)
    6660:	4a7fffc4 	addi	r9,r9,-1
    6664:	203ffc26 	beq	r4,zero,6658 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006658>
    6668:	12400415 	stw	r9,16(r2)
    666c:	dfc00517 	ldw	ra,20(sp)
    6670:	dd000417 	ldw	r20,16(sp)
    6674:	dcc00317 	ldw	r19,12(sp)
    6678:	dc800217 	ldw	r18,8(sp)
    667c:	dc400117 	ldw	r17,4(sp)
    6680:	dc000017 	ldw	r16,0(sp)
    6684:	dec00604 	addi	sp,sp,24
    6688:	f800283a 	ret
    668c:	000b883a 	mov	r5,zero
    6690:	0005bac0 	call	5bac <_Balloc>
    6694:	00c00044 	movi	r3,1
    6698:	10c00415 	stw	r3,16(r2)
    669c:	10000515 	stw	zero,20(r2)
    66a0:	003ff206 	br	666c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000666c>
    66a4:	8023883a 	mov	r17,r16
    66a8:	0029883a 	mov	r20,zero
    66ac:	4021883a 	mov	r16,r8
    66b0:	003fad06 	br	6568 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006568>
    66b4:	9005883a 	mov	r2,r18
    66b8:	94400504 	addi	r17,r18,20
    66bc:	9c000504 	addi	r16,r19,20
    66c0:	9825883a 	mov	r18,r19
    66c4:	05000044 	movi	r20,1
    66c8:	1027883a 	mov	r19,r2
    66cc:	003fa606 	br	6568 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006568>

000066d0 <__ulp>:
    66d0:	295ffc2c 	andhi	r5,r5,32752
    66d4:	00bf3034 	movhi	r2,64704
    66d8:	2887883a 	add	r3,r5,r2
    66dc:	00c0020e 	bge	zero,r3,66e8 <__ulp+0x18>
    66e0:	0005883a 	mov	r2,zero
    66e4:	f800283a 	ret
    66e8:	00c7c83a 	sub	r3,zero,r3
    66ec:	1807d53a 	srai	r3,r3,20
    66f0:	008004c4 	movi	r2,19
    66f4:	10c00b0e 	bge	r2,r3,6724 <__ulp+0x54>
    66f8:	18bffb04 	addi	r2,r3,-20
    66fc:	01000784 	movi	r4,30
    6700:	0007883a 	mov	r3,zero
    6704:	20800516 	blt	r4,r2,671c <__ulp+0x4c>
    6708:	010007c4 	movi	r4,31
    670c:	2089c83a 	sub	r4,r4,r2
    6710:	00800044 	movi	r2,1
    6714:	1104983a 	sll	r2,r2,r4
    6718:	f800283a 	ret
    671c:	00800044 	movi	r2,1
    6720:	f800283a 	ret
    6724:	01400234 	movhi	r5,8
    6728:	28c7d83a 	sra	r3,r5,r3
    672c:	0005883a 	mov	r2,zero
    6730:	f800283a 	ret

00006734 <__b2d>:
    6734:	defffa04 	addi	sp,sp,-24
    6738:	dc000015 	stw	r16,0(sp)
    673c:	24000417 	ldw	r16,16(r4)
    6740:	dc400115 	stw	r17,4(sp)
    6744:	24400504 	addi	r17,r4,20
    6748:	8421883a 	add	r16,r16,r16
    674c:	8421883a 	add	r16,r16,r16
    6750:	8c21883a 	add	r16,r17,r16
    6754:	dc800215 	stw	r18,8(sp)
    6758:	84bfff17 	ldw	r18,-4(r16)
    675c:	dd000415 	stw	r20,16(sp)
    6760:	dcc00315 	stw	r19,12(sp)
    6764:	9009883a 	mov	r4,r18
    6768:	2829883a 	mov	r20,r5
    676c:	dfc00515 	stw	ra,20(sp)
    6770:	0005ea00 	call	5ea0 <__hi0bits>
    6774:	00c00804 	movi	r3,32
    6778:	1889c83a 	sub	r4,r3,r2
    677c:	a1000015 	stw	r4,0(r20)
    6780:	01000284 	movi	r4,10
    6784:	84ffff04 	addi	r19,r16,-4
    6788:	20801216 	blt	r4,r2,67d4 <__b2d+0xa0>
    678c:	018002c4 	movi	r6,11
    6790:	308dc83a 	sub	r6,r6,r2
    6794:	9186d83a 	srl	r3,r18,r6
    6798:	18cffc34 	orhi	r3,r3,16368
    679c:	8cc0212e 	bgeu	r17,r19,6824 <__b2d+0xf0>
    67a0:	813ffe17 	ldw	r4,-8(r16)
    67a4:	218cd83a 	srl	r6,r4,r6
    67a8:	10800544 	addi	r2,r2,21
    67ac:	9084983a 	sll	r2,r18,r2
    67b0:	1184b03a 	or	r2,r2,r6
    67b4:	dfc00517 	ldw	ra,20(sp)
    67b8:	dd000417 	ldw	r20,16(sp)
    67bc:	dcc00317 	ldw	r19,12(sp)
    67c0:	dc800217 	ldw	r18,8(sp)
    67c4:	dc400117 	ldw	r17,4(sp)
    67c8:	dc000017 	ldw	r16,0(sp)
    67cc:	dec00604 	addi	sp,sp,24
    67d0:	f800283a 	ret
    67d4:	8cc00f2e 	bgeu	r17,r19,6814 <__b2d+0xe0>
    67d8:	117ffd44 	addi	r5,r2,-11
    67dc:	80bffe17 	ldw	r2,-8(r16)
    67e0:	28000e26 	beq	r5,zero,681c <__b2d+0xe8>
    67e4:	1949c83a 	sub	r4,r3,r5
    67e8:	9164983a 	sll	r18,r18,r5
    67ec:	1106d83a 	srl	r3,r2,r4
    67f0:	81bffe04 	addi	r6,r16,-8
    67f4:	948ffc34 	orhi	r18,r18,16368
    67f8:	90c6b03a 	or	r3,r18,r3
    67fc:	89800e2e 	bgeu	r17,r6,6838 <__b2d+0x104>
    6800:	81bffd17 	ldw	r6,-12(r16)
    6804:	1144983a 	sll	r2,r2,r5
    6808:	310ad83a 	srl	r5,r6,r4
    680c:	2884b03a 	or	r2,r5,r2
    6810:	003fe806 	br	67b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067b4>
    6814:	10bffd44 	addi	r2,r2,-11
    6818:	1000041e 	bne	r2,zero,682c <__b2d+0xf8>
    681c:	90cffc34 	orhi	r3,r18,16368
    6820:	003fe406 	br	67b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067b4>
    6824:	000d883a 	mov	r6,zero
    6828:	003fdf06 	br	67a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067a8>
    682c:	90a4983a 	sll	r18,r18,r2
    6830:	0005883a 	mov	r2,zero
    6834:	003ff906 	br	681c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000681c>
    6838:	1144983a 	sll	r2,r2,r5
    683c:	003fdd06 	br	67b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067b4>

00006840 <__d2b>:
    6840:	defff804 	addi	sp,sp,-32
    6844:	dc000215 	stw	r16,8(sp)
    6848:	3021883a 	mov	r16,r6
    684c:	dc400315 	stw	r17,12(sp)
    6850:	8022907a 	slli	r17,r16,1
    6854:	dd000615 	stw	r20,24(sp)
    6858:	2829883a 	mov	r20,r5
    685c:	01400044 	movi	r5,1
    6860:	dcc00515 	stw	r19,20(sp)
    6864:	dc800415 	stw	r18,16(sp)
    6868:	dfc00715 	stw	ra,28(sp)
    686c:	3825883a 	mov	r18,r7
    6870:	8822d57a 	srli	r17,r17,21
    6874:	0005bac0 	call	5bac <_Balloc>
    6878:	1027883a 	mov	r19,r2
    687c:	00800434 	movhi	r2,16
    6880:	10bfffc4 	addi	r2,r2,-1
    6884:	808c703a 	and	r6,r16,r2
    6888:	88000126 	beq	r17,zero,6890 <__d2b+0x50>
    688c:	31800434 	orhi	r6,r6,16
    6890:	d9800015 	stw	r6,0(sp)
    6894:	a0002426 	beq	r20,zero,6928 <__d2b+0xe8>
    6898:	d9000104 	addi	r4,sp,4
    689c:	dd000115 	stw	r20,4(sp)
    68a0:	0005f080 	call	5f08 <__lo0bits>
    68a4:	d8c00017 	ldw	r3,0(sp)
    68a8:	10002f1e 	bne	r2,zero,6968 <__d2b+0x128>
    68ac:	d9000117 	ldw	r4,4(sp)
    68b0:	99000515 	stw	r4,20(r19)
    68b4:	1821003a 	cmpeq	r16,r3,zero
    68b8:	01000084 	movi	r4,2
    68bc:	2421c83a 	sub	r16,r4,r16
    68c0:	98c00615 	stw	r3,24(r19)
    68c4:	9c000415 	stw	r16,16(r19)
    68c8:	88001f1e 	bne	r17,zero,6948 <__d2b+0x108>
    68cc:	10bef384 	addi	r2,r2,-1074
    68d0:	90800015 	stw	r2,0(r18)
    68d4:	00900034 	movhi	r2,16384
    68d8:	10bfffc4 	addi	r2,r2,-1
    68dc:	8085883a 	add	r2,r16,r2
    68e0:	1085883a 	add	r2,r2,r2
    68e4:	1085883a 	add	r2,r2,r2
    68e8:	9885883a 	add	r2,r19,r2
    68ec:	11000517 	ldw	r4,20(r2)
    68f0:	8020917a 	slli	r16,r16,5
    68f4:	0005ea00 	call	5ea0 <__hi0bits>
    68f8:	d8c00817 	ldw	r3,32(sp)
    68fc:	8085c83a 	sub	r2,r16,r2
    6900:	18800015 	stw	r2,0(r3)
    6904:	9805883a 	mov	r2,r19
    6908:	dfc00717 	ldw	ra,28(sp)
    690c:	dd000617 	ldw	r20,24(sp)
    6910:	dcc00517 	ldw	r19,20(sp)
    6914:	dc800417 	ldw	r18,16(sp)
    6918:	dc400317 	ldw	r17,12(sp)
    691c:	dc000217 	ldw	r16,8(sp)
    6920:	dec00804 	addi	sp,sp,32
    6924:	f800283a 	ret
    6928:	d809883a 	mov	r4,sp
    692c:	0005f080 	call	5f08 <__lo0bits>
    6930:	d8c00017 	ldw	r3,0(sp)
    6934:	04000044 	movi	r16,1
    6938:	9c000415 	stw	r16,16(r19)
    693c:	98c00515 	stw	r3,20(r19)
    6940:	10800804 	addi	r2,r2,32
    6944:	883fe126 	beq	r17,zero,68cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00068cc>
    6948:	00c00d44 	movi	r3,53
    694c:	8c7ef344 	addi	r17,r17,-1075
    6950:	88a3883a 	add	r17,r17,r2
    6954:	1885c83a 	sub	r2,r3,r2
    6958:	d8c00817 	ldw	r3,32(sp)
    695c:	94400015 	stw	r17,0(r18)
    6960:	18800015 	stw	r2,0(r3)
    6964:	003fe706 	br	6904 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006904>
    6968:	01000804 	movi	r4,32
    696c:	2089c83a 	sub	r4,r4,r2
    6970:	1908983a 	sll	r4,r3,r4
    6974:	d9400117 	ldw	r5,4(sp)
    6978:	1886d83a 	srl	r3,r3,r2
    697c:	2148b03a 	or	r4,r4,r5
    6980:	99000515 	stw	r4,20(r19)
    6984:	d8c00015 	stw	r3,0(sp)
    6988:	003fca06 	br	68b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00068b4>

0000698c <__ratio>:
    698c:	defff904 	addi	sp,sp,-28
    6990:	dc400315 	stw	r17,12(sp)
    6994:	2823883a 	mov	r17,r5
    6998:	d9400104 	addi	r5,sp,4
    699c:	dfc00615 	stw	ra,24(sp)
    69a0:	dcc00515 	stw	r19,20(sp)
    69a4:	dc800415 	stw	r18,16(sp)
    69a8:	2027883a 	mov	r19,r4
    69ac:	dc000215 	stw	r16,8(sp)
    69b0:	00067340 	call	6734 <__b2d>
    69b4:	d80b883a 	mov	r5,sp
    69b8:	8809883a 	mov	r4,r17
    69bc:	1025883a 	mov	r18,r2
    69c0:	1821883a 	mov	r16,r3
    69c4:	00067340 	call	6734 <__b2d>
    69c8:	8a000417 	ldw	r8,16(r17)
    69cc:	99000417 	ldw	r4,16(r19)
    69d0:	d9400117 	ldw	r5,4(sp)
    69d4:	2209c83a 	sub	r4,r4,r8
    69d8:	2010917a 	slli	r8,r4,5
    69dc:	d9000017 	ldw	r4,0(sp)
    69e0:	2909c83a 	sub	r4,r5,r4
    69e4:	4109883a 	add	r4,r8,r4
    69e8:	01000e0e 	bge	zero,r4,6a24 <__ratio+0x98>
    69ec:	2008953a 	slli	r4,r4,20
    69f0:	2421883a 	add	r16,r4,r16
    69f4:	100d883a 	mov	r6,r2
    69f8:	180f883a 	mov	r7,r3
    69fc:	9009883a 	mov	r4,r18
    6a00:	800b883a 	mov	r5,r16
    6a04:	000af280 	call	af28 <__divdf3>
    6a08:	dfc00617 	ldw	ra,24(sp)
    6a0c:	dcc00517 	ldw	r19,20(sp)
    6a10:	dc800417 	ldw	r18,16(sp)
    6a14:	dc400317 	ldw	r17,12(sp)
    6a18:	dc000217 	ldw	r16,8(sp)
    6a1c:	dec00704 	addi	sp,sp,28
    6a20:	f800283a 	ret
    6a24:	2008953a 	slli	r4,r4,20
    6a28:	1907c83a 	sub	r3,r3,r4
    6a2c:	003ff106 	br	69f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00069f4>

00006a30 <_mprec_log10>:
    6a30:	defffe04 	addi	sp,sp,-8
    6a34:	dc000015 	stw	r16,0(sp)
    6a38:	dfc00115 	stw	ra,4(sp)
    6a3c:	008005c4 	movi	r2,23
    6a40:	2021883a 	mov	r16,r4
    6a44:	11000d0e 	bge	r2,r4,6a7c <_mprec_log10+0x4c>
    6a48:	0005883a 	mov	r2,zero
    6a4c:	00cffc34 	movhi	r3,16368
    6a50:	843fffc4 	addi	r16,r16,-1
    6a54:	000d883a 	mov	r6,zero
    6a58:	01d00934 	movhi	r7,16420
    6a5c:	1009883a 	mov	r4,r2
    6a60:	180b883a 	mov	r5,r3
    6a64:	000ba680 	call	ba68 <__muldf3>
    6a68:	803ff91e 	bne	r16,zero,6a50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006a50>
    6a6c:	dfc00117 	ldw	ra,4(sp)
    6a70:	dc000017 	ldw	r16,0(sp)
    6a74:	dec00204 	addi	sp,sp,8
    6a78:	f800283a 	ret
    6a7c:	202090fa 	slli	r16,r4,3
    6a80:	00800074 	movhi	r2,1
    6a84:	10816404 	addi	r2,r2,1424
    6a88:	1421883a 	add	r16,r2,r16
    6a8c:	80800017 	ldw	r2,0(r16)
    6a90:	80c00117 	ldw	r3,4(r16)
    6a94:	dfc00117 	ldw	ra,4(sp)
    6a98:	dc000017 	ldw	r16,0(sp)
    6a9c:	dec00204 	addi	sp,sp,8
    6aa0:	f800283a 	ret

00006aa4 <__copybits>:
    6aa4:	297fffc4 	addi	r5,r5,-1
    6aa8:	280fd17a 	srai	r7,r5,5
    6aac:	30c00417 	ldw	r3,16(r6)
    6ab0:	30800504 	addi	r2,r6,20
    6ab4:	39c00044 	addi	r7,r7,1
    6ab8:	18c7883a 	add	r3,r3,r3
    6abc:	39cf883a 	add	r7,r7,r7
    6ac0:	18c7883a 	add	r3,r3,r3
    6ac4:	39cf883a 	add	r7,r7,r7
    6ac8:	10c7883a 	add	r3,r2,r3
    6acc:	21cf883a 	add	r7,r4,r7
    6ad0:	10c00d2e 	bgeu	r2,r3,6b08 <__copybits+0x64>
    6ad4:	200b883a 	mov	r5,r4
    6ad8:	12000017 	ldw	r8,0(r2)
    6adc:	29400104 	addi	r5,r5,4
    6ae0:	10800104 	addi	r2,r2,4
    6ae4:	2a3fff15 	stw	r8,-4(r5)
    6ae8:	10fffb36 	bltu	r2,r3,6ad8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006ad8>
    6aec:	1985c83a 	sub	r2,r3,r6
    6af0:	10bffac4 	addi	r2,r2,-21
    6af4:	1004d0ba 	srli	r2,r2,2
    6af8:	10800044 	addi	r2,r2,1
    6afc:	1085883a 	add	r2,r2,r2
    6b00:	1085883a 	add	r2,r2,r2
    6b04:	2089883a 	add	r4,r4,r2
    6b08:	21c0032e 	bgeu	r4,r7,6b18 <__copybits+0x74>
    6b0c:	20000015 	stw	zero,0(r4)
    6b10:	21000104 	addi	r4,r4,4
    6b14:	21fffd36 	bltu	r4,r7,6b0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b0c>
    6b18:	f800283a 	ret

00006b1c <__any_on>:
    6b1c:	20c00417 	ldw	r3,16(r4)
    6b20:	2805d17a 	srai	r2,r5,5
    6b24:	21000504 	addi	r4,r4,20
    6b28:	18800d0e 	bge	r3,r2,6b60 <__any_on+0x44>
    6b2c:	18c7883a 	add	r3,r3,r3
    6b30:	18c7883a 	add	r3,r3,r3
    6b34:	20c7883a 	add	r3,r4,r3
    6b38:	20c0192e 	bgeu	r4,r3,6ba0 <__any_on+0x84>
    6b3c:	18bfff17 	ldw	r2,-4(r3)
    6b40:	18ffff04 	addi	r3,r3,-4
    6b44:	1000041e 	bne	r2,zero,6b58 <__any_on+0x3c>
    6b48:	20c0142e 	bgeu	r4,r3,6b9c <__any_on+0x80>
    6b4c:	18ffff04 	addi	r3,r3,-4
    6b50:	19400017 	ldw	r5,0(r3)
    6b54:	283ffc26 	beq	r5,zero,6b48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b48>
    6b58:	00800044 	movi	r2,1
    6b5c:	f800283a 	ret
    6b60:	10c00a0e 	bge	r2,r3,6b8c <__any_on+0x70>
    6b64:	1085883a 	add	r2,r2,r2
    6b68:	1085883a 	add	r2,r2,r2
    6b6c:	294007cc 	andi	r5,r5,31
    6b70:	2087883a 	add	r3,r4,r2
    6b74:	283ff026 	beq	r5,zero,6b38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b38>
    6b78:	19800017 	ldw	r6,0(r3)
    6b7c:	3144d83a 	srl	r2,r6,r5
    6b80:	114a983a 	sll	r5,r2,r5
    6b84:	317ff41e 	bne	r6,r5,6b58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b58>
    6b88:	003feb06 	br	6b38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b38>
    6b8c:	1085883a 	add	r2,r2,r2
    6b90:	1085883a 	add	r2,r2,r2
    6b94:	2087883a 	add	r3,r4,r2
    6b98:	003fe706 	br	6b38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b38>
    6b9c:	f800283a 	ret
    6ba0:	0005883a 	mov	r2,zero
    6ba4:	f800283a 	ret

00006ba8 <__fpclassifyd>:
    6ba8:	00a00034 	movhi	r2,32768
    6bac:	10bfffc4 	addi	r2,r2,-1
    6bb0:	2884703a 	and	r2,r5,r2
    6bb4:	10000726 	beq	r2,zero,6bd4 <__fpclassifyd+0x2c>
    6bb8:	00fffc34 	movhi	r3,65520
    6bbc:	019ff834 	movhi	r6,32736
    6bc0:	28c7883a 	add	r3,r5,r3
    6bc4:	31bfffc4 	addi	r6,r6,-1
    6bc8:	30c00536 	bltu	r6,r3,6be0 <__fpclassifyd+0x38>
    6bcc:	00800104 	movi	r2,4
    6bd0:	f800283a 	ret
    6bd4:	2000021e 	bne	r4,zero,6be0 <__fpclassifyd+0x38>
    6bd8:	00800084 	movi	r2,2
    6bdc:	f800283a 	ret
    6be0:	00dffc34 	movhi	r3,32752
    6be4:	019ff834 	movhi	r6,32736
    6be8:	28cb883a 	add	r5,r5,r3
    6bec:	31bfffc4 	addi	r6,r6,-1
    6bf0:	317ff62e 	bgeu	r6,r5,6bcc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006bcc>
    6bf4:	01400434 	movhi	r5,16
    6bf8:	297fffc4 	addi	r5,r5,-1
    6bfc:	28800236 	bltu	r5,r2,6c08 <__fpclassifyd+0x60>
    6c00:	008000c4 	movi	r2,3
    6c04:	f800283a 	ret
    6c08:	10c00226 	beq	r2,r3,6c14 <__fpclassifyd+0x6c>
    6c0c:	0005883a 	mov	r2,zero
    6c10:	f800283a 	ret
    6c14:	2005003a 	cmpeq	r2,r4,zero
    6c18:	f800283a 	ret

00006c1c <_sbrk_r>:
    6c1c:	defffd04 	addi	sp,sp,-12
    6c20:	dc000015 	stw	r16,0(sp)
    6c24:	04000074 	movhi	r16,1
    6c28:	dc400115 	stw	r17,4(sp)
    6c2c:	8410c604 	addi	r16,r16,17176
    6c30:	2023883a 	mov	r17,r4
    6c34:	2809883a 	mov	r4,r5
    6c38:	dfc00215 	stw	ra,8(sp)
    6c3c:	80000015 	stw	zero,0(r16)
    6c40:	000d5c40 	call	d5c4 <sbrk>
    6c44:	00ffffc4 	movi	r3,-1
    6c48:	10c00526 	beq	r2,r3,6c60 <_sbrk_r+0x44>
    6c4c:	dfc00217 	ldw	ra,8(sp)
    6c50:	dc400117 	ldw	r17,4(sp)
    6c54:	dc000017 	ldw	r16,0(sp)
    6c58:	dec00304 	addi	sp,sp,12
    6c5c:	f800283a 	ret
    6c60:	80c00017 	ldw	r3,0(r16)
    6c64:	183ff926 	beq	r3,zero,6c4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006c4c>
    6c68:	88c00015 	stw	r3,0(r17)
    6c6c:	003ff706 	br	6c4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006c4c>

00006c70 <__sread>:
    6c70:	defffe04 	addi	sp,sp,-8
    6c74:	dc000015 	stw	r16,0(sp)
    6c78:	2821883a 	mov	r16,r5
    6c7c:	2940038f 	ldh	r5,14(r5)
    6c80:	dfc00115 	stw	ra,4(sp)
    6c84:	00091140 	call	9114 <_read_r>
    6c88:	10000716 	blt	r2,zero,6ca8 <__sread+0x38>
    6c8c:	80c01417 	ldw	r3,80(r16)
    6c90:	1887883a 	add	r3,r3,r2
    6c94:	80c01415 	stw	r3,80(r16)
    6c98:	dfc00117 	ldw	ra,4(sp)
    6c9c:	dc000017 	ldw	r16,0(sp)
    6ca0:	dec00204 	addi	sp,sp,8
    6ca4:	f800283a 	ret
    6ca8:	80c0030b 	ldhu	r3,12(r16)
    6cac:	18fbffcc 	andi	r3,r3,61439
    6cb0:	80c0030d 	sth	r3,12(r16)
    6cb4:	dfc00117 	ldw	ra,4(sp)
    6cb8:	dc000017 	ldw	r16,0(sp)
    6cbc:	dec00204 	addi	sp,sp,8
    6cc0:	f800283a 	ret

00006cc4 <__seofread>:
    6cc4:	0005883a 	mov	r2,zero
    6cc8:	f800283a 	ret

00006ccc <__swrite>:
    6ccc:	2880030b 	ldhu	r2,12(r5)
    6cd0:	defffb04 	addi	sp,sp,-20
    6cd4:	dcc00315 	stw	r19,12(sp)
    6cd8:	dc800215 	stw	r18,8(sp)
    6cdc:	dc400115 	stw	r17,4(sp)
    6ce0:	dc000015 	stw	r16,0(sp)
    6ce4:	dfc00415 	stw	ra,16(sp)
    6ce8:	10c0400c 	andi	r3,r2,256
    6cec:	2821883a 	mov	r16,r5
    6cf0:	2023883a 	mov	r17,r4
    6cf4:	3025883a 	mov	r18,r6
    6cf8:	3827883a 	mov	r19,r7
    6cfc:	18000526 	beq	r3,zero,6d14 <__swrite+0x48>
    6d00:	2940038f 	ldh	r5,14(r5)
    6d04:	01c00084 	movi	r7,2
    6d08:	000d883a 	mov	r6,zero
    6d0c:	0008f580 	call	8f58 <_lseek_r>
    6d10:	8080030b 	ldhu	r2,12(r16)
    6d14:	8140038f 	ldh	r5,14(r16)
    6d18:	10bbffcc 	andi	r2,r2,61439
    6d1c:	980f883a 	mov	r7,r19
    6d20:	900d883a 	mov	r6,r18
    6d24:	8809883a 	mov	r4,r17
    6d28:	8080030d 	sth	r2,12(r16)
    6d2c:	dfc00417 	ldw	ra,16(sp)
    6d30:	dcc00317 	ldw	r19,12(sp)
    6d34:	dc800217 	ldw	r18,8(sp)
    6d38:	dc400117 	ldw	r17,4(sp)
    6d3c:	dc000017 	ldw	r16,0(sp)
    6d40:	dec00504 	addi	sp,sp,20
    6d44:	00085681 	jmpi	8568 <_write_r>

00006d48 <__sseek>:
    6d48:	defffe04 	addi	sp,sp,-8
    6d4c:	dc000015 	stw	r16,0(sp)
    6d50:	2821883a 	mov	r16,r5
    6d54:	2940038f 	ldh	r5,14(r5)
    6d58:	dfc00115 	stw	ra,4(sp)
    6d5c:	0008f580 	call	8f58 <_lseek_r>
    6d60:	00ffffc4 	movi	r3,-1
    6d64:	10c00826 	beq	r2,r3,6d88 <__sseek+0x40>
    6d68:	80c0030b 	ldhu	r3,12(r16)
    6d6c:	80801415 	stw	r2,80(r16)
    6d70:	18c40014 	ori	r3,r3,4096
    6d74:	80c0030d 	sth	r3,12(r16)
    6d78:	dfc00117 	ldw	ra,4(sp)
    6d7c:	dc000017 	ldw	r16,0(sp)
    6d80:	dec00204 	addi	sp,sp,8
    6d84:	f800283a 	ret
    6d88:	80c0030b 	ldhu	r3,12(r16)
    6d8c:	18fbffcc 	andi	r3,r3,61439
    6d90:	80c0030d 	sth	r3,12(r16)
    6d94:	dfc00117 	ldw	ra,4(sp)
    6d98:	dc000017 	ldw	r16,0(sp)
    6d9c:	dec00204 	addi	sp,sp,8
    6da0:	f800283a 	ret

00006da4 <__sclose>:
    6da4:	2940038f 	ldh	r5,14(r5)
    6da8:	00085c81 	jmpi	85c8 <_close_r>

00006dac <strcmp>:
    6dac:	2144b03a 	or	r2,r4,r5
    6db0:	108000cc 	andi	r2,r2,3
    6db4:	1000171e 	bne	r2,zero,6e14 <strcmp+0x68>
    6db8:	20800017 	ldw	r2,0(r4)
    6dbc:	28c00017 	ldw	r3,0(r5)
    6dc0:	10c0141e 	bne	r2,r3,6e14 <strcmp+0x68>
    6dc4:	027fbff4 	movhi	r9,65279
    6dc8:	4a7fbfc4 	addi	r9,r9,-257
    6dcc:	0086303a 	nor	r3,zero,r2
    6dd0:	02202074 	movhi	r8,32897
    6dd4:	1245883a 	add	r2,r2,r9
    6dd8:	42202004 	addi	r8,r8,-32640
    6ddc:	10c4703a 	and	r2,r2,r3
    6de0:	1204703a 	and	r2,r2,r8
    6de4:	10000226 	beq	r2,zero,6df0 <strcmp+0x44>
    6de8:	00002306 	br	6e78 <strcmp+0xcc>
    6dec:	1000221e 	bne	r2,zero,6e78 <strcmp+0xcc>
    6df0:	21000104 	addi	r4,r4,4
    6df4:	20c00017 	ldw	r3,0(r4)
    6df8:	29400104 	addi	r5,r5,4
    6dfc:	29800017 	ldw	r6,0(r5)
    6e00:	1a4f883a 	add	r7,r3,r9
    6e04:	00c4303a 	nor	r2,zero,r3
    6e08:	3884703a 	and	r2,r7,r2
    6e0c:	1204703a 	and	r2,r2,r8
    6e10:	19bff626 	beq	r3,r6,6dec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006dec>
    6e14:	20800003 	ldbu	r2,0(r4)
    6e18:	10c03fcc 	andi	r3,r2,255
    6e1c:	18c0201c 	xori	r3,r3,128
    6e20:	18ffe004 	addi	r3,r3,-128
    6e24:	18000c26 	beq	r3,zero,6e58 <strcmp+0xac>
    6e28:	29800007 	ldb	r6,0(r5)
    6e2c:	19800326 	beq	r3,r6,6e3c <strcmp+0x90>
    6e30:	00001306 	br	6e80 <strcmp+0xd4>
    6e34:	29800007 	ldb	r6,0(r5)
    6e38:	11800b1e 	bne	r2,r6,6e68 <strcmp+0xbc>
    6e3c:	21000044 	addi	r4,r4,1
    6e40:	20c00003 	ldbu	r3,0(r4)
    6e44:	29400044 	addi	r5,r5,1
    6e48:	18803fcc 	andi	r2,r3,255
    6e4c:	1080201c 	xori	r2,r2,128
    6e50:	10bfe004 	addi	r2,r2,-128
    6e54:	103ff71e 	bne	r2,zero,6e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e34>
    6e58:	0007883a 	mov	r3,zero
    6e5c:	28800003 	ldbu	r2,0(r5)
    6e60:	1885c83a 	sub	r2,r3,r2
    6e64:	f800283a 	ret
    6e68:	28800003 	ldbu	r2,0(r5)
    6e6c:	18c03fcc 	andi	r3,r3,255
    6e70:	1885c83a 	sub	r2,r3,r2
    6e74:	f800283a 	ret
    6e78:	0005883a 	mov	r2,zero
    6e7c:	f800283a 	ret
    6e80:	10c03fcc 	andi	r3,r2,255
    6e84:	003ff506 	br	6e5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e5c>

00006e88 <strlen>:
    6e88:	208000cc 	andi	r2,r4,3
    6e8c:	10002026 	beq	r2,zero,6f10 <strlen+0x88>
    6e90:	20800007 	ldb	r2,0(r4)
    6e94:	10002026 	beq	r2,zero,6f18 <strlen+0x90>
    6e98:	2005883a 	mov	r2,r4
    6e9c:	00000206 	br	6ea8 <strlen+0x20>
    6ea0:	10c00007 	ldb	r3,0(r2)
    6ea4:	18001826 	beq	r3,zero,6f08 <strlen+0x80>
    6ea8:	10800044 	addi	r2,r2,1
    6eac:	10c000cc 	andi	r3,r2,3
    6eb0:	183ffb1e 	bne	r3,zero,6ea0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006ea0>
    6eb4:	10c00017 	ldw	r3,0(r2)
    6eb8:	01ffbff4 	movhi	r7,65279
    6ebc:	39ffbfc4 	addi	r7,r7,-257
    6ec0:	00ca303a 	nor	r5,zero,r3
    6ec4:	01a02074 	movhi	r6,32897
    6ec8:	19c7883a 	add	r3,r3,r7
    6ecc:	31a02004 	addi	r6,r6,-32640
    6ed0:	1946703a 	and	r3,r3,r5
    6ed4:	1986703a 	and	r3,r3,r6
    6ed8:	1800091e 	bne	r3,zero,6f00 <strlen+0x78>
    6edc:	10800104 	addi	r2,r2,4
    6ee0:	10c00017 	ldw	r3,0(r2)
    6ee4:	19cb883a 	add	r5,r3,r7
    6ee8:	00c6303a 	nor	r3,zero,r3
    6eec:	28c6703a 	and	r3,r5,r3
    6ef0:	1986703a 	and	r3,r3,r6
    6ef4:	183ff926 	beq	r3,zero,6edc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006edc>
    6ef8:	00000106 	br	6f00 <strlen+0x78>
    6efc:	10800044 	addi	r2,r2,1
    6f00:	10c00007 	ldb	r3,0(r2)
    6f04:	183ffd1e 	bne	r3,zero,6efc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006efc>
    6f08:	1105c83a 	sub	r2,r2,r4
    6f0c:	f800283a 	ret
    6f10:	2005883a 	mov	r2,r4
    6f14:	003fe706 	br	6eb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006eb4>
    6f18:	0005883a 	mov	r2,zero
    6f1c:	f800283a 	ret

00006f20 <__sprint_r.part.0>:
    6f20:	28801917 	ldw	r2,100(r5)
    6f24:	defff604 	addi	sp,sp,-40
    6f28:	dd400515 	stw	r21,20(sp)
    6f2c:	dfc00915 	stw	ra,36(sp)
    6f30:	df000815 	stw	fp,32(sp)
    6f34:	ddc00715 	stw	r23,28(sp)
    6f38:	dd800615 	stw	r22,24(sp)
    6f3c:	dd000415 	stw	r20,16(sp)
    6f40:	dcc00315 	stw	r19,12(sp)
    6f44:	dc800215 	stw	r18,8(sp)
    6f48:	dc400115 	stw	r17,4(sp)
    6f4c:	dc000015 	stw	r16,0(sp)
    6f50:	1088000c 	andi	r2,r2,8192
    6f54:	302b883a 	mov	r21,r6
    6f58:	10002e26 	beq	r2,zero,7014 <__sprint_r.part.0+0xf4>
    6f5c:	30800217 	ldw	r2,8(r6)
    6f60:	35800017 	ldw	r22,0(r6)
    6f64:	10002926 	beq	r2,zero,700c <__sprint_r.part.0+0xec>
    6f68:	2827883a 	mov	r19,r5
    6f6c:	2029883a 	mov	r20,r4
    6f70:	b5c00104 	addi	r23,r22,4
    6f74:	04bfffc4 	movi	r18,-1
    6f78:	bc400017 	ldw	r17,0(r23)
    6f7c:	b4000017 	ldw	r16,0(r22)
    6f80:	0039883a 	mov	fp,zero
    6f84:	8822d0ba 	srli	r17,r17,2
    6f88:	8800031e 	bne	r17,zero,6f98 <__sprint_r.part.0+0x78>
    6f8c:	00001806 	br	6ff0 <__sprint_r.part.0+0xd0>
    6f90:	84000104 	addi	r16,r16,4
    6f94:	8f001526 	beq	r17,fp,6fec <__sprint_r.part.0+0xcc>
    6f98:	81400017 	ldw	r5,0(r16)
    6f9c:	980d883a 	mov	r6,r19
    6fa0:	a009883a 	mov	r4,r20
    6fa4:	00089480 	call	8948 <_fputwc_r>
    6fa8:	e7000044 	addi	fp,fp,1
    6fac:	14bff81e 	bne	r2,r18,6f90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006f90>
    6fb0:	9005883a 	mov	r2,r18
    6fb4:	a8000215 	stw	zero,8(r21)
    6fb8:	a8000115 	stw	zero,4(r21)
    6fbc:	dfc00917 	ldw	ra,36(sp)
    6fc0:	df000817 	ldw	fp,32(sp)
    6fc4:	ddc00717 	ldw	r23,28(sp)
    6fc8:	dd800617 	ldw	r22,24(sp)
    6fcc:	dd400517 	ldw	r21,20(sp)
    6fd0:	dd000417 	ldw	r20,16(sp)
    6fd4:	dcc00317 	ldw	r19,12(sp)
    6fd8:	dc800217 	ldw	r18,8(sp)
    6fdc:	dc400117 	ldw	r17,4(sp)
    6fe0:	dc000017 	ldw	r16,0(sp)
    6fe4:	dec00a04 	addi	sp,sp,40
    6fe8:	f800283a 	ret
    6fec:	a8800217 	ldw	r2,8(r21)
    6ff0:	8c63883a 	add	r17,r17,r17
    6ff4:	8c63883a 	add	r17,r17,r17
    6ff8:	1445c83a 	sub	r2,r2,r17
    6ffc:	a8800215 	stw	r2,8(r21)
    7000:	b5800204 	addi	r22,r22,8
    7004:	bdc00204 	addi	r23,r23,8
    7008:	103fdb1e 	bne	r2,zero,6f78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006f78>
    700c:	0005883a 	mov	r2,zero
    7010:	003fe806 	br	6fb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006fb4>
    7014:	0008a480 	call	8a48 <__sfvwrite_r>
    7018:	003fe606 	br	6fb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006fb4>

0000701c <__sprint_r>:
    701c:	30c00217 	ldw	r3,8(r6)
    7020:	18000126 	beq	r3,zero,7028 <__sprint_r+0xc>
    7024:	0006f201 	jmpi	6f20 <__sprint_r.part.0>
    7028:	30000115 	stw	zero,4(r6)
    702c:	0005883a 	mov	r2,zero
    7030:	f800283a 	ret

00007034 <___vfiprintf_internal_r>:
    7034:	deffc904 	addi	sp,sp,-220
    7038:	df003515 	stw	fp,212(sp)
    703c:	dd003115 	stw	r20,196(sp)
    7040:	dfc03615 	stw	ra,216(sp)
    7044:	ddc03415 	stw	r23,208(sp)
    7048:	dd803315 	stw	r22,204(sp)
    704c:	dd403215 	stw	r21,200(sp)
    7050:	dcc03015 	stw	r19,192(sp)
    7054:	dc802f15 	stw	r18,188(sp)
    7058:	dc402e15 	stw	r17,184(sp)
    705c:	dc002d15 	stw	r16,180(sp)
    7060:	d9002015 	stw	r4,128(sp)
    7064:	d9c02215 	stw	r7,136(sp)
    7068:	2829883a 	mov	r20,r5
    706c:	3039883a 	mov	fp,r6
    7070:	20000226 	beq	r4,zero,707c <___vfiprintf_internal_r+0x48>
    7074:	20800e17 	ldw	r2,56(r4)
    7078:	1000cf26 	beq	r2,zero,73b8 <___vfiprintf_internal_r+0x384>
    707c:	a080030b 	ldhu	r2,12(r20)
    7080:	10c8000c 	andi	r3,r2,8192
    7084:	1800061e 	bne	r3,zero,70a0 <___vfiprintf_internal_r+0x6c>
    7088:	a1001917 	ldw	r4,100(r20)
    708c:	00f7ffc4 	movi	r3,-8193
    7090:	10880014 	ori	r2,r2,8192
    7094:	20c6703a 	and	r3,r4,r3
    7098:	a080030d 	sth	r2,12(r20)
    709c:	a0c01915 	stw	r3,100(r20)
    70a0:	10c0020c 	andi	r3,r2,8
    70a4:	1800a926 	beq	r3,zero,734c <___vfiprintf_internal_r+0x318>
    70a8:	a0c00417 	ldw	r3,16(r20)
    70ac:	1800a726 	beq	r3,zero,734c <___vfiprintf_internal_r+0x318>
    70b0:	1080068c 	andi	r2,r2,26
    70b4:	00c00284 	movi	r3,10
    70b8:	10c0ac26 	beq	r2,r3,736c <___vfiprintf_internal_r+0x338>
    70bc:	da801a04 	addi	r10,sp,104
    70c0:	da801e15 	stw	r10,120(sp)
    70c4:	d8801e17 	ldw	r2,120(sp)
    70c8:	da8019c4 	addi	r10,sp,103
    70cc:	05800074 	movhi	r22,1
    70d0:	05c00074 	movhi	r23,1
    70d4:	da801f15 	stw	r10,124(sp)
    70d8:	1295c83a 	sub	r10,r2,r10
    70dc:	b5819a04 	addi	r22,r22,1640
    70e0:	bdc19604 	addi	r23,r23,1624
    70e4:	dec01a15 	stw	sp,104(sp)
    70e8:	d8001c15 	stw	zero,112(sp)
    70ec:	d8001b15 	stw	zero,108(sp)
    70f0:	d8002615 	stw	zero,152(sp)
    70f4:	d8002315 	stw	zero,140(sp)
    70f8:	da802715 	stw	r10,156(sp)
    70fc:	d811883a 	mov	r8,sp
    7100:	dd002115 	stw	r20,132(sp)
    7104:	e021883a 	mov	r16,fp
    7108:	80800007 	ldb	r2,0(r16)
    710c:	1003ea26 	beq	r2,zero,80b8 <___vfiprintf_internal_r+0x1084>
    7110:	00c00944 	movi	r3,37
    7114:	8025883a 	mov	r18,r16
    7118:	10c0021e 	bne	r2,r3,7124 <___vfiprintf_internal_r+0xf0>
    711c:	00001606 	br	7178 <___vfiprintf_internal_r+0x144>
    7120:	10c00326 	beq	r2,r3,7130 <___vfiprintf_internal_r+0xfc>
    7124:	94800044 	addi	r18,r18,1
    7128:	90800007 	ldb	r2,0(r18)
    712c:	103ffc1e 	bne	r2,zero,7120 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007120>
    7130:	9423c83a 	sub	r17,r18,r16
    7134:	88001026 	beq	r17,zero,7178 <___vfiprintf_internal_r+0x144>
    7138:	d8c01c17 	ldw	r3,112(sp)
    713c:	d8801b17 	ldw	r2,108(sp)
    7140:	44000015 	stw	r16,0(r8)
    7144:	88c7883a 	add	r3,r17,r3
    7148:	10800044 	addi	r2,r2,1
    714c:	44400115 	stw	r17,4(r8)
    7150:	d8c01c15 	stw	r3,112(sp)
    7154:	d8801b15 	stw	r2,108(sp)
    7158:	010001c4 	movi	r4,7
    715c:	2080760e 	bge	r4,r2,7338 <___vfiprintf_internal_r+0x304>
    7160:	1803821e 	bne	r3,zero,7f6c <___vfiprintf_internal_r+0xf38>
    7164:	da802317 	ldw	r10,140(sp)
    7168:	d8001b15 	stw	zero,108(sp)
    716c:	d811883a 	mov	r8,sp
    7170:	5455883a 	add	r10,r10,r17
    7174:	da802315 	stw	r10,140(sp)
    7178:	90800007 	ldb	r2,0(r18)
    717c:	10044626 	beq	r2,zero,8298 <___vfiprintf_internal_r+0x1264>
    7180:	90c00047 	ldb	r3,1(r18)
    7184:	94000044 	addi	r16,r18,1
    7188:	d8001d85 	stb	zero,118(sp)
    718c:	0009883a 	mov	r4,zero
    7190:	000f883a 	mov	r7,zero
    7194:	027fffc4 	movi	r9,-1
    7198:	0023883a 	mov	r17,zero
    719c:	0029883a 	mov	r20,zero
    71a0:	01401604 	movi	r5,88
    71a4:	01800244 	movi	r6,9
    71a8:	03400a84 	movi	r13,42
    71ac:	03001b04 	movi	r12,108
    71b0:	84000044 	addi	r16,r16,1
    71b4:	18bff804 	addi	r2,r3,-32
    71b8:	28827336 	bltu	r5,r2,7b88 <___vfiprintf_internal_r+0xb54>
    71bc:	100490ba 	slli	r2,r2,2
    71c0:	02800034 	movhi	r10,0
    71c4:	529c7504 	addi	r10,r10,29140
    71c8:	1285883a 	add	r2,r2,r10
    71cc:	10800017 	ldw	r2,0(r2)
    71d0:	1000683a 	jmp	r2
    71d4:	000078bc 	xorhi	zero,zero,482
    71d8:	00007b88 	cmpgei	zero,zero,494
    71dc:	00007b88 	cmpgei	zero,zero,494
    71e0:	000078dc 	xori	zero,zero,483
    71e4:	00007b88 	cmpgei	zero,zero,494
    71e8:	00007b88 	cmpgei	zero,zero,494
    71ec:	00007b88 	cmpgei	zero,zero,494
    71f0:	00007b88 	cmpgei	zero,zero,494
    71f4:	00007b88 	cmpgei	zero,zero,494
    71f8:	00007b88 	cmpgei	zero,zero,494
    71fc:	00007ac4 	movi	zero,491
    7200:	00007ae0 	cmpeqi	zero,zero,491
    7204:	00007b88 	cmpgei	zero,zero,494
    7208:	000073c8 	cmpgei	zero,zero,463
    720c:	00007af0 	cmpltui	zero,zero,491
    7210:	00007b88 	cmpgei	zero,zero,494
    7214:	000078e8 	cmpgeui	zero,zero,483
    7218:	000078f4 	movhi	zero,483
    721c:	000078f4 	movhi	zero,483
    7220:	000078f4 	movhi	zero,483
    7224:	000078f4 	movhi	zero,483
    7228:	000078f4 	movhi	zero,483
    722c:	000078f4 	movhi	zero,483
    7230:	000078f4 	movhi	zero,483
    7234:	000078f4 	movhi	zero,483
    7238:	000078f4 	movhi	zero,483
    723c:	00007b88 	cmpgei	zero,zero,494
    7240:	00007b88 	cmpgei	zero,zero,494
    7244:	00007b88 	cmpgei	zero,zero,494
    7248:	00007b88 	cmpgei	zero,zero,494
    724c:	00007b88 	cmpgei	zero,zero,494
    7250:	00007b88 	cmpgei	zero,zero,494
    7254:	00007b88 	cmpgei	zero,zero,494
    7258:	00007b88 	cmpgei	zero,zero,494
    725c:	00007b88 	cmpgei	zero,zero,494
    7260:	00007b88 	cmpgei	zero,zero,494
    7264:	00007920 	cmpeqi	zero,zero,484
    7268:	00007b88 	cmpgei	zero,zero,494
    726c:	00007b88 	cmpgei	zero,zero,494
    7270:	00007b88 	cmpgei	zero,zero,494
    7274:	00007b88 	cmpgei	zero,zero,494
    7278:	00007b88 	cmpgei	zero,zero,494
    727c:	00007b88 	cmpgei	zero,zero,494
    7280:	00007b88 	cmpgei	zero,zero,494
    7284:	00007b88 	cmpgei	zero,zero,494
    7288:	00007b88 	cmpgei	zero,zero,494
    728c:	00007b88 	cmpgei	zero,zero,494
    7290:	00007958 	cmpnei	zero,zero,485
    7294:	00007b88 	cmpgei	zero,zero,494
    7298:	00007b88 	cmpgei	zero,zero,494
    729c:	00007b88 	cmpgei	zero,zero,494
    72a0:	00007b88 	cmpgei	zero,zero,494
    72a4:	00007b88 	cmpgei	zero,zero,494
    72a8:	000079b0 	cmpltui	zero,zero,486
    72ac:	00007b88 	cmpgei	zero,zero,494
    72b0:	00007b88 	cmpgei	zero,zero,494
    72b4:	00007a20 	cmpeqi	zero,zero,488
    72b8:	00007b88 	cmpgei	zero,zero,494
    72bc:	00007b88 	cmpgei	zero,zero,494
    72c0:	00007b88 	cmpgei	zero,zero,494
    72c4:	00007b88 	cmpgei	zero,zero,494
    72c8:	00007b88 	cmpgei	zero,zero,494
    72cc:	00007b88 	cmpgei	zero,zero,494
    72d0:	00007b88 	cmpgei	zero,zero,494
    72d4:	00007b88 	cmpgei	zero,zero,494
    72d8:	00007b88 	cmpgei	zero,zero,494
    72dc:	00007b88 	cmpgei	zero,zero,494
    72e0:	000077cc 	andi	zero,zero,479
    72e4:	000077f8 	rdprs	zero,zero,479
    72e8:	00007b88 	cmpgei	zero,zero,494
    72ec:	00007b88 	cmpgei	zero,zero,494
    72f0:	00007b88 	cmpgei	zero,zero,494
    72f4:	00007b30 	cmpltui	zero,zero,492
    72f8:	000077f8 	rdprs	zero,zero,479
    72fc:	00007b88 	cmpgei	zero,zero,494
    7300:	00007b88 	cmpgei	zero,zero,494
    7304:	0000768c 	andi	zero,zero,474
    7308:	00007b88 	cmpgei	zero,zero,494
    730c:	0000769c 	xori	zero,zero,474
    7310:	000076d8 	cmpnei	zero,zero,475
    7314:	000073d4 	movui	zero,463
    7318:	00007680 	call	768 <___vfprintf_internal_r+0x264>
    731c:	00007b88 	cmpgei	zero,zero,494
    7320:	00007a5c 	xori	zero,zero,489
    7324:	00007b88 	cmpgei	zero,zero,494
    7328:	00007ab4 	movhi	zero,490
    732c:	00007b88 	cmpgei	zero,zero,494
    7330:	00007b88 	cmpgei	zero,zero,494
    7334:	00007778 	rdprs	zero,zero,477
    7338:	42000204 	addi	r8,r8,8
    733c:	da802317 	ldw	r10,140(sp)
    7340:	5455883a 	add	r10,r10,r17
    7344:	da802315 	stw	r10,140(sp)
    7348:	003f8b06 	br	7178 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007178>
    734c:	d9002017 	ldw	r4,128(sp)
    7350:	a00b883a 	mov	r5,r20
    7354:	00027d40 	call	27d4 <__swsetup_r>
    7358:	1003b11e 	bne	r2,zero,8220 <___vfiprintf_internal_r+0x11ec>
    735c:	a080030b 	ldhu	r2,12(r20)
    7360:	00c00284 	movi	r3,10
    7364:	1080068c 	andi	r2,r2,26
    7368:	10ff541e 	bne	r2,r3,70bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00070bc>
    736c:	a080038f 	ldh	r2,14(r20)
    7370:	103f5216 	blt	r2,zero,70bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00070bc>
    7374:	d9c02217 	ldw	r7,136(sp)
    7378:	d9002017 	ldw	r4,128(sp)
    737c:	e00d883a 	mov	r6,fp
    7380:	a00b883a 	mov	r5,r20
    7384:	00084ac0 	call	84ac <__sbprintf>
    7388:	dfc03617 	ldw	ra,216(sp)
    738c:	df003517 	ldw	fp,212(sp)
    7390:	ddc03417 	ldw	r23,208(sp)
    7394:	dd803317 	ldw	r22,204(sp)
    7398:	dd403217 	ldw	r21,200(sp)
    739c:	dd003117 	ldw	r20,196(sp)
    73a0:	dcc03017 	ldw	r19,192(sp)
    73a4:	dc802f17 	ldw	r18,188(sp)
    73a8:	dc402e17 	ldw	r17,184(sp)
    73ac:	dc002d17 	ldw	r16,180(sp)
    73b0:	dec03704 	addi	sp,sp,220
    73b4:	f800283a 	ret
    73b8:	00047a80 	call	47a8 <__sinit>
    73bc:	003f2f06 	br	707c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000707c>
    73c0:	0463c83a 	sub	r17,zero,r17
    73c4:	d8802215 	stw	r2,136(sp)
    73c8:	a5000114 	ori	r20,r20,4
    73cc:	80c00007 	ldb	r3,0(r16)
    73d0:	003f7706 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    73d4:	00800c04 	movi	r2,48
    73d8:	da802217 	ldw	r10,136(sp)
    73dc:	d8801d05 	stb	r2,116(sp)
    73e0:	00801e04 	movi	r2,120
    73e4:	d8801d45 	stb	r2,117(sp)
    73e8:	d8001d85 	stb	zero,118(sp)
    73ec:	50c00104 	addi	r3,r10,4
    73f0:	54800017 	ldw	r18,0(r10)
    73f4:	0027883a 	mov	r19,zero
    73f8:	a0800094 	ori	r2,r20,2
    73fc:	48030b16 	blt	r9,zero,802c <___vfiprintf_internal_r+0xff8>
    7400:	00bfdfc4 	movi	r2,-129
    7404:	a096703a 	and	r11,r20,r2
    7408:	d8c02215 	stw	r3,136(sp)
    740c:	5d000094 	ori	r20,r11,2
    7410:	90032b1e 	bne	r18,zero,80c0 <___vfiprintf_internal_r+0x108c>
    7414:	00800074 	movhi	r2,1
    7418:	10813504 	addi	r2,r2,1236
    741c:	d8802615 	stw	r2,152(sp)
    7420:	0039883a 	mov	fp,zero
    7424:	48017b1e 	bne	r9,zero,7a14 <___vfiprintf_internal_r+0x9e0>
    7428:	0013883a 	mov	r9,zero
    742c:	0027883a 	mov	r19,zero
    7430:	dd401a04 	addi	r21,sp,104
    7434:	4825883a 	mov	r18,r9
    7438:	4cc0010e 	bge	r9,r19,7440 <___vfiprintf_internal_r+0x40c>
    743c:	9825883a 	mov	r18,r19
    7440:	e7003fcc 	andi	fp,fp,255
    7444:	e700201c 	xori	fp,fp,128
    7448:	e73fe004 	addi	fp,fp,-128
    744c:	e0000126 	beq	fp,zero,7454 <___vfiprintf_internal_r+0x420>
    7450:	94800044 	addi	r18,r18,1
    7454:	a380008c 	andi	r14,r20,2
    7458:	70000126 	beq	r14,zero,7460 <___vfiprintf_internal_r+0x42c>
    745c:	94800084 	addi	r18,r18,2
    7460:	a700210c 	andi	fp,r20,132
    7464:	e001df1e 	bne	fp,zero,7be4 <___vfiprintf_internal_r+0xbb0>
    7468:	8c87c83a 	sub	r3,r17,r18
    746c:	00c1dd0e 	bge	zero,r3,7be4 <___vfiprintf_internal_r+0xbb0>
    7470:	01c00404 	movi	r7,16
    7474:	d8801c17 	ldw	r2,112(sp)
    7478:	38c3ad0e 	bge	r7,r3,8330 <___vfiprintf_internal_r+0x12fc>
    747c:	02800074 	movhi	r10,1
    7480:	52819a04 	addi	r10,r10,1640
    7484:	dc002915 	stw	r16,164(sp)
    7488:	d9801b17 	ldw	r6,108(sp)
    748c:	da802415 	stw	r10,144(sp)
    7490:	03c001c4 	movi	r15,7
    7494:	da402515 	stw	r9,148(sp)
    7498:	db802815 	stw	r14,160(sp)
    749c:	1821883a 	mov	r16,r3
    74a0:	00000506 	br	74b8 <___vfiprintf_internal_r+0x484>
    74a4:	31400084 	addi	r5,r6,2
    74a8:	42000204 	addi	r8,r8,8
    74ac:	200d883a 	mov	r6,r4
    74b0:	843ffc04 	addi	r16,r16,-16
    74b4:	3c000d0e 	bge	r7,r16,74ec <___vfiprintf_internal_r+0x4b8>
    74b8:	10800404 	addi	r2,r2,16
    74bc:	31000044 	addi	r4,r6,1
    74c0:	45800015 	stw	r22,0(r8)
    74c4:	41c00115 	stw	r7,4(r8)
    74c8:	d8801c15 	stw	r2,112(sp)
    74cc:	d9001b15 	stw	r4,108(sp)
    74d0:	793ff40e 	bge	r15,r4,74a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00074a4>
    74d4:	1001b51e 	bne	r2,zero,7bac <___vfiprintf_internal_r+0xb78>
    74d8:	843ffc04 	addi	r16,r16,-16
    74dc:	000d883a 	mov	r6,zero
    74e0:	01400044 	movi	r5,1
    74e4:	d811883a 	mov	r8,sp
    74e8:	3c3ff316 	blt	r7,r16,74b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00074b8>
    74ec:	8007883a 	mov	r3,r16
    74f0:	da402517 	ldw	r9,148(sp)
    74f4:	db802817 	ldw	r14,160(sp)
    74f8:	dc002917 	ldw	r16,164(sp)
    74fc:	da802417 	ldw	r10,144(sp)
    7500:	1885883a 	add	r2,r3,r2
    7504:	40c00115 	stw	r3,4(r8)
    7508:	42800015 	stw	r10,0(r8)
    750c:	d8801c15 	stw	r2,112(sp)
    7510:	d9401b15 	stw	r5,108(sp)
    7514:	00c001c4 	movi	r3,7
    7518:	19426016 	blt	r3,r5,7e9c <___vfiprintf_internal_r+0xe68>
    751c:	d8c01d87 	ldb	r3,118(sp)
    7520:	42000204 	addi	r8,r8,8
    7524:	29000044 	addi	r4,r5,1
    7528:	1801b31e 	bne	r3,zero,7bf8 <___vfiprintf_internal_r+0xbc4>
    752c:	7001c026 	beq	r14,zero,7c30 <___vfiprintf_internal_r+0xbfc>
    7530:	d8c01d04 	addi	r3,sp,116
    7534:	10800084 	addi	r2,r2,2
    7538:	40c00015 	stw	r3,0(r8)
    753c:	00c00084 	movi	r3,2
    7540:	40c00115 	stw	r3,4(r8)
    7544:	d8801c15 	stw	r2,112(sp)
    7548:	d9001b15 	stw	r4,108(sp)
    754c:	00c001c4 	movi	r3,7
    7550:	1902650e 	bge	r3,r4,7ee8 <___vfiprintf_internal_r+0xeb4>
    7554:	10029a1e 	bne	r2,zero,7fc0 <___vfiprintf_internal_r+0xf8c>
    7558:	00c02004 	movi	r3,128
    755c:	01000044 	movi	r4,1
    7560:	000b883a 	mov	r5,zero
    7564:	d811883a 	mov	r8,sp
    7568:	e0c1b31e 	bne	fp,r3,7c38 <___vfiprintf_internal_r+0xc04>
    756c:	8cb9c83a 	sub	fp,r17,r18
    7570:	0701b10e 	bge	zero,fp,7c38 <___vfiprintf_internal_r+0xc04>
    7574:	01c00404 	movi	r7,16
    7578:	3f03890e 	bge	r7,fp,83a0 <___vfiprintf_internal_r+0x136c>
    757c:	00c00074 	movhi	r3,1
    7580:	18c19604 	addi	r3,r3,1624
    7584:	d8c02415 	stw	r3,144(sp)
    7588:	8007883a 	mov	r3,r16
    758c:	034001c4 	movi	r13,7
    7590:	e021883a 	mov	r16,fp
    7594:	da402515 	stw	r9,148(sp)
    7598:	1839883a 	mov	fp,r3
    759c:	00000506 	br	75b4 <___vfiprintf_internal_r+0x580>
    75a0:	29800084 	addi	r6,r5,2
    75a4:	42000204 	addi	r8,r8,8
    75a8:	180b883a 	mov	r5,r3
    75ac:	843ffc04 	addi	r16,r16,-16
    75b0:	3c000d0e 	bge	r7,r16,75e8 <___vfiprintf_internal_r+0x5b4>
    75b4:	10800404 	addi	r2,r2,16
    75b8:	28c00044 	addi	r3,r5,1
    75bc:	45c00015 	stw	r23,0(r8)
    75c0:	41c00115 	stw	r7,4(r8)
    75c4:	d8801c15 	stw	r2,112(sp)
    75c8:	d8c01b15 	stw	r3,108(sp)
    75cc:	68fff40e 	bge	r13,r3,75a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00075a0>
    75d0:	1002241e 	bne	r2,zero,7e64 <___vfiprintf_internal_r+0xe30>
    75d4:	843ffc04 	addi	r16,r16,-16
    75d8:	01800044 	movi	r6,1
    75dc:	000b883a 	mov	r5,zero
    75e0:	d811883a 	mov	r8,sp
    75e4:	3c3ff316 	blt	r7,r16,75b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00075b4>
    75e8:	da402517 	ldw	r9,148(sp)
    75ec:	e007883a 	mov	r3,fp
    75f0:	8039883a 	mov	fp,r16
    75f4:	1821883a 	mov	r16,r3
    75f8:	d8c02417 	ldw	r3,144(sp)
    75fc:	1705883a 	add	r2,r2,fp
    7600:	47000115 	stw	fp,4(r8)
    7604:	40c00015 	stw	r3,0(r8)
    7608:	d8801c15 	stw	r2,112(sp)
    760c:	d9801b15 	stw	r6,108(sp)
    7610:	00c001c4 	movi	r3,7
    7614:	19827616 	blt	r3,r6,7ff0 <___vfiprintf_internal_r+0xfbc>
    7618:	4cf9c83a 	sub	fp,r9,r19
    761c:	42000204 	addi	r8,r8,8
    7620:	31000044 	addi	r4,r6,1
    7624:	300b883a 	mov	r5,r6
    7628:	07018516 	blt	zero,fp,7c40 <___vfiprintf_internal_r+0xc0c>
    762c:	9885883a 	add	r2,r19,r2
    7630:	45400015 	stw	r21,0(r8)
    7634:	44c00115 	stw	r19,4(r8)
    7638:	d8801c15 	stw	r2,112(sp)
    763c:	d9001b15 	stw	r4,108(sp)
    7640:	00c001c4 	movi	r3,7
    7644:	1901dd0e 	bge	r3,r4,7dbc <___vfiprintf_internal_r+0xd88>
    7648:	1002401e 	bne	r2,zero,7f4c <___vfiprintf_internal_r+0xf18>
    764c:	d8001b15 	stw	zero,108(sp)
    7650:	a2c0010c 	andi	r11,r20,4
    7654:	58000226 	beq	r11,zero,7660 <___vfiprintf_internal_r+0x62c>
    7658:	8ca7c83a 	sub	r19,r17,r18
    765c:	04c2f216 	blt	zero,r19,8228 <___vfiprintf_internal_r+0x11f4>
    7660:	8c80010e 	bge	r17,r18,7668 <___vfiprintf_internal_r+0x634>
    7664:	9023883a 	mov	r17,r18
    7668:	da802317 	ldw	r10,140(sp)
    766c:	5455883a 	add	r10,r10,r17
    7670:	da802315 	stw	r10,140(sp)
    7674:	d8001b15 	stw	zero,108(sp)
    7678:	d811883a 	mov	r8,sp
    767c:	003ea206 	br	7108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007108>
    7680:	a5000814 	ori	r20,r20,32
    7684:	80c00007 	ldb	r3,0(r16)
    7688:	003ec906 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    768c:	80c00007 	ldb	r3,0(r16)
    7690:	1b030926 	beq	r3,r12,82b8 <___vfiprintf_internal_r+0x1284>
    7694:	a5000414 	ori	r20,r20,16
    7698:	003ec506 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    769c:	21003fcc 	andi	r4,r4,255
    76a0:	20035e1e 	bne	r4,zero,841c <___vfiprintf_internal_r+0x13e8>
    76a4:	a080080c 	andi	r2,r20,32
    76a8:	1002a526 	beq	r2,zero,8140 <___vfiprintf_internal_r+0x110c>
    76ac:	da802217 	ldw	r10,136(sp)
    76b0:	50800017 	ldw	r2,0(r10)
    76b4:	da802317 	ldw	r10,140(sp)
    76b8:	5007d7fa 	srai	r3,r10,31
    76bc:	da802217 	ldw	r10,136(sp)
    76c0:	10c00115 	stw	r3,4(r2)
    76c4:	52800104 	addi	r10,r10,4
    76c8:	da802215 	stw	r10,136(sp)
    76cc:	da802317 	ldw	r10,140(sp)
    76d0:	12800015 	stw	r10,0(r2)
    76d4:	003e8c06 	br	7108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007108>
    76d8:	21003fcc 	andi	r4,r4,255
    76dc:	2003511e 	bne	r4,zero,8424 <___vfiprintf_internal_r+0x13f0>
    76e0:	a080080c 	andi	r2,r20,32
    76e4:	1000a126 	beq	r2,zero,796c <___vfiprintf_internal_r+0x938>
    76e8:	da802217 	ldw	r10,136(sp)
    76ec:	d8001d85 	stb	zero,118(sp)
    76f0:	50800204 	addi	r2,r10,8
    76f4:	54800017 	ldw	r18,0(r10)
    76f8:	54c00117 	ldw	r19,4(r10)
    76fc:	4802b416 	blt	r9,zero,81d0 <___vfiprintf_internal_r+0x119c>
    7700:	013fdfc4 	movi	r4,-129
    7704:	94c6b03a 	or	r3,r18,r19
    7708:	d8802215 	stw	r2,136(sp)
    770c:	a128703a 	and	r20,r20,r4
    7710:	1800a226 	beq	r3,zero,799c <___vfiprintf_internal_r+0x968>
    7714:	0039883a 	mov	fp,zero
    7718:	dd401a04 	addi	r21,sp,104
    771c:	9006d0fa 	srli	r3,r18,3
    7720:	9808977a 	slli	r4,r19,29
    7724:	9826d0fa 	srli	r19,r19,3
    7728:	948001cc 	andi	r18,r18,7
    772c:	90800c04 	addi	r2,r18,48
    7730:	ad7fffc4 	addi	r21,r21,-1
    7734:	20e4b03a 	or	r18,r4,r3
    7738:	a8800005 	stb	r2,0(r21)
    773c:	94c6b03a 	or	r3,r18,r19
    7740:	183ff61e 	bne	r3,zero,771c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000771c>
    7744:	a0c0004c 	andi	r3,r20,1
    7748:	18005926 	beq	r3,zero,78b0 <___vfiprintf_internal_r+0x87c>
    774c:	10803fcc 	andi	r2,r2,255
    7750:	1080201c 	xori	r2,r2,128
    7754:	10bfe004 	addi	r2,r2,-128
    7758:	00c00c04 	movi	r3,48
    775c:	10c05426 	beq	r2,r3,78b0 <___vfiprintf_internal_r+0x87c>
    7760:	da801e17 	ldw	r10,120(sp)
    7764:	a8bfffc4 	addi	r2,r21,-1
    7768:	a8ffffc5 	stb	r3,-1(r21)
    776c:	50a7c83a 	sub	r19,r10,r2
    7770:	102b883a 	mov	r21,r2
    7774:	003f2f06 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    7778:	21003fcc 	andi	r4,r4,255
    777c:	2003421e 	bne	r4,zero,8488 <___vfiprintf_internal_r+0x1454>
    7780:	00800074 	movhi	r2,1
    7784:	10813504 	addi	r2,r2,1236
    7788:	d8802615 	stw	r2,152(sp)
    778c:	a080080c 	andi	r2,r20,32
    7790:	1000aa26 	beq	r2,zero,7a3c <___vfiprintf_internal_r+0xa08>
    7794:	da802217 	ldw	r10,136(sp)
    7798:	54800017 	ldw	r18,0(r10)
    779c:	54c00117 	ldw	r19,4(r10)
    77a0:	52800204 	addi	r10,r10,8
    77a4:	da802215 	stw	r10,136(sp)
    77a8:	a080004c 	andi	r2,r20,1
    77ac:	1001d226 	beq	r2,zero,7ef8 <___vfiprintf_internal_r+0xec4>
    77b0:	94c4b03a 	or	r2,r18,r19
    77b4:	1002351e 	bne	r2,zero,808c <___vfiprintf_internal_r+0x1058>
    77b8:	d8001d85 	stb	zero,118(sp)
    77bc:	48022216 	blt	r9,zero,8048 <___vfiprintf_internal_r+0x1014>
    77c0:	00bfdfc4 	movi	r2,-129
    77c4:	a0a8703a 	and	r20,r20,r2
    77c8:	003f1506 	br	7420 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007420>
    77cc:	da802217 	ldw	r10,136(sp)
    77d0:	04800044 	movi	r18,1
    77d4:	d8001d85 	stb	zero,118(sp)
    77d8:	50800017 	ldw	r2,0(r10)
    77dc:	52800104 	addi	r10,r10,4
    77e0:	da802215 	stw	r10,136(sp)
    77e4:	d8801005 	stb	r2,64(sp)
    77e8:	9027883a 	mov	r19,r18
    77ec:	dd401004 	addi	r21,sp,64
    77f0:	0013883a 	mov	r9,zero
    77f4:	003f1706 	br	7454 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007454>
    77f8:	21003fcc 	andi	r4,r4,255
    77fc:	2003201e 	bne	r4,zero,8480 <___vfiprintf_internal_r+0x144c>
    7800:	a080080c 	andi	r2,r20,32
    7804:	10004b26 	beq	r2,zero,7934 <___vfiprintf_internal_r+0x900>
    7808:	da802217 	ldw	r10,136(sp)
    780c:	50800117 	ldw	r2,4(r10)
    7810:	54800017 	ldw	r18,0(r10)
    7814:	52800204 	addi	r10,r10,8
    7818:	da802215 	stw	r10,136(sp)
    781c:	1027883a 	mov	r19,r2
    7820:	10022c16 	blt	r2,zero,80d4 <___vfiprintf_internal_r+0x10a0>
    7824:	df001d83 	ldbu	fp,118(sp)
    7828:	48007216 	blt	r9,zero,79f4 <___vfiprintf_internal_r+0x9c0>
    782c:	00ffdfc4 	movi	r3,-129
    7830:	94c4b03a 	or	r2,r18,r19
    7834:	a0e8703a 	and	r20,r20,r3
    7838:	1000cc26 	beq	r2,zero,7b6c <___vfiprintf_internal_r+0xb38>
    783c:	98021026 	beq	r19,zero,8080 <___vfiprintf_internal_r+0x104c>
    7840:	dc402415 	stw	r17,144(sp)
    7844:	dc002515 	stw	r16,148(sp)
    7848:	9823883a 	mov	r17,r19
    784c:	9021883a 	mov	r16,r18
    7850:	dd401a04 	addi	r21,sp,104
    7854:	4825883a 	mov	r18,r9
    7858:	4027883a 	mov	r19,r8
    785c:	8009883a 	mov	r4,r16
    7860:	880b883a 	mov	r5,r17
    7864:	01800284 	movi	r6,10
    7868:	000f883a 	mov	r7,zero
    786c:	0009f900 	call	9f90 <__umoddi3>
    7870:	10800c04 	addi	r2,r2,48
    7874:	ad7fffc4 	addi	r21,r21,-1
    7878:	8009883a 	mov	r4,r16
    787c:	880b883a 	mov	r5,r17
    7880:	a8800005 	stb	r2,0(r21)
    7884:	01800284 	movi	r6,10
    7888:	000f883a 	mov	r7,zero
    788c:	0009a180 	call	9a18 <__udivdi3>
    7890:	1021883a 	mov	r16,r2
    7894:	10c4b03a 	or	r2,r2,r3
    7898:	1823883a 	mov	r17,r3
    789c:	103fef1e 	bne	r2,zero,785c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000785c>
    78a0:	dc402417 	ldw	r17,144(sp)
    78a4:	dc002517 	ldw	r16,148(sp)
    78a8:	9013883a 	mov	r9,r18
    78ac:	9811883a 	mov	r8,r19
    78b0:	da801e17 	ldw	r10,120(sp)
    78b4:	5567c83a 	sub	r19,r10,r21
    78b8:	003ede06 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    78bc:	38803fcc 	andi	r2,r7,255
    78c0:	1080201c 	xori	r2,r2,128
    78c4:	10bfe004 	addi	r2,r2,-128
    78c8:	1002371e 	bne	r2,zero,81a8 <___vfiprintf_internal_r+0x1174>
    78cc:	01000044 	movi	r4,1
    78d0:	01c00804 	movi	r7,32
    78d4:	80c00007 	ldb	r3,0(r16)
    78d8:	003e3506 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    78dc:	a5000054 	ori	r20,r20,1
    78e0:	80c00007 	ldb	r3,0(r16)
    78e4:	003e3206 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    78e8:	a5002014 	ori	r20,r20,128
    78ec:	80c00007 	ldb	r3,0(r16)
    78f0:	003e2f06 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    78f4:	8015883a 	mov	r10,r16
    78f8:	0023883a 	mov	r17,zero
    78fc:	18bff404 	addi	r2,r3,-48
    7900:	50c00007 	ldb	r3,0(r10)
    7904:	8c4002a4 	muli	r17,r17,10
    7908:	84000044 	addi	r16,r16,1
    790c:	8015883a 	mov	r10,r16
    7910:	1463883a 	add	r17,r2,r17
    7914:	18bff404 	addi	r2,r3,-48
    7918:	30bff92e 	bgeu	r6,r2,7900 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007900>
    791c:	003e2506 	br	71b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b4>
    7920:	21003fcc 	andi	r4,r4,255
    7924:	2002d41e 	bne	r4,zero,8478 <___vfiprintf_internal_r+0x1444>
    7928:	a5000414 	ori	r20,r20,16
    792c:	a080080c 	andi	r2,r20,32
    7930:	103fb51e 	bne	r2,zero,7808 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007808>
    7934:	a080040c 	andi	r2,r20,16
    7938:	1001f826 	beq	r2,zero,811c <___vfiprintf_internal_r+0x10e8>
    793c:	da802217 	ldw	r10,136(sp)
    7940:	54800017 	ldw	r18,0(r10)
    7944:	52800104 	addi	r10,r10,4
    7948:	da802215 	stw	r10,136(sp)
    794c:	9027d7fa 	srai	r19,r18,31
    7950:	9805883a 	mov	r2,r19
    7954:	003fb206 	br	7820 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007820>
    7958:	21003fcc 	andi	r4,r4,255
    795c:	2002c41e 	bne	r4,zero,8470 <___vfiprintf_internal_r+0x143c>
    7960:	a5000414 	ori	r20,r20,16
    7964:	a080080c 	andi	r2,r20,32
    7968:	103f5f1e 	bne	r2,zero,76e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00076e8>
    796c:	a080040c 	andi	r2,r20,16
    7970:	10020f26 	beq	r2,zero,81b0 <___vfiprintf_internal_r+0x117c>
    7974:	da802217 	ldw	r10,136(sp)
    7978:	d8001d85 	stb	zero,118(sp)
    797c:	0027883a 	mov	r19,zero
    7980:	50800104 	addi	r2,r10,4
    7984:	54800017 	ldw	r18,0(r10)
    7988:	48021116 	blt	r9,zero,81d0 <___vfiprintf_internal_r+0x119c>
    798c:	00ffdfc4 	movi	r3,-129
    7990:	d8802215 	stw	r2,136(sp)
    7994:	a0e8703a 	and	r20,r20,r3
    7998:	903f5e1e 	bne	r18,zero,7714 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007714>
    799c:	0039883a 	mov	fp,zero
    79a0:	4802a626 	beq	r9,zero,843c <___vfiprintf_internal_r+0x1408>
    79a4:	0025883a 	mov	r18,zero
    79a8:	0027883a 	mov	r19,zero
    79ac:	003f5a06 	br	7718 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007718>
    79b0:	21003fcc 	andi	r4,r4,255
    79b4:	20029f1e 	bne	r4,zero,8434 <___vfiprintf_internal_r+0x1400>
    79b8:	a5000414 	ori	r20,r20,16
    79bc:	a080080c 	andi	r2,r20,32
    79c0:	10005e1e 	bne	r2,zero,7b3c <___vfiprintf_internal_r+0xb08>
    79c4:	a080040c 	andi	r2,r20,16
    79c8:	1001a21e 	bne	r2,zero,8054 <___vfiprintf_internal_r+0x1020>
    79cc:	a080100c 	andi	r2,r20,64
    79d0:	d8001d85 	stb	zero,118(sp)
    79d4:	da802217 	ldw	r10,136(sp)
    79d8:	1002231e 	bne	r2,zero,8268 <___vfiprintf_internal_r+0x1234>
    79dc:	50800104 	addi	r2,r10,4
    79e0:	54800017 	ldw	r18,0(r10)
    79e4:	0027883a 	mov	r19,zero
    79e8:	4801a00e 	bge	r9,zero,806c <___vfiprintf_internal_r+0x1038>
    79ec:	d8802215 	stw	r2,136(sp)
    79f0:	0039883a 	mov	fp,zero
    79f4:	94c4b03a 	or	r2,r18,r19
    79f8:	103f901e 	bne	r2,zero,783c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000783c>
    79fc:	00800044 	movi	r2,1
    7a00:	10803fcc 	andi	r2,r2,255
    7a04:	00c00044 	movi	r3,1
    7a08:	10c05926 	beq	r2,r3,7b70 <___vfiprintf_internal_r+0xb3c>
    7a0c:	00c00084 	movi	r3,2
    7a10:	10ffe41e 	bne	r2,r3,79a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079a4>
    7a14:	0025883a 	mov	r18,zero
    7a18:	0027883a 	mov	r19,zero
    7a1c:	00013d06 	br	7f14 <___vfiprintf_internal_r+0xee0>
    7a20:	21003fcc 	andi	r4,r4,255
    7a24:	2002811e 	bne	r4,zero,842c <___vfiprintf_internal_r+0x13f8>
    7a28:	00800074 	movhi	r2,1
    7a2c:	10813004 	addi	r2,r2,1216
    7a30:	d8802615 	stw	r2,152(sp)
    7a34:	a080080c 	andi	r2,r20,32
    7a38:	103f561e 	bne	r2,zero,7794 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007794>
    7a3c:	a080040c 	andi	r2,r20,16
    7a40:	1001d126 	beq	r2,zero,8188 <___vfiprintf_internal_r+0x1154>
    7a44:	da802217 	ldw	r10,136(sp)
    7a48:	0027883a 	mov	r19,zero
    7a4c:	54800017 	ldw	r18,0(r10)
    7a50:	52800104 	addi	r10,r10,4
    7a54:	da802215 	stw	r10,136(sp)
    7a58:	003f5306 	br	77a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00077a8>
    7a5c:	da802217 	ldw	r10,136(sp)
    7a60:	d8001d85 	stb	zero,118(sp)
    7a64:	55400017 	ldw	r21,0(r10)
    7a68:	50c00104 	addi	r3,r10,4
    7a6c:	a8024226 	beq	r21,zero,8378 <___vfiprintf_internal_r+0x1344>
    7a70:	48021816 	blt	r9,zero,82d4 <___vfiprintf_internal_r+0x12a0>
    7a74:	480d883a 	mov	r6,r9
    7a78:	000b883a 	mov	r5,zero
    7a7c:	a809883a 	mov	r4,r21
    7a80:	d8c02a15 	stw	r3,168(sp)
    7a84:	da002b15 	stw	r8,172(sp)
    7a88:	da402c15 	stw	r9,176(sp)
    7a8c:	00058580 	call	5858 <memchr>
    7a90:	d8c02a17 	ldw	r3,168(sp)
    7a94:	da002b17 	ldw	r8,172(sp)
    7a98:	da402c17 	ldw	r9,176(sp)
    7a9c:	10024826 	beq	r2,zero,83c0 <___vfiprintf_internal_r+0x138c>
    7aa0:	1567c83a 	sub	r19,r2,r21
    7aa4:	df001d83 	ldbu	fp,118(sp)
    7aa8:	d8c02215 	stw	r3,136(sp)
    7aac:	0013883a 	mov	r9,zero
    7ab0:	003e6006 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    7ab4:	21003fcc 	andi	r4,r4,255
    7ab8:	203fc026 	beq	r4,zero,79bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079bc>
    7abc:	d9c01d85 	stb	r7,118(sp)
    7ac0:	003fbe06 	br	79bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079bc>
    7ac4:	da802217 	ldw	r10,136(sp)
    7ac8:	54400017 	ldw	r17,0(r10)
    7acc:	50800104 	addi	r2,r10,4
    7ad0:	883e3b16 	blt	r17,zero,73c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00073c0>
    7ad4:	d8802215 	stw	r2,136(sp)
    7ad8:	80c00007 	ldb	r3,0(r16)
    7adc:	003db406 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    7ae0:	01000044 	movi	r4,1
    7ae4:	01c00ac4 	movi	r7,43
    7ae8:	80c00007 	ldb	r3,0(r16)
    7aec:	003db006 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    7af0:	80c00007 	ldb	r3,0(r16)
    7af4:	82800044 	addi	r10,r16,1
    7af8:	1b423c26 	beq	r3,r13,83ec <___vfiprintf_internal_r+0x13b8>
    7afc:	18bff404 	addi	r2,r3,-48
    7b00:	0013883a 	mov	r9,zero
    7b04:	30822b36 	bltu	r6,r2,83b4 <___vfiprintf_internal_r+0x1380>
    7b08:	50c00007 	ldb	r3,0(r10)
    7b0c:	4a4002a4 	muli	r9,r9,10
    7b10:	54000044 	addi	r16,r10,1
    7b14:	8015883a 	mov	r10,r16
    7b18:	4893883a 	add	r9,r9,r2
    7b1c:	18bff404 	addi	r2,r3,-48
    7b20:	30bff92e 	bgeu	r6,r2,7b08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007b08>
    7b24:	483da30e 	bge	r9,zero,71b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b4>
    7b28:	027fffc4 	movi	r9,-1
    7b2c:	003da106 	br	71b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b4>
    7b30:	a5001014 	ori	r20,r20,64
    7b34:	80c00007 	ldb	r3,0(r16)
    7b38:	003d9d06 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    7b3c:	da802217 	ldw	r10,136(sp)
    7b40:	d8001d85 	stb	zero,118(sp)
    7b44:	50c00204 	addi	r3,r10,8
    7b48:	54800017 	ldw	r18,0(r10)
    7b4c:	54c00117 	ldw	r19,4(r10)
    7b50:	4801ca16 	blt	r9,zero,827c <___vfiprintf_internal_r+0x1248>
    7b54:	013fdfc4 	movi	r4,-129
    7b58:	94c4b03a 	or	r2,r18,r19
    7b5c:	d8c02215 	stw	r3,136(sp)
    7b60:	a128703a 	and	r20,r20,r4
    7b64:	0039883a 	mov	fp,zero
    7b68:	103f341e 	bne	r2,zero,783c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000783c>
    7b6c:	483e2e26 	beq	r9,zero,7428 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007428>
    7b70:	0025883a 	mov	r18,zero
    7b74:	94800c04 	addi	r18,r18,48
    7b78:	dc8019c5 	stb	r18,103(sp)
    7b7c:	dcc02717 	ldw	r19,156(sp)
    7b80:	dd4019c4 	addi	r21,sp,103
    7b84:	003e2b06 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    7b88:	21003fcc 	andi	r4,r4,255
    7b8c:	2002361e 	bne	r4,zero,8468 <___vfiprintf_internal_r+0x1434>
    7b90:	1801c126 	beq	r3,zero,8298 <___vfiprintf_internal_r+0x1264>
    7b94:	04800044 	movi	r18,1
    7b98:	d8c01005 	stb	r3,64(sp)
    7b9c:	d8001d85 	stb	zero,118(sp)
    7ba0:	9027883a 	mov	r19,r18
    7ba4:	dd401004 	addi	r21,sp,64
    7ba8:	003f1106 	br	77f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00077f0>
    7bac:	d9402117 	ldw	r5,132(sp)
    7bb0:	d9002017 	ldw	r4,128(sp)
    7bb4:	d9801a04 	addi	r6,sp,104
    7bb8:	d9c02b15 	stw	r7,172(sp)
    7bbc:	dbc02a15 	stw	r15,168(sp)
    7bc0:	0006f200 	call	6f20 <__sprint_r.part.0>
    7bc4:	d9c02b17 	ldw	r7,172(sp)
    7bc8:	dbc02a17 	ldw	r15,168(sp)
    7bcc:	10006d1e 	bne	r2,zero,7d84 <___vfiprintf_internal_r+0xd50>
    7bd0:	d9801b17 	ldw	r6,108(sp)
    7bd4:	d8801c17 	ldw	r2,112(sp)
    7bd8:	d811883a 	mov	r8,sp
    7bdc:	31400044 	addi	r5,r6,1
    7be0:	003e3306 	br	74b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00074b0>
    7be4:	d9401b17 	ldw	r5,108(sp)
    7be8:	d8801c17 	ldw	r2,112(sp)
    7bec:	29000044 	addi	r4,r5,1
    7bf0:	d8c01d87 	ldb	r3,118(sp)
    7bf4:	183e4d26 	beq	r3,zero,752c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000752c>
    7bf8:	00c00044 	movi	r3,1
    7bfc:	d9401d84 	addi	r5,sp,118
    7c00:	10c5883a 	add	r2,r2,r3
    7c04:	41400015 	stw	r5,0(r8)
    7c08:	40c00115 	stw	r3,4(r8)
    7c0c:	d8801c15 	stw	r2,112(sp)
    7c10:	d9001b15 	stw	r4,108(sp)
    7c14:	014001c4 	movi	r5,7
    7c18:	2900a90e 	bge	r5,r4,7ec0 <___vfiprintf_internal_r+0xe8c>
    7c1c:	1000da1e 	bne	r2,zero,7f88 <___vfiprintf_internal_r+0xf54>
    7c20:	7000ab1e 	bne	r14,zero,7ed0 <___vfiprintf_internal_r+0xe9c>
    7c24:	000b883a 	mov	r5,zero
    7c28:	1809883a 	mov	r4,r3
    7c2c:	d811883a 	mov	r8,sp
    7c30:	00c02004 	movi	r3,128
    7c34:	e0fe4d26 	beq	fp,r3,756c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000756c>
    7c38:	4cf9c83a 	sub	fp,r9,r19
    7c3c:	073e7b0e 	bge	zero,fp,762c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000762c>
    7c40:	01c00404 	movi	r7,16
    7c44:	3f01900e 	bge	r7,fp,8288 <___vfiprintf_internal_r+0x1254>
    7c48:	00c00074 	movhi	r3,1
    7c4c:	18c19604 	addi	r3,r3,1624
    7c50:	d8c02415 	stw	r3,144(sp)
    7c54:	034001c4 	movi	r13,7
    7c58:	00000506 	br	7c70 <___vfiprintf_internal_r+0xc3c>
    7c5c:	29000084 	addi	r4,r5,2
    7c60:	42000204 	addi	r8,r8,8
    7c64:	180b883a 	mov	r5,r3
    7c68:	e73ffc04 	addi	fp,fp,-16
    7c6c:	3f000d0e 	bge	r7,fp,7ca4 <___vfiprintf_internal_r+0xc70>
    7c70:	10800404 	addi	r2,r2,16
    7c74:	28c00044 	addi	r3,r5,1
    7c78:	45c00015 	stw	r23,0(r8)
    7c7c:	41c00115 	stw	r7,4(r8)
    7c80:	d8801c15 	stw	r2,112(sp)
    7c84:	d8c01b15 	stw	r3,108(sp)
    7c88:	68fff40e 	bge	r13,r3,7c5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c5c>
    7c8c:	1000101e 	bne	r2,zero,7cd0 <___vfiprintf_internal_r+0xc9c>
    7c90:	e73ffc04 	addi	fp,fp,-16
    7c94:	01000044 	movi	r4,1
    7c98:	000b883a 	mov	r5,zero
    7c9c:	d811883a 	mov	r8,sp
    7ca0:	3f3ff316 	blt	r7,fp,7c70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c70>
    7ca4:	da802417 	ldw	r10,144(sp)
    7ca8:	1705883a 	add	r2,r2,fp
    7cac:	47000115 	stw	fp,4(r8)
    7cb0:	42800015 	stw	r10,0(r8)
    7cb4:	d8801c15 	stw	r2,112(sp)
    7cb8:	d9001b15 	stw	r4,108(sp)
    7cbc:	00c001c4 	movi	r3,7
    7cc0:	19003616 	blt	r3,r4,7d9c <___vfiprintf_internal_r+0xd68>
    7cc4:	42000204 	addi	r8,r8,8
    7cc8:	21000044 	addi	r4,r4,1
    7ccc:	003e5706 	br	762c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000762c>
    7cd0:	d9402117 	ldw	r5,132(sp)
    7cd4:	d9002017 	ldw	r4,128(sp)
    7cd8:	d9801a04 	addi	r6,sp,104
    7cdc:	d9c02b15 	stw	r7,172(sp)
    7ce0:	db402a15 	stw	r13,168(sp)
    7ce4:	0006f200 	call	6f20 <__sprint_r.part.0>
    7ce8:	d9c02b17 	ldw	r7,172(sp)
    7cec:	db402a17 	ldw	r13,168(sp)
    7cf0:	1000241e 	bne	r2,zero,7d84 <___vfiprintf_internal_r+0xd50>
    7cf4:	d9401b17 	ldw	r5,108(sp)
    7cf8:	d8801c17 	ldw	r2,112(sp)
    7cfc:	d811883a 	mov	r8,sp
    7d00:	29000044 	addi	r4,r5,1
    7d04:	003fd806 	br	7c68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c68>
    7d08:	d9401b17 	ldw	r5,108(sp)
    7d0c:	00c00074 	movhi	r3,1
    7d10:	18c19a04 	addi	r3,r3,1640
    7d14:	d8c02415 	stw	r3,144(sp)
    7d18:	29400044 	addi	r5,r5,1
    7d1c:	d8c02417 	ldw	r3,144(sp)
    7d20:	14c5883a 	add	r2,r2,r19
    7d24:	44c00115 	stw	r19,4(r8)
    7d28:	40c00015 	stw	r3,0(r8)
    7d2c:	d8801c15 	stw	r2,112(sp)
    7d30:	d9401b15 	stw	r5,108(sp)
    7d34:	00c001c4 	movi	r3,7
    7d38:	1940070e 	bge	r3,r5,7d58 <___vfiprintf_internal_r+0xd24>
    7d3c:	103e4826 	beq	r2,zero,7660 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007660>
    7d40:	d9402117 	ldw	r5,132(sp)
    7d44:	d9002017 	ldw	r4,128(sp)
    7d48:	d9801a04 	addi	r6,sp,104
    7d4c:	0006f200 	call	6f20 <__sprint_r.part.0>
    7d50:	10000c1e 	bne	r2,zero,7d84 <___vfiprintf_internal_r+0xd50>
    7d54:	d8801c17 	ldw	r2,112(sp)
    7d58:	8c80010e 	bge	r17,r18,7d60 <___vfiprintf_internal_r+0xd2c>
    7d5c:	9023883a 	mov	r17,r18
    7d60:	da802317 	ldw	r10,140(sp)
    7d64:	5455883a 	add	r10,r10,r17
    7d68:	da802315 	stw	r10,140(sp)
    7d6c:	103e4126 	beq	r2,zero,7674 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007674>
    7d70:	d9402117 	ldw	r5,132(sp)
    7d74:	d9002017 	ldw	r4,128(sp)
    7d78:	d9801a04 	addi	r6,sp,104
    7d7c:	0006f200 	call	6f20 <__sprint_r.part.0>
    7d80:	103e3c26 	beq	r2,zero,7674 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007674>
    7d84:	dd002117 	ldw	r20,132(sp)
    7d88:	a080030b 	ldhu	r2,12(r20)
    7d8c:	1080100c 	andi	r2,r2,64
    7d90:	1001231e 	bne	r2,zero,8220 <___vfiprintf_internal_r+0x11ec>
    7d94:	d8802317 	ldw	r2,140(sp)
    7d98:	003d7b06 	br	7388 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007388>
    7d9c:	1000991e 	bne	r2,zero,8004 <___vfiprintf_internal_r+0xfd0>
    7da0:	00c00044 	movi	r3,1
    7da4:	9805883a 	mov	r2,r19
    7da8:	dd400015 	stw	r21,0(sp)
    7dac:	dcc00115 	stw	r19,4(sp)
    7db0:	dcc01c15 	stw	r19,112(sp)
    7db4:	d8c01b15 	stw	r3,108(sp)
    7db8:	d811883a 	mov	r8,sp
    7dbc:	42000204 	addi	r8,r8,8
    7dc0:	a2c0010c 	andi	r11,r20,4
    7dc4:	583fe426 	beq	r11,zero,7d58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d58>
    7dc8:	8ca7c83a 	sub	r19,r17,r18
    7dcc:	04ffe20e 	bge	zero,r19,7d58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d58>
    7dd0:	01c00404 	movi	r7,16
    7dd4:	3cffcc0e 	bge	r7,r19,7d08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d08>
    7dd8:	02800074 	movhi	r10,1
    7ddc:	52819a04 	addi	r10,r10,1640
    7de0:	d9001b17 	ldw	r4,108(sp)
    7de4:	da802415 	stw	r10,144(sp)
    7de8:	382b883a 	mov	r21,r7
    7dec:	050001c4 	movi	r20,7
    7df0:	df002017 	ldw	fp,128(sp)
    7df4:	00000506 	br	7e0c <___vfiprintf_internal_r+0xdd8>
    7df8:	21400084 	addi	r5,r4,2
    7dfc:	42000204 	addi	r8,r8,8
    7e00:	1809883a 	mov	r4,r3
    7e04:	9cfffc04 	addi	r19,r19,-16
    7e08:	acffc40e 	bge	r21,r19,7d1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d1c>
    7e0c:	10800404 	addi	r2,r2,16
    7e10:	20c00044 	addi	r3,r4,1
    7e14:	45800015 	stw	r22,0(r8)
    7e18:	45400115 	stw	r21,4(r8)
    7e1c:	d8801c15 	stw	r2,112(sp)
    7e20:	d8c01b15 	stw	r3,108(sp)
    7e24:	a0fff40e 	bge	r20,r3,7df8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007df8>
    7e28:	1000041e 	bne	r2,zero,7e3c <___vfiprintf_internal_r+0xe08>
    7e2c:	01400044 	movi	r5,1
    7e30:	0009883a 	mov	r4,zero
    7e34:	d811883a 	mov	r8,sp
    7e38:	003ff206 	br	7e04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007e04>
    7e3c:	d9402117 	ldw	r5,132(sp)
    7e40:	d9801a04 	addi	r6,sp,104
    7e44:	e009883a 	mov	r4,fp
    7e48:	0006f200 	call	6f20 <__sprint_r.part.0>
    7e4c:	103fcd1e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    7e50:	d9001b17 	ldw	r4,108(sp)
    7e54:	d8801c17 	ldw	r2,112(sp)
    7e58:	d811883a 	mov	r8,sp
    7e5c:	21400044 	addi	r5,r4,1
    7e60:	003fe806 	br	7e04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007e04>
    7e64:	d9402117 	ldw	r5,132(sp)
    7e68:	d9002017 	ldw	r4,128(sp)
    7e6c:	d9801a04 	addi	r6,sp,104
    7e70:	d9c02b15 	stw	r7,172(sp)
    7e74:	db402a15 	stw	r13,168(sp)
    7e78:	0006f200 	call	6f20 <__sprint_r.part.0>
    7e7c:	d9c02b17 	ldw	r7,172(sp)
    7e80:	db402a17 	ldw	r13,168(sp)
    7e84:	103fbf1e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    7e88:	d9401b17 	ldw	r5,108(sp)
    7e8c:	d8801c17 	ldw	r2,112(sp)
    7e90:	d811883a 	mov	r8,sp
    7e94:	29800044 	addi	r6,r5,1
    7e98:	003dc406 	br	75ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00075ac>
    7e9c:	1000d21e 	bne	r2,zero,81e8 <___vfiprintf_internal_r+0x11b4>
    7ea0:	d8c01d87 	ldb	r3,118(sp)
    7ea4:	18009526 	beq	r3,zero,80fc <___vfiprintf_internal_r+0x10c8>
    7ea8:	00800044 	movi	r2,1
    7eac:	d8c01d84 	addi	r3,sp,118
    7eb0:	1009883a 	mov	r4,r2
    7eb4:	d8c00015 	stw	r3,0(sp)
    7eb8:	d8800115 	stw	r2,4(sp)
    7ebc:	d811883a 	mov	r8,sp
    7ec0:	200b883a 	mov	r5,r4
    7ec4:	42000204 	addi	r8,r8,8
    7ec8:	21000044 	addi	r4,r4,1
    7ecc:	003d9706 	br	752c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000752c>
    7ed0:	d9001d04 	addi	r4,sp,116
    7ed4:	00800084 	movi	r2,2
    7ed8:	d9000015 	stw	r4,0(sp)
    7edc:	d8800115 	stw	r2,4(sp)
    7ee0:	1809883a 	mov	r4,r3
    7ee4:	d811883a 	mov	r8,sp
    7ee8:	200b883a 	mov	r5,r4
    7eec:	42000204 	addi	r8,r8,8
    7ef0:	21000044 	addi	r4,r4,1
    7ef4:	003f4e06 	br	7c30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c30>
    7ef8:	d8001d85 	stb	zero,118(sp)
    7efc:	48005016 	blt	r9,zero,8040 <___vfiprintf_internal_r+0x100c>
    7f00:	00ffdfc4 	movi	r3,-129
    7f04:	94c4b03a 	or	r2,r18,r19
    7f08:	a0e8703a 	and	r20,r20,r3
    7f0c:	103d4426 	beq	r2,zero,7420 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007420>
    7f10:	0039883a 	mov	fp,zero
    7f14:	d9002617 	ldw	r4,152(sp)
    7f18:	dd401a04 	addi	r21,sp,104
    7f1c:	908003cc 	andi	r2,r18,15
    7f20:	9806973a 	slli	r3,r19,28
    7f24:	2085883a 	add	r2,r4,r2
    7f28:	9024d13a 	srli	r18,r18,4
    7f2c:	10800003 	ldbu	r2,0(r2)
    7f30:	9826d13a 	srli	r19,r19,4
    7f34:	ad7fffc4 	addi	r21,r21,-1
    7f38:	1ca4b03a 	or	r18,r3,r18
    7f3c:	a8800005 	stb	r2,0(r21)
    7f40:	94c4b03a 	or	r2,r18,r19
    7f44:	103ff51e 	bne	r2,zero,7f1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f1c>
    7f48:	003e5906 	br	78b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078b0>
    7f4c:	d9402117 	ldw	r5,132(sp)
    7f50:	d9002017 	ldw	r4,128(sp)
    7f54:	d9801a04 	addi	r6,sp,104
    7f58:	0006f200 	call	6f20 <__sprint_r.part.0>
    7f5c:	103f891e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    7f60:	d8801c17 	ldw	r2,112(sp)
    7f64:	d811883a 	mov	r8,sp
    7f68:	003f9506 	br	7dc0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007dc0>
    7f6c:	d9402117 	ldw	r5,132(sp)
    7f70:	d9002017 	ldw	r4,128(sp)
    7f74:	d9801a04 	addi	r6,sp,104
    7f78:	0006f200 	call	6f20 <__sprint_r.part.0>
    7f7c:	103f811e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    7f80:	d811883a 	mov	r8,sp
    7f84:	003ced06 	br	733c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000733c>
    7f88:	d9402117 	ldw	r5,132(sp)
    7f8c:	d9002017 	ldw	r4,128(sp)
    7f90:	d9801a04 	addi	r6,sp,104
    7f94:	da402c15 	stw	r9,176(sp)
    7f98:	db802a15 	stw	r14,168(sp)
    7f9c:	0006f200 	call	6f20 <__sprint_r.part.0>
    7fa0:	da402c17 	ldw	r9,176(sp)
    7fa4:	db802a17 	ldw	r14,168(sp)
    7fa8:	103f761e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    7fac:	d9401b17 	ldw	r5,108(sp)
    7fb0:	d8801c17 	ldw	r2,112(sp)
    7fb4:	d811883a 	mov	r8,sp
    7fb8:	29000044 	addi	r4,r5,1
    7fbc:	003d5b06 	br	752c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000752c>
    7fc0:	d9402117 	ldw	r5,132(sp)
    7fc4:	d9002017 	ldw	r4,128(sp)
    7fc8:	d9801a04 	addi	r6,sp,104
    7fcc:	da402c15 	stw	r9,176(sp)
    7fd0:	0006f200 	call	6f20 <__sprint_r.part.0>
    7fd4:	da402c17 	ldw	r9,176(sp)
    7fd8:	103f6a1e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    7fdc:	d9401b17 	ldw	r5,108(sp)
    7fe0:	d8801c17 	ldw	r2,112(sp)
    7fe4:	d811883a 	mov	r8,sp
    7fe8:	29000044 	addi	r4,r5,1
    7fec:	003f1006 	br	7c30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c30>
    7ff0:	1000c31e 	bne	r2,zero,8300 <___vfiprintf_internal_r+0x12cc>
    7ff4:	01000044 	movi	r4,1
    7ff8:	000b883a 	mov	r5,zero
    7ffc:	d811883a 	mov	r8,sp
    8000:	003f0d06 	br	7c38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c38>
    8004:	d9402117 	ldw	r5,132(sp)
    8008:	d9002017 	ldw	r4,128(sp)
    800c:	d9801a04 	addi	r6,sp,104
    8010:	0006f200 	call	6f20 <__sprint_r.part.0>
    8014:	103f5b1e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    8018:	d9001b17 	ldw	r4,108(sp)
    801c:	d8801c17 	ldw	r2,112(sp)
    8020:	d811883a 	mov	r8,sp
    8024:	21000044 	addi	r4,r4,1
    8028:	003d8006 	br	762c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000762c>
    802c:	01000074 	movhi	r4,1
    8030:	21013504 	addi	r4,r4,1236
    8034:	d9002615 	stw	r4,152(sp)
    8038:	d8c02215 	stw	r3,136(sp)
    803c:	1029883a 	mov	r20,r2
    8040:	94c4b03a 	or	r2,r18,r19
    8044:	103fb21e 	bne	r2,zero,7f10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f10>
    8048:	0039883a 	mov	fp,zero
    804c:	00800084 	movi	r2,2
    8050:	003e6b06 	br	7a00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007a00>
    8054:	da802217 	ldw	r10,136(sp)
    8058:	d8001d85 	stb	zero,118(sp)
    805c:	0027883a 	mov	r19,zero
    8060:	50800104 	addi	r2,r10,4
    8064:	54800017 	ldw	r18,0(r10)
    8068:	483e6016 	blt	r9,zero,79ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079ec>
    806c:	00ffdfc4 	movi	r3,-129
    8070:	d8802215 	stw	r2,136(sp)
    8074:	a0e8703a 	and	r20,r20,r3
    8078:	0039883a 	mov	fp,zero
    807c:	903ebb26 	beq	r18,zero,7b6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007b6c>
    8080:	00800244 	movi	r2,9
    8084:	14bdee36 	bltu	r2,r18,7840 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007840>
    8088:	003eba06 	br	7b74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007b74>
    808c:	00800c04 	movi	r2,48
    8090:	d8c01d45 	stb	r3,117(sp)
    8094:	d8801d05 	stb	r2,116(sp)
    8098:	d8001d85 	stb	zero,118(sp)
    809c:	a0c00094 	ori	r3,r20,2
    80a0:	4800a916 	blt	r9,zero,8348 <___vfiprintf_internal_r+0x1314>
    80a4:	00bfdfc4 	movi	r2,-129
    80a8:	a096703a 	and	r11,r20,r2
    80ac:	5d000094 	ori	r20,r11,2
    80b0:	0039883a 	mov	fp,zero
    80b4:	003f9706 	br	7f14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f14>
    80b8:	8025883a 	mov	r18,r16
    80bc:	003c2e06 	br	7178 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007178>
    80c0:	00800074 	movhi	r2,1
    80c4:	10813504 	addi	r2,r2,1236
    80c8:	0039883a 	mov	fp,zero
    80cc:	d8802615 	stw	r2,152(sp)
    80d0:	003f9006 	br	7f14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f14>
    80d4:	04a5c83a 	sub	r18,zero,r18
    80d8:	07000b44 	movi	fp,45
    80dc:	9004c03a 	cmpne	r2,r18,zero
    80e0:	04e7c83a 	sub	r19,zero,r19
    80e4:	df001d85 	stb	fp,118(sp)
    80e8:	98a7c83a 	sub	r19,r19,r2
    80ec:	48009f16 	blt	r9,zero,836c <___vfiprintf_internal_r+0x1338>
    80f0:	00bfdfc4 	movi	r2,-129
    80f4:	a0a8703a 	and	r20,r20,r2
    80f8:	003dd006 	br	783c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000783c>
    80fc:	70004c26 	beq	r14,zero,8230 <___vfiprintf_internal_r+0x11fc>
    8100:	00800084 	movi	r2,2
    8104:	d8c01d04 	addi	r3,sp,116
    8108:	d8c00015 	stw	r3,0(sp)
    810c:	d8800115 	stw	r2,4(sp)
    8110:	01000044 	movi	r4,1
    8114:	d811883a 	mov	r8,sp
    8118:	003f7306 	br	7ee8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007ee8>
    811c:	a080100c 	andi	r2,r20,64
    8120:	da802217 	ldw	r10,136(sp)
    8124:	103e0626 	beq	r2,zero,7940 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007940>
    8128:	5480000f 	ldh	r18,0(r10)
    812c:	52800104 	addi	r10,r10,4
    8130:	da802215 	stw	r10,136(sp)
    8134:	9027d7fa 	srai	r19,r18,31
    8138:	9805883a 	mov	r2,r19
    813c:	003db806 	br	7820 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007820>
    8140:	a080040c 	andi	r2,r20,16
    8144:	1000091e 	bne	r2,zero,816c <___vfiprintf_internal_r+0x1138>
    8148:	a2c0100c 	andi	r11,r20,64
    814c:	58000726 	beq	r11,zero,816c <___vfiprintf_internal_r+0x1138>
    8150:	da802217 	ldw	r10,136(sp)
    8154:	50800017 	ldw	r2,0(r10)
    8158:	52800104 	addi	r10,r10,4
    815c:	da802215 	stw	r10,136(sp)
    8160:	da802317 	ldw	r10,140(sp)
    8164:	1280000d 	sth	r10,0(r2)
    8168:	003be706 	br	7108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007108>
    816c:	da802217 	ldw	r10,136(sp)
    8170:	50800017 	ldw	r2,0(r10)
    8174:	52800104 	addi	r10,r10,4
    8178:	da802215 	stw	r10,136(sp)
    817c:	da802317 	ldw	r10,140(sp)
    8180:	12800015 	stw	r10,0(r2)
    8184:	003be006 	br	7108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007108>
    8188:	a080100c 	andi	r2,r20,64
    818c:	da802217 	ldw	r10,136(sp)
    8190:	10003026 	beq	r2,zero,8254 <___vfiprintf_internal_r+0x1220>
    8194:	5480000b 	ldhu	r18,0(r10)
    8198:	52800104 	addi	r10,r10,4
    819c:	0027883a 	mov	r19,zero
    81a0:	da802215 	stw	r10,136(sp)
    81a4:	003d8006 	br	77a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00077a8>
    81a8:	80c00007 	ldb	r3,0(r16)
    81ac:	003c0006 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    81b0:	a080100c 	andi	r2,r20,64
    81b4:	d8001d85 	stb	zero,118(sp)
    81b8:	da802217 	ldw	r10,136(sp)
    81bc:	1000201e 	bne	r2,zero,8240 <___vfiprintf_internal_r+0x120c>
    81c0:	50800104 	addi	r2,r10,4
    81c4:	54800017 	ldw	r18,0(r10)
    81c8:	0027883a 	mov	r19,zero
    81cc:	483def0e 	bge	r9,zero,798c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000798c>
    81d0:	94c6b03a 	or	r3,r18,r19
    81d4:	d8802215 	stw	r2,136(sp)
    81d8:	183d4e1e 	bne	r3,zero,7714 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007714>
    81dc:	0039883a 	mov	fp,zero
    81e0:	0005883a 	mov	r2,zero
    81e4:	003e0606 	br	7a00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007a00>
    81e8:	d9402117 	ldw	r5,132(sp)
    81ec:	d9002017 	ldw	r4,128(sp)
    81f0:	d9801a04 	addi	r6,sp,104
    81f4:	da402c15 	stw	r9,176(sp)
    81f8:	db802a15 	stw	r14,168(sp)
    81fc:	0006f200 	call	6f20 <__sprint_r.part.0>
    8200:	da402c17 	ldw	r9,176(sp)
    8204:	db802a17 	ldw	r14,168(sp)
    8208:	103ede1e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    820c:	d9401b17 	ldw	r5,108(sp)
    8210:	d8801c17 	ldw	r2,112(sp)
    8214:	d811883a 	mov	r8,sp
    8218:	29000044 	addi	r4,r5,1
    821c:	003e7406 	br	7bf0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007bf0>
    8220:	00bfffc4 	movi	r2,-1
    8224:	003c5806 	br	7388 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007388>
    8228:	d811883a 	mov	r8,sp
    822c:	003ee806 	br	7dd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007dd0>
    8230:	000b883a 	mov	r5,zero
    8234:	01000044 	movi	r4,1
    8238:	d811883a 	mov	r8,sp
    823c:	003e7c06 	br	7c30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c30>
    8240:	50800104 	addi	r2,r10,4
    8244:	5480000b 	ldhu	r18,0(r10)
    8248:	0027883a 	mov	r19,zero
    824c:	483dcf0e 	bge	r9,zero,798c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000798c>
    8250:	003fdf06 	br	81d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00081d0>
    8254:	54800017 	ldw	r18,0(r10)
    8258:	52800104 	addi	r10,r10,4
    825c:	0027883a 	mov	r19,zero
    8260:	da802215 	stw	r10,136(sp)
    8264:	003d5006 	br	77a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00077a8>
    8268:	50800104 	addi	r2,r10,4
    826c:	5480000b 	ldhu	r18,0(r10)
    8270:	0027883a 	mov	r19,zero
    8274:	483f7d0e 	bge	r9,zero,806c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000806c>
    8278:	003ddc06 	br	79ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079ec>
    827c:	d8c02215 	stw	r3,136(sp)
    8280:	0039883a 	mov	fp,zero
    8284:	003ddb06 	br	79f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079f4>
    8288:	02800074 	movhi	r10,1
    828c:	52819604 	addi	r10,r10,1624
    8290:	da802415 	stw	r10,144(sp)
    8294:	003e8306 	br	7ca4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007ca4>
    8298:	d8801c17 	ldw	r2,112(sp)
    829c:	dd002117 	ldw	r20,132(sp)
    82a0:	103eb926 	beq	r2,zero,7d88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d88>
    82a4:	d9002017 	ldw	r4,128(sp)
    82a8:	d9801a04 	addi	r6,sp,104
    82ac:	a00b883a 	mov	r5,r20
    82b0:	0006f200 	call	6f20 <__sprint_r.part.0>
    82b4:	003eb406 	br	7d88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d88>
    82b8:	80c00043 	ldbu	r3,1(r16)
    82bc:	a5000814 	ori	r20,r20,32
    82c0:	84000044 	addi	r16,r16,1
    82c4:	18c03fcc 	andi	r3,r3,255
    82c8:	18c0201c 	xori	r3,r3,128
    82cc:	18ffe004 	addi	r3,r3,-128
    82d0:	003bb706 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    82d4:	a809883a 	mov	r4,r21
    82d8:	d8c02a15 	stw	r3,168(sp)
    82dc:	da002b15 	stw	r8,172(sp)
    82e0:	0006e880 	call	6e88 <strlen>
    82e4:	d8c02a17 	ldw	r3,168(sp)
    82e8:	1027883a 	mov	r19,r2
    82ec:	df001d83 	ldbu	fp,118(sp)
    82f0:	d8c02215 	stw	r3,136(sp)
    82f4:	0013883a 	mov	r9,zero
    82f8:	da002b17 	ldw	r8,172(sp)
    82fc:	003c4d06 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    8300:	d9402117 	ldw	r5,132(sp)
    8304:	d9002017 	ldw	r4,128(sp)
    8308:	d9801a04 	addi	r6,sp,104
    830c:	da402c15 	stw	r9,176(sp)
    8310:	0006f200 	call	6f20 <__sprint_r.part.0>
    8314:	da402c17 	ldw	r9,176(sp)
    8318:	103e9a1e 	bne	r2,zero,7d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d84>
    831c:	d9401b17 	ldw	r5,108(sp)
    8320:	d8801c17 	ldw	r2,112(sp)
    8324:	d811883a 	mov	r8,sp
    8328:	29000044 	addi	r4,r5,1
    832c:	003e4206 	br	7c38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007c38>
    8330:	d9401b17 	ldw	r5,108(sp)
    8334:	01000074 	movhi	r4,1
    8338:	21019a04 	addi	r4,r4,1640
    833c:	d9002415 	stw	r4,144(sp)
    8340:	29400044 	addi	r5,r5,1
    8344:	003c6d06 	br	74fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00074fc>
    8348:	0039883a 	mov	fp,zero
    834c:	00800084 	movi	r2,2
    8350:	10803fcc 	andi	r2,r2,255
    8354:	01000044 	movi	r4,1
    8358:	11001e26 	beq	r2,r4,83d4 <___vfiprintf_internal_r+0x13a0>
    835c:	01000084 	movi	r4,2
    8360:	11001e1e 	bne	r2,r4,83dc <___vfiprintf_internal_r+0x13a8>
    8364:	1829883a 	mov	r20,r3
    8368:	003eea06 	br	7f14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f14>
    836c:	a007883a 	mov	r3,r20
    8370:	00800044 	movi	r2,1
    8374:	003ff606 	br	8350 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008350>
    8378:	00800184 	movi	r2,6
    837c:	1240012e 	bgeu	r2,r9,8384 <___vfiprintf_internal_r+0x1350>
    8380:	1013883a 	mov	r9,r2
    8384:	4827883a 	mov	r19,r9
    8388:	4825883a 	mov	r18,r9
    838c:	48001516 	blt	r9,zero,83e4 <___vfiprintf_internal_r+0x13b0>
    8390:	05400074 	movhi	r21,1
    8394:	d8c02215 	stw	r3,136(sp)
    8398:	ad413a04 	addi	r21,r21,1256
    839c:	003d1406 	br	77f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00077f0>
    83a0:	02800074 	movhi	r10,1
    83a4:	52819604 	addi	r10,r10,1624
    83a8:	da802415 	stw	r10,144(sp)
    83ac:	200d883a 	mov	r6,r4
    83b0:	003c9106 	br	75f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00075f8>
    83b4:	5021883a 	mov	r16,r10
    83b8:	0013883a 	mov	r9,zero
    83bc:	003b7d06 	br	71b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b4>
    83c0:	4827883a 	mov	r19,r9
    83c4:	df001d83 	ldbu	fp,118(sp)
    83c8:	d8c02215 	stw	r3,136(sp)
    83cc:	0013883a 	mov	r9,zero
    83d0:	003c1806 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    83d4:	1829883a 	mov	r20,r3
    83d8:	003d1806 	br	783c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000783c>
    83dc:	1829883a 	mov	r20,r3
    83e0:	003ccd06 	br	7718 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007718>
    83e4:	0025883a 	mov	r18,zero
    83e8:	003fe906 	br	8390 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008390>
    83ec:	d8802217 	ldw	r2,136(sp)
    83f0:	80c00043 	ldbu	r3,1(r16)
    83f4:	5021883a 	mov	r16,r10
    83f8:	12400017 	ldw	r9,0(r2)
    83fc:	10800104 	addi	r2,r2,4
    8400:	d8802215 	stw	r2,136(sp)
    8404:	483faf0e 	bge	r9,zero,82c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00082c4>
    8408:	18c03fcc 	andi	r3,r3,255
    840c:	18c0201c 	xori	r3,r3,128
    8410:	027fffc4 	movi	r9,-1
    8414:	18ffe004 	addi	r3,r3,-128
    8418:	003b6506 	br	71b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071b0>
    841c:	d9c01d85 	stb	r7,118(sp)
    8420:	003ca006 	br	76a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00076a4>
    8424:	d9c01d85 	stb	r7,118(sp)
    8428:	003cad06 	br	76e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00076e0>
    842c:	d9c01d85 	stb	r7,118(sp)
    8430:	003d7d06 	br	7a28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007a28>
    8434:	d9c01d85 	stb	r7,118(sp)
    8438:	003d5f06 	br	79b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00079b8>
    843c:	a080004c 	andi	r2,r20,1
    8440:	0039883a 	mov	fp,zero
    8444:	10000526 	beq	r2,zero,845c <___vfiprintf_internal_r+0x1428>
    8448:	00800c04 	movi	r2,48
    844c:	d88019c5 	stb	r2,103(sp)
    8450:	dcc02717 	ldw	r19,156(sp)
    8454:	dd4019c4 	addi	r21,sp,103
    8458:	003bf606 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    845c:	0027883a 	mov	r19,zero
    8460:	dd401a04 	addi	r21,sp,104
    8464:	003bf306 	br	7434 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007434>
    8468:	d9c01d85 	stb	r7,118(sp)
    846c:	003dc806 	br	7b90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007b90>
    8470:	d9c01d85 	stb	r7,118(sp)
    8474:	003d3a06 	br	7960 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007960>
    8478:	d9c01d85 	stb	r7,118(sp)
    847c:	003d2a06 	br	7928 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007928>
    8480:	d9c01d85 	stb	r7,118(sp)
    8484:	003cde06 	br	7800 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007800>
    8488:	d9c01d85 	stb	r7,118(sp)
    848c:	003cbc06 	br	7780 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007780>

00008490 <__vfiprintf_internal>:
    8490:	00800074 	movhi	r2,1
    8494:	10896104 	addi	r2,r2,9604
    8498:	300f883a 	mov	r7,r6
    849c:	280d883a 	mov	r6,r5
    84a0:	200b883a 	mov	r5,r4
    84a4:	11000017 	ldw	r4,0(r2)
    84a8:	00070341 	jmpi	7034 <___vfiprintf_internal_r>

000084ac <__sbprintf>:
    84ac:	2880030b 	ldhu	r2,12(r5)
    84b0:	2ac01917 	ldw	r11,100(r5)
    84b4:	2a80038b 	ldhu	r10,14(r5)
    84b8:	2a400717 	ldw	r9,28(r5)
    84bc:	2a000917 	ldw	r8,36(r5)
    84c0:	defee204 	addi	sp,sp,-1144
    84c4:	00c10004 	movi	r3,1024
    84c8:	dc011a15 	stw	r16,1128(sp)
    84cc:	10bfff4c 	andi	r2,r2,65533
    84d0:	2821883a 	mov	r16,r5
    84d4:	d8cb883a 	add	r5,sp,r3
    84d8:	dc811c15 	stw	r18,1136(sp)
    84dc:	dc411b15 	stw	r17,1132(sp)
    84e0:	dfc11d15 	stw	ra,1140(sp)
    84e4:	2025883a 	mov	r18,r4
    84e8:	d881030d 	sth	r2,1036(sp)
    84ec:	dac11915 	stw	r11,1124(sp)
    84f0:	da81038d 	sth	r10,1038(sp)
    84f4:	da410715 	stw	r9,1052(sp)
    84f8:	da010915 	stw	r8,1060(sp)
    84fc:	dec10015 	stw	sp,1024(sp)
    8500:	dec10415 	stw	sp,1040(sp)
    8504:	d8c10215 	stw	r3,1032(sp)
    8508:	d8c10515 	stw	r3,1044(sp)
    850c:	d8010615 	stw	zero,1048(sp)
    8510:	00070340 	call	7034 <___vfiprintf_internal_r>
    8514:	1023883a 	mov	r17,r2
    8518:	10000416 	blt	r2,zero,852c <__sbprintf+0x80>
    851c:	d9410004 	addi	r5,sp,1024
    8520:	9009883a 	mov	r4,r18
    8524:	00043cc0 	call	43cc <_fflush_r>
    8528:	10000d1e 	bne	r2,zero,8560 <__sbprintf+0xb4>
    852c:	d881030b 	ldhu	r2,1036(sp)
    8530:	1080100c 	andi	r2,r2,64
    8534:	10000326 	beq	r2,zero,8544 <__sbprintf+0x98>
    8538:	8080030b 	ldhu	r2,12(r16)
    853c:	10801014 	ori	r2,r2,64
    8540:	8080030d 	sth	r2,12(r16)
    8544:	8805883a 	mov	r2,r17
    8548:	dfc11d17 	ldw	ra,1140(sp)
    854c:	dc811c17 	ldw	r18,1136(sp)
    8550:	dc411b17 	ldw	r17,1132(sp)
    8554:	dc011a17 	ldw	r16,1128(sp)
    8558:	dec11e04 	addi	sp,sp,1144
    855c:	f800283a 	ret
    8560:	047fffc4 	movi	r17,-1
    8564:	003ff106 	br	852c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000852c>

00008568 <_write_r>:
    8568:	defffd04 	addi	sp,sp,-12
    856c:	2805883a 	mov	r2,r5
    8570:	dc000015 	stw	r16,0(sp)
    8574:	04000074 	movhi	r16,1
    8578:	dc400115 	stw	r17,4(sp)
    857c:	300b883a 	mov	r5,r6
    8580:	8410c604 	addi	r16,r16,17176
    8584:	2023883a 	mov	r17,r4
    8588:	380d883a 	mov	r6,r7
    858c:	1009883a 	mov	r4,r2
    8590:	dfc00215 	stw	ra,8(sp)
    8594:	80000015 	stw	zero,0(r16)
    8598:	000d6b00 	call	d6b0 <write>
    859c:	00ffffc4 	movi	r3,-1
    85a0:	10c00526 	beq	r2,r3,85b8 <_write_r+0x50>
    85a4:	dfc00217 	ldw	ra,8(sp)
    85a8:	dc400117 	ldw	r17,4(sp)
    85ac:	dc000017 	ldw	r16,0(sp)
    85b0:	dec00304 	addi	sp,sp,12
    85b4:	f800283a 	ret
    85b8:	80c00017 	ldw	r3,0(r16)
    85bc:	183ff926 	beq	r3,zero,85a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085a4>
    85c0:	88c00015 	stw	r3,0(r17)
    85c4:	003ff706 	br	85a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085a4>

000085c8 <_close_r>:
    85c8:	defffd04 	addi	sp,sp,-12
    85cc:	dc000015 	stw	r16,0(sp)
    85d0:	04000074 	movhi	r16,1
    85d4:	dc400115 	stw	r17,4(sp)
    85d8:	8410c604 	addi	r16,r16,17176
    85dc:	2023883a 	mov	r17,r4
    85e0:	2809883a 	mov	r4,r5
    85e4:	dfc00215 	stw	ra,8(sp)
    85e8:	80000015 	stw	zero,0(r16)
    85ec:	000cd200 	call	cd20 <close>
    85f0:	00ffffc4 	movi	r3,-1
    85f4:	10c00526 	beq	r2,r3,860c <_close_r+0x44>
    85f8:	dfc00217 	ldw	ra,8(sp)
    85fc:	dc400117 	ldw	r17,4(sp)
    8600:	dc000017 	ldw	r16,0(sp)
    8604:	dec00304 	addi	sp,sp,12
    8608:	f800283a 	ret
    860c:	80c00017 	ldw	r3,0(r16)
    8610:	183ff926 	beq	r3,zero,85f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085f8>
    8614:	88c00015 	stw	r3,0(r17)
    8618:	003ff706 	br	85f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085f8>

0000861c <_calloc_r>:
    861c:	298b383a 	mul	r5,r5,r6
    8620:	defffe04 	addi	sp,sp,-8
    8624:	dfc00115 	stw	ra,4(sp)
    8628:	dc000015 	stw	r16,0(sp)
    862c:	000504c0 	call	504c <_malloc_r>
    8630:	10002926 	beq	r2,zero,86d8 <_calloc_r+0xbc>
    8634:	11bfff17 	ldw	r6,-4(r2)
    8638:	1021883a 	mov	r16,r2
    863c:	00bfff04 	movi	r2,-4
    8640:	308c703a 	and	r6,r6,r2
    8644:	00c00904 	movi	r3,36
    8648:	308d883a 	add	r6,r6,r2
    864c:	19801636 	bltu	r3,r6,86a8 <_calloc_r+0x8c>
    8650:	008004c4 	movi	r2,19
    8654:	11800b2e 	bgeu	r2,r6,8684 <_calloc_r+0x68>
    8658:	80000015 	stw	zero,0(r16)
    865c:	80000115 	stw	zero,4(r16)
    8660:	008006c4 	movi	r2,27
    8664:	11801a2e 	bgeu	r2,r6,86d0 <_calloc_r+0xb4>
    8668:	80000215 	stw	zero,8(r16)
    866c:	80000315 	stw	zero,12(r16)
    8670:	30c0151e 	bne	r6,r3,86c8 <_calloc_r+0xac>
    8674:	80000415 	stw	zero,16(r16)
    8678:	80800604 	addi	r2,r16,24
    867c:	80000515 	stw	zero,20(r16)
    8680:	00000106 	br	8688 <_calloc_r+0x6c>
    8684:	8005883a 	mov	r2,r16
    8688:	10000015 	stw	zero,0(r2)
    868c:	10000115 	stw	zero,4(r2)
    8690:	10000215 	stw	zero,8(r2)
    8694:	8005883a 	mov	r2,r16
    8698:	dfc00117 	ldw	ra,4(sp)
    869c:	dc000017 	ldw	r16,0(sp)
    86a0:	dec00204 	addi	sp,sp,8
    86a4:	f800283a 	ret
    86a8:	000b883a 	mov	r5,zero
    86ac:	8009883a 	mov	r4,r16
    86b0:	0005a840 	call	5a84 <memset>
    86b4:	8005883a 	mov	r2,r16
    86b8:	dfc00117 	ldw	ra,4(sp)
    86bc:	dc000017 	ldw	r16,0(sp)
    86c0:	dec00204 	addi	sp,sp,8
    86c4:	f800283a 	ret
    86c8:	80800404 	addi	r2,r16,16
    86cc:	003fee06 	br	8688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008688>
    86d0:	80800204 	addi	r2,r16,8
    86d4:	003fec06 	br	8688 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008688>
    86d8:	0005883a 	mov	r2,zero
    86dc:	003fee06 	br	8698 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008698>

000086e0 <_fclose_r>:
    86e0:	28003926 	beq	r5,zero,87c8 <_fclose_r+0xe8>
    86e4:	defffc04 	addi	sp,sp,-16
    86e8:	dc400115 	stw	r17,4(sp)
    86ec:	dc000015 	stw	r16,0(sp)
    86f0:	dfc00315 	stw	ra,12(sp)
    86f4:	dc800215 	stw	r18,8(sp)
    86f8:	2023883a 	mov	r17,r4
    86fc:	2821883a 	mov	r16,r5
    8700:	20000226 	beq	r4,zero,870c <_fclose_r+0x2c>
    8704:	20800e17 	ldw	r2,56(r4)
    8708:	10002726 	beq	r2,zero,87a8 <_fclose_r+0xc8>
    870c:	8080030f 	ldh	r2,12(r16)
    8710:	1000071e 	bne	r2,zero,8730 <_fclose_r+0x50>
    8714:	0005883a 	mov	r2,zero
    8718:	dfc00317 	ldw	ra,12(sp)
    871c:	dc800217 	ldw	r18,8(sp)
    8720:	dc400117 	ldw	r17,4(sp)
    8724:	dc000017 	ldw	r16,0(sp)
    8728:	dec00404 	addi	sp,sp,16
    872c:	f800283a 	ret
    8730:	800b883a 	mov	r5,r16
    8734:	8809883a 	mov	r4,r17
    8738:	00041b00 	call	41b0 <__sflush_r>
    873c:	1025883a 	mov	r18,r2
    8740:	80800b17 	ldw	r2,44(r16)
    8744:	10000426 	beq	r2,zero,8758 <_fclose_r+0x78>
    8748:	81400717 	ldw	r5,28(r16)
    874c:	8809883a 	mov	r4,r17
    8750:	103ee83a 	callr	r2
    8754:	10001616 	blt	r2,zero,87b0 <_fclose_r+0xd0>
    8758:	8080030b 	ldhu	r2,12(r16)
    875c:	1080200c 	andi	r2,r2,128
    8760:	1000151e 	bne	r2,zero,87b8 <_fclose_r+0xd8>
    8764:	81400c17 	ldw	r5,48(r16)
    8768:	28000526 	beq	r5,zero,8780 <_fclose_r+0xa0>
    876c:	80801004 	addi	r2,r16,64
    8770:	28800226 	beq	r5,r2,877c <_fclose_r+0x9c>
    8774:	8809883a 	mov	r4,r17
    8778:	000491c0 	call	491c <_free_r>
    877c:	80000c15 	stw	zero,48(r16)
    8780:	81401117 	ldw	r5,68(r16)
    8784:	28000326 	beq	r5,zero,8794 <_fclose_r+0xb4>
    8788:	8809883a 	mov	r4,r17
    878c:	000491c0 	call	491c <_free_r>
    8790:	80001115 	stw	zero,68(r16)
    8794:	00047b80 	call	47b8 <__sfp_lock_acquire>
    8798:	8000030d 	sth	zero,12(r16)
    879c:	00047bc0 	call	47bc <__sfp_lock_release>
    87a0:	9005883a 	mov	r2,r18
    87a4:	003fdc06 	br	8718 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008718>
    87a8:	00047a80 	call	47a8 <__sinit>
    87ac:	003fd706 	br	870c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000870c>
    87b0:	04bfffc4 	movi	r18,-1
    87b4:	003fe806 	br	8758 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008758>
    87b8:	81400417 	ldw	r5,16(r16)
    87bc:	8809883a 	mov	r4,r17
    87c0:	000491c0 	call	491c <_free_r>
    87c4:	003fe706 	br	8764 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008764>
    87c8:	0005883a 	mov	r2,zero
    87cc:	f800283a 	ret

000087d0 <fclose>:
    87d0:	00800074 	movhi	r2,1
    87d4:	10896104 	addi	r2,r2,9604
    87d8:	200b883a 	mov	r5,r4
    87dc:	11000017 	ldw	r4,0(r2)
    87e0:	00086e01 	jmpi	86e0 <_fclose_r>

000087e4 <__fputwc>:
    87e4:	defff804 	addi	sp,sp,-32
    87e8:	dcc00415 	stw	r19,16(sp)
    87ec:	dc800315 	stw	r18,12(sp)
    87f0:	dc000115 	stw	r16,4(sp)
    87f4:	dfc00715 	stw	ra,28(sp)
    87f8:	dd400615 	stw	r21,24(sp)
    87fc:	dd000515 	stw	r20,20(sp)
    8800:	dc400215 	stw	r17,8(sp)
    8804:	2027883a 	mov	r19,r4
    8808:	2825883a 	mov	r18,r5
    880c:	3021883a 	mov	r16,r6
    8810:	0004e3c0 	call	4e3c <__locale_mb_cur_max>
    8814:	00c00044 	movi	r3,1
    8818:	10c03e26 	beq	r2,r3,8914 <__fputwc+0x130>
    881c:	81c01704 	addi	r7,r16,92
    8820:	900d883a 	mov	r6,r18
    8824:	d80b883a 	mov	r5,sp
    8828:	9809883a 	mov	r4,r19
    882c:	00098300 	call	9830 <_wcrtomb_r>
    8830:	1029883a 	mov	r20,r2
    8834:	00bfffc4 	movi	r2,-1
    8838:	a0802026 	beq	r20,r2,88bc <__fputwc+0xd8>
    883c:	d9400003 	ldbu	r5,0(sp)
    8840:	a0001c26 	beq	r20,zero,88b4 <__fputwc+0xd0>
    8844:	0023883a 	mov	r17,zero
    8848:	05400284 	movi	r21,10
    884c:	00000906 	br	8874 <__fputwc+0x90>
    8850:	80800017 	ldw	r2,0(r16)
    8854:	11400005 	stb	r5,0(r2)
    8858:	80c00017 	ldw	r3,0(r16)
    885c:	18c00044 	addi	r3,r3,1
    8860:	80c00015 	stw	r3,0(r16)
    8864:	8c400044 	addi	r17,r17,1
    8868:	dc45883a 	add	r2,sp,r17
    886c:	8d00112e 	bgeu	r17,r20,88b4 <__fputwc+0xd0>
    8870:	11400003 	ldbu	r5,0(r2)
    8874:	80c00217 	ldw	r3,8(r16)
    8878:	18ffffc4 	addi	r3,r3,-1
    887c:	80c00215 	stw	r3,8(r16)
    8880:	183ff30e 	bge	r3,zero,8850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008850>
    8884:	80800617 	ldw	r2,24(r16)
    8888:	18801916 	blt	r3,r2,88f0 <__fputwc+0x10c>
    888c:	80800017 	ldw	r2,0(r16)
    8890:	11400005 	stb	r5,0(r2)
    8894:	80800017 	ldw	r2,0(r16)
    8898:	10c00003 	ldbu	r3,0(r2)
    889c:	10800044 	addi	r2,r2,1
    88a0:	1d402326 	beq	r3,r21,8930 <__fputwc+0x14c>
    88a4:	80800015 	stw	r2,0(r16)
    88a8:	8c400044 	addi	r17,r17,1
    88ac:	dc45883a 	add	r2,sp,r17
    88b0:	8d3fef36 	bltu	r17,r20,8870 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008870>
    88b4:	9005883a 	mov	r2,r18
    88b8:	00000406 	br	88cc <__fputwc+0xe8>
    88bc:	80c0030b 	ldhu	r3,12(r16)
    88c0:	a005883a 	mov	r2,r20
    88c4:	18c01014 	ori	r3,r3,64
    88c8:	80c0030d 	sth	r3,12(r16)
    88cc:	dfc00717 	ldw	ra,28(sp)
    88d0:	dd400617 	ldw	r21,24(sp)
    88d4:	dd000517 	ldw	r20,20(sp)
    88d8:	dcc00417 	ldw	r19,16(sp)
    88dc:	dc800317 	ldw	r18,12(sp)
    88e0:	dc400217 	ldw	r17,8(sp)
    88e4:	dc000117 	ldw	r16,4(sp)
    88e8:	dec00804 	addi	sp,sp,32
    88ec:	f800283a 	ret
    88f0:	800d883a 	mov	r6,r16
    88f4:	29403fcc 	andi	r5,r5,255
    88f8:	9809883a 	mov	r4,r19
    88fc:	00096d80 	call	96d8 <__swbuf_r>
    8900:	10bfffe0 	cmpeqi	r2,r2,-1
    8904:	10803fcc 	andi	r2,r2,255
    8908:	103fd626 	beq	r2,zero,8864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008864>
    890c:	00bfffc4 	movi	r2,-1
    8910:	003fee06 	br	88cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088cc>
    8914:	90ffffc4 	addi	r3,r18,-1
    8918:	01003f84 	movi	r4,254
    891c:	20ffbf36 	bltu	r4,r3,881c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000881c>
    8920:	900b883a 	mov	r5,r18
    8924:	dc800005 	stb	r18,0(sp)
    8928:	1029883a 	mov	r20,r2
    892c:	003fc506 	br	8844 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008844>
    8930:	800d883a 	mov	r6,r16
    8934:	a80b883a 	mov	r5,r21
    8938:	9809883a 	mov	r4,r19
    893c:	00096d80 	call	96d8 <__swbuf_r>
    8940:	10bfffe0 	cmpeqi	r2,r2,-1
    8944:	003fef06 	br	8904 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008904>

00008948 <_fputwc_r>:
    8948:	3080030b 	ldhu	r2,12(r6)
    894c:	10c8000c 	andi	r3,r2,8192
    8950:	1800051e 	bne	r3,zero,8968 <_fputwc_r+0x20>
    8954:	30c01917 	ldw	r3,100(r6)
    8958:	10880014 	ori	r2,r2,8192
    895c:	3080030d 	sth	r2,12(r6)
    8960:	18880014 	ori	r2,r3,8192
    8964:	30801915 	stw	r2,100(r6)
    8968:	00087e41 	jmpi	87e4 <__fputwc>

0000896c <fputwc>:
    896c:	00800074 	movhi	r2,1
    8970:	defffc04 	addi	sp,sp,-16
    8974:	10896104 	addi	r2,r2,9604
    8978:	dc000115 	stw	r16,4(sp)
    897c:	14000017 	ldw	r16,0(r2)
    8980:	dc400215 	stw	r17,8(sp)
    8984:	dfc00315 	stw	ra,12(sp)
    8988:	2023883a 	mov	r17,r4
    898c:	80000226 	beq	r16,zero,8998 <fputwc+0x2c>
    8990:	80800e17 	ldw	r2,56(r16)
    8994:	10001026 	beq	r2,zero,89d8 <fputwc+0x6c>
    8998:	2880030b 	ldhu	r2,12(r5)
    899c:	10c8000c 	andi	r3,r2,8192
    89a0:	1800051e 	bne	r3,zero,89b8 <fputwc+0x4c>
    89a4:	28c01917 	ldw	r3,100(r5)
    89a8:	10880014 	ori	r2,r2,8192
    89ac:	2880030d 	sth	r2,12(r5)
    89b0:	18880014 	ori	r2,r3,8192
    89b4:	28801915 	stw	r2,100(r5)
    89b8:	280d883a 	mov	r6,r5
    89bc:	8009883a 	mov	r4,r16
    89c0:	880b883a 	mov	r5,r17
    89c4:	dfc00317 	ldw	ra,12(sp)
    89c8:	dc400217 	ldw	r17,8(sp)
    89cc:	dc000117 	ldw	r16,4(sp)
    89d0:	dec00404 	addi	sp,sp,16
    89d4:	00087e41 	jmpi	87e4 <__fputwc>
    89d8:	8009883a 	mov	r4,r16
    89dc:	d9400015 	stw	r5,0(sp)
    89e0:	00047a80 	call	47a8 <__sinit>
    89e4:	d9400017 	ldw	r5,0(sp)
    89e8:	003feb06 	br	8998 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008998>

000089ec <_fstat_r>:
    89ec:	defffd04 	addi	sp,sp,-12
    89f0:	2805883a 	mov	r2,r5
    89f4:	dc000015 	stw	r16,0(sp)
    89f8:	04000074 	movhi	r16,1
    89fc:	dc400115 	stw	r17,4(sp)
    8a00:	8410c604 	addi	r16,r16,17176
    8a04:	2023883a 	mov	r17,r4
    8a08:	300b883a 	mov	r5,r6
    8a0c:	1009883a 	mov	r4,r2
    8a10:	dfc00215 	stw	ra,8(sp)
    8a14:	80000015 	stw	zero,0(r16)
    8a18:	000ce580 	call	ce58 <fstat>
    8a1c:	00ffffc4 	movi	r3,-1
    8a20:	10c00526 	beq	r2,r3,8a38 <_fstat_r+0x4c>
    8a24:	dfc00217 	ldw	ra,8(sp)
    8a28:	dc400117 	ldw	r17,4(sp)
    8a2c:	dc000017 	ldw	r16,0(sp)
    8a30:	dec00304 	addi	sp,sp,12
    8a34:	f800283a 	ret
    8a38:	80c00017 	ldw	r3,0(r16)
    8a3c:	183ff926 	beq	r3,zero,8a24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a24>
    8a40:	88c00015 	stw	r3,0(r17)
    8a44:	003ff706 	br	8a24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a24>

00008a48 <__sfvwrite_r>:
    8a48:	30800217 	ldw	r2,8(r6)
    8a4c:	10006726 	beq	r2,zero,8bec <__sfvwrite_r+0x1a4>
    8a50:	28c0030b 	ldhu	r3,12(r5)
    8a54:	defff404 	addi	sp,sp,-48
    8a58:	dd400715 	stw	r21,28(sp)
    8a5c:	dd000615 	stw	r20,24(sp)
    8a60:	dc000215 	stw	r16,8(sp)
    8a64:	dfc00b15 	stw	ra,44(sp)
    8a68:	df000a15 	stw	fp,40(sp)
    8a6c:	ddc00915 	stw	r23,36(sp)
    8a70:	dd800815 	stw	r22,32(sp)
    8a74:	dcc00515 	stw	r19,20(sp)
    8a78:	dc800415 	stw	r18,16(sp)
    8a7c:	dc400315 	stw	r17,12(sp)
    8a80:	1880020c 	andi	r2,r3,8
    8a84:	2821883a 	mov	r16,r5
    8a88:	202b883a 	mov	r21,r4
    8a8c:	3029883a 	mov	r20,r6
    8a90:	10002726 	beq	r2,zero,8b30 <__sfvwrite_r+0xe8>
    8a94:	28800417 	ldw	r2,16(r5)
    8a98:	10002526 	beq	r2,zero,8b30 <__sfvwrite_r+0xe8>
    8a9c:	1880008c 	andi	r2,r3,2
    8aa0:	a4400017 	ldw	r17,0(r20)
    8aa4:	10002a26 	beq	r2,zero,8b50 <__sfvwrite_r+0x108>
    8aa8:	05a00034 	movhi	r22,32768
    8aac:	0027883a 	mov	r19,zero
    8ab0:	0025883a 	mov	r18,zero
    8ab4:	b5bf0004 	addi	r22,r22,-1024
    8ab8:	980d883a 	mov	r6,r19
    8abc:	a809883a 	mov	r4,r21
    8ac0:	90004626 	beq	r18,zero,8bdc <__sfvwrite_r+0x194>
    8ac4:	900f883a 	mov	r7,r18
    8ac8:	b480022e 	bgeu	r22,r18,8ad4 <__sfvwrite_r+0x8c>
    8acc:	01e00034 	movhi	r7,32768
    8ad0:	39ff0004 	addi	r7,r7,-1024
    8ad4:	80800917 	ldw	r2,36(r16)
    8ad8:	81400717 	ldw	r5,28(r16)
    8adc:	103ee83a 	callr	r2
    8ae0:	0080570e 	bge	zero,r2,8c40 <__sfvwrite_r+0x1f8>
    8ae4:	a0c00217 	ldw	r3,8(r20)
    8ae8:	98a7883a 	add	r19,r19,r2
    8aec:	90a5c83a 	sub	r18,r18,r2
    8af0:	1885c83a 	sub	r2,r3,r2
    8af4:	a0800215 	stw	r2,8(r20)
    8af8:	103fef1e 	bne	r2,zero,8ab8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ab8>
    8afc:	0005883a 	mov	r2,zero
    8b00:	dfc00b17 	ldw	ra,44(sp)
    8b04:	df000a17 	ldw	fp,40(sp)
    8b08:	ddc00917 	ldw	r23,36(sp)
    8b0c:	dd800817 	ldw	r22,32(sp)
    8b10:	dd400717 	ldw	r21,28(sp)
    8b14:	dd000617 	ldw	r20,24(sp)
    8b18:	dcc00517 	ldw	r19,20(sp)
    8b1c:	dc800417 	ldw	r18,16(sp)
    8b20:	dc400317 	ldw	r17,12(sp)
    8b24:	dc000217 	ldw	r16,8(sp)
    8b28:	dec00c04 	addi	sp,sp,48
    8b2c:	f800283a 	ret
    8b30:	800b883a 	mov	r5,r16
    8b34:	a809883a 	mov	r4,r21
    8b38:	00027d40 	call	27d4 <__swsetup_r>
    8b3c:	1000eb1e 	bne	r2,zero,8eec <__sfvwrite_r+0x4a4>
    8b40:	80c0030b 	ldhu	r3,12(r16)
    8b44:	a4400017 	ldw	r17,0(r20)
    8b48:	1880008c 	andi	r2,r3,2
    8b4c:	103fd61e 	bne	r2,zero,8aa8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008aa8>
    8b50:	1880004c 	andi	r2,r3,1
    8b54:	10003f1e 	bne	r2,zero,8c54 <__sfvwrite_r+0x20c>
    8b58:	0039883a 	mov	fp,zero
    8b5c:	0025883a 	mov	r18,zero
    8b60:	90001a26 	beq	r18,zero,8bcc <__sfvwrite_r+0x184>
    8b64:	1880800c 	andi	r2,r3,512
    8b68:	84c00217 	ldw	r19,8(r16)
    8b6c:	10002126 	beq	r2,zero,8bf4 <__sfvwrite_r+0x1ac>
    8b70:	982f883a 	mov	r23,r19
    8b74:	94c09336 	bltu	r18,r19,8dc4 <__sfvwrite_r+0x37c>
    8b78:	1881200c 	andi	r2,r3,1152
    8b7c:	10009e1e 	bne	r2,zero,8df8 <__sfvwrite_r+0x3b0>
    8b80:	81000017 	ldw	r4,0(r16)
    8b84:	b80d883a 	mov	r6,r23
    8b88:	e00b883a 	mov	r5,fp
    8b8c:	0008fb80 	call	8fb8 <memmove>
    8b90:	80c00217 	ldw	r3,8(r16)
    8b94:	81000017 	ldw	r4,0(r16)
    8b98:	9005883a 	mov	r2,r18
    8b9c:	1ce7c83a 	sub	r19,r3,r19
    8ba0:	25cf883a 	add	r7,r4,r23
    8ba4:	84c00215 	stw	r19,8(r16)
    8ba8:	81c00015 	stw	r7,0(r16)
    8bac:	a0c00217 	ldw	r3,8(r20)
    8bb0:	e0b9883a 	add	fp,fp,r2
    8bb4:	90a5c83a 	sub	r18,r18,r2
    8bb8:	18a7c83a 	sub	r19,r3,r2
    8bbc:	a4c00215 	stw	r19,8(r20)
    8bc0:	983fce26 	beq	r19,zero,8afc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008afc>
    8bc4:	80c0030b 	ldhu	r3,12(r16)
    8bc8:	903fe61e 	bne	r18,zero,8b64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008b64>
    8bcc:	8f000017 	ldw	fp,0(r17)
    8bd0:	8c800117 	ldw	r18,4(r17)
    8bd4:	8c400204 	addi	r17,r17,8
    8bd8:	003fe106 	br	8b60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008b60>
    8bdc:	8cc00017 	ldw	r19,0(r17)
    8be0:	8c800117 	ldw	r18,4(r17)
    8be4:	8c400204 	addi	r17,r17,8
    8be8:	003fb306 	br	8ab8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ab8>
    8bec:	0005883a 	mov	r2,zero
    8bf0:	f800283a 	ret
    8bf4:	81000017 	ldw	r4,0(r16)
    8bf8:	80800417 	ldw	r2,16(r16)
    8bfc:	11005736 	bltu	r2,r4,8d5c <__sfvwrite_r+0x314>
    8c00:	85c00517 	ldw	r23,20(r16)
    8c04:	95c05536 	bltu	r18,r23,8d5c <__sfvwrite_r+0x314>
    8c08:	00a00034 	movhi	r2,32768
    8c0c:	10bfffc4 	addi	r2,r2,-1
    8c10:	9009883a 	mov	r4,r18
    8c14:	1480012e 	bgeu	r2,r18,8c1c <__sfvwrite_r+0x1d4>
    8c18:	1009883a 	mov	r4,r2
    8c1c:	b80b883a 	mov	r5,r23
    8c20:	000a4c80 	call	a4c8 <__divsi3>
    8c24:	15cf383a 	mul	r7,r2,r23
    8c28:	81400717 	ldw	r5,28(r16)
    8c2c:	80800917 	ldw	r2,36(r16)
    8c30:	e00d883a 	mov	r6,fp
    8c34:	a809883a 	mov	r4,r21
    8c38:	103ee83a 	callr	r2
    8c3c:	00bfdb16 	blt	zero,r2,8bac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008bac>
    8c40:	8080030b 	ldhu	r2,12(r16)
    8c44:	10801014 	ori	r2,r2,64
    8c48:	8080030d 	sth	r2,12(r16)
    8c4c:	00bfffc4 	movi	r2,-1
    8c50:	003fab06 	br	8b00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008b00>
    8c54:	0027883a 	mov	r19,zero
    8c58:	0011883a 	mov	r8,zero
    8c5c:	0039883a 	mov	fp,zero
    8c60:	0025883a 	mov	r18,zero
    8c64:	90001f26 	beq	r18,zero,8ce4 <__sfvwrite_r+0x29c>
    8c68:	40005a26 	beq	r8,zero,8dd4 <__sfvwrite_r+0x38c>
    8c6c:	982d883a 	mov	r22,r19
    8c70:	94c0012e 	bgeu	r18,r19,8c78 <__sfvwrite_r+0x230>
    8c74:	902d883a 	mov	r22,r18
    8c78:	81000017 	ldw	r4,0(r16)
    8c7c:	80800417 	ldw	r2,16(r16)
    8c80:	b02f883a 	mov	r23,r22
    8c84:	81c00517 	ldw	r7,20(r16)
    8c88:	1100032e 	bgeu	r2,r4,8c98 <__sfvwrite_r+0x250>
    8c8c:	80c00217 	ldw	r3,8(r16)
    8c90:	38c7883a 	add	r3,r7,r3
    8c94:	1d801816 	blt	r3,r22,8cf8 <__sfvwrite_r+0x2b0>
    8c98:	b1c03e16 	blt	r22,r7,8d94 <__sfvwrite_r+0x34c>
    8c9c:	80800917 	ldw	r2,36(r16)
    8ca0:	81400717 	ldw	r5,28(r16)
    8ca4:	e00d883a 	mov	r6,fp
    8ca8:	da000115 	stw	r8,4(sp)
    8cac:	a809883a 	mov	r4,r21
    8cb0:	103ee83a 	callr	r2
    8cb4:	102f883a 	mov	r23,r2
    8cb8:	da000117 	ldw	r8,4(sp)
    8cbc:	00bfe00e 	bge	zero,r2,8c40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c40>
    8cc0:	9de7c83a 	sub	r19,r19,r23
    8cc4:	98001f26 	beq	r19,zero,8d44 <__sfvwrite_r+0x2fc>
    8cc8:	a0800217 	ldw	r2,8(r20)
    8ccc:	e5f9883a 	add	fp,fp,r23
    8cd0:	95e5c83a 	sub	r18,r18,r23
    8cd4:	15efc83a 	sub	r23,r2,r23
    8cd8:	a5c00215 	stw	r23,8(r20)
    8cdc:	b83f8726 	beq	r23,zero,8afc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008afc>
    8ce0:	903fe11e 	bne	r18,zero,8c68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c68>
    8ce4:	8f000017 	ldw	fp,0(r17)
    8ce8:	8c800117 	ldw	r18,4(r17)
    8cec:	0011883a 	mov	r8,zero
    8cf0:	8c400204 	addi	r17,r17,8
    8cf4:	003fdb06 	br	8c64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c64>
    8cf8:	180d883a 	mov	r6,r3
    8cfc:	e00b883a 	mov	r5,fp
    8d00:	da000115 	stw	r8,4(sp)
    8d04:	d8c00015 	stw	r3,0(sp)
    8d08:	0008fb80 	call	8fb8 <memmove>
    8d0c:	d8c00017 	ldw	r3,0(sp)
    8d10:	80800017 	ldw	r2,0(r16)
    8d14:	800b883a 	mov	r5,r16
    8d18:	a809883a 	mov	r4,r21
    8d1c:	10c5883a 	add	r2,r2,r3
    8d20:	80800015 	stw	r2,0(r16)
    8d24:	d8c00015 	stw	r3,0(sp)
    8d28:	00043cc0 	call	43cc <_fflush_r>
    8d2c:	d8c00017 	ldw	r3,0(sp)
    8d30:	da000117 	ldw	r8,4(sp)
    8d34:	103fc21e 	bne	r2,zero,8c40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c40>
    8d38:	182f883a 	mov	r23,r3
    8d3c:	9de7c83a 	sub	r19,r19,r23
    8d40:	983fe11e 	bne	r19,zero,8cc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008cc8>
    8d44:	800b883a 	mov	r5,r16
    8d48:	a809883a 	mov	r4,r21
    8d4c:	00043cc0 	call	43cc <_fflush_r>
    8d50:	103fbb1e 	bne	r2,zero,8c40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c40>
    8d54:	0011883a 	mov	r8,zero
    8d58:	003fdb06 	br	8cc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008cc8>
    8d5c:	94c0012e 	bgeu	r18,r19,8d64 <__sfvwrite_r+0x31c>
    8d60:	9027883a 	mov	r19,r18
    8d64:	980d883a 	mov	r6,r19
    8d68:	e00b883a 	mov	r5,fp
    8d6c:	0008fb80 	call	8fb8 <memmove>
    8d70:	80800217 	ldw	r2,8(r16)
    8d74:	80c00017 	ldw	r3,0(r16)
    8d78:	14c5c83a 	sub	r2,r2,r19
    8d7c:	1cc7883a 	add	r3,r3,r19
    8d80:	80800215 	stw	r2,8(r16)
    8d84:	80c00015 	stw	r3,0(r16)
    8d88:	10004326 	beq	r2,zero,8e98 <__sfvwrite_r+0x450>
    8d8c:	9805883a 	mov	r2,r19
    8d90:	003f8606 	br	8bac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008bac>
    8d94:	b00d883a 	mov	r6,r22
    8d98:	e00b883a 	mov	r5,fp
    8d9c:	da000115 	stw	r8,4(sp)
    8da0:	0008fb80 	call	8fb8 <memmove>
    8da4:	80800217 	ldw	r2,8(r16)
    8da8:	80c00017 	ldw	r3,0(r16)
    8dac:	da000117 	ldw	r8,4(sp)
    8db0:	1585c83a 	sub	r2,r2,r22
    8db4:	1dad883a 	add	r22,r3,r22
    8db8:	80800215 	stw	r2,8(r16)
    8dbc:	85800015 	stw	r22,0(r16)
    8dc0:	003fbf06 	br	8cc0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008cc0>
    8dc4:	81000017 	ldw	r4,0(r16)
    8dc8:	9027883a 	mov	r19,r18
    8dcc:	902f883a 	mov	r23,r18
    8dd0:	003f6c06 	br	8b84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008b84>
    8dd4:	900d883a 	mov	r6,r18
    8dd8:	01400284 	movi	r5,10
    8ddc:	e009883a 	mov	r4,fp
    8de0:	00058580 	call	5858 <memchr>
    8de4:	10003e26 	beq	r2,zero,8ee0 <__sfvwrite_r+0x498>
    8de8:	10800044 	addi	r2,r2,1
    8dec:	1727c83a 	sub	r19,r2,fp
    8df0:	02000044 	movi	r8,1
    8df4:	003f9d06 	br	8c6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c6c>
    8df8:	80800517 	ldw	r2,20(r16)
    8dfc:	81400417 	ldw	r5,16(r16)
    8e00:	81c00017 	ldw	r7,0(r16)
    8e04:	10a7883a 	add	r19,r2,r2
    8e08:	9885883a 	add	r2,r19,r2
    8e0c:	1026d7fa 	srli	r19,r2,31
    8e10:	396dc83a 	sub	r22,r7,r5
    8e14:	b1000044 	addi	r4,r22,1
    8e18:	9885883a 	add	r2,r19,r2
    8e1c:	1027d07a 	srai	r19,r2,1
    8e20:	2485883a 	add	r2,r4,r18
    8e24:	980d883a 	mov	r6,r19
    8e28:	9880022e 	bgeu	r19,r2,8e34 <__sfvwrite_r+0x3ec>
    8e2c:	1027883a 	mov	r19,r2
    8e30:	100d883a 	mov	r6,r2
    8e34:	18c1000c 	andi	r3,r3,1024
    8e38:	18001c26 	beq	r3,zero,8eac <__sfvwrite_r+0x464>
    8e3c:	300b883a 	mov	r5,r6
    8e40:	a809883a 	mov	r4,r21
    8e44:	000504c0 	call	504c <_malloc_r>
    8e48:	102f883a 	mov	r23,r2
    8e4c:	10002926 	beq	r2,zero,8ef4 <__sfvwrite_r+0x4ac>
    8e50:	81400417 	ldw	r5,16(r16)
    8e54:	b00d883a 	mov	r6,r22
    8e58:	1009883a 	mov	r4,r2
    8e5c:	000593c0 	call	593c <memcpy>
    8e60:	8080030b 	ldhu	r2,12(r16)
    8e64:	00fedfc4 	movi	r3,-1153
    8e68:	10c4703a 	and	r2,r2,r3
    8e6c:	10802014 	ori	r2,r2,128
    8e70:	8080030d 	sth	r2,12(r16)
    8e74:	bd89883a 	add	r4,r23,r22
    8e78:	9d8fc83a 	sub	r7,r19,r22
    8e7c:	85c00415 	stw	r23,16(r16)
    8e80:	84c00515 	stw	r19,20(r16)
    8e84:	81000015 	stw	r4,0(r16)
    8e88:	9027883a 	mov	r19,r18
    8e8c:	81c00215 	stw	r7,8(r16)
    8e90:	902f883a 	mov	r23,r18
    8e94:	003f3b06 	br	8b84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008b84>
    8e98:	800b883a 	mov	r5,r16
    8e9c:	a809883a 	mov	r4,r21
    8ea0:	00043cc0 	call	43cc <_fflush_r>
    8ea4:	103fb926 	beq	r2,zero,8d8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008d8c>
    8ea8:	003f6506 	br	8c40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c40>
    8eac:	a809883a 	mov	r4,r21
    8eb0:	00091740 	call	9174 <_realloc_r>
    8eb4:	102f883a 	mov	r23,r2
    8eb8:	103fee1e 	bne	r2,zero,8e74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e74>
    8ebc:	81400417 	ldw	r5,16(r16)
    8ec0:	a809883a 	mov	r4,r21
    8ec4:	000491c0 	call	491c <_free_r>
    8ec8:	8080030b 	ldhu	r2,12(r16)
    8ecc:	00ffdfc4 	movi	r3,-129
    8ed0:	1884703a 	and	r2,r3,r2
    8ed4:	00c00304 	movi	r3,12
    8ed8:	a8c00015 	stw	r3,0(r21)
    8edc:	003f5906 	br	8c44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c44>
    8ee0:	94c00044 	addi	r19,r18,1
    8ee4:	02000044 	movi	r8,1
    8ee8:	003f6006 	br	8c6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c6c>
    8eec:	00bfffc4 	movi	r2,-1
    8ef0:	003f0306 	br	8b00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008b00>
    8ef4:	00800304 	movi	r2,12
    8ef8:	a8800015 	stw	r2,0(r21)
    8efc:	8080030b 	ldhu	r2,12(r16)
    8f00:	003f5006 	br	8c44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c44>

00008f04 <_isatty_r>:
    8f04:	defffd04 	addi	sp,sp,-12
    8f08:	dc000015 	stw	r16,0(sp)
    8f0c:	04000074 	movhi	r16,1
    8f10:	dc400115 	stw	r17,4(sp)
    8f14:	8410c604 	addi	r16,r16,17176
    8f18:	2023883a 	mov	r17,r4
    8f1c:	2809883a 	mov	r4,r5
    8f20:	dfc00215 	stw	ra,8(sp)
    8f24:	80000015 	stw	zero,0(r16)
    8f28:	000d0c40 	call	d0c4 <isatty>
    8f2c:	00ffffc4 	movi	r3,-1
    8f30:	10c00526 	beq	r2,r3,8f48 <_isatty_r+0x44>
    8f34:	dfc00217 	ldw	ra,8(sp)
    8f38:	dc400117 	ldw	r17,4(sp)
    8f3c:	dc000017 	ldw	r16,0(sp)
    8f40:	dec00304 	addi	sp,sp,12
    8f44:	f800283a 	ret
    8f48:	80c00017 	ldw	r3,0(r16)
    8f4c:	183ff926 	beq	r3,zero,8f34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008f34>
    8f50:	88c00015 	stw	r3,0(r17)
    8f54:	003ff706 	br	8f34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008f34>

00008f58 <_lseek_r>:
    8f58:	defffd04 	addi	sp,sp,-12
    8f5c:	2805883a 	mov	r2,r5
    8f60:	dc000015 	stw	r16,0(sp)
    8f64:	04000074 	movhi	r16,1
    8f68:	dc400115 	stw	r17,4(sp)
    8f6c:	300b883a 	mov	r5,r6
    8f70:	8410c604 	addi	r16,r16,17176
    8f74:	2023883a 	mov	r17,r4
    8f78:	380d883a 	mov	r6,r7
    8f7c:	1009883a 	mov	r4,r2
    8f80:	dfc00215 	stw	ra,8(sp)
    8f84:	80000015 	stw	zero,0(r16)
    8f88:	000d2900 	call	d290 <lseek>
    8f8c:	00ffffc4 	movi	r3,-1
    8f90:	10c00526 	beq	r2,r3,8fa8 <_lseek_r+0x50>
    8f94:	dfc00217 	ldw	ra,8(sp)
    8f98:	dc400117 	ldw	r17,4(sp)
    8f9c:	dc000017 	ldw	r16,0(sp)
    8fa0:	dec00304 	addi	sp,sp,12
    8fa4:	f800283a 	ret
    8fa8:	80c00017 	ldw	r3,0(r16)
    8fac:	183ff926 	beq	r3,zero,8f94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008f94>
    8fb0:	88c00015 	stw	r3,0(r17)
    8fb4:	003ff706 	br	8f94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008f94>

00008fb8 <memmove>:
    8fb8:	2005883a 	mov	r2,r4
    8fbc:	29000b2e 	bgeu	r5,r4,8fec <memmove+0x34>
    8fc0:	298f883a 	add	r7,r5,r6
    8fc4:	21c0092e 	bgeu	r4,r7,8fec <memmove+0x34>
    8fc8:	2187883a 	add	r3,r4,r6
    8fcc:	198bc83a 	sub	r5,r3,r6
    8fd0:	30004826 	beq	r6,zero,90f4 <memmove+0x13c>
    8fd4:	39ffffc4 	addi	r7,r7,-1
    8fd8:	39000003 	ldbu	r4,0(r7)
    8fdc:	18ffffc4 	addi	r3,r3,-1
    8fe0:	19000005 	stb	r4,0(r3)
    8fe4:	28fffb1e 	bne	r5,r3,8fd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008fd4>
    8fe8:	f800283a 	ret
    8fec:	00c003c4 	movi	r3,15
    8ff0:	1980412e 	bgeu	r3,r6,90f8 <memmove+0x140>
    8ff4:	2886b03a 	or	r3,r5,r2
    8ff8:	18c000cc 	andi	r3,r3,3
    8ffc:	1800401e 	bne	r3,zero,9100 <memmove+0x148>
    9000:	33fffc04 	addi	r15,r6,-16
    9004:	781ed13a 	srli	r15,r15,4
    9008:	28c00104 	addi	r3,r5,4
    900c:	13400104 	addi	r13,r2,4
    9010:	781c913a 	slli	r14,r15,4
    9014:	2b000204 	addi	r12,r5,8
    9018:	12c00204 	addi	r11,r2,8
    901c:	73800504 	addi	r14,r14,20
    9020:	2a800304 	addi	r10,r5,12
    9024:	12400304 	addi	r9,r2,12
    9028:	2b9d883a 	add	r14,r5,r14
    902c:	2811883a 	mov	r8,r5
    9030:	100f883a 	mov	r7,r2
    9034:	41000017 	ldw	r4,0(r8)
    9038:	39c00404 	addi	r7,r7,16
    903c:	18c00404 	addi	r3,r3,16
    9040:	393ffc15 	stw	r4,-16(r7)
    9044:	193ffc17 	ldw	r4,-16(r3)
    9048:	6b400404 	addi	r13,r13,16
    904c:	5ac00404 	addi	r11,r11,16
    9050:	693ffc15 	stw	r4,-16(r13)
    9054:	61000017 	ldw	r4,0(r12)
    9058:	4a400404 	addi	r9,r9,16
    905c:	42000404 	addi	r8,r8,16
    9060:	593ffc15 	stw	r4,-16(r11)
    9064:	51000017 	ldw	r4,0(r10)
    9068:	63000404 	addi	r12,r12,16
    906c:	52800404 	addi	r10,r10,16
    9070:	493ffc15 	stw	r4,-16(r9)
    9074:	1bbfef1e 	bne	r3,r14,9034 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009034>
    9078:	79000044 	addi	r4,r15,1
    907c:	2008913a 	slli	r4,r4,4
    9080:	328003cc 	andi	r10,r6,15
    9084:	02c000c4 	movi	r11,3
    9088:	1107883a 	add	r3,r2,r4
    908c:	290b883a 	add	r5,r5,r4
    9090:	5a801e2e 	bgeu	r11,r10,910c <memmove+0x154>
    9094:	1813883a 	mov	r9,r3
    9098:	2811883a 	mov	r8,r5
    909c:	500f883a 	mov	r7,r10
    90a0:	41000017 	ldw	r4,0(r8)
    90a4:	4a400104 	addi	r9,r9,4
    90a8:	39ffff04 	addi	r7,r7,-4
    90ac:	493fff15 	stw	r4,-4(r9)
    90b0:	42000104 	addi	r8,r8,4
    90b4:	59fffa36 	bltu	r11,r7,90a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00090a0>
    90b8:	513fff04 	addi	r4,r10,-4
    90bc:	2008d0ba 	srli	r4,r4,2
    90c0:	318000cc 	andi	r6,r6,3
    90c4:	21000044 	addi	r4,r4,1
    90c8:	2109883a 	add	r4,r4,r4
    90cc:	2109883a 	add	r4,r4,r4
    90d0:	1907883a 	add	r3,r3,r4
    90d4:	290b883a 	add	r5,r5,r4
    90d8:	30000b26 	beq	r6,zero,9108 <memmove+0x150>
    90dc:	198d883a 	add	r6,r3,r6
    90e0:	29c00003 	ldbu	r7,0(r5)
    90e4:	18c00044 	addi	r3,r3,1
    90e8:	29400044 	addi	r5,r5,1
    90ec:	19ffffc5 	stb	r7,-1(r3)
    90f0:	19bffb1e 	bne	r3,r6,90e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00090e0>
    90f4:	f800283a 	ret
    90f8:	1007883a 	mov	r3,r2
    90fc:	003ff606 	br	90d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00090d8>
    9100:	1007883a 	mov	r3,r2
    9104:	003ff506 	br	90dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00090dc>
    9108:	f800283a 	ret
    910c:	500d883a 	mov	r6,r10
    9110:	003ff106 	br	90d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00090d8>

00009114 <_read_r>:
    9114:	defffd04 	addi	sp,sp,-12
    9118:	2805883a 	mov	r2,r5
    911c:	dc000015 	stw	r16,0(sp)
    9120:	04000074 	movhi	r16,1
    9124:	dc400115 	stw	r17,4(sp)
    9128:	300b883a 	mov	r5,r6
    912c:	8410c604 	addi	r16,r16,17176
    9130:	2023883a 	mov	r17,r4
    9134:	380d883a 	mov	r6,r7
    9138:	1009883a 	mov	r4,r2
    913c:	dfc00215 	stw	ra,8(sp)
    9140:	80000015 	stw	zero,0(r16)
    9144:	000d4640 	call	d464 <read>
    9148:	00ffffc4 	movi	r3,-1
    914c:	10c00526 	beq	r2,r3,9164 <_read_r+0x50>
    9150:	dfc00217 	ldw	ra,8(sp)
    9154:	dc400117 	ldw	r17,4(sp)
    9158:	dc000017 	ldw	r16,0(sp)
    915c:	dec00304 	addi	sp,sp,12
    9160:	f800283a 	ret
    9164:	80c00017 	ldw	r3,0(r16)
    9168:	183ff926 	beq	r3,zero,9150 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009150>
    916c:	88c00015 	stw	r3,0(r17)
    9170:	003ff706 	br	9150 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009150>

00009174 <_realloc_r>:
    9174:	defff604 	addi	sp,sp,-40
    9178:	dc400115 	stw	r17,4(sp)
    917c:	dfc00915 	stw	ra,36(sp)
    9180:	df000815 	stw	fp,32(sp)
    9184:	ddc00715 	stw	r23,28(sp)
    9188:	dd800615 	stw	r22,24(sp)
    918c:	dd400515 	stw	r21,20(sp)
    9190:	dd000415 	stw	r20,16(sp)
    9194:	dcc00315 	stw	r19,12(sp)
    9198:	dc800215 	stw	r18,8(sp)
    919c:	dc000015 	stw	r16,0(sp)
    91a0:	3023883a 	mov	r17,r6
    91a4:	2800b626 	beq	r5,zero,9480 <_realloc_r+0x30c>
    91a8:	2829883a 	mov	r20,r5
    91ac:	2025883a 	mov	r18,r4
    91b0:	000d3e00 	call	d3e0 <__malloc_lock>
    91b4:	a0ffff17 	ldw	r3,-4(r20)
    91b8:	043fff04 	movi	r16,-4
    91bc:	888002c4 	addi	r2,r17,11
    91c0:	01000584 	movi	r4,22
    91c4:	a57ffe04 	addi	r21,r20,-8
    91c8:	1c20703a 	and	r16,r3,r16
    91cc:	2080332e 	bgeu	r4,r2,929c <_realloc_r+0x128>
    91d0:	05bffe04 	movi	r22,-8
    91d4:	15ac703a 	and	r22,r2,r22
    91d8:	b005883a 	mov	r2,r22
    91dc:	b0005716 	blt	r22,zero,933c <_realloc_r+0x1c8>
    91e0:	b4405636 	bltu	r22,r17,933c <_realloc_r+0x1c8>
    91e4:	8080300e 	bge	r16,r2,92a8 <_realloc_r+0x134>
    91e8:	07000074 	movhi	fp,1
    91ec:	e7034a04 	addi	fp,fp,3368
    91f0:	e2000217 	ldw	r8,8(fp)
    91f4:	ac09883a 	add	r4,r21,r16
    91f8:	22006126 	beq	r4,r8,9380 <_realloc_r+0x20c>
    91fc:	22400117 	ldw	r9,4(r4)
    9200:	01ffff84 	movi	r7,-2
    9204:	49ce703a 	and	r7,r9,r7
    9208:	21cf883a 	add	r7,r4,r7
    920c:	39800117 	ldw	r6,4(r7)
    9210:	3180004c 	andi	r6,r6,1
    9214:	30003e26 	beq	r6,zero,9310 <_realloc_r+0x19c>
    9218:	18c0004c 	andi	r3,r3,1
    921c:	18008126 	beq	r3,zero,9424 <_realloc_r+0x2b0>
    9220:	880b883a 	mov	r5,r17
    9224:	9009883a 	mov	r4,r18
    9228:	000504c0 	call	504c <_malloc_r>
    922c:	1023883a 	mov	r17,r2
    9230:	10011e26 	beq	r2,zero,96ac <_realloc_r+0x538>
    9234:	a0ffff17 	ldw	r3,-4(r20)
    9238:	113ffe04 	addi	r4,r2,-8
    923c:	00bfff84 	movi	r2,-2
    9240:	1884703a 	and	r2,r3,r2
    9244:	a885883a 	add	r2,r21,r2
    9248:	2080ee26 	beq	r4,r2,9604 <_realloc_r+0x490>
    924c:	81bfff04 	addi	r6,r16,-4
    9250:	00800904 	movi	r2,36
    9254:	1180b836 	bltu	r2,r6,9538 <_realloc_r+0x3c4>
    9258:	00c004c4 	movi	r3,19
    925c:	19809536 	bltu	r3,r6,94b4 <_realloc_r+0x340>
    9260:	8805883a 	mov	r2,r17
    9264:	a007883a 	mov	r3,r20
    9268:	19000017 	ldw	r4,0(r3)
    926c:	11000015 	stw	r4,0(r2)
    9270:	19000117 	ldw	r4,4(r3)
    9274:	11000115 	stw	r4,4(r2)
    9278:	18c00217 	ldw	r3,8(r3)
    927c:	10c00215 	stw	r3,8(r2)
    9280:	a00b883a 	mov	r5,r20
    9284:	9009883a 	mov	r4,r18
    9288:	000491c0 	call	491c <_free_r>
    928c:	9009883a 	mov	r4,r18
    9290:	000d4040 	call	d404 <__malloc_unlock>
    9294:	8805883a 	mov	r2,r17
    9298:	00001106 	br	92e0 <_realloc_r+0x16c>
    929c:	00800404 	movi	r2,16
    92a0:	102d883a 	mov	r22,r2
    92a4:	003fce06 	br	91e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00091e0>
    92a8:	a023883a 	mov	r17,r20
    92ac:	858fc83a 	sub	r7,r16,r22
    92b0:	008003c4 	movi	r2,15
    92b4:	18c0004c 	andi	r3,r3,1
    92b8:	11c02436 	bltu	r2,r7,934c <_realloc_r+0x1d8>
    92bc:	1c06b03a 	or	r3,r3,r16
    92c0:	a8c00115 	stw	r3,4(r21)
    92c4:	ac21883a 	add	r16,r21,r16
    92c8:	80800117 	ldw	r2,4(r16)
    92cc:	10800054 	ori	r2,r2,1
    92d0:	80800115 	stw	r2,4(r16)
    92d4:	9009883a 	mov	r4,r18
    92d8:	000d4040 	call	d404 <__malloc_unlock>
    92dc:	8805883a 	mov	r2,r17
    92e0:	dfc00917 	ldw	ra,36(sp)
    92e4:	df000817 	ldw	fp,32(sp)
    92e8:	ddc00717 	ldw	r23,28(sp)
    92ec:	dd800617 	ldw	r22,24(sp)
    92f0:	dd400517 	ldw	r21,20(sp)
    92f4:	dd000417 	ldw	r20,16(sp)
    92f8:	dcc00317 	ldw	r19,12(sp)
    92fc:	dc800217 	ldw	r18,8(sp)
    9300:	dc400117 	ldw	r17,4(sp)
    9304:	dc000017 	ldw	r16,0(sp)
    9308:	dec00a04 	addi	sp,sp,40
    930c:	f800283a 	ret
    9310:	017fff04 	movi	r5,-4
    9314:	494a703a 	and	r5,r9,r5
    9318:	814d883a 	add	r6,r16,r5
    931c:	30801e16 	blt	r6,r2,9398 <_realloc_r+0x224>
    9320:	20800317 	ldw	r2,12(r4)
    9324:	21000217 	ldw	r4,8(r4)
    9328:	a023883a 	mov	r17,r20
    932c:	3021883a 	mov	r16,r6
    9330:	20800315 	stw	r2,12(r4)
    9334:	11000215 	stw	r4,8(r2)
    9338:	003fdc06 	br	92ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092ac>
    933c:	00800304 	movi	r2,12
    9340:	90800015 	stw	r2,0(r18)
    9344:	0005883a 	mov	r2,zero
    9348:	003fe506 	br	92e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092e0>
    934c:	1d86b03a 	or	r3,r3,r22
    9350:	a8c00115 	stw	r3,4(r21)
    9354:	ad8b883a 	add	r5,r21,r22
    9358:	38c00054 	ori	r3,r7,1
    935c:	28c00115 	stw	r3,4(r5)
    9360:	29cf883a 	add	r7,r5,r7
    9364:	38c00117 	ldw	r3,4(r7)
    9368:	29400204 	addi	r5,r5,8
    936c:	9009883a 	mov	r4,r18
    9370:	18800054 	ori	r2,r3,1
    9374:	38800115 	stw	r2,4(r7)
    9378:	000491c0 	call	491c <_free_r>
    937c:	003fd506 	br	92d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092d4>
    9380:	21c00117 	ldw	r7,4(r4)
    9384:	017fff04 	movi	r5,-4
    9388:	b1800404 	addi	r6,r22,16
    938c:	394a703a 	and	r5,r7,r5
    9390:	814f883a 	add	r7,r16,r5
    9394:	39805b0e 	bge	r7,r6,9504 <_realloc_r+0x390>
    9398:	18c0004c 	andi	r3,r3,1
    939c:	183fa01e 	bne	r3,zero,9220 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009220>
    93a0:	a4fffe17 	ldw	r19,-8(r20)
    93a4:	00ffff04 	movi	r3,-4
    93a8:	ace7c83a 	sub	r19,r21,r19
    93ac:	99800117 	ldw	r6,4(r19)
    93b0:	30c6703a 	and	r3,r6,r3
    93b4:	20002026 	beq	r4,zero,9438 <_realloc_r+0x2c4>
    93b8:	80ef883a 	add	r23,r16,r3
    93bc:	b96f883a 	add	r23,r23,r5
    93c0:	22006126 	beq	r4,r8,9548 <_realloc_r+0x3d4>
    93c4:	b8801c16 	blt	r23,r2,9438 <_realloc_r+0x2c4>
    93c8:	20800317 	ldw	r2,12(r4)
    93cc:	20c00217 	ldw	r3,8(r4)
    93d0:	81bfff04 	addi	r6,r16,-4
    93d4:	01000904 	movi	r4,36
    93d8:	18800315 	stw	r2,12(r3)
    93dc:	10c00215 	stw	r3,8(r2)
    93e0:	98c00217 	ldw	r3,8(r19)
    93e4:	98800317 	ldw	r2,12(r19)
    93e8:	9c400204 	addi	r17,r19,8
    93ec:	18800315 	stw	r2,12(r3)
    93f0:	10c00215 	stw	r3,8(r2)
    93f4:	21801b36 	bltu	r4,r6,9464 <_realloc_r+0x2f0>
    93f8:	008004c4 	movi	r2,19
    93fc:	1180362e 	bgeu	r2,r6,94d8 <_realloc_r+0x364>
    9400:	a0800017 	ldw	r2,0(r20)
    9404:	98800215 	stw	r2,8(r19)
    9408:	a0800117 	ldw	r2,4(r20)
    940c:	98800315 	stw	r2,12(r19)
    9410:	008006c4 	movi	r2,27
    9414:	11808136 	bltu	r2,r6,961c <_realloc_r+0x4a8>
    9418:	98800404 	addi	r2,r19,16
    941c:	a5000204 	addi	r20,r20,8
    9420:	00002e06 	br	94dc <_realloc_r+0x368>
    9424:	a4fffe17 	ldw	r19,-8(r20)
    9428:	00ffff04 	movi	r3,-4
    942c:	ace7c83a 	sub	r19,r21,r19
    9430:	99000117 	ldw	r4,4(r19)
    9434:	20c6703a 	and	r3,r4,r3
    9438:	983f7926 	beq	r19,zero,9220 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009220>
    943c:	80ef883a 	add	r23,r16,r3
    9440:	b8bf7716 	blt	r23,r2,9220 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009220>
    9444:	98800317 	ldw	r2,12(r19)
    9448:	98c00217 	ldw	r3,8(r19)
    944c:	81bfff04 	addi	r6,r16,-4
    9450:	01000904 	movi	r4,36
    9454:	18800315 	stw	r2,12(r3)
    9458:	10c00215 	stw	r3,8(r2)
    945c:	9c400204 	addi	r17,r19,8
    9460:	21bfe52e 	bgeu	r4,r6,93f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00093f8>
    9464:	a00b883a 	mov	r5,r20
    9468:	8809883a 	mov	r4,r17
    946c:	0008fb80 	call	8fb8 <memmove>
    9470:	98c00117 	ldw	r3,4(r19)
    9474:	b821883a 	mov	r16,r23
    9478:	982b883a 	mov	r21,r19
    947c:	003f8b06 	br	92ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092ac>
    9480:	300b883a 	mov	r5,r6
    9484:	dfc00917 	ldw	ra,36(sp)
    9488:	df000817 	ldw	fp,32(sp)
    948c:	ddc00717 	ldw	r23,28(sp)
    9490:	dd800617 	ldw	r22,24(sp)
    9494:	dd400517 	ldw	r21,20(sp)
    9498:	dd000417 	ldw	r20,16(sp)
    949c:	dcc00317 	ldw	r19,12(sp)
    94a0:	dc800217 	ldw	r18,8(sp)
    94a4:	dc400117 	ldw	r17,4(sp)
    94a8:	dc000017 	ldw	r16,0(sp)
    94ac:	dec00a04 	addi	sp,sp,40
    94b0:	000504c1 	jmpi	504c <_malloc_r>
    94b4:	a0c00017 	ldw	r3,0(r20)
    94b8:	88c00015 	stw	r3,0(r17)
    94bc:	a0c00117 	ldw	r3,4(r20)
    94c0:	88c00115 	stw	r3,4(r17)
    94c4:	00c006c4 	movi	r3,27
    94c8:	19804636 	bltu	r3,r6,95e4 <_realloc_r+0x470>
    94cc:	88800204 	addi	r2,r17,8
    94d0:	a0c00204 	addi	r3,r20,8
    94d4:	003f6406 	br	9268 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009268>
    94d8:	8805883a 	mov	r2,r17
    94dc:	a0c00017 	ldw	r3,0(r20)
    94e0:	b821883a 	mov	r16,r23
    94e4:	982b883a 	mov	r21,r19
    94e8:	10c00015 	stw	r3,0(r2)
    94ec:	a0c00117 	ldw	r3,4(r20)
    94f0:	10c00115 	stw	r3,4(r2)
    94f4:	a0c00217 	ldw	r3,8(r20)
    94f8:	10c00215 	stw	r3,8(r2)
    94fc:	98c00117 	ldw	r3,4(r19)
    9500:	003f6a06 	br	92ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092ac>
    9504:	adab883a 	add	r21,r21,r22
    9508:	3d85c83a 	sub	r2,r7,r22
    950c:	e5400215 	stw	r21,8(fp)
    9510:	10800054 	ori	r2,r2,1
    9514:	a8800115 	stw	r2,4(r21)
    9518:	a0bfff17 	ldw	r2,-4(r20)
    951c:	9009883a 	mov	r4,r18
    9520:	1080004c 	andi	r2,r2,1
    9524:	1584b03a 	or	r2,r2,r22
    9528:	a0bfff15 	stw	r2,-4(r20)
    952c:	000d4040 	call	d404 <__malloc_unlock>
    9530:	a005883a 	mov	r2,r20
    9534:	003f6a06 	br	92e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092e0>
    9538:	a00b883a 	mov	r5,r20
    953c:	8809883a 	mov	r4,r17
    9540:	0008fb80 	call	8fb8 <memmove>
    9544:	003f4e06 	br	9280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009280>
    9548:	b1000404 	addi	r4,r22,16
    954c:	b93fba16 	blt	r23,r4,9438 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009438>
    9550:	98800317 	ldw	r2,12(r19)
    9554:	98c00217 	ldw	r3,8(r19)
    9558:	81bfff04 	addi	r6,r16,-4
    955c:	01000904 	movi	r4,36
    9560:	18800315 	stw	r2,12(r3)
    9564:	10c00215 	stw	r3,8(r2)
    9568:	9c400204 	addi	r17,r19,8
    956c:	21804336 	bltu	r4,r6,967c <_realloc_r+0x508>
    9570:	008004c4 	movi	r2,19
    9574:	11803f2e 	bgeu	r2,r6,9674 <_realloc_r+0x500>
    9578:	a0800017 	ldw	r2,0(r20)
    957c:	98800215 	stw	r2,8(r19)
    9580:	a0800117 	ldw	r2,4(r20)
    9584:	98800315 	stw	r2,12(r19)
    9588:	008006c4 	movi	r2,27
    958c:	11803f36 	bltu	r2,r6,968c <_realloc_r+0x518>
    9590:	98800404 	addi	r2,r19,16
    9594:	a5000204 	addi	r20,r20,8
    9598:	a0c00017 	ldw	r3,0(r20)
    959c:	10c00015 	stw	r3,0(r2)
    95a0:	a0c00117 	ldw	r3,4(r20)
    95a4:	10c00115 	stw	r3,4(r2)
    95a8:	a0c00217 	ldw	r3,8(r20)
    95ac:	10c00215 	stw	r3,8(r2)
    95b0:	9d87883a 	add	r3,r19,r22
    95b4:	bd85c83a 	sub	r2,r23,r22
    95b8:	e0c00215 	stw	r3,8(fp)
    95bc:	10800054 	ori	r2,r2,1
    95c0:	18800115 	stw	r2,4(r3)
    95c4:	98800117 	ldw	r2,4(r19)
    95c8:	9009883a 	mov	r4,r18
    95cc:	1080004c 	andi	r2,r2,1
    95d0:	1584b03a 	or	r2,r2,r22
    95d4:	98800115 	stw	r2,4(r19)
    95d8:	000d4040 	call	d404 <__malloc_unlock>
    95dc:	8805883a 	mov	r2,r17
    95e0:	003f3f06 	br	92e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092e0>
    95e4:	a0c00217 	ldw	r3,8(r20)
    95e8:	88c00215 	stw	r3,8(r17)
    95ec:	a0c00317 	ldw	r3,12(r20)
    95f0:	88c00315 	stw	r3,12(r17)
    95f4:	30801126 	beq	r6,r2,963c <_realloc_r+0x4c8>
    95f8:	88800404 	addi	r2,r17,16
    95fc:	a0c00404 	addi	r3,r20,16
    9600:	003f1906 	br	9268 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009268>
    9604:	893fff17 	ldw	r4,-4(r17)
    9608:	00bfff04 	movi	r2,-4
    960c:	a023883a 	mov	r17,r20
    9610:	2084703a 	and	r2,r4,r2
    9614:	80a1883a 	add	r16,r16,r2
    9618:	003f2406 	br	92ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092ac>
    961c:	a0800217 	ldw	r2,8(r20)
    9620:	98800415 	stw	r2,16(r19)
    9624:	a0800317 	ldw	r2,12(r20)
    9628:	98800515 	stw	r2,20(r19)
    962c:	31000a26 	beq	r6,r4,9658 <_realloc_r+0x4e4>
    9630:	98800604 	addi	r2,r19,24
    9634:	a5000404 	addi	r20,r20,16
    9638:	003fa806 	br	94dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00094dc>
    963c:	a1000417 	ldw	r4,16(r20)
    9640:	88800604 	addi	r2,r17,24
    9644:	a0c00604 	addi	r3,r20,24
    9648:	89000415 	stw	r4,16(r17)
    964c:	a1000517 	ldw	r4,20(r20)
    9650:	89000515 	stw	r4,20(r17)
    9654:	003f0406 	br	9268 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009268>
    9658:	a0c00417 	ldw	r3,16(r20)
    965c:	a5000604 	addi	r20,r20,24
    9660:	98800804 	addi	r2,r19,32
    9664:	98c00615 	stw	r3,24(r19)
    9668:	a0ffff17 	ldw	r3,-4(r20)
    966c:	98c00715 	stw	r3,28(r19)
    9670:	003f9a06 	br	94dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00094dc>
    9674:	8805883a 	mov	r2,r17
    9678:	003fc706 	br	9598 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009598>
    967c:	a00b883a 	mov	r5,r20
    9680:	8809883a 	mov	r4,r17
    9684:	0008fb80 	call	8fb8 <memmove>
    9688:	003fc906 	br	95b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00095b0>
    968c:	a0800217 	ldw	r2,8(r20)
    9690:	98800415 	stw	r2,16(r19)
    9694:	a0800317 	ldw	r2,12(r20)
    9698:	98800515 	stw	r2,20(r19)
    969c:	31000726 	beq	r6,r4,96bc <_realloc_r+0x548>
    96a0:	98800604 	addi	r2,r19,24
    96a4:	a5000404 	addi	r20,r20,16
    96a8:	003fbb06 	br	9598 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009598>
    96ac:	9009883a 	mov	r4,r18
    96b0:	000d4040 	call	d404 <__malloc_unlock>
    96b4:	0005883a 	mov	r2,zero
    96b8:	003f0906 	br	92e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00092e0>
    96bc:	a0c00417 	ldw	r3,16(r20)
    96c0:	a5000604 	addi	r20,r20,24
    96c4:	98800804 	addi	r2,r19,32
    96c8:	98c00615 	stw	r3,24(r19)
    96cc:	a0ffff17 	ldw	r3,-4(r20)
    96d0:	98c00715 	stw	r3,28(r19)
    96d4:	003fb006 	br	9598 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009598>

000096d8 <__swbuf_r>:
    96d8:	defffb04 	addi	sp,sp,-20
    96dc:	dcc00315 	stw	r19,12(sp)
    96e0:	dc800215 	stw	r18,8(sp)
    96e4:	dc000015 	stw	r16,0(sp)
    96e8:	dfc00415 	stw	ra,16(sp)
    96ec:	dc400115 	stw	r17,4(sp)
    96f0:	2025883a 	mov	r18,r4
    96f4:	2827883a 	mov	r19,r5
    96f8:	3021883a 	mov	r16,r6
    96fc:	20000226 	beq	r4,zero,9708 <__swbuf_r+0x30>
    9700:	20800e17 	ldw	r2,56(r4)
    9704:	10004226 	beq	r2,zero,9810 <__swbuf_r+0x138>
    9708:	80800617 	ldw	r2,24(r16)
    970c:	8100030b 	ldhu	r4,12(r16)
    9710:	80800215 	stw	r2,8(r16)
    9714:	2080020c 	andi	r2,r4,8
    9718:	10003626 	beq	r2,zero,97f4 <__swbuf_r+0x11c>
    971c:	80c00417 	ldw	r3,16(r16)
    9720:	18003426 	beq	r3,zero,97f4 <__swbuf_r+0x11c>
    9724:	2088000c 	andi	r2,r4,8192
    9728:	9c403fcc 	andi	r17,r19,255
    972c:	10001a26 	beq	r2,zero,9798 <__swbuf_r+0xc0>
    9730:	80800017 	ldw	r2,0(r16)
    9734:	81000517 	ldw	r4,20(r16)
    9738:	10c7c83a 	sub	r3,r2,r3
    973c:	1900200e 	bge	r3,r4,97c0 <__swbuf_r+0xe8>
    9740:	18c00044 	addi	r3,r3,1
    9744:	81000217 	ldw	r4,8(r16)
    9748:	11400044 	addi	r5,r2,1
    974c:	81400015 	stw	r5,0(r16)
    9750:	213fffc4 	addi	r4,r4,-1
    9754:	81000215 	stw	r4,8(r16)
    9758:	14c00005 	stb	r19,0(r2)
    975c:	80800517 	ldw	r2,20(r16)
    9760:	10c01e26 	beq	r2,r3,97dc <__swbuf_r+0x104>
    9764:	8080030b 	ldhu	r2,12(r16)
    9768:	1080004c 	andi	r2,r2,1
    976c:	10000226 	beq	r2,zero,9778 <__swbuf_r+0xa0>
    9770:	00800284 	movi	r2,10
    9774:	88801926 	beq	r17,r2,97dc <__swbuf_r+0x104>
    9778:	8805883a 	mov	r2,r17
    977c:	dfc00417 	ldw	ra,16(sp)
    9780:	dcc00317 	ldw	r19,12(sp)
    9784:	dc800217 	ldw	r18,8(sp)
    9788:	dc400117 	ldw	r17,4(sp)
    978c:	dc000017 	ldw	r16,0(sp)
    9790:	dec00504 	addi	sp,sp,20
    9794:	f800283a 	ret
    9798:	81401917 	ldw	r5,100(r16)
    979c:	00b7ffc4 	movi	r2,-8193
    97a0:	21080014 	ori	r4,r4,8192
    97a4:	2884703a 	and	r2,r5,r2
    97a8:	80801915 	stw	r2,100(r16)
    97ac:	80800017 	ldw	r2,0(r16)
    97b0:	8100030d 	sth	r4,12(r16)
    97b4:	81000517 	ldw	r4,20(r16)
    97b8:	10c7c83a 	sub	r3,r2,r3
    97bc:	193fe016 	blt	r3,r4,9740 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009740>
    97c0:	800b883a 	mov	r5,r16
    97c4:	9009883a 	mov	r4,r18
    97c8:	00043cc0 	call	43cc <_fflush_r>
    97cc:	1000071e 	bne	r2,zero,97ec <__swbuf_r+0x114>
    97d0:	80800017 	ldw	r2,0(r16)
    97d4:	00c00044 	movi	r3,1
    97d8:	003fda06 	br	9744 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009744>
    97dc:	800b883a 	mov	r5,r16
    97e0:	9009883a 	mov	r4,r18
    97e4:	00043cc0 	call	43cc <_fflush_r>
    97e8:	103fe326 	beq	r2,zero,9778 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009778>
    97ec:	00bfffc4 	movi	r2,-1
    97f0:	003fe206 	br	977c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000977c>
    97f4:	800b883a 	mov	r5,r16
    97f8:	9009883a 	mov	r4,r18
    97fc:	00027d40 	call	27d4 <__swsetup_r>
    9800:	103ffa1e 	bne	r2,zero,97ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00097ec>
    9804:	8100030b 	ldhu	r4,12(r16)
    9808:	80c00417 	ldw	r3,16(r16)
    980c:	003fc506 	br	9724 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009724>
    9810:	00047a80 	call	47a8 <__sinit>
    9814:	003fbc06 	br	9708 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009708>

00009818 <__swbuf>:
    9818:	00800074 	movhi	r2,1
    981c:	10896104 	addi	r2,r2,9604
    9820:	280d883a 	mov	r6,r5
    9824:	200b883a 	mov	r5,r4
    9828:	11000017 	ldw	r4,0(r2)
    982c:	00096d81 	jmpi	96d8 <__swbuf_r>

00009830 <_wcrtomb_r>:
    9830:	defff604 	addi	sp,sp,-40
    9834:	00800074 	movhi	r2,1
    9838:	dc800815 	stw	r18,32(sp)
    983c:	dc400715 	stw	r17,28(sp)
    9840:	dc000615 	stw	r16,24(sp)
    9844:	10896504 	addi	r2,r2,9620
    9848:	dfc00915 	stw	ra,36(sp)
    984c:	2021883a 	mov	r16,r4
    9850:	3823883a 	mov	r17,r7
    9854:	14800017 	ldw	r18,0(r2)
    9858:	28001426 	beq	r5,zero,98ac <_wcrtomb_r+0x7c>
    985c:	d9400415 	stw	r5,16(sp)
    9860:	d9800515 	stw	r6,20(sp)
    9864:	0004e300 	call	4e30 <__locale_charset>
    9868:	d9800517 	ldw	r6,20(sp)
    986c:	d9400417 	ldw	r5,16(sp)
    9870:	100f883a 	mov	r7,r2
    9874:	dc400015 	stw	r17,0(sp)
    9878:	8009883a 	mov	r4,r16
    987c:	903ee83a 	callr	r18
    9880:	00ffffc4 	movi	r3,-1
    9884:	10c0031e 	bne	r2,r3,9894 <_wcrtomb_r+0x64>
    9888:	88000015 	stw	zero,0(r17)
    988c:	00c02284 	movi	r3,138
    9890:	80c00015 	stw	r3,0(r16)
    9894:	dfc00917 	ldw	ra,36(sp)
    9898:	dc800817 	ldw	r18,32(sp)
    989c:	dc400717 	ldw	r17,28(sp)
    98a0:	dc000617 	ldw	r16,24(sp)
    98a4:	dec00a04 	addi	sp,sp,40
    98a8:	f800283a 	ret
    98ac:	0004e300 	call	4e30 <__locale_charset>
    98b0:	100f883a 	mov	r7,r2
    98b4:	dc400015 	stw	r17,0(sp)
    98b8:	000d883a 	mov	r6,zero
    98bc:	d9400104 	addi	r5,sp,4
    98c0:	8009883a 	mov	r4,r16
    98c4:	903ee83a 	callr	r18
    98c8:	003fed06 	br	9880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009880>

000098cc <wcrtomb>:
    98cc:	defff604 	addi	sp,sp,-40
    98d0:	00800074 	movhi	r2,1
    98d4:	dc800615 	stw	r18,24(sp)
    98d8:	dc400515 	stw	r17,20(sp)
    98dc:	10896104 	addi	r2,r2,9604
    98e0:	dfc00915 	stw	ra,36(sp)
    98e4:	dd000815 	stw	r20,32(sp)
    98e8:	dcc00715 	stw	r19,28(sp)
    98ec:	dc000415 	stw	r16,16(sp)
    98f0:	3025883a 	mov	r18,r6
    98f4:	14400017 	ldw	r17,0(r2)
    98f8:	20001926 	beq	r4,zero,9960 <wcrtomb+0x94>
    98fc:	00800074 	movhi	r2,1
    9900:	10896504 	addi	r2,r2,9620
    9904:	15000017 	ldw	r20,0(r2)
    9908:	2021883a 	mov	r16,r4
    990c:	2827883a 	mov	r19,r5
    9910:	0004e300 	call	4e30 <__locale_charset>
    9914:	100f883a 	mov	r7,r2
    9918:	dc800015 	stw	r18,0(sp)
    991c:	980d883a 	mov	r6,r19
    9920:	800b883a 	mov	r5,r16
    9924:	8809883a 	mov	r4,r17
    9928:	a03ee83a 	callr	r20
    992c:	00ffffc4 	movi	r3,-1
    9930:	10c0031e 	bne	r2,r3,9940 <wcrtomb+0x74>
    9934:	90000015 	stw	zero,0(r18)
    9938:	00c02284 	movi	r3,138
    993c:	88c00015 	stw	r3,0(r17)
    9940:	dfc00917 	ldw	ra,36(sp)
    9944:	dd000817 	ldw	r20,32(sp)
    9948:	dcc00717 	ldw	r19,28(sp)
    994c:	dc800617 	ldw	r18,24(sp)
    9950:	dc400517 	ldw	r17,20(sp)
    9954:	dc000417 	ldw	r16,16(sp)
    9958:	dec00a04 	addi	sp,sp,40
    995c:	f800283a 	ret
    9960:	00800074 	movhi	r2,1
    9964:	10896504 	addi	r2,r2,9620
    9968:	14000017 	ldw	r16,0(r2)
    996c:	0004e300 	call	4e30 <__locale_charset>
    9970:	100f883a 	mov	r7,r2
    9974:	dc800015 	stw	r18,0(sp)
    9978:	000d883a 	mov	r6,zero
    997c:	d9400104 	addi	r5,sp,4
    9980:	8809883a 	mov	r4,r17
    9984:	803ee83a 	callr	r16
    9988:	003fe806 	br	992c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000992c>

0000998c <__ascii_wctomb>:
    998c:	28000526 	beq	r5,zero,99a4 <__ascii_wctomb+0x18>
    9990:	00803fc4 	movi	r2,255
    9994:	11800536 	bltu	r2,r6,99ac <__ascii_wctomb+0x20>
    9998:	29800005 	stb	r6,0(r5)
    999c:	00800044 	movi	r2,1
    99a0:	f800283a 	ret
    99a4:	0005883a 	mov	r2,zero
    99a8:	f800283a 	ret
    99ac:	00802284 	movi	r2,138
    99b0:	20800015 	stw	r2,0(r4)
    99b4:	00bfffc4 	movi	r2,-1
    99b8:	f800283a 	ret

000099bc <_wctomb_r>:
    99bc:	00800074 	movhi	r2,1
    99c0:	defff904 	addi	sp,sp,-28
    99c4:	10896504 	addi	r2,r2,9620
    99c8:	dfc00615 	stw	ra,24(sp)
    99cc:	dc400515 	stw	r17,20(sp)
    99d0:	dc000415 	stw	r16,16(sp)
    99d4:	3823883a 	mov	r17,r7
    99d8:	14000017 	ldw	r16,0(r2)
    99dc:	d9000115 	stw	r4,4(sp)
    99e0:	d9400215 	stw	r5,8(sp)
    99e4:	d9800315 	stw	r6,12(sp)
    99e8:	0004e300 	call	4e30 <__locale_charset>
    99ec:	d9800317 	ldw	r6,12(sp)
    99f0:	d9400217 	ldw	r5,8(sp)
    99f4:	d9000117 	ldw	r4,4(sp)
    99f8:	100f883a 	mov	r7,r2
    99fc:	dc400015 	stw	r17,0(sp)
    9a00:	803ee83a 	callr	r16
    9a04:	dfc00617 	ldw	ra,24(sp)
    9a08:	dc400517 	ldw	r17,20(sp)
    9a0c:	dc000417 	ldw	r16,16(sp)
    9a10:	dec00704 	addi	sp,sp,28
    9a14:	f800283a 	ret

00009a18 <__udivdi3>:
    9a18:	defff504 	addi	sp,sp,-44
    9a1c:	dcc00415 	stw	r19,16(sp)
    9a20:	dc000115 	stw	r16,4(sp)
    9a24:	dfc00a15 	stw	ra,40(sp)
    9a28:	df000915 	stw	fp,36(sp)
    9a2c:	ddc00815 	stw	r23,32(sp)
    9a30:	dd800715 	stw	r22,28(sp)
    9a34:	dd400615 	stw	r21,24(sp)
    9a38:	dd000515 	stw	r20,20(sp)
    9a3c:	dc800315 	stw	r18,12(sp)
    9a40:	dc400215 	stw	r17,8(sp)
    9a44:	2027883a 	mov	r19,r4
    9a48:	2821883a 	mov	r16,r5
    9a4c:	3800411e 	bne	r7,zero,9b54 <__udivdi3+0x13c>
    9a50:	3023883a 	mov	r17,r6
    9a54:	2025883a 	mov	r18,r4
    9a58:	2980522e 	bgeu	r5,r6,9ba4 <__udivdi3+0x18c>
    9a5c:	00bfffd4 	movui	r2,65535
    9a60:	282d883a 	mov	r22,r5
    9a64:	1180a836 	bltu	r2,r6,9d08 <__udivdi3+0x2f0>
    9a68:	00803fc4 	movi	r2,255
    9a6c:	1185803a 	cmpltu	r2,r2,r6
    9a70:	100490fa 	slli	r2,r2,3
    9a74:	3086d83a 	srl	r3,r6,r2
    9a78:	01000074 	movhi	r4,1
    9a7c:	21019e04 	addi	r4,r4,1656
    9a80:	20c7883a 	add	r3,r4,r3
    9a84:	18c00003 	ldbu	r3,0(r3)
    9a88:	1885883a 	add	r2,r3,r2
    9a8c:	00c00804 	movi	r3,32
    9a90:	1887c83a 	sub	r3,r3,r2
    9a94:	18000526 	beq	r3,zero,9aac <__udivdi3+0x94>
    9a98:	80e0983a 	sll	r16,r16,r3
    9a9c:	9884d83a 	srl	r2,r19,r2
    9aa0:	30e2983a 	sll	r17,r6,r3
    9aa4:	98e4983a 	sll	r18,r19,r3
    9aa8:	142cb03a 	or	r22,r2,r16
    9aac:	882ad43a 	srli	r21,r17,16
    9ab0:	b009883a 	mov	r4,r22
    9ab4:	8d3fffcc 	andi	r20,r17,65535
    9ab8:	a80b883a 	mov	r5,r21
    9abc:	000a6240 	call	a624 <__umodsi3>
    9ac0:	b009883a 	mov	r4,r22
    9ac4:	a80b883a 	mov	r5,r21
    9ac8:	1027883a 	mov	r19,r2
    9acc:	000a5c00 	call	a5c0 <__udivsi3>
    9ad0:	102d883a 	mov	r22,r2
    9ad4:	9826943a 	slli	r19,r19,16
    9ad8:	9004d43a 	srli	r2,r18,16
    9adc:	a5a1383a 	mul	r16,r20,r22
    9ae0:	14c4b03a 	or	r2,r2,r19
    9ae4:	1400052e 	bgeu	r2,r16,9afc <__udivdi3+0xe4>
    9ae8:	1445883a 	add	r2,r2,r17
    9aec:	b0ffffc4 	addi	r3,r22,-1
    9af0:	14400136 	bltu	r2,r17,9af8 <__udivdi3+0xe0>
    9af4:	14012336 	bltu	r2,r16,9f84 <__udivdi3+0x56c>
    9af8:	182d883a 	mov	r22,r3
    9afc:	1421c83a 	sub	r16,r2,r16
    9b00:	a80b883a 	mov	r5,r21
    9b04:	8009883a 	mov	r4,r16
    9b08:	000a6240 	call	a624 <__umodsi3>
    9b0c:	1027883a 	mov	r19,r2
    9b10:	a80b883a 	mov	r5,r21
    9b14:	8009883a 	mov	r4,r16
    9b18:	000a5c00 	call	a5c0 <__udivsi3>
    9b1c:	9826943a 	slli	r19,r19,16
    9b20:	a0a9383a 	mul	r20,r20,r2
    9b24:	94bfffcc 	andi	r18,r18,65535
    9b28:	94e4b03a 	or	r18,r18,r19
    9b2c:	9500052e 	bgeu	r18,r20,9b44 <__udivdi3+0x12c>
    9b30:	8ca5883a 	add	r18,r17,r18
    9b34:	10ffffc4 	addi	r3,r2,-1
    9b38:	9440f136 	bltu	r18,r17,9f00 <__udivdi3+0x4e8>
    9b3c:	9500f02e 	bgeu	r18,r20,9f00 <__udivdi3+0x4e8>
    9b40:	10bfff84 	addi	r2,r2,-2
    9b44:	b00c943a 	slli	r6,r22,16
    9b48:	0007883a 	mov	r3,zero
    9b4c:	3084b03a 	or	r2,r6,r2
    9b50:	00005906 	br	9cb8 <__udivdi3+0x2a0>
    9b54:	29c05636 	bltu	r5,r7,9cb0 <__udivdi3+0x298>
    9b58:	00bfffd4 	movui	r2,65535
    9b5c:	11c0622e 	bgeu	r2,r7,9ce8 <__udivdi3+0x2d0>
    9b60:	00804034 	movhi	r2,256
    9b64:	10bfffc4 	addi	r2,r2,-1
    9b68:	11c0ee36 	bltu	r2,r7,9f24 <__udivdi3+0x50c>
    9b6c:	00800404 	movi	r2,16
    9b70:	3886d83a 	srl	r3,r7,r2
    9b74:	01000074 	movhi	r4,1
    9b78:	21019e04 	addi	r4,r4,1656
    9b7c:	20c7883a 	add	r3,r4,r3
    9b80:	18c00003 	ldbu	r3,0(r3)
    9b84:	05400804 	movi	r21,32
    9b88:	1885883a 	add	r2,r3,r2
    9b8c:	a8abc83a 	sub	r21,r21,r2
    9b90:	a800621e 	bne	r21,zero,9d1c <__udivdi3+0x304>
    9b94:	3c00e936 	bltu	r7,r16,9f3c <__udivdi3+0x524>
    9b98:	9985403a 	cmpgeu	r2,r19,r6
    9b9c:	0007883a 	mov	r3,zero
    9ba0:	00004506 	br	9cb8 <__udivdi3+0x2a0>
    9ba4:	3000041e 	bne	r6,zero,9bb8 <__udivdi3+0x1a0>
    9ba8:	000b883a 	mov	r5,zero
    9bac:	01000044 	movi	r4,1
    9bb0:	000a5c00 	call	a5c0 <__udivsi3>
    9bb4:	1023883a 	mov	r17,r2
    9bb8:	00bfffd4 	movui	r2,65535
    9bbc:	14404e2e 	bgeu	r2,r17,9cf8 <__udivdi3+0x2e0>
    9bc0:	00804034 	movhi	r2,256
    9bc4:	10bfffc4 	addi	r2,r2,-1
    9bc8:	1440d836 	bltu	r2,r17,9f2c <__udivdi3+0x514>
    9bcc:	00800404 	movi	r2,16
    9bd0:	8886d83a 	srl	r3,r17,r2
    9bd4:	01000074 	movhi	r4,1
    9bd8:	21019e04 	addi	r4,r4,1656
    9bdc:	20c7883a 	add	r3,r4,r3
    9be0:	18c00003 	ldbu	r3,0(r3)
    9be4:	1885883a 	add	r2,r3,r2
    9be8:	00c00804 	movi	r3,32
    9bec:	1887c83a 	sub	r3,r3,r2
    9bf0:	18008f1e 	bne	r3,zero,9e30 <__udivdi3+0x418>
    9bf4:	882ad43a 	srli	r21,r17,16
    9bf8:	8461c83a 	sub	r16,r16,r17
    9bfc:	8d3fffcc 	andi	r20,r17,65535
    9c00:	00c00044 	movi	r3,1
    9c04:	8009883a 	mov	r4,r16
    9c08:	a80b883a 	mov	r5,r21
    9c0c:	d8c00015 	stw	r3,0(sp)
    9c10:	000a6240 	call	a624 <__umodsi3>
    9c14:	8009883a 	mov	r4,r16
    9c18:	a80b883a 	mov	r5,r21
    9c1c:	1027883a 	mov	r19,r2
    9c20:	000a5c00 	call	a5c0 <__udivsi3>
    9c24:	9826943a 	slli	r19,r19,16
    9c28:	9008d43a 	srli	r4,r18,16
    9c2c:	1521383a 	mul	r16,r2,r20
    9c30:	102d883a 	mov	r22,r2
    9c34:	24c8b03a 	or	r4,r4,r19
    9c38:	d8c00017 	ldw	r3,0(sp)
    9c3c:	2400052e 	bgeu	r4,r16,9c54 <__udivdi3+0x23c>
    9c40:	2449883a 	add	r4,r4,r17
    9c44:	b0bfffc4 	addi	r2,r22,-1
    9c48:	24400136 	bltu	r4,r17,9c50 <__udivdi3+0x238>
    9c4c:	2400ca36 	bltu	r4,r16,9f78 <__udivdi3+0x560>
    9c50:	102d883a 	mov	r22,r2
    9c54:	2421c83a 	sub	r16,r4,r16
    9c58:	a80b883a 	mov	r5,r21
    9c5c:	8009883a 	mov	r4,r16
    9c60:	d8c00015 	stw	r3,0(sp)
    9c64:	000a6240 	call	a624 <__umodsi3>
    9c68:	1027883a 	mov	r19,r2
    9c6c:	a80b883a 	mov	r5,r21
    9c70:	8009883a 	mov	r4,r16
    9c74:	000a5c00 	call	a5c0 <__udivsi3>
    9c78:	9826943a 	slli	r19,r19,16
    9c7c:	1529383a 	mul	r20,r2,r20
    9c80:	94bfffcc 	andi	r18,r18,65535
    9c84:	94e4b03a 	or	r18,r18,r19
    9c88:	d8c00017 	ldw	r3,0(sp)
    9c8c:	9500052e 	bgeu	r18,r20,9ca4 <__udivdi3+0x28c>
    9c90:	8ca5883a 	add	r18,r17,r18
    9c94:	113fffc4 	addi	r4,r2,-1
    9c98:	94409736 	bltu	r18,r17,9ef8 <__udivdi3+0x4e0>
    9c9c:	9500962e 	bgeu	r18,r20,9ef8 <__udivdi3+0x4e0>
    9ca0:	10bfff84 	addi	r2,r2,-2
    9ca4:	b00c943a 	slli	r6,r22,16
    9ca8:	3084b03a 	or	r2,r6,r2
    9cac:	00000206 	br	9cb8 <__udivdi3+0x2a0>
    9cb0:	0007883a 	mov	r3,zero
    9cb4:	0005883a 	mov	r2,zero
    9cb8:	dfc00a17 	ldw	ra,40(sp)
    9cbc:	df000917 	ldw	fp,36(sp)
    9cc0:	ddc00817 	ldw	r23,32(sp)
    9cc4:	dd800717 	ldw	r22,28(sp)
    9cc8:	dd400617 	ldw	r21,24(sp)
    9ccc:	dd000517 	ldw	r20,20(sp)
    9cd0:	dcc00417 	ldw	r19,16(sp)
    9cd4:	dc800317 	ldw	r18,12(sp)
    9cd8:	dc400217 	ldw	r17,8(sp)
    9cdc:	dc000117 	ldw	r16,4(sp)
    9ce0:	dec00b04 	addi	sp,sp,44
    9ce4:	f800283a 	ret
    9ce8:	00803fc4 	movi	r2,255
    9cec:	11c5803a 	cmpltu	r2,r2,r7
    9cf0:	100490fa 	slli	r2,r2,3
    9cf4:	003f9e06 	br	9b70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b70>
    9cf8:	00803fc4 	movi	r2,255
    9cfc:	1445803a 	cmpltu	r2,r2,r17
    9d00:	100490fa 	slli	r2,r2,3
    9d04:	003fb206 	br	9bd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009bd0>
    9d08:	00804034 	movhi	r2,256
    9d0c:	10bfffc4 	addi	r2,r2,-1
    9d10:	11808836 	bltu	r2,r6,9f34 <__udivdi3+0x51c>
    9d14:	00800404 	movi	r2,16
    9d18:	003f5606 	br	9a74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009a74>
    9d1c:	30aed83a 	srl	r23,r6,r2
    9d20:	3d4e983a 	sll	r7,r7,r21
    9d24:	80acd83a 	srl	r22,r16,r2
    9d28:	9884d83a 	srl	r2,r19,r2
    9d2c:	3deeb03a 	or	r23,r7,r23
    9d30:	b824d43a 	srli	r18,r23,16
    9d34:	8560983a 	sll	r16,r16,r21
    9d38:	b009883a 	mov	r4,r22
    9d3c:	900b883a 	mov	r5,r18
    9d40:	3568983a 	sll	r20,r6,r21
    9d44:	1420b03a 	or	r16,r2,r16
    9d48:	000a6240 	call	a624 <__umodsi3>
    9d4c:	b009883a 	mov	r4,r22
    9d50:	900b883a 	mov	r5,r18
    9d54:	1023883a 	mov	r17,r2
    9d58:	000a5c00 	call	a5c0 <__udivsi3>
    9d5c:	8808943a 	slli	r4,r17,16
    9d60:	bf3fffcc 	andi	fp,r23,65535
    9d64:	8006d43a 	srli	r3,r16,16
    9d68:	e0a3383a 	mul	r17,fp,r2
    9d6c:	100d883a 	mov	r6,r2
    9d70:	1906b03a 	or	r3,r3,r4
    9d74:	1c40042e 	bgeu	r3,r17,9d88 <__udivdi3+0x370>
    9d78:	1dc7883a 	add	r3,r3,r23
    9d7c:	10bfffc4 	addi	r2,r2,-1
    9d80:	1dc0752e 	bgeu	r3,r23,9f58 <__udivdi3+0x540>
    9d84:	100d883a 	mov	r6,r2
    9d88:	1c63c83a 	sub	r17,r3,r17
    9d8c:	900b883a 	mov	r5,r18
    9d90:	8809883a 	mov	r4,r17
    9d94:	d9800015 	stw	r6,0(sp)
    9d98:	000a6240 	call	a624 <__umodsi3>
    9d9c:	102d883a 	mov	r22,r2
    9da0:	8809883a 	mov	r4,r17
    9da4:	900b883a 	mov	r5,r18
    9da8:	000a5c00 	call	a5c0 <__udivsi3>
    9dac:	b02c943a 	slli	r22,r22,16
    9db0:	e089383a 	mul	r4,fp,r2
    9db4:	843fffcc 	andi	r16,r16,65535
    9db8:	85a0b03a 	or	r16,r16,r22
    9dbc:	d9800017 	ldw	r6,0(sp)
    9dc0:	8100042e 	bgeu	r16,r4,9dd4 <__udivdi3+0x3bc>
    9dc4:	85e1883a 	add	r16,r16,r23
    9dc8:	10ffffc4 	addi	r3,r2,-1
    9dcc:	85c05e2e 	bgeu	r16,r23,9f48 <__udivdi3+0x530>
    9dd0:	1805883a 	mov	r2,r3
    9dd4:	300c943a 	slli	r6,r6,16
    9dd8:	a17fffcc 	andi	r5,r20,65535
    9ddc:	a028d43a 	srli	r20,r20,16
    9de0:	3084b03a 	or	r2,r6,r2
    9de4:	10ffffcc 	andi	r3,r2,65535
    9de8:	100cd43a 	srli	r6,r2,16
    9dec:	194f383a 	mul	r7,r3,r5
    9df0:	1d07383a 	mul	r3,r3,r20
    9df4:	314b383a 	mul	r5,r6,r5
    9df8:	3810d43a 	srli	r8,r7,16
    9dfc:	8121c83a 	sub	r16,r16,r4
    9e00:	1947883a 	add	r3,r3,r5
    9e04:	40c7883a 	add	r3,r8,r3
    9e08:	350d383a 	mul	r6,r6,r20
    9e0c:	1940022e 	bgeu	r3,r5,9e18 <__udivdi3+0x400>
    9e10:	01000074 	movhi	r4,1
    9e14:	310d883a 	add	r6,r6,r4
    9e18:	1828d43a 	srli	r20,r3,16
    9e1c:	a18d883a 	add	r6,r20,r6
    9e20:	81803e36 	bltu	r16,r6,9f1c <__udivdi3+0x504>
    9e24:	81803826 	beq	r16,r6,9f08 <__udivdi3+0x4f0>
    9e28:	0007883a 	mov	r3,zero
    9e2c:	003fa206 	br	9cb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009cb8>
    9e30:	88e2983a 	sll	r17,r17,r3
    9e34:	80a8d83a 	srl	r20,r16,r2
    9e38:	80e0983a 	sll	r16,r16,r3
    9e3c:	882ad43a 	srli	r21,r17,16
    9e40:	9884d83a 	srl	r2,r19,r2
    9e44:	a009883a 	mov	r4,r20
    9e48:	a80b883a 	mov	r5,r21
    9e4c:	142eb03a 	or	r23,r2,r16
    9e50:	98e4983a 	sll	r18,r19,r3
    9e54:	000a6240 	call	a624 <__umodsi3>
    9e58:	a009883a 	mov	r4,r20
    9e5c:	a80b883a 	mov	r5,r21
    9e60:	1021883a 	mov	r16,r2
    9e64:	000a5c00 	call	a5c0 <__udivsi3>
    9e68:	1039883a 	mov	fp,r2
    9e6c:	8d3fffcc 	andi	r20,r17,65535
    9e70:	8020943a 	slli	r16,r16,16
    9e74:	b804d43a 	srli	r2,r23,16
    9e78:	a72d383a 	mul	r22,r20,fp
    9e7c:	1404b03a 	or	r2,r2,r16
    9e80:	1580062e 	bgeu	r2,r22,9e9c <__udivdi3+0x484>
    9e84:	1445883a 	add	r2,r2,r17
    9e88:	e0ffffc4 	addi	r3,fp,-1
    9e8c:	14403836 	bltu	r2,r17,9f70 <__udivdi3+0x558>
    9e90:	1580372e 	bgeu	r2,r22,9f70 <__udivdi3+0x558>
    9e94:	e73fff84 	addi	fp,fp,-2
    9e98:	1445883a 	add	r2,r2,r17
    9e9c:	15adc83a 	sub	r22,r2,r22
    9ea0:	a80b883a 	mov	r5,r21
    9ea4:	b009883a 	mov	r4,r22
    9ea8:	000a6240 	call	a624 <__umodsi3>
    9eac:	1027883a 	mov	r19,r2
    9eb0:	b009883a 	mov	r4,r22
    9eb4:	a80b883a 	mov	r5,r21
    9eb8:	000a5c00 	call	a5c0 <__udivsi3>
    9ebc:	9826943a 	slli	r19,r19,16
    9ec0:	a0a1383a 	mul	r16,r20,r2
    9ec4:	b93fffcc 	andi	r4,r23,65535
    9ec8:	24c8b03a 	or	r4,r4,r19
    9ecc:	2400062e 	bgeu	r4,r16,9ee8 <__udivdi3+0x4d0>
    9ed0:	2449883a 	add	r4,r4,r17
    9ed4:	10ffffc4 	addi	r3,r2,-1
    9ed8:	24402336 	bltu	r4,r17,9f68 <__udivdi3+0x550>
    9edc:	2400222e 	bgeu	r4,r16,9f68 <__udivdi3+0x550>
    9ee0:	10bfff84 	addi	r2,r2,-2
    9ee4:	2449883a 	add	r4,r4,r17
    9ee8:	e038943a 	slli	fp,fp,16
    9eec:	2421c83a 	sub	r16,r4,r16
    9ef0:	e086b03a 	or	r3,fp,r2
    9ef4:	003f4306 	br	9c04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009c04>
    9ef8:	2005883a 	mov	r2,r4
    9efc:	003f6906 	br	9ca4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009ca4>
    9f00:	1805883a 	mov	r2,r3
    9f04:	003f0f06 	br	9b44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b44>
    9f08:	1806943a 	slli	r3,r3,16
    9f0c:	9d66983a 	sll	r19,r19,r21
    9f10:	39ffffcc 	andi	r7,r7,65535
    9f14:	19c7883a 	add	r3,r3,r7
    9f18:	98ffc32e 	bgeu	r19,r3,9e28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009e28>
    9f1c:	10bfffc4 	addi	r2,r2,-1
    9f20:	003fc106 	br	9e28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009e28>
    9f24:	00800604 	movi	r2,24
    9f28:	003f1106 	br	9b70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b70>
    9f2c:	00800604 	movi	r2,24
    9f30:	003f2706 	br	9bd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009bd0>
    9f34:	00800604 	movi	r2,24
    9f38:	003ece06 	br	9a74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009a74>
    9f3c:	0007883a 	mov	r3,zero
    9f40:	00800044 	movi	r2,1
    9f44:	003f5c06 	br	9cb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009cb8>
    9f48:	813fa12e 	bgeu	r16,r4,9dd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009dd0>
    9f4c:	10bfff84 	addi	r2,r2,-2
    9f50:	85e1883a 	add	r16,r16,r23
    9f54:	003f9f06 	br	9dd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009dd4>
    9f58:	1c7f8a2e 	bgeu	r3,r17,9d84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009d84>
    9f5c:	31bfff84 	addi	r6,r6,-2
    9f60:	1dc7883a 	add	r3,r3,r23
    9f64:	003f8806 	br	9d88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009d88>
    9f68:	1805883a 	mov	r2,r3
    9f6c:	003fde06 	br	9ee8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009ee8>
    9f70:	1839883a 	mov	fp,r3
    9f74:	003fc906 	br	9e9c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009e9c>
    9f78:	b5bfff84 	addi	r22,r22,-2
    9f7c:	2449883a 	add	r4,r4,r17
    9f80:	003f3406 	br	9c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009c54>
    9f84:	b5bfff84 	addi	r22,r22,-2
    9f88:	1445883a 	add	r2,r2,r17
    9f8c:	003edb06 	br	9afc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009afc>

00009f90 <__umoddi3>:
    9f90:	defff404 	addi	sp,sp,-48
    9f94:	df000a15 	stw	fp,40(sp)
    9f98:	dc400315 	stw	r17,12(sp)
    9f9c:	dc000215 	stw	r16,8(sp)
    9fa0:	dfc00b15 	stw	ra,44(sp)
    9fa4:	ddc00915 	stw	r23,36(sp)
    9fa8:	dd800815 	stw	r22,32(sp)
    9fac:	dd400715 	stw	r21,28(sp)
    9fb0:	dd000615 	stw	r20,24(sp)
    9fb4:	dcc00515 	stw	r19,20(sp)
    9fb8:	dc800415 	stw	r18,16(sp)
    9fbc:	2021883a 	mov	r16,r4
    9fc0:	2823883a 	mov	r17,r5
    9fc4:	2839883a 	mov	fp,r5
    9fc8:	38003c1e 	bne	r7,zero,a0bc <__umoddi3+0x12c>
    9fcc:	3027883a 	mov	r19,r6
    9fd0:	2029883a 	mov	r20,r4
    9fd4:	2980512e 	bgeu	r5,r6,a11c <__umoddi3+0x18c>
    9fd8:	00bfffd4 	movui	r2,65535
    9fdc:	11809a36 	bltu	r2,r6,a248 <__umoddi3+0x2b8>
    9fe0:	01003fc4 	movi	r4,255
    9fe4:	2189803a 	cmpltu	r4,r4,r6
    9fe8:	200890fa 	slli	r4,r4,3
    9fec:	3104d83a 	srl	r2,r6,r4
    9ff0:	00c00074 	movhi	r3,1
    9ff4:	18c19e04 	addi	r3,r3,1656
    9ff8:	1885883a 	add	r2,r3,r2
    9ffc:	10c00003 	ldbu	r3,0(r2)
    a000:	00800804 	movi	r2,32
    a004:	1909883a 	add	r4,r3,r4
    a008:	1125c83a 	sub	r18,r2,r4
    a00c:	90000526 	beq	r18,zero,a024 <__umoddi3+0x94>
    a010:	8ca2983a 	sll	r17,r17,r18
    a014:	8108d83a 	srl	r4,r16,r4
    a018:	34a6983a 	sll	r19,r6,r18
    a01c:	84a8983a 	sll	r20,r16,r18
    a020:	2478b03a 	or	fp,r4,r17
    a024:	982ed43a 	srli	r23,r19,16
    a028:	e009883a 	mov	r4,fp
    a02c:	9dbfffcc 	andi	r22,r19,65535
    a030:	b80b883a 	mov	r5,r23
    a034:	000a6240 	call	a624 <__umodsi3>
    a038:	e009883a 	mov	r4,fp
    a03c:	b80b883a 	mov	r5,r23
    a040:	102b883a 	mov	r21,r2
    a044:	000a5c00 	call	a5c0 <__udivsi3>
    a048:	a806943a 	slli	r3,r21,16
    a04c:	a008d43a 	srli	r4,r20,16
    a050:	b085383a 	mul	r2,r22,r2
    a054:	20c8b03a 	or	r4,r4,r3
    a058:	2080032e 	bgeu	r4,r2,a068 <__umoddi3+0xd8>
    a05c:	24c9883a 	add	r4,r4,r19
    a060:	24c00136 	bltu	r4,r19,a068 <__umoddi3+0xd8>
    a064:	20811036 	bltu	r4,r2,a4a8 <__umoddi3+0x518>
    a068:	20abc83a 	sub	r21,r4,r2
    a06c:	b80b883a 	mov	r5,r23
    a070:	a809883a 	mov	r4,r21
    a074:	000a6240 	call	a624 <__umodsi3>
    a078:	1023883a 	mov	r17,r2
    a07c:	b80b883a 	mov	r5,r23
    a080:	a809883a 	mov	r4,r21
    a084:	000a5c00 	call	a5c0 <__udivsi3>
    a088:	8822943a 	slli	r17,r17,16
    a08c:	b085383a 	mul	r2,r22,r2
    a090:	a0ffffcc 	andi	r3,r20,65535
    a094:	1c46b03a 	or	r3,r3,r17
    a098:	1880042e 	bgeu	r3,r2,a0ac <__umoddi3+0x11c>
    a09c:	1cc7883a 	add	r3,r3,r19
    a0a0:	1cc00236 	bltu	r3,r19,a0ac <__umoddi3+0x11c>
    a0a4:	1880012e 	bgeu	r3,r2,a0ac <__umoddi3+0x11c>
    a0a8:	1cc7883a 	add	r3,r3,r19
    a0ac:	1885c83a 	sub	r2,r3,r2
    a0b0:	1484d83a 	srl	r2,r2,r18
    a0b4:	0007883a 	mov	r3,zero
    a0b8:	00004f06 	br	a1f8 <__umoddi3+0x268>
    a0bc:	29c04c36 	bltu	r5,r7,a1f0 <__umoddi3+0x260>
    a0c0:	00bfffd4 	movui	r2,65535
    a0c4:	11c0582e 	bgeu	r2,r7,a228 <__umoddi3+0x298>
    a0c8:	00804034 	movhi	r2,256
    a0cc:	10bfffc4 	addi	r2,r2,-1
    a0d0:	11c0e736 	bltu	r2,r7,a470 <__umoddi3+0x4e0>
    a0d4:	01000404 	movi	r4,16
    a0d8:	3904d83a 	srl	r2,r7,r4
    a0dc:	00c00074 	movhi	r3,1
    a0e0:	18c19e04 	addi	r3,r3,1656
    a0e4:	1885883a 	add	r2,r3,r2
    a0e8:	14c00003 	ldbu	r19,0(r2)
    a0ec:	00c00804 	movi	r3,32
    a0f0:	9927883a 	add	r19,r19,r4
    a0f4:	1ce9c83a 	sub	r20,r3,r19
    a0f8:	a000581e 	bne	r20,zero,a25c <__umoddi3+0x2cc>
    a0fc:	3c400136 	bltu	r7,r17,a104 <__umoddi3+0x174>
    a100:	8180eb36 	bltu	r16,r6,a4b0 <__umoddi3+0x520>
    a104:	8185c83a 	sub	r2,r16,r6
    a108:	89e3c83a 	sub	r17,r17,r7
    a10c:	8089803a 	cmpltu	r4,r16,r2
    a110:	8939c83a 	sub	fp,r17,r4
    a114:	e007883a 	mov	r3,fp
    a118:	00003706 	br	a1f8 <__umoddi3+0x268>
    a11c:	3000041e 	bne	r6,zero,a130 <__umoddi3+0x1a0>
    a120:	000b883a 	mov	r5,zero
    a124:	01000044 	movi	r4,1
    a128:	000a5c00 	call	a5c0 <__udivsi3>
    a12c:	1027883a 	mov	r19,r2
    a130:	00bfffd4 	movui	r2,65535
    a134:	14c0402e 	bgeu	r2,r19,a238 <__umoddi3+0x2a8>
    a138:	00804034 	movhi	r2,256
    a13c:	10bfffc4 	addi	r2,r2,-1
    a140:	14c0cd36 	bltu	r2,r19,a478 <__umoddi3+0x4e8>
    a144:	00800404 	movi	r2,16
    a148:	9886d83a 	srl	r3,r19,r2
    a14c:	01000074 	movhi	r4,1
    a150:	21019e04 	addi	r4,r4,1656
    a154:	20c7883a 	add	r3,r4,r3
    a158:	18c00003 	ldbu	r3,0(r3)
    a15c:	1887883a 	add	r3,r3,r2
    a160:	00800804 	movi	r2,32
    a164:	10e5c83a 	sub	r18,r2,r3
    a168:	9000901e 	bne	r18,zero,a3ac <__umoddi3+0x41c>
    a16c:	982cd43a 	srli	r22,r19,16
    a170:	8ce3c83a 	sub	r17,r17,r19
    a174:	9d7fffcc 	andi	r21,r19,65535
    a178:	b00b883a 	mov	r5,r22
    a17c:	8809883a 	mov	r4,r17
    a180:	000a6240 	call	a624 <__umodsi3>
    a184:	8809883a 	mov	r4,r17
    a188:	b00b883a 	mov	r5,r22
    a18c:	1021883a 	mov	r16,r2
    a190:	000a5c00 	call	a5c0 <__udivsi3>
    a194:	8006943a 	slli	r3,r16,16
    a198:	a008d43a 	srli	r4,r20,16
    a19c:	1545383a 	mul	r2,r2,r21
    a1a0:	20c8b03a 	or	r4,r4,r3
    a1a4:	2080042e 	bgeu	r4,r2,a1b8 <__umoddi3+0x228>
    a1a8:	24c9883a 	add	r4,r4,r19
    a1ac:	24c00236 	bltu	r4,r19,a1b8 <__umoddi3+0x228>
    a1b0:	2080012e 	bgeu	r4,r2,a1b8 <__umoddi3+0x228>
    a1b4:	24c9883a 	add	r4,r4,r19
    a1b8:	20a1c83a 	sub	r16,r4,r2
    a1bc:	b00b883a 	mov	r5,r22
    a1c0:	8009883a 	mov	r4,r16
    a1c4:	000a6240 	call	a624 <__umodsi3>
    a1c8:	1023883a 	mov	r17,r2
    a1cc:	b00b883a 	mov	r5,r22
    a1d0:	8009883a 	mov	r4,r16
    a1d4:	000a5c00 	call	a5c0 <__udivsi3>
    a1d8:	8822943a 	slli	r17,r17,16
    a1dc:	1545383a 	mul	r2,r2,r21
    a1e0:	a53fffcc 	andi	r20,r20,65535
    a1e4:	a446b03a 	or	r3,r20,r17
    a1e8:	18bfb02e 	bgeu	r3,r2,a0ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a0ac>
    a1ec:	003fab06 	br	a09c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a09c>
    a1f0:	2005883a 	mov	r2,r4
    a1f4:	2807883a 	mov	r3,r5
    a1f8:	dfc00b17 	ldw	ra,44(sp)
    a1fc:	df000a17 	ldw	fp,40(sp)
    a200:	ddc00917 	ldw	r23,36(sp)
    a204:	dd800817 	ldw	r22,32(sp)
    a208:	dd400717 	ldw	r21,28(sp)
    a20c:	dd000617 	ldw	r20,24(sp)
    a210:	dcc00517 	ldw	r19,20(sp)
    a214:	dc800417 	ldw	r18,16(sp)
    a218:	dc400317 	ldw	r17,12(sp)
    a21c:	dc000217 	ldw	r16,8(sp)
    a220:	dec00c04 	addi	sp,sp,48
    a224:	f800283a 	ret
    a228:	04c03fc4 	movi	r19,255
    a22c:	99c9803a 	cmpltu	r4,r19,r7
    a230:	200890fa 	slli	r4,r4,3
    a234:	003fa806 	br	a0d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a0d8>
    a238:	00803fc4 	movi	r2,255
    a23c:	14c5803a 	cmpltu	r2,r2,r19
    a240:	100490fa 	slli	r2,r2,3
    a244:	003fc006 	br	a148 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a148>
    a248:	00804034 	movhi	r2,256
    a24c:	10bfffc4 	addi	r2,r2,-1
    a250:	11808b36 	bltu	r2,r6,a480 <__umoddi3+0x4f0>
    a254:	01000404 	movi	r4,16
    a258:	003f6406 	br	9fec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009fec>
    a25c:	34c4d83a 	srl	r2,r6,r19
    a260:	3d0e983a 	sll	r7,r7,r20
    a264:	8cf8d83a 	srl	fp,r17,r19
    a268:	8d10983a 	sll	r8,r17,r20
    a26c:	38aab03a 	or	r21,r7,r2
    a270:	a82cd43a 	srli	r22,r21,16
    a274:	84e2d83a 	srl	r17,r16,r19
    a278:	e009883a 	mov	r4,fp
    a27c:	b00b883a 	mov	r5,r22
    a280:	8a22b03a 	or	r17,r17,r8
    a284:	3524983a 	sll	r18,r6,r20
    a288:	000a6240 	call	a624 <__umodsi3>
    a28c:	e009883a 	mov	r4,fp
    a290:	b00b883a 	mov	r5,r22
    a294:	102f883a 	mov	r23,r2
    a298:	000a5c00 	call	a5c0 <__udivsi3>
    a29c:	100d883a 	mov	r6,r2
    a2a0:	b808943a 	slli	r4,r23,16
    a2a4:	aa3fffcc 	andi	r8,r21,65535
    a2a8:	8804d43a 	srli	r2,r17,16
    a2ac:	41af383a 	mul	r23,r8,r6
    a2b0:	8520983a 	sll	r16,r16,r20
    a2b4:	1104b03a 	or	r2,r2,r4
    a2b8:	15c0042e 	bgeu	r2,r23,a2cc <__umoddi3+0x33c>
    a2bc:	1545883a 	add	r2,r2,r21
    a2c0:	30ffffc4 	addi	r3,r6,-1
    a2c4:	1540742e 	bgeu	r2,r21,a498 <__umoddi3+0x508>
    a2c8:	180d883a 	mov	r6,r3
    a2cc:	15efc83a 	sub	r23,r2,r23
    a2d0:	b00b883a 	mov	r5,r22
    a2d4:	b809883a 	mov	r4,r23
    a2d8:	d9800115 	stw	r6,4(sp)
    a2dc:	da000015 	stw	r8,0(sp)
    a2e0:	000a6240 	call	a624 <__umodsi3>
    a2e4:	b00b883a 	mov	r5,r22
    a2e8:	b809883a 	mov	r4,r23
    a2ec:	1039883a 	mov	fp,r2
    a2f0:	000a5c00 	call	a5c0 <__udivsi3>
    a2f4:	da000017 	ldw	r8,0(sp)
    a2f8:	e038943a 	slli	fp,fp,16
    a2fc:	100b883a 	mov	r5,r2
    a300:	4089383a 	mul	r4,r8,r2
    a304:	8a3fffcc 	andi	r8,r17,65535
    a308:	4710b03a 	or	r8,r8,fp
    a30c:	d9800117 	ldw	r6,4(sp)
    a310:	4100042e 	bgeu	r8,r4,a324 <__umoddi3+0x394>
    a314:	4551883a 	add	r8,r8,r21
    a318:	10bfffc4 	addi	r2,r2,-1
    a31c:	45405a2e 	bgeu	r8,r21,a488 <__umoddi3+0x4f8>
    a320:	100b883a 	mov	r5,r2
    a324:	300c943a 	slli	r6,r6,16
    a328:	91ffffcc 	andi	r7,r18,65535
    a32c:	9004d43a 	srli	r2,r18,16
    a330:	314cb03a 	or	r6,r6,r5
    a334:	317fffcc 	andi	r5,r6,65535
    a338:	300cd43a 	srli	r6,r6,16
    a33c:	29d3383a 	mul	r9,r5,r7
    a340:	288b383a 	mul	r5,r5,r2
    a344:	31cf383a 	mul	r7,r6,r7
    a348:	4806d43a 	srli	r3,r9,16
    a34c:	4111c83a 	sub	r8,r8,r4
    a350:	29cb883a 	add	r5,r5,r7
    a354:	194b883a 	add	r5,r3,r5
    a358:	3085383a 	mul	r2,r6,r2
    a35c:	29c0022e 	bgeu	r5,r7,a368 <__umoddi3+0x3d8>
    a360:	00c00074 	movhi	r3,1
    a364:	10c5883a 	add	r2,r2,r3
    a368:	2808d43a 	srli	r4,r5,16
    a36c:	280a943a 	slli	r5,r5,16
    a370:	4a7fffcc 	andi	r9,r9,65535
    a374:	2085883a 	add	r2,r4,r2
    a378:	2a4b883a 	add	r5,r5,r9
    a37c:	40803636 	bltu	r8,r2,a458 <__umoddi3+0x4c8>
    a380:	40804d26 	beq	r8,r2,a4b8 <__umoddi3+0x528>
    a384:	4089c83a 	sub	r4,r8,r2
    a388:	280f883a 	mov	r7,r5
    a38c:	81cfc83a 	sub	r7,r16,r7
    a390:	81c7803a 	cmpltu	r3,r16,r7
    a394:	20c7c83a 	sub	r3,r4,r3
    a398:	1cc4983a 	sll	r2,r3,r19
    a39c:	3d0ed83a 	srl	r7,r7,r20
    a3a0:	1d06d83a 	srl	r3,r3,r20
    a3a4:	11c4b03a 	or	r2,r2,r7
    a3a8:	003f9306 	br	a1f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a1f8>
    a3ac:	9ca6983a 	sll	r19,r19,r18
    a3b0:	88e8d83a 	srl	r20,r17,r3
    a3b4:	80c4d83a 	srl	r2,r16,r3
    a3b8:	982cd43a 	srli	r22,r19,16
    a3bc:	8ca2983a 	sll	r17,r17,r18
    a3c0:	a009883a 	mov	r4,r20
    a3c4:	b00b883a 	mov	r5,r22
    a3c8:	1478b03a 	or	fp,r2,r17
    a3cc:	000a6240 	call	a624 <__umodsi3>
    a3d0:	a009883a 	mov	r4,r20
    a3d4:	b00b883a 	mov	r5,r22
    a3d8:	1023883a 	mov	r17,r2
    a3dc:	000a5c00 	call	a5c0 <__udivsi3>
    a3e0:	9d7fffcc 	andi	r21,r19,65535
    a3e4:	880a943a 	slli	r5,r17,16
    a3e8:	e008d43a 	srli	r4,fp,16
    a3ec:	a885383a 	mul	r2,r21,r2
    a3f0:	84a8983a 	sll	r20,r16,r18
    a3f4:	2148b03a 	or	r4,r4,r5
    a3f8:	2080042e 	bgeu	r4,r2,a40c <__umoddi3+0x47c>
    a3fc:	24c9883a 	add	r4,r4,r19
    a400:	24c00236 	bltu	r4,r19,a40c <__umoddi3+0x47c>
    a404:	2080012e 	bgeu	r4,r2,a40c <__umoddi3+0x47c>
    a408:	24c9883a 	add	r4,r4,r19
    a40c:	20a3c83a 	sub	r17,r4,r2
    a410:	b00b883a 	mov	r5,r22
    a414:	8809883a 	mov	r4,r17
    a418:	000a6240 	call	a624 <__umodsi3>
    a41c:	102f883a 	mov	r23,r2
    a420:	8809883a 	mov	r4,r17
    a424:	b00b883a 	mov	r5,r22
    a428:	000a5c00 	call	a5c0 <__udivsi3>
    a42c:	b82e943a 	slli	r23,r23,16
    a430:	a885383a 	mul	r2,r21,r2
    a434:	e13fffcc 	andi	r4,fp,65535
    a438:	25c8b03a 	or	r4,r4,r23
    a43c:	2080042e 	bgeu	r4,r2,a450 <__umoddi3+0x4c0>
    a440:	24c9883a 	add	r4,r4,r19
    a444:	24c00236 	bltu	r4,r19,a450 <__umoddi3+0x4c0>
    a448:	2080012e 	bgeu	r4,r2,a450 <__umoddi3+0x4c0>
    a44c:	24c9883a 	add	r4,r4,r19
    a450:	20a3c83a 	sub	r17,r4,r2
    a454:	003f4806 	br	a178 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a178>
    a458:	2c8fc83a 	sub	r7,r5,r18
    a45c:	1545c83a 	sub	r2,r2,r21
    a460:	29cb803a 	cmpltu	r5,r5,r7
    a464:	1145c83a 	sub	r2,r2,r5
    a468:	4089c83a 	sub	r4,r8,r2
    a46c:	003fc706 	br	a38c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a38c>
    a470:	01000604 	movi	r4,24
    a474:	003f1806 	br	a0d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a0d8>
    a478:	00800604 	movi	r2,24
    a47c:	003f3206 	br	a148 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a148>
    a480:	01000604 	movi	r4,24
    a484:	003ed906 	br	9fec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009fec>
    a488:	413fa52e 	bgeu	r8,r4,a320 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a320>
    a48c:	297fff84 	addi	r5,r5,-2
    a490:	4551883a 	add	r8,r8,r21
    a494:	003fa306 	br	a324 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a324>
    a498:	15ff8b2e 	bgeu	r2,r23,a2c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a2c8>
    a49c:	31bfff84 	addi	r6,r6,-2
    a4a0:	1545883a 	add	r2,r2,r21
    a4a4:	003f8906 	br	a2cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a2cc>
    a4a8:	24c9883a 	add	r4,r4,r19
    a4ac:	003eee06 	br	a068 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a068>
    a4b0:	8005883a 	mov	r2,r16
    a4b4:	003f1706 	br	a114 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a114>
    a4b8:	817fe736 	bltu	r16,r5,a458 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a458>
    a4bc:	280f883a 	mov	r7,r5
    a4c0:	0009883a 	mov	r4,zero
    a4c4:	003fb106 	br	a38c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a38c>

0000a4c8 <__divsi3>:
    a4c8:	20001b16 	blt	r4,zero,a538 <__divsi3+0x70>
    a4cc:	000f883a 	mov	r7,zero
    a4d0:	28001616 	blt	r5,zero,a52c <__divsi3+0x64>
    a4d4:	200d883a 	mov	r6,r4
    a4d8:	29001a2e 	bgeu	r5,r4,a544 <__divsi3+0x7c>
    a4dc:	00800804 	movi	r2,32
    a4e0:	00c00044 	movi	r3,1
    a4e4:	00000106 	br	a4ec <__divsi3+0x24>
    a4e8:	10000d26 	beq	r2,zero,a520 <__divsi3+0x58>
    a4ec:	294b883a 	add	r5,r5,r5
    a4f0:	10bfffc4 	addi	r2,r2,-1
    a4f4:	18c7883a 	add	r3,r3,r3
    a4f8:	293ffb36 	bltu	r5,r4,a4e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a4e8>
    a4fc:	0005883a 	mov	r2,zero
    a500:	18000726 	beq	r3,zero,a520 <__divsi3+0x58>
    a504:	0005883a 	mov	r2,zero
    a508:	31400236 	bltu	r6,r5,a514 <__divsi3+0x4c>
    a50c:	314dc83a 	sub	r6,r6,r5
    a510:	10c4b03a 	or	r2,r2,r3
    a514:	1806d07a 	srli	r3,r3,1
    a518:	280ad07a 	srli	r5,r5,1
    a51c:	183ffa1e 	bne	r3,zero,a508 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a508>
    a520:	38000126 	beq	r7,zero,a528 <__divsi3+0x60>
    a524:	0085c83a 	sub	r2,zero,r2
    a528:	f800283a 	ret
    a52c:	014bc83a 	sub	r5,zero,r5
    a530:	39c0005c 	xori	r7,r7,1
    a534:	003fe706 	br	a4d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a4d4>
    a538:	0109c83a 	sub	r4,zero,r4
    a53c:	01c00044 	movi	r7,1
    a540:	003fe306 	br	a4d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a4d0>
    a544:	00c00044 	movi	r3,1
    a548:	003fee06 	br	a504 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a504>

0000a54c <__modsi3>:
    a54c:	20001716 	blt	r4,zero,a5ac <__modsi3+0x60>
    a550:	000f883a 	mov	r7,zero
    a554:	2005883a 	mov	r2,r4
    a558:	28001216 	blt	r5,zero,a5a4 <__modsi3+0x58>
    a55c:	2900162e 	bgeu	r5,r4,a5b8 <__modsi3+0x6c>
    a560:	01800804 	movi	r6,32
    a564:	00c00044 	movi	r3,1
    a568:	00000106 	br	a570 <__modsi3+0x24>
    a56c:	30000a26 	beq	r6,zero,a598 <__modsi3+0x4c>
    a570:	294b883a 	add	r5,r5,r5
    a574:	31bfffc4 	addi	r6,r6,-1
    a578:	18c7883a 	add	r3,r3,r3
    a57c:	293ffb36 	bltu	r5,r4,a56c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a56c>
    a580:	18000526 	beq	r3,zero,a598 <__modsi3+0x4c>
    a584:	1806d07a 	srli	r3,r3,1
    a588:	11400136 	bltu	r2,r5,a590 <__modsi3+0x44>
    a58c:	1145c83a 	sub	r2,r2,r5
    a590:	280ad07a 	srli	r5,r5,1
    a594:	183ffb1e 	bne	r3,zero,a584 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a584>
    a598:	38000126 	beq	r7,zero,a5a0 <__modsi3+0x54>
    a59c:	0085c83a 	sub	r2,zero,r2
    a5a0:	f800283a 	ret
    a5a4:	014bc83a 	sub	r5,zero,r5
    a5a8:	003fec06 	br	a55c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a55c>
    a5ac:	0109c83a 	sub	r4,zero,r4
    a5b0:	01c00044 	movi	r7,1
    a5b4:	003fe706 	br	a554 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a554>
    a5b8:	00c00044 	movi	r3,1
    a5bc:	003ff106 	br	a584 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a584>

0000a5c0 <__udivsi3>:
    a5c0:	200d883a 	mov	r6,r4
    a5c4:	2900152e 	bgeu	r5,r4,a61c <__udivsi3+0x5c>
    a5c8:	28001416 	blt	r5,zero,a61c <__udivsi3+0x5c>
    a5cc:	00800804 	movi	r2,32
    a5d0:	00c00044 	movi	r3,1
    a5d4:	00000206 	br	a5e0 <__udivsi3+0x20>
    a5d8:	10000e26 	beq	r2,zero,a614 <__udivsi3+0x54>
    a5dc:	28000516 	blt	r5,zero,a5f4 <__udivsi3+0x34>
    a5e0:	294b883a 	add	r5,r5,r5
    a5e4:	10bfffc4 	addi	r2,r2,-1
    a5e8:	18c7883a 	add	r3,r3,r3
    a5ec:	293ffa36 	bltu	r5,r4,a5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a5d8>
    a5f0:	18000826 	beq	r3,zero,a614 <__udivsi3+0x54>
    a5f4:	0005883a 	mov	r2,zero
    a5f8:	31400236 	bltu	r6,r5,a604 <__udivsi3+0x44>
    a5fc:	314dc83a 	sub	r6,r6,r5
    a600:	10c4b03a 	or	r2,r2,r3
    a604:	1806d07a 	srli	r3,r3,1
    a608:	280ad07a 	srli	r5,r5,1
    a60c:	183ffa1e 	bne	r3,zero,a5f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a5f8>
    a610:	f800283a 	ret
    a614:	0005883a 	mov	r2,zero
    a618:	f800283a 	ret
    a61c:	00c00044 	movi	r3,1
    a620:	003ff406 	br	a5f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a5f4>

0000a624 <__umodsi3>:
    a624:	2005883a 	mov	r2,r4
    a628:	2900122e 	bgeu	r5,r4,a674 <__umodsi3+0x50>
    a62c:	28001116 	blt	r5,zero,a674 <__umodsi3+0x50>
    a630:	01800804 	movi	r6,32
    a634:	00c00044 	movi	r3,1
    a638:	00000206 	br	a644 <__umodsi3+0x20>
    a63c:	30000c26 	beq	r6,zero,a670 <__umodsi3+0x4c>
    a640:	28000516 	blt	r5,zero,a658 <__umodsi3+0x34>
    a644:	294b883a 	add	r5,r5,r5
    a648:	31bfffc4 	addi	r6,r6,-1
    a64c:	18c7883a 	add	r3,r3,r3
    a650:	293ffa36 	bltu	r5,r4,a63c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a63c>
    a654:	18000626 	beq	r3,zero,a670 <__umodsi3+0x4c>
    a658:	1806d07a 	srli	r3,r3,1
    a65c:	11400136 	bltu	r2,r5,a664 <__umodsi3+0x40>
    a660:	1145c83a 	sub	r2,r2,r5
    a664:	280ad07a 	srli	r5,r5,1
    a668:	183ffb1e 	bne	r3,zero,a658 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a658>
    a66c:	f800283a 	ret
    a670:	f800283a 	ret
    a674:	00c00044 	movi	r3,1
    a678:	003ff706 	br	a658 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a658>

0000a67c <__adddf3>:
    a67c:	02c00434 	movhi	r11,16
    a680:	5affffc4 	addi	r11,r11,-1
    a684:	2806d7fa 	srli	r3,r5,31
    a688:	2ad4703a 	and	r10,r5,r11
    a68c:	3ad2703a 	and	r9,r7,r11
    a690:	3804d53a 	srli	r2,r7,20
    a694:	3018d77a 	srli	r12,r6,29
    a698:	280ad53a 	srli	r5,r5,20
    a69c:	501490fa 	slli	r10,r10,3
    a6a0:	2010d77a 	srli	r8,r4,29
    a6a4:	481290fa 	slli	r9,r9,3
    a6a8:	380ed7fa 	srli	r7,r7,31
    a6ac:	defffb04 	addi	sp,sp,-20
    a6b0:	dc800215 	stw	r18,8(sp)
    a6b4:	dc400115 	stw	r17,4(sp)
    a6b8:	dc000015 	stw	r16,0(sp)
    a6bc:	dfc00415 	stw	ra,16(sp)
    a6c0:	dcc00315 	stw	r19,12(sp)
    a6c4:	1c803fcc 	andi	r18,r3,255
    a6c8:	2c01ffcc 	andi	r16,r5,2047
    a6cc:	5210b03a 	or	r8,r10,r8
    a6d0:	202290fa 	slli	r17,r4,3
    a6d4:	1081ffcc 	andi	r2,r2,2047
    a6d8:	4b12b03a 	or	r9,r9,r12
    a6dc:	300c90fa 	slli	r6,r6,3
    a6e0:	91c07526 	beq	r18,r7,a8b8 <__adddf3+0x23c>
    a6e4:	8087c83a 	sub	r3,r16,r2
    a6e8:	00c0ab0e 	bge	zero,r3,a998 <__adddf3+0x31c>
    a6ec:	10002a1e 	bne	r2,zero,a798 <__adddf3+0x11c>
    a6f0:	4984b03a 	or	r2,r9,r6
    a6f4:	1000961e 	bne	r2,zero,a950 <__adddf3+0x2d4>
    a6f8:	888001cc 	andi	r2,r17,7
    a6fc:	10000726 	beq	r2,zero,a71c <__adddf3+0xa0>
    a700:	888003cc 	andi	r2,r17,15
    a704:	00c00104 	movi	r3,4
    a708:	10c00426 	beq	r2,r3,a71c <__adddf3+0xa0>
    a70c:	88c7883a 	add	r3,r17,r3
    a710:	1c63803a 	cmpltu	r17,r3,r17
    a714:	4451883a 	add	r8,r8,r17
    a718:	1823883a 	mov	r17,r3
    a71c:	4080202c 	andhi	r2,r8,128
    a720:	10005926 	beq	r2,zero,a888 <__adddf3+0x20c>
    a724:	84000044 	addi	r16,r16,1
    a728:	0081ffc4 	movi	r2,2047
    a72c:	8080ba26 	beq	r16,r2,aa18 <__adddf3+0x39c>
    a730:	00bfe034 	movhi	r2,65408
    a734:	10bfffc4 	addi	r2,r2,-1
    a738:	4090703a 	and	r8,r8,r2
    a73c:	4004977a 	slli	r2,r8,29
    a740:	4010927a 	slli	r8,r8,9
    a744:	8822d0fa 	srli	r17,r17,3
    a748:	8401ffcc 	andi	r16,r16,2047
    a74c:	4010d33a 	srli	r8,r8,12
    a750:	9007883a 	mov	r3,r18
    a754:	1444b03a 	or	r2,r2,r17
    a758:	8401ffcc 	andi	r16,r16,2047
    a75c:	8020953a 	slli	r16,r16,20
    a760:	18c03fcc 	andi	r3,r3,255
    a764:	01000434 	movhi	r4,16
    a768:	213fffc4 	addi	r4,r4,-1
    a76c:	180697fa 	slli	r3,r3,31
    a770:	4110703a 	and	r8,r8,r4
    a774:	4410b03a 	or	r8,r8,r16
    a778:	40c6b03a 	or	r3,r8,r3
    a77c:	dfc00417 	ldw	ra,16(sp)
    a780:	dcc00317 	ldw	r19,12(sp)
    a784:	dc800217 	ldw	r18,8(sp)
    a788:	dc400117 	ldw	r17,4(sp)
    a78c:	dc000017 	ldw	r16,0(sp)
    a790:	dec00504 	addi	sp,sp,20
    a794:	f800283a 	ret
    a798:	0081ffc4 	movi	r2,2047
    a79c:	80bfd626 	beq	r16,r2,a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    a7a0:	4a402034 	orhi	r9,r9,128
    a7a4:	00800e04 	movi	r2,56
    a7a8:	10c09f16 	blt	r2,r3,aa28 <__adddf3+0x3ac>
    a7ac:	008007c4 	movi	r2,31
    a7b0:	10c0c216 	blt	r2,r3,aabc <__adddf3+0x440>
    a7b4:	00800804 	movi	r2,32
    a7b8:	10c5c83a 	sub	r2,r2,r3
    a7bc:	488a983a 	sll	r5,r9,r2
    a7c0:	30c8d83a 	srl	r4,r6,r3
    a7c4:	3084983a 	sll	r2,r6,r2
    a7c8:	48c6d83a 	srl	r3,r9,r3
    a7cc:	290cb03a 	or	r6,r5,r4
    a7d0:	1004c03a 	cmpne	r2,r2,zero
    a7d4:	308cb03a 	or	r6,r6,r2
    a7d8:	898dc83a 	sub	r6,r17,r6
    a7dc:	89a3803a 	cmpltu	r17,r17,r6
    a7e0:	40d1c83a 	sub	r8,r8,r3
    a7e4:	4451c83a 	sub	r8,r8,r17
    a7e8:	3023883a 	mov	r17,r6
    a7ec:	4080202c 	andhi	r2,r8,128
    a7f0:	10002326 	beq	r2,zero,a880 <__adddf3+0x204>
    a7f4:	04c02034 	movhi	r19,128
    a7f8:	9cffffc4 	addi	r19,r19,-1
    a7fc:	44e6703a 	and	r19,r8,r19
    a800:	98007626 	beq	r19,zero,a9dc <__adddf3+0x360>
    a804:	9809883a 	mov	r4,r19
    a808:	000cc800 	call	cc80 <__clzsi2>
    a80c:	10fffe04 	addi	r3,r2,-8
    a810:	010007c4 	movi	r4,31
    a814:	20c07716 	blt	r4,r3,a9f4 <__adddf3+0x378>
    a818:	00800804 	movi	r2,32
    a81c:	10c5c83a 	sub	r2,r2,r3
    a820:	8884d83a 	srl	r2,r17,r2
    a824:	98d0983a 	sll	r8,r19,r3
    a828:	88e2983a 	sll	r17,r17,r3
    a82c:	1204b03a 	or	r2,r2,r8
    a830:	1c007416 	blt	r3,r16,aa04 <__adddf3+0x388>
    a834:	1c21c83a 	sub	r16,r3,r16
    a838:	82000044 	addi	r8,r16,1
    a83c:	00c007c4 	movi	r3,31
    a840:	1a009116 	blt	r3,r8,aa88 <__adddf3+0x40c>
    a844:	00c00804 	movi	r3,32
    a848:	1a07c83a 	sub	r3,r3,r8
    a84c:	8a08d83a 	srl	r4,r17,r8
    a850:	88e2983a 	sll	r17,r17,r3
    a854:	10c6983a 	sll	r3,r2,r3
    a858:	1210d83a 	srl	r8,r2,r8
    a85c:	8804c03a 	cmpne	r2,r17,zero
    a860:	1906b03a 	or	r3,r3,r4
    a864:	18a2b03a 	or	r17,r3,r2
    a868:	0021883a 	mov	r16,zero
    a86c:	003fa206 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    a870:	1890b03a 	or	r8,r3,r2
    a874:	40017d26 	beq	r8,zero,ae6c <__adddf3+0x7f0>
    a878:	1011883a 	mov	r8,r2
    a87c:	1823883a 	mov	r17,r3
    a880:	888001cc 	andi	r2,r17,7
    a884:	103f9e1e 	bne	r2,zero,a700 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a700>
    a888:	4004977a 	slli	r2,r8,29
    a88c:	8822d0fa 	srli	r17,r17,3
    a890:	4010d0fa 	srli	r8,r8,3
    a894:	9007883a 	mov	r3,r18
    a898:	1444b03a 	or	r2,r2,r17
    a89c:	0101ffc4 	movi	r4,2047
    a8a0:	81002426 	beq	r16,r4,a934 <__adddf3+0x2b8>
    a8a4:	8120703a 	and	r16,r16,r4
    a8a8:	01000434 	movhi	r4,16
    a8ac:	213fffc4 	addi	r4,r4,-1
    a8b0:	4110703a 	and	r8,r8,r4
    a8b4:	003fa806 	br	a758 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a758>
    a8b8:	8089c83a 	sub	r4,r16,r2
    a8bc:	01005e0e 	bge	zero,r4,aa38 <__adddf3+0x3bc>
    a8c0:	10002b26 	beq	r2,zero,a970 <__adddf3+0x2f4>
    a8c4:	0081ffc4 	movi	r2,2047
    a8c8:	80bf8b26 	beq	r16,r2,a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    a8cc:	4a402034 	orhi	r9,r9,128
    a8d0:	00800e04 	movi	r2,56
    a8d4:	1100a40e 	bge	r2,r4,ab68 <__adddf3+0x4ec>
    a8d8:	498cb03a 	or	r6,r9,r6
    a8dc:	300ac03a 	cmpne	r5,r6,zero
    a8e0:	0013883a 	mov	r9,zero
    a8e4:	2c4b883a 	add	r5,r5,r17
    a8e8:	2c63803a 	cmpltu	r17,r5,r17
    a8ec:	4a11883a 	add	r8,r9,r8
    a8f0:	8a11883a 	add	r8,r17,r8
    a8f4:	2823883a 	mov	r17,r5
    a8f8:	4080202c 	andhi	r2,r8,128
    a8fc:	103fe026 	beq	r2,zero,a880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a880>
    a900:	84000044 	addi	r16,r16,1
    a904:	0081ffc4 	movi	r2,2047
    a908:	8080d226 	beq	r16,r2,ac54 <__adddf3+0x5d8>
    a90c:	00bfe034 	movhi	r2,65408
    a910:	10bfffc4 	addi	r2,r2,-1
    a914:	4090703a 	and	r8,r8,r2
    a918:	880ad07a 	srli	r5,r17,1
    a91c:	400897fa 	slli	r4,r8,31
    a920:	88c0004c 	andi	r3,r17,1
    a924:	28e2b03a 	or	r17,r5,r3
    a928:	4010d07a 	srli	r8,r8,1
    a92c:	2462b03a 	or	r17,r4,r17
    a930:	003f7106 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    a934:	4088b03a 	or	r4,r8,r2
    a938:	20014526 	beq	r4,zero,ae50 <__adddf3+0x7d4>
    a93c:	01000434 	movhi	r4,16
    a940:	42000234 	orhi	r8,r8,8
    a944:	213fffc4 	addi	r4,r4,-1
    a948:	4110703a 	and	r8,r8,r4
    a94c:	003f8206 	br	a758 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a758>
    a950:	18ffffc4 	addi	r3,r3,-1
    a954:	1800491e 	bne	r3,zero,aa7c <__adddf3+0x400>
    a958:	898bc83a 	sub	r5,r17,r6
    a95c:	8963803a 	cmpltu	r17,r17,r5
    a960:	4251c83a 	sub	r8,r8,r9
    a964:	4451c83a 	sub	r8,r8,r17
    a968:	2823883a 	mov	r17,r5
    a96c:	003f9f06 	br	a7ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7ec>
    a970:	4984b03a 	or	r2,r9,r6
    a974:	103f6026 	beq	r2,zero,a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    a978:	213fffc4 	addi	r4,r4,-1
    a97c:	2000931e 	bne	r4,zero,abcc <__adddf3+0x550>
    a980:	898d883a 	add	r6,r17,r6
    a984:	3463803a 	cmpltu	r17,r6,r17
    a988:	4251883a 	add	r8,r8,r9
    a98c:	8a11883a 	add	r8,r17,r8
    a990:	3023883a 	mov	r17,r6
    a994:	003fd806 	br	a8f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8f8>
    a998:	1800541e 	bne	r3,zero,aaec <__adddf3+0x470>
    a99c:	80800044 	addi	r2,r16,1
    a9a0:	1081ffcc 	andi	r2,r2,2047
    a9a4:	00c00044 	movi	r3,1
    a9a8:	1880a00e 	bge	r3,r2,ac2c <__adddf3+0x5b0>
    a9ac:	8989c83a 	sub	r4,r17,r6
    a9b0:	8905803a 	cmpltu	r2,r17,r4
    a9b4:	4267c83a 	sub	r19,r8,r9
    a9b8:	98a7c83a 	sub	r19,r19,r2
    a9bc:	9880202c 	andhi	r2,r19,128
    a9c0:	10006326 	beq	r2,zero,ab50 <__adddf3+0x4d4>
    a9c4:	3463c83a 	sub	r17,r6,r17
    a9c8:	4a07c83a 	sub	r3,r9,r8
    a9cc:	344d803a 	cmpltu	r6,r6,r17
    a9d0:	19a7c83a 	sub	r19,r3,r6
    a9d4:	3825883a 	mov	r18,r7
    a9d8:	983f8a1e 	bne	r19,zero,a804 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a804>
    a9dc:	8809883a 	mov	r4,r17
    a9e0:	000cc800 	call	cc80 <__clzsi2>
    a9e4:	10800804 	addi	r2,r2,32
    a9e8:	10fffe04 	addi	r3,r2,-8
    a9ec:	010007c4 	movi	r4,31
    a9f0:	20ff890e 	bge	r4,r3,a818 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a818>
    a9f4:	10bff604 	addi	r2,r2,-40
    a9f8:	8884983a 	sll	r2,r17,r2
    a9fc:	0023883a 	mov	r17,zero
    aa00:	1c3f8c0e 	bge	r3,r16,a834 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a834>
    aa04:	023fe034 	movhi	r8,65408
    aa08:	423fffc4 	addi	r8,r8,-1
    aa0c:	80e1c83a 	sub	r16,r16,r3
    aa10:	1210703a 	and	r8,r2,r8
    aa14:	003f3806 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    aa18:	9007883a 	mov	r3,r18
    aa1c:	0011883a 	mov	r8,zero
    aa20:	0005883a 	mov	r2,zero
    aa24:	003f4c06 	br	a758 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a758>
    aa28:	498cb03a 	or	r6,r9,r6
    aa2c:	300cc03a 	cmpne	r6,r6,zero
    aa30:	0007883a 	mov	r3,zero
    aa34:	003f6806 	br	a7d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7d8>
    aa38:	20009c1e 	bne	r4,zero,acac <__adddf3+0x630>
    aa3c:	80800044 	addi	r2,r16,1
    aa40:	1141ffcc 	andi	r5,r2,2047
    aa44:	01000044 	movi	r4,1
    aa48:	2140670e 	bge	r4,r5,abe8 <__adddf3+0x56c>
    aa4c:	0101ffc4 	movi	r4,2047
    aa50:	11007f26 	beq	r2,r4,ac50 <__adddf3+0x5d4>
    aa54:	898d883a 	add	r6,r17,r6
    aa58:	4247883a 	add	r3,r8,r9
    aa5c:	3451803a 	cmpltu	r8,r6,r17
    aa60:	40d1883a 	add	r8,r8,r3
    aa64:	402297fa 	slli	r17,r8,31
    aa68:	300cd07a 	srli	r6,r6,1
    aa6c:	4010d07a 	srli	r8,r8,1
    aa70:	1021883a 	mov	r16,r2
    aa74:	89a2b03a 	or	r17,r17,r6
    aa78:	003f1f06 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    aa7c:	0081ffc4 	movi	r2,2047
    aa80:	80bf481e 	bne	r16,r2,a7a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7a4>
    aa84:	003f1c06 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    aa88:	843ff844 	addi	r16,r16,-31
    aa8c:	01000804 	movi	r4,32
    aa90:	1406d83a 	srl	r3,r2,r16
    aa94:	41005026 	beq	r8,r4,abd8 <__adddf3+0x55c>
    aa98:	01001004 	movi	r4,64
    aa9c:	2211c83a 	sub	r8,r4,r8
    aaa0:	1204983a 	sll	r2,r2,r8
    aaa4:	88a2b03a 	or	r17,r17,r2
    aaa8:	8822c03a 	cmpne	r17,r17,zero
    aaac:	1c62b03a 	or	r17,r3,r17
    aab0:	0011883a 	mov	r8,zero
    aab4:	0021883a 	mov	r16,zero
    aab8:	003f7106 	br	a880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a880>
    aabc:	193ff804 	addi	r4,r3,-32
    aac0:	00800804 	movi	r2,32
    aac4:	4908d83a 	srl	r4,r9,r4
    aac8:	18804526 	beq	r3,r2,abe0 <__adddf3+0x564>
    aacc:	00801004 	movi	r2,64
    aad0:	10c5c83a 	sub	r2,r2,r3
    aad4:	4886983a 	sll	r3,r9,r2
    aad8:	198cb03a 	or	r6,r3,r6
    aadc:	300cc03a 	cmpne	r6,r6,zero
    aae0:	218cb03a 	or	r6,r4,r6
    aae4:	0007883a 	mov	r3,zero
    aae8:	003f3b06 	br	a7d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7d8>
    aaec:	80002a26 	beq	r16,zero,ab98 <__adddf3+0x51c>
    aaf0:	0101ffc4 	movi	r4,2047
    aaf4:	11006826 	beq	r2,r4,ac98 <__adddf3+0x61c>
    aaf8:	00c7c83a 	sub	r3,zero,r3
    aafc:	42002034 	orhi	r8,r8,128
    ab00:	01000e04 	movi	r4,56
    ab04:	20c07c16 	blt	r4,r3,acf8 <__adddf3+0x67c>
    ab08:	010007c4 	movi	r4,31
    ab0c:	20c0da16 	blt	r4,r3,ae78 <__adddf3+0x7fc>
    ab10:	01000804 	movi	r4,32
    ab14:	20c9c83a 	sub	r4,r4,r3
    ab18:	4114983a 	sll	r10,r8,r4
    ab1c:	88cad83a 	srl	r5,r17,r3
    ab20:	8908983a 	sll	r4,r17,r4
    ab24:	40c6d83a 	srl	r3,r8,r3
    ab28:	5162b03a 	or	r17,r10,r5
    ab2c:	2008c03a 	cmpne	r4,r4,zero
    ab30:	8922b03a 	or	r17,r17,r4
    ab34:	3463c83a 	sub	r17,r6,r17
    ab38:	48c7c83a 	sub	r3,r9,r3
    ab3c:	344d803a 	cmpltu	r6,r6,r17
    ab40:	1991c83a 	sub	r8,r3,r6
    ab44:	1021883a 	mov	r16,r2
    ab48:	3825883a 	mov	r18,r7
    ab4c:	003f2706 	br	a7ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7ec>
    ab50:	24d0b03a 	or	r8,r4,r19
    ab54:	40001b1e 	bne	r8,zero,abc4 <__adddf3+0x548>
    ab58:	0005883a 	mov	r2,zero
    ab5c:	0007883a 	mov	r3,zero
    ab60:	0021883a 	mov	r16,zero
    ab64:	003f4d06 	br	a89c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a89c>
    ab68:	008007c4 	movi	r2,31
    ab6c:	11003c16 	blt	r2,r4,ac60 <__adddf3+0x5e4>
    ab70:	00800804 	movi	r2,32
    ab74:	1105c83a 	sub	r2,r2,r4
    ab78:	488e983a 	sll	r7,r9,r2
    ab7c:	310ad83a 	srl	r5,r6,r4
    ab80:	3084983a 	sll	r2,r6,r2
    ab84:	4912d83a 	srl	r9,r9,r4
    ab88:	394ab03a 	or	r5,r7,r5
    ab8c:	1004c03a 	cmpne	r2,r2,zero
    ab90:	288ab03a 	or	r5,r5,r2
    ab94:	003f5306 	br	a8e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8e4>
    ab98:	4448b03a 	or	r4,r8,r17
    ab9c:	20003e26 	beq	r4,zero,ac98 <__adddf3+0x61c>
    aba0:	00c6303a 	nor	r3,zero,r3
    aba4:	18003a1e 	bne	r3,zero,ac90 <__adddf3+0x614>
    aba8:	3463c83a 	sub	r17,r6,r17
    abac:	4a07c83a 	sub	r3,r9,r8
    abb0:	344d803a 	cmpltu	r6,r6,r17
    abb4:	1991c83a 	sub	r8,r3,r6
    abb8:	1021883a 	mov	r16,r2
    abbc:	3825883a 	mov	r18,r7
    abc0:	003f0a06 	br	a7ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7ec>
    abc4:	2023883a 	mov	r17,r4
    abc8:	003f0d06 	br	a800 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a800>
    abcc:	0081ffc4 	movi	r2,2047
    abd0:	80bf3f1e 	bne	r16,r2,a8d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8d0>
    abd4:	003ec806 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    abd8:	0005883a 	mov	r2,zero
    abdc:	003fb106 	br	aaa4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aaa4>
    abe0:	0007883a 	mov	r3,zero
    abe4:	003fbc06 	br	aad8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aad8>
    abe8:	4444b03a 	or	r2,r8,r17
    abec:	8000871e 	bne	r16,zero,ae0c <__adddf3+0x790>
    abf0:	1000ba26 	beq	r2,zero,aedc <__adddf3+0x860>
    abf4:	4984b03a 	or	r2,r9,r6
    abf8:	103ebf26 	beq	r2,zero,a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    abfc:	8985883a 	add	r2,r17,r6
    ac00:	4247883a 	add	r3,r8,r9
    ac04:	1451803a 	cmpltu	r8,r2,r17
    ac08:	40d1883a 	add	r8,r8,r3
    ac0c:	40c0202c 	andhi	r3,r8,128
    ac10:	1023883a 	mov	r17,r2
    ac14:	183f1a26 	beq	r3,zero,a880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a880>
    ac18:	00bfe034 	movhi	r2,65408
    ac1c:	10bfffc4 	addi	r2,r2,-1
    ac20:	2021883a 	mov	r16,r4
    ac24:	4090703a 	and	r8,r8,r2
    ac28:	003eb306 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    ac2c:	4444b03a 	or	r2,r8,r17
    ac30:	8000291e 	bne	r16,zero,acd8 <__adddf3+0x65c>
    ac34:	10004b1e 	bne	r2,zero,ad64 <__adddf3+0x6e8>
    ac38:	4990b03a 	or	r8,r9,r6
    ac3c:	40008b26 	beq	r8,zero,ae6c <__adddf3+0x7f0>
    ac40:	4811883a 	mov	r8,r9
    ac44:	3023883a 	mov	r17,r6
    ac48:	3825883a 	mov	r18,r7
    ac4c:	003eaa06 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    ac50:	1021883a 	mov	r16,r2
    ac54:	0011883a 	mov	r8,zero
    ac58:	0005883a 	mov	r2,zero
    ac5c:	003f0f06 	br	a89c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a89c>
    ac60:	217ff804 	addi	r5,r4,-32
    ac64:	00800804 	movi	r2,32
    ac68:	494ad83a 	srl	r5,r9,r5
    ac6c:	20807d26 	beq	r4,r2,ae64 <__adddf3+0x7e8>
    ac70:	00801004 	movi	r2,64
    ac74:	1109c83a 	sub	r4,r2,r4
    ac78:	4912983a 	sll	r9,r9,r4
    ac7c:	498cb03a 	or	r6,r9,r6
    ac80:	300cc03a 	cmpne	r6,r6,zero
    ac84:	298ab03a 	or	r5,r5,r6
    ac88:	0013883a 	mov	r9,zero
    ac8c:	003f1506 	br	a8e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8e4>
    ac90:	0101ffc4 	movi	r4,2047
    ac94:	113f9a1e 	bne	r2,r4,ab00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab00>
    ac98:	4811883a 	mov	r8,r9
    ac9c:	3023883a 	mov	r17,r6
    aca0:	1021883a 	mov	r16,r2
    aca4:	3825883a 	mov	r18,r7
    aca8:	003e9306 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    acac:	8000161e 	bne	r16,zero,ad08 <__adddf3+0x68c>
    acb0:	444ab03a 	or	r5,r8,r17
    acb4:	28005126 	beq	r5,zero,adfc <__adddf3+0x780>
    acb8:	0108303a 	nor	r4,zero,r4
    acbc:	20004d1e 	bne	r4,zero,adf4 <__adddf3+0x778>
    acc0:	89a3883a 	add	r17,r17,r6
    acc4:	4253883a 	add	r9,r8,r9
    acc8:	898d803a 	cmpltu	r6,r17,r6
    accc:	3251883a 	add	r8,r6,r9
    acd0:	1021883a 	mov	r16,r2
    acd4:	003f0806 	br	a8f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8f8>
    acd8:	1000301e 	bne	r2,zero,ad9c <__adddf3+0x720>
    acdc:	4984b03a 	or	r2,r9,r6
    ace0:	10007126 	beq	r2,zero,aea8 <__adddf3+0x82c>
    ace4:	4811883a 	mov	r8,r9
    ace8:	3023883a 	mov	r17,r6
    acec:	3825883a 	mov	r18,r7
    acf0:	0401ffc4 	movi	r16,2047
    acf4:	003e8006 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    acf8:	4462b03a 	or	r17,r8,r17
    acfc:	8822c03a 	cmpne	r17,r17,zero
    ad00:	0007883a 	mov	r3,zero
    ad04:	003f8b06 	br	ab34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab34>
    ad08:	0141ffc4 	movi	r5,2047
    ad0c:	11403b26 	beq	r2,r5,adfc <__adddf3+0x780>
    ad10:	0109c83a 	sub	r4,zero,r4
    ad14:	42002034 	orhi	r8,r8,128
    ad18:	01400e04 	movi	r5,56
    ad1c:	29006716 	blt	r5,r4,aebc <__adddf3+0x840>
    ad20:	014007c4 	movi	r5,31
    ad24:	29007016 	blt	r5,r4,aee8 <__adddf3+0x86c>
    ad28:	01400804 	movi	r5,32
    ad2c:	290bc83a 	sub	r5,r5,r4
    ad30:	4154983a 	sll	r10,r8,r5
    ad34:	890ed83a 	srl	r7,r17,r4
    ad38:	894a983a 	sll	r5,r17,r5
    ad3c:	4108d83a 	srl	r4,r8,r4
    ad40:	51e2b03a 	or	r17,r10,r7
    ad44:	280ac03a 	cmpne	r5,r5,zero
    ad48:	8962b03a 	or	r17,r17,r5
    ad4c:	89a3883a 	add	r17,r17,r6
    ad50:	2253883a 	add	r9,r4,r9
    ad54:	898d803a 	cmpltu	r6,r17,r6
    ad58:	3251883a 	add	r8,r6,r9
    ad5c:	1021883a 	mov	r16,r2
    ad60:	003ee506 	br	a8f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8f8>
    ad64:	4984b03a 	or	r2,r9,r6
    ad68:	103e6326 	beq	r2,zero,a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    ad6c:	8987c83a 	sub	r3,r17,r6
    ad70:	88c9803a 	cmpltu	r4,r17,r3
    ad74:	4245c83a 	sub	r2,r8,r9
    ad78:	1105c83a 	sub	r2,r2,r4
    ad7c:	1100202c 	andhi	r4,r2,128
    ad80:	203ebb26 	beq	r4,zero,a870 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a870>
    ad84:	3463c83a 	sub	r17,r6,r17
    ad88:	4a07c83a 	sub	r3,r9,r8
    ad8c:	344d803a 	cmpltu	r6,r6,r17
    ad90:	1991c83a 	sub	r8,r3,r6
    ad94:	3825883a 	mov	r18,r7
    ad98:	003e5706 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    ad9c:	4984b03a 	or	r2,r9,r6
    ada0:	10002e26 	beq	r2,zero,ae5c <__adddf3+0x7e0>
    ada4:	4004d0fa 	srli	r2,r8,3
    ada8:	8822d0fa 	srli	r17,r17,3
    adac:	4010977a 	slli	r8,r8,29
    adb0:	10c0022c 	andhi	r3,r2,8
    adb4:	4462b03a 	or	r17,r8,r17
    adb8:	18000826 	beq	r3,zero,addc <__adddf3+0x760>
    adbc:	4808d0fa 	srli	r4,r9,3
    adc0:	20c0022c 	andhi	r3,r4,8
    adc4:	1800051e 	bne	r3,zero,addc <__adddf3+0x760>
    adc8:	300cd0fa 	srli	r6,r6,3
    adcc:	4806977a 	slli	r3,r9,29
    add0:	2005883a 	mov	r2,r4
    add4:	3825883a 	mov	r18,r7
    add8:	19a2b03a 	or	r17,r3,r6
    addc:	8810d77a 	srli	r8,r17,29
    ade0:	100490fa 	slli	r2,r2,3
    ade4:	882290fa 	slli	r17,r17,3
    ade8:	0401ffc4 	movi	r16,2047
    adec:	4090b03a 	or	r8,r8,r2
    adf0:	003e4106 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    adf4:	0141ffc4 	movi	r5,2047
    adf8:	117fc71e 	bne	r2,r5,ad18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad18>
    adfc:	4811883a 	mov	r8,r9
    ae00:	3023883a 	mov	r17,r6
    ae04:	1021883a 	mov	r16,r2
    ae08:	003e3b06 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    ae0c:	10002f26 	beq	r2,zero,aecc <__adddf3+0x850>
    ae10:	4984b03a 	or	r2,r9,r6
    ae14:	10001126 	beq	r2,zero,ae5c <__adddf3+0x7e0>
    ae18:	4004d0fa 	srli	r2,r8,3
    ae1c:	8822d0fa 	srli	r17,r17,3
    ae20:	4010977a 	slli	r8,r8,29
    ae24:	10c0022c 	andhi	r3,r2,8
    ae28:	4462b03a 	or	r17,r8,r17
    ae2c:	183feb26 	beq	r3,zero,addc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000addc>
    ae30:	4808d0fa 	srli	r4,r9,3
    ae34:	20c0022c 	andhi	r3,r4,8
    ae38:	183fe81e 	bne	r3,zero,addc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000addc>
    ae3c:	300cd0fa 	srli	r6,r6,3
    ae40:	4806977a 	slli	r3,r9,29
    ae44:	2005883a 	mov	r2,r4
    ae48:	19a2b03a 	or	r17,r3,r6
    ae4c:	003fe306 	br	addc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000addc>
    ae50:	0011883a 	mov	r8,zero
    ae54:	0005883a 	mov	r2,zero
    ae58:	003e3f06 	br	a758 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a758>
    ae5c:	0401ffc4 	movi	r16,2047
    ae60:	003e2506 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    ae64:	0013883a 	mov	r9,zero
    ae68:	003f8406 	br	ac7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac7c>
    ae6c:	0005883a 	mov	r2,zero
    ae70:	0007883a 	mov	r3,zero
    ae74:	003e8906 	br	a89c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a89c>
    ae78:	197ff804 	addi	r5,r3,-32
    ae7c:	01000804 	movi	r4,32
    ae80:	414ad83a 	srl	r5,r8,r5
    ae84:	19002426 	beq	r3,r4,af18 <__adddf3+0x89c>
    ae88:	01001004 	movi	r4,64
    ae8c:	20c7c83a 	sub	r3,r4,r3
    ae90:	40c6983a 	sll	r3,r8,r3
    ae94:	1c46b03a 	or	r3,r3,r17
    ae98:	1806c03a 	cmpne	r3,r3,zero
    ae9c:	28e2b03a 	or	r17,r5,r3
    aea0:	0007883a 	mov	r3,zero
    aea4:	003f2306 	br	ab34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab34>
    aea8:	0007883a 	mov	r3,zero
    aeac:	5811883a 	mov	r8,r11
    aeb0:	00bfffc4 	movi	r2,-1
    aeb4:	0401ffc4 	movi	r16,2047
    aeb8:	003e7806 	br	a89c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a89c>
    aebc:	4462b03a 	or	r17,r8,r17
    aec0:	8822c03a 	cmpne	r17,r17,zero
    aec4:	0009883a 	mov	r4,zero
    aec8:	003fa006 	br	ad4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad4c>
    aecc:	4811883a 	mov	r8,r9
    aed0:	3023883a 	mov	r17,r6
    aed4:	0401ffc4 	movi	r16,2047
    aed8:	003e0706 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    aedc:	4811883a 	mov	r8,r9
    aee0:	3023883a 	mov	r17,r6
    aee4:	003e0406 	br	a6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6f8>
    aee8:	21fff804 	addi	r7,r4,-32
    aeec:	01400804 	movi	r5,32
    aef0:	41ced83a 	srl	r7,r8,r7
    aef4:	21400a26 	beq	r4,r5,af20 <__adddf3+0x8a4>
    aef8:	01401004 	movi	r5,64
    aefc:	2909c83a 	sub	r4,r5,r4
    af00:	4108983a 	sll	r4,r8,r4
    af04:	2448b03a 	or	r4,r4,r17
    af08:	2008c03a 	cmpne	r4,r4,zero
    af0c:	3922b03a 	or	r17,r7,r4
    af10:	0009883a 	mov	r4,zero
    af14:	003f8d06 	br	ad4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad4c>
    af18:	0007883a 	mov	r3,zero
    af1c:	003fdd06 	br	ae94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae94>
    af20:	0009883a 	mov	r4,zero
    af24:	003ff706 	br	af04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000af04>

0000af28 <__divdf3>:
    af28:	defff204 	addi	sp,sp,-56
    af2c:	dd400915 	stw	r21,36(sp)
    af30:	282ad53a 	srli	r21,r5,20
    af34:	dd000815 	stw	r20,32(sp)
    af38:	2828d7fa 	srli	r20,r5,31
    af3c:	dc000415 	stw	r16,16(sp)
    af40:	04000434 	movhi	r16,16
    af44:	df000c15 	stw	fp,48(sp)
    af48:	843fffc4 	addi	r16,r16,-1
    af4c:	dfc00d15 	stw	ra,52(sp)
    af50:	ddc00b15 	stw	r23,44(sp)
    af54:	dd800a15 	stw	r22,40(sp)
    af58:	dcc00715 	stw	r19,28(sp)
    af5c:	dc800615 	stw	r18,24(sp)
    af60:	dc400515 	stw	r17,20(sp)
    af64:	ad41ffcc 	andi	r21,r21,2047
    af68:	2c20703a 	and	r16,r5,r16
    af6c:	a7003fcc 	andi	fp,r20,255
    af70:	a8006126 	beq	r21,zero,b0f8 <__divdf3+0x1d0>
    af74:	0081ffc4 	movi	r2,2047
    af78:	2025883a 	mov	r18,r4
    af7c:	a8803726 	beq	r21,r2,b05c <__divdf3+0x134>
    af80:	80c00434 	orhi	r3,r16,16
    af84:	180690fa 	slli	r3,r3,3
    af88:	2020d77a 	srli	r16,r4,29
    af8c:	202490fa 	slli	r18,r4,3
    af90:	ad7f0044 	addi	r21,r21,-1023
    af94:	80e0b03a 	or	r16,r16,r3
    af98:	0027883a 	mov	r19,zero
    af9c:	0013883a 	mov	r9,zero
    afa0:	3808d53a 	srli	r4,r7,20
    afa4:	382cd7fa 	srli	r22,r7,31
    afa8:	04400434 	movhi	r17,16
    afac:	8c7fffc4 	addi	r17,r17,-1
    afb0:	2101ffcc 	andi	r4,r4,2047
    afb4:	3011883a 	mov	r8,r6
    afb8:	3c62703a 	and	r17,r7,r17
    afbc:	b5c03fcc 	andi	r23,r22,255
    afc0:	20006c26 	beq	r4,zero,b174 <__divdf3+0x24c>
    afc4:	0081ffc4 	movi	r2,2047
    afc8:	20806426 	beq	r4,r2,b15c <__divdf3+0x234>
    afcc:	88c00434 	orhi	r3,r17,16
    afd0:	180690fa 	slli	r3,r3,3
    afd4:	3022d77a 	srli	r17,r6,29
    afd8:	301090fa 	slli	r8,r6,3
    afdc:	213f0044 	addi	r4,r4,-1023
    afe0:	88e2b03a 	or	r17,r17,r3
    afe4:	000d883a 	mov	r6,zero
    afe8:	a584f03a 	xor	r2,r20,r22
    afec:	34cab03a 	or	r5,r6,r19
    aff0:	1007883a 	mov	r3,r2
    aff4:	14c03fcc 	andi	r19,r2,255
    aff8:	008003c4 	movi	r2,15
    affc:	a92bc83a 	sub	r21,r21,r4
    b000:	11409036 	bltu	r2,r5,b244 <__divdf3+0x31c>
    b004:	280a90ba 	slli	r5,r5,2
    b008:	00800074 	movhi	r2,1
    b00c:	10ac0704 	addi	r2,r2,-20452
    b010:	288b883a 	add	r5,r5,r2
    b014:	28800017 	ldw	r2,0(r5)
    b018:	1000683a 	jmp	r2
    b01c:	0000b244 	movi	zero,713
    b020:	0000b094 	movui	zero,706
    b024:	0000b234 	movhi	zero,712
    b028:	0000b088 	cmpgei	zero,zero,706
    b02c:	0000b234 	movhi	zero,712
    b030:	0000b208 	cmpgei	zero,zero,712
    b034:	0000b234 	movhi	zero,712
    b038:	0000b088 	cmpgei	zero,zero,706
    b03c:	0000b094 	movui	zero,706
    b040:	0000b094 	movui	zero,706
    b044:	0000b208 	cmpgei	zero,zero,712
    b048:	0000b088 	cmpgei	zero,zero,706
    b04c:	0000b078 	rdprs	zero,zero,705
    b050:	0000b078 	rdprs	zero,zero,705
    b054:	0000b078 	rdprs	zero,zero,705
    b058:	0000b528 	cmpgeui	zero,zero,724
    b05c:	2404b03a 	or	r2,r4,r16
    b060:	1000661e 	bne	r2,zero,b1fc <__divdf3+0x2d4>
    b064:	04c00204 	movi	r19,8
    b068:	0021883a 	mov	r16,zero
    b06c:	0025883a 	mov	r18,zero
    b070:	02400084 	movi	r9,2
    b074:	003fca06 	br	afa0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afa0>
    b078:	8023883a 	mov	r17,r16
    b07c:	9011883a 	mov	r8,r18
    b080:	e02f883a 	mov	r23,fp
    b084:	480d883a 	mov	r6,r9
    b088:	00800084 	movi	r2,2
    b08c:	3081311e 	bne	r6,r2,b554 <__divdf3+0x62c>
    b090:	b827883a 	mov	r19,r23
    b094:	98c0004c 	andi	r3,r19,1
    b098:	0081ffc4 	movi	r2,2047
    b09c:	000b883a 	mov	r5,zero
    b0a0:	0025883a 	mov	r18,zero
    b0a4:	1004953a 	slli	r2,r2,20
    b0a8:	18c03fcc 	andi	r3,r3,255
    b0ac:	04400434 	movhi	r17,16
    b0b0:	8c7fffc4 	addi	r17,r17,-1
    b0b4:	180697fa 	slli	r3,r3,31
    b0b8:	2c4a703a 	and	r5,r5,r17
    b0bc:	288ab03a 	or	r5,r5,r2
    b0c0:	28c6b03a 	or	r3,r5,r3
    b0c4:	9005883a 	mov	r2,r18
    b0c8:	dfc00d17 	ldw	ra,52(sp)
    b0cc:	df000c17 	ldw	fp,48(sp)
    b0d0:	ddc00b17 	ldw	r23,44(sp)
    b0d4:	dd800a17 	ldw	r22,40(sp)
    b0d8:	dd400917 	ldw	r21,36(sp)
    b0dc:	dd000817 	ldw	r20,32(sp)
    b0e0:	dcc00717 	ldw	r19,28(sp)
    b0e4:	dc800617 	ldw	r18,24(sp)
    b0e8:	dc400517 	ldw	r17,20(sp)
    b0ec:	dc000417 	ldw	r16,16(sp)
    b0f0:	dec00e04 	addi	sp,sp,56
    b0f4:	f800283a 	ret
    b0f8:	2404b03a 	or	r2,r4,r16
    b0fc:	2027883a 	mov	r19,r4
    b100:	10003926 	beq	r2,zero,b1e8 <__divdf3+0x2c0>
    b104:	80012e26 	beq	r16,zero,b5c0 <__divdf3+0x698>
    b108:	8009883a 	mov	r4,r16
    b10c:	d9800315 	stw	r6,12(sp)
    b110:	d9c00215 	stw	r7,8(sp)
    b114:	000cc800 	call	cc80 <__clzsi2>
    b118:	d9800317 	ldw	r6,12(sp)
    b11c:	d9c00217 	ldw	r7,8(sp)
    b120:	10fffd44 	addi	r3,r2,-11
    b124:	01000704 	movi	r4,28
    b128:	20c12116 	blt	r4,r3,b5b0 <__divdf3+0x688>
    b12c:	01000744 	movi	r4,29
    b130:	147ffe04 	addi	r17,r2,-8
    b134:	20c9c83a 	sub	r4,r4,r3
    b138:	8460983a 	sll	r16,r16,r17
    b13c:	9908d83a 	srl	r4,r19,r4
    b140:	9c64983a 	sll	r18,r19,r17
    b144:	2420b03a 	or	r16,r4,r16
    b148:	057f0084 	movi	r21,-1022
    b14c:	a8ebc83a 	sub	r21,r21,r3
    b150:	0027883a 	mov	r19,zero
    b154:	0013883a 	mov	r9,zero
    b158:	003f9106 	br	afa0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afa0>
    b15c:	3444b03a 	or	r2,r6,r17
    b160:	10001f1e 	bne	r2,zero,b1e0 <__divdf3+0x2b8>
    b164:	0023883a 	mov	r17,zero
    b168:	0011883a 	mov	r8,zero
    b16c:	01800084 	movi	r6,2
    b170:	003f9d06 	br	afe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afe8>
    b174:	3444b03a 	or	r2,r6,r17
    b178:	10001526 	beq	r2,zero,b1d0 <__divdf3+0x2a8>
    b17c:	88011b26 	beq	r17,zero,b5ec <__divdf3+0x6c4>
    b180:	8809883a 	mov	r4,r17
    b184:	d9800315 	stw	r6,12(sp)
    b188:	da400115 	stw	r9,4(sp)
    b18c:	000cc800 	call	cc80 <__clzsi2>
    b190:	d9800317 	ldw	r6,12(sp)
    b194:	da400117 	ldw	r9,4(sp)
    b198:	10fffd44 	addi	r3,r2,-11
    b19c:	01000704 	movi	r4,28
    b1a0:	20c10e16 	blt	r4,r3,b5dc <__divdf3+0x6b4>
    b1a4:	01000744 	movi	r4,29
    b1a8:	123ffe04 	addi	r8,r2,-8
    b1ac:	20c9c83a 	sub	r4,r4,r3
    b1b0:	8a22983a 	sll	r17,r17,r8
    b1b4:	3108d83a 	srl	r4,r6,r4
    b1b8:	3210983a 	sll	r8,r6,r8
    b1bc:	2462b03a 	or	r17,r4,r17
    b1c0:	013f0084 	movi	r4,-1022
    b1c4:	20c9c83a 	sub	r4,r4,r3
    b1c8:	000d883a 	mov	r6,zero
    b1cc:	003f8606 	br	afe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afe8>
    b1d0:	0023883a 	mov	r17,zero
    b1d4:	0011883a 	mov	r8,zero
    b1d8:	01800044 	movi	r6,1
    b1dc:	003f8206 	br	afe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afe8>
    b1e0:	018000c4 	movi	r6,3
    b1e4:	003f8006 	br	afe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afe8>
    b1e8:	04c00104 	movi	r19,4
    b1ec:	0021883a 	mov	r16,zero
    b1f0:	0025883a 	mov	r18,zero
    b1f4:	02400044 	movi	r9,1
    b1f8:	003f6906 	br	afa0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afa0>
    b1fc:	04c00304 	movi	r19,12
    b200:	024000c4 	movi	r9,3
    b204:	003f6606 	br	afa0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afa0>
    b208:	01400434 	movhi	r5,16
    b20c:	0007883a 	mov	r3,zero
    b210:	297fffc4 	addi	r5,r5,-1
    b214:	04bfffc4 	movi	r18,-1
    b218:	0081ffc4 	movi	r2,2047
    b21c:	003fa106 	br	b0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b0a4>
    b220:	00c00044 	movi	r3,1
    b224:	1887c83a 	sub	r3,r3,r2
    b228:	01000e04 	movi	r4,56
    b22c:	20c1210e 	bge	r4,r3,b6b4 <__divdf3+0x78c>
    b230:	98c0004c 	andi	r3,r19,1
    b234:	0005883a 	mov	r2,zero
    b238:	000b883a 	mov	r5,zero
    b23c:	0025883a 	mov	r18,zero
    b240:	003f9806 	br	b0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b0a4>
    b244:	8c00fd36 	bltu	r17,r16,b63c <__divdf3+0x714>
    b248:	8440fb26 	beq	r16,r17,b638 <__divdf3+0x710>
    b24c:	8007883a 	mov	r3,r16
    b250:	ad7fffc4 	addi	r21,r21,-1
    b254:	0021883a 	mov	r16,zero
    b258:	400ad63a 	srli	r5,r8,24
    b25c:	8822923a 	slli	r17,r17,8
    b260:	1809883a 	mov	r4,r3
    b264:	402c923a 	slli	r22,r8,8
    b268:	8978b03a 	or	fp,r17,r5
    b26c:	e028d43a 	srli	r20,fp,16
    b270:	d8c00015 	stw	r3,0(sp)
    b274:	e5ffffcc 	andi	r23,fp,65535
    b278:	a00b883a 	mov	r5,r20
    b27c:	000a5c00 	call	a5c0 <__udivsi3>
    b280:	d8c00017 	ldw	r3,0(sp)
    b284:	a00b883a 	mov	r5,r20
    b288:	d8800315 	stw	r2,12(sp)
    b28c:	1809883a 	mov	r4,r3
    b290:	000a6240 	call	a624 <__umodsi3>
    b294:	d9800317 	ldw	r6,12(sp)
    b298:	1006943a 	slli	r3,r2,16
    b29c:	9004d43a 	srli	r2,r18,16
    b2a0:	b9a3383a 	mul	r17,r23,r6
    b2a4:	10c4b03a 	or	r2,r2,r3
    b2a8:	1440062e 	bgeu	r2,r17,b2c4 <__divdf3+0x39c>
    b2ac:	1705883a 	add	r2,r2,fp
    b2b0:	30ffffc4 	addi	r3,r6,-1
    b2b4:	1700ee36 	bltu	r2,fp,b670 <__divdf3+0x748>
    b2b8:	1440ed2e 	bgeu	r2,r17,b670 <__divdf3+0x748>
    b2bc:	31bfff84 	addi	r6,r6,-2
    b2c0:	1705883a 	add	r2,r2,fp
    b2c4:	1463c83a 	sub	r17,r2,r17
    b2c8:	a00b883a 	mov	r5,r20
    b2cc:	8809883a 	mov	r4,r17
    b2d0:	d9800315 	stw	r6,12(sp)
    b2d4:	000a5c00 	call	a5c0 <__udivsi3>
    b2d8:	a00b883a 	mov	r5,r20
    b2dc:	8809883a 	mov	r4,r17
    b2e0:	d8800215 	stw	r2,8(sp)
    b2e4:	000a6240 	call	a624 <__umodsi3>
    b2e8:	d9c00217 	ldw	r7,8(sp)
    b2ec:	1004943a 	slli	r2,r2,16
    b2f0:	94bfffcc 	andi	r18,r18,65535
    b2f4:	b9d1383a 	mul	r8,r23,r7
    b2f8:	90a4b03a 	or	r18,r18,r2
    b2fc:	d9800317 	ldw	r6,12(sp)
    b300:	9200062e 	bgeu	r18,r8,b31c <__divdf3+0x3f4>
    b304:	9725883a 	add	r18,r18,fp
    b308:	38bfffc4 	addi	r2,r7,-1
    b30c:	9700d636 	bltu	r18,fp,b668 <__divdf3+0x740>
    b310:	9200d52e 	bgeu	r18,r8,b668 <__divdf3+0x740>
    b314:	39ffff84 	addi	r7,r7,-2
    b318:	9725883a 	add	r18,r18,fp
    b31c:	3004943a 	slli	r2,r6,16
    b320:	b012d43a 	srli	r9,r22,16
    b324:	b1bfffcc 	andi	r6,r22,65535
    b328:	11e2b03a 	or	r17,r2,r7
    b32c:	8806d43a 	srli	r3,r17,16
    b330:	893fffcc 	andi	r4,r17,65535
    b334:	218b383a 	mul	r5,r4,r6
    b338:	30c5383a 	mul	r2,r6,r3
    b33c:	2249383a 	mul	r4,r4,r9
    b340:	280ed43a 	srli	r7,r5,16
    b344:	9225c83a 	sub	r18,r18,r8
    b348:	2089883a 	add	r4,r4,r2
    b34c:	3909883a 	add	r4,r7,r4
    b350:	1a47383a 	mul	r3,r3,r9
    b354:	2080022e 	bgeu	r4,r2,b360 <__divdf3+0x438>
    b358:	00800074 	movhi	r2,1
    b35c:	1887883a 	add	r3,r3,r2
    b360:	2004d43a 	srli	r2,r4,16
    b364:	2008943a 	slli	r4,r4,16
    b368:	297fffcc 	andi	r5,r5,65535
    b36c:	10c7883a 	add	r3,r2,r3
    b370:	2149883a 	add	r4,r4,r5
    b374:	90c0a536 	bltu	r18,r3,b60c <__divdf3+0x6e4>
    b378:	90c0bf26 	beq	r18,r3,b678 <__divdf3+0x750>
    b37c:	90c7c83a 	sub	r3,r18,r3
    b380:	810fc83a 	sub	r7,r16,r4
    b384:	81e5803a 	cmpltu	r18,r16,r7
    b388:	1ca5c83a 	sub	r18,r3,r18
    b38c:	e480c126 	beq	fp,r18,b694 <__divdf3+0x76c>
    b390:	a00b883a 	mov	r5,r20
    b394:	9009883a 	mov	r4,r18
    b398:	d9800315 	stw	r6,12(sp)
    b39c:	d9c00215 	stw	r7,8(sp)
    b3a0:	da400115 	stw	r9,4(sp)
    b3a4:	000a5c00 	call	a5c0 <__udivsi3>
    b3a8:	a00b883a 	mov	r5,r20
    b3ac:	9009883a 	mov	r4,r18
    b3b0:	d8800015 	stw	r2,0(sp)
    b3b4:	000a6240 	call	a624 <__umodsi3>
    b3b8:	d9c00217 	ldw	r7,8(sp)
    b3bc:	da000017 	ldw	r8,0(sp)
    b3c0:	1006943a 	slli	r3,r2,16
    b3c4:	3804d43a 	srli	r2,r7,16
    b3c8:	ba21383a 	mul	r16,r23,r8
    b3cc:	d9800317 	ldw	r6,12(sp)
    b3d0:	10c4b03a 	or	r2,r2,r3
    b3d4:	da400117 	ldw	r9,4(sp)
    b3d8:	1400062e 	bgeu	r2,r16,b3f4 <__divdf3+0x4cc>
    b3dc:	1705883a 	add	r2,r2,fp
    b3e0:	40ffffc4 	addi	r3,r8,-1
    b3e4:	1700ad36 	bltu	r2,fp,b69c <__divdf3+0x774>
    b3e8:	1400ac2e 	bgeu	r2,r16,b69c <__divdf3+0x774>
    b3ec:	423fff84 	addi	r8,r8,-2
    b3f0:	1705883a 	add	r2,r2,fp
    b3f4:	1421c83a 	sub	r16,r2,r16
    b3f8:	a00b883a 	mov	r5,r20
    b3fc:	8009883a 	mov	r4,r16
    b400:	d9800315 	stw	r6,12(sp)
    b404:	d9c00215 	stw	r7,8(sp)
    b408:	da000015 	stw	r8,0(sp)
    b40c:	da400115 	stw	r9,4(sp)
    b410:	000a5c00 	call	a5c0 <__udivsi3>
    b414:	8009883a 	mov	r4,r16
    b418:	a00b883a 	mov	r5,r20
    b41c:	1025883a 	mov	r18,r2
    b420:	000a6240 	call	a624 <__umodsi3>
    b424:	d9c00217 	ldw	r7,8(sp)
    b428:	1004943a 	slli	r2,r2,16
    b42c:	bcaf383a 	mul	r23,r23,r18
    b430:	393fffcc 	andi	r4,r7,65535
    b434:	2088b03a 	or	r4,r4,r2
    b438:	d9800317 	ldw	r6,12(sp)
    b43c:	da000017 	ldw	r8,0(sp)
    b440:	da400117 	ldw	r9,4(sp)
    b444:	25c0062e 	bgeu	r4,r23,b460 <__divdf3+0x538>
    b448:	2709883a 	add	r4,r4,fp
    b44c:	90bfffc4 	addi	r2,r18,-1
    b450:	27009436 	bltu	r4,fp,b6a4 <__divdf3+0x77c>
    b454:	25c0932e 	bgeu	r4,r23,b6a4 <__divdf3+0x77c>
    b458:	94bfff84 	addi	r18,r18,-2
    b45c:	2709883a 	add	r4,r4,fp
    b460:	4004943a 	slli	r2,r8,16
    b464:	25efc83a 	sub	r23,r4,r23
    b468:	1490b03a 	or	r8,r2,r18
    b46c:	4008d43a 	srli	r4,r8,16
    b470:	40ffffcc 	andi	r3,r8,65535
    b474:	30c5383a 	mul	r2,r6,r3
    b478:	1a47383a 	mul	r3,r3,r9
    b47c:	310d383a 	mul	r6,r6,r4
    b480:	100ad43a 	srli	r5,r2,16
    b484:	4913383a 	mul	r9,r9,r4
    b488:	1987883a 	add	r3,r3,r6
    b48c:	28c7883a 	add	r3,r5,r3
    b490:	1980022e 	bgeu	r3,r6,b49c <__divdf3+0x574>
    b494:	01000074 	movhi	r4,1
    b498:	4913883a 	add	r9,r9,r4
    b49c:	1808d43a 	srli	r4,r3,16
    b4a0:	1806943a 	slli	r3,r3,16
    b4a4:	10bfffcc 	andi	r2,r2,65535
    b4a8:	2253883a 	add	r9,r4,r9
    b4ac:	1887883a 	add	r3,r3,r2
    b4b0:	ba403836 	bltu	r23,r9,b594 <__divdf3+0x66c>
    b4b4:	ba403626 	beq	r23,r9,b590 <__divdf3+0x668>
    b4b8:	42000054 	ori	r8,r8,1
    b4bc:	a880ffc4 	addi	r2,r21,1023
    b4c0:	00bf570e 	bge	zero,r2,b220 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b220>
    b4c4:	40c001cc 	andi	r3,r8,7
    b4c8:	18000726 	beq	r3,zero,b4e8 <__divdf3+0x5c0>
    b4cc:	40c003cc 	andi	r3,r8,15
    b4d0:	01000104 	movi	r4,4
    b4d4:	19000426 	beq	r3,r4,b4e8 <__divdf3+0x5c0>
    b4d8:	4107883a 	add	r3,r8,r4
    b4dc:	1a11803a 	cmpltu	r8,r3,r8
    b4e0:	8a23883a 	add	r17,r17,r8
    b4e4:	1811883a 	mov	r8,r3
    b4e8:	88c0402c 	andhi	r3,r17,256
    b4ec:	18000426 	beq	r3,zero,b500 <__divdf3+0x5d8>
    b4f0:	00ffc034 	movhi	r3,65280
    b4f4:	18ffffc4 	addi	r3,r3,-1
    b4f8:	a8810004 	addi	r2,r21,1024
    b4fc:	88e2703a 	and	r17,r17,r3
    b500:	00c1ff84 	movi	r3,2046
    b504:	18bee316 	blt	r3,r2,b094 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b094>
    b508:	8824977a 	slli	r18,r17,29
    b50c:	4010d0fa 	srli	r8,r8,3
    b510:	8822927a 	slli	r17,r17,9
    b514:	1081ffcc 	andi	r2,r2,2047
    b518:	9224b03a 	or	r18,r18,r8
    b51c:	880ad33a 	srli	r5,r17,12
    b520:	98c0004c 	andi	r3,r19,1
    b524:	003edf06 	br	b0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b0a4>
    b528:	8080022c 	andhi	r2,r16,8
    b52c:	10001226 	beq	r2,zero,b578 <__divdf3+0x650>
    b530:	8880022c 	andhi	r2,r17,8
    b534:	1000101e 	bne	r2,zero,b578 <__divdf3+0x650>
    b538:	00800434 	movhi	r2,16
    b53c:	89400234 	orhi	r5,r17,8
    b540:	10bfffc4 	addi	r2,r2,-1
    b544:	b007883a 	mov	r3,r22
    b548:	288a703a 	and	r5,r5,r2
    b54c:	4025883a 	mov	r18,r8
    b550:	003f3106 	br	b218 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b218>
    b554:	008000c4 	movi	r2,3
    b558:	3080a626 	beq	r6,r2,b7f4 <__divdf3+0x8cc>
    b55c:	00800044 	movi	r2,1
    b560:	3080521e 	bne	r6,r2,b6ac <__divdf3+0x784>
    b564:	b807883a 	mov	r3,r23
    b568:	0005883a 	mov	r2,zero
    b56c:	000b883a 	mov	r5,zero
    b570:	0025883a 	mov	r18,zero
    b574:	003ecb06 	br	b0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b0a4>
    b578:	00800434 	movhi	r2,16
    b57c:	81400234 	orhi	r5,r16,8
    b580:	10bfffc4 	addi	r2,r2,-1
    b584:	a007883a 	mov	r3,r20
    b588:	288a703a 	and	r5,r5,r2
    b58c:	003f2206 	br	b218 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b218>
    b590:	183fca26 	beq	r3,zero,b4bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4bc>
    b594:	e5ef883a 	add	r23,fp,r23
    b598:	40bfffc4 	addi	r2,r8,-1
    b59c:	bf00392e 	bgeu	r23,fp,b684 <__divdf3+0x75c>
    b5a0:	1011883a 	mov	r8,r2
    b5a4:	ba7fc41e 	bne	r23,r9,b4b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4b8>
    b5a8:	b0ffc31e 	bne	r22,r3,b4b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4b8>
    b5ac:	003fc306 	br	b4bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4bc>
    b5b0:	10bff604 	addi	r2,r2,-40
    b5b4:	98a0983a 	sll	r16,r19,r2
    b5b8:	0025883a 	mov	r18,zero
    b5bc:	003ee206 	br	b148 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b148>
    b5c0:	d9800315 	stw	r6,12(sp)
    b5c4:	d9c00215 	stw	r7,8(sp)
    b5c8:	000cc800 	call	cc80 <__clzsi2>
    b5cc:	10800804 	addi	r2,r2,32
    b5d0:	d9c00217 	ldw	r7,8(sp)
    b5d4:	d9800317 	ldw	r6,12(sp)
    b5d8:	003ed106 	br	b120 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b120>
    b5dc:	10bff604 	addi	r2,r2,-40
    b5e0:	30a2983a 	sll	r17,r6,r2
    b5e4:	0011883a 	mov	r8,zero
    b5e8:	003ef506 	br	b1c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b1c0>
    b5ec:	3009883a 	mov	r4,r6
    b5f0:	d9800315 	stw	r6,12(sp)
    b5f4:	da400115 	stw	r9,4(sp)
    b5f8:	000cc800 	call	cc80 <__clzsi2>
    b5fc:	10800804 	addi	r2,r2,32
    b600:	da400117 	ldw	r9,4(sp)
    b604:	d9800317 	ldw	r6,12(sp)
    b608:	003ee306 	br	b198 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b198>
    b60c:	85a1883a 	add	r16,r16,r22
    b610:	8585803a 	cmpltu	r2,r16,r22
    b614:	1705883a 	add	r2,r2,fp
    b618:	14a5883a 	add	r18,r2,r18
    b61c:	88bfffc4 	addi	r2,r17,-1
    b620:	e4800c2e 	bgeu	fp,r18,b654 <__divdf3+0x72c>
    b624:	90c03e36 	bltu	r18,r3,b720 <__divdf3+0x7f8>
    b628:	1c806926 	beq	r3,r18,b7d0 <__divdf3+0x8a8>
    b62c:	90c7c83a 	sub	r3,r18,r3
    b630:	1023883a 	mov	r17,r2
    b634:	003f5206 	br	b380 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b380>
    b638:	923f0436 	bltu	r18,r8,b24c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b24c>
    b63c:	800897fa 	slli	r4,r16,31
    b640:	9004d07a 	srli	r2,r18,1
    b644:	8006d07a 	srli	r3,r16,1
    b648:	902097fa 	slli	r16,r18,31
    b64c:	20a4b03a 	or	r18,r4,r2
    b650:	003f0106 	br	b258 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b258>
    b654:	e4bff51e 	bne	fp,r18,b62c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b62c>
    b658:	85bff22e 	bgeu	r16,r22,b624 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b624>
    b65c:	e0c7c83a 	sub	r3,fp,r3
    b660:	1023883a 	mov	r17,r2
    b664:	003f4606 	br	b380 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b380>
    b668:	100f883a 	mov	r7,r2
    b66c:	003f2b06 	br	b31c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b31c>
    b670:	180d883a 	mov	r6,r3
    b674:	003f1306 	br	b2c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b2c4>
    b678:	813fe436 	bltu	r16,r4,b60c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b60c>
    b67c:	0007883a 	mov	r3,zero
    b680:	003f3f06 	br	b380 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b380>
    b684:	ba402c36 	bltu	r23,r9,b738 <__divdf3+0x810>
    b688:	4dc05426 	beq	r9,r23,b7dc <__divdf3+0x8b4>
    b68c:	1011883a 	mov	r8,r2
    b690:	003f8906 	br	b4b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4b8>
    b694:	023fffc4 	movi	r8,-1
    b698:	003f8806 	br	b4bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4bc>
    b69c:	1811883a 	mov	r8,r3
    b6a0:	003f5406 	br	b3f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b3f4>
    b6a4:	1025883a 	mov	r18,r2
    b6a8:	003f6d06 	br	b460 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b460>
    b6ac:	b827883a 	mov	r19,r23
    b6b0:	003f8206 	br	b4bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4bc>
    b6b4:	010007c4 	movi	r4,31
    b6b8:	20c02616 	blt	r4,r3,b754 <__divdf3+0x82c>
    b6bc:	00800804 	movi	r2,32
    b6c0:	10c5c83a 	sub	r2,r2,r3
    b6c4:	888a983a 	sll	r5,r17,r2
    b6c8:	40c8d83a 	srl	r4,r8,r3
    b6cc:	4084983a 	sll	r2,r8,r2
    b6d0:	88e2d83a 	srl	r17,r17,r3
    b6d4:	2906b03a 	or	r3,r5,r4
    b6d8:	1004c03a 	cmpne	r2,r2,zero
    b6dc:	1886b03a 	or	r3,r3,r2
    b6e0:	188001cc 	andi	r2,r3,7
    b6e4:	10000726 	beq	r2,zero,b704 <__divdf3+0x7dc>
    b6e8:	188003cc 	andi	r2,r3,15
    b6ec:	01000104 	movi	r4,4
    b6f0:	11000426 	beq	r2,r4,b704 <__divdf3+0x7dc>
    b6f4:	1805883a 	mov	r2,r3
    b6f8:	10c00104 	addi	r3,r2,4
    b6fc:	1885803a 	cmpltu	r2,r3,r2
    b700:	88a3883a 	add	r17,r17,r2
    b704:	8880202c 	andhi	r2,r17,128
    b708:	10002726 	beq	r2,zero,b7a8 <__divdf3+0x880>
    b70c:	98c0004c 	andi	r3,r19,1
    b710:	00800044 	movi	r2,1
    b714:	000b883a 	mov	r5,zero
    b718:	0025883a 	mov	r18,zero
    b71c:	003e6106 	br	b0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b0a4>
    b720:	85a1883a 	add	r16,r16,r22
    b724:	8585803a 	cmpltu	r2,r16,r22
    b728:	1705883a 	add	r2,r2,fp
    b72c:	14a5883a 	add	r18,r2,r18
    b730:	8c7fff84 	addi	r17,r17,-2
    b734:	003f1106 	br	b37c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b37c>
    b738:	b589883a 	add	r4,r22,r22
    b73c:	25ad803a 	cmpltu	r22,r4,r22
    b740:	b739883a 	add	fp,r22,fp
    b744:	40bfff84 	addi	r2,r8,-2
    b748:	bf2f883a 	add	r23,r23,fp
    b74c:	202d883a 	mov	r22,r4
    b750:	003f9306 	br	b5a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5a0>
    b754:	013ff844 	movi	r4,-31
    b758:	2085c83a 	sub	r2,r4,r2
    b75c:	8888d83a 	srl	r4,r17,r2
    b760:	00800804 	movi	r2,32
    b764:	18802126 	beq	r3,r2,b7ec <__divdf3+0x8c4>
    b768:	00801004 	movi	r2,64
    b76c:	10c5c83a 	sub	r2,r2,r3
    b770:	8884983a 	sll	r2,r17,r2
    b774:	1204b03a 	or	r2,r2,r8
    b778:	1004c03a 	cmpne	r2,r2,zero
    b77c:	2084b03a 	or	r2,r4,r2
    b780:	144001cc 	andi	r17,r2,7
    b784:	88000d1e 	bne	r17,zero,b7bc <__divdf3+0x894>
    b788:	000b883a 	mov	r5,zero
    b78c:	1024d0fa 	srli	r18,r2,3
    b790:	98c0004c 	andi	r3,r19,1
    b794:	0005883a 	mov	r2,zero
    b798:	9464b03a 	or	r18,r18,r17
    b79c:	003e4106 	br	b0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b0a4>
    b7a0:	1007883a 	mov	r3,r2
    b7a4:	0023883a 	mov	r17,zero
    b7a8:	880a927a 	slli	r5,r17,9
    b7ac:	1805883a 	mov	r2,r3
    b7b0:	8822977a 	slli	r17,r17,29
    b7b4:	280ad33a 	srli	r5,r5,12
    b7b8:	003ff406 	br	b78c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b78c>
    b7bc:	10c003cc 	andi	r3,r2,15
    b7c0:	01000104 	movi	r4,4
    b7c4:	193ff626 	beq	r3,r4,b7a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b7a0>
    b7c8:	0023883a 	mov	r17,zero
    b7cc:	003fca06 	br	b6f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b6f8>
    b7d0:	813fd336 	bltu	r16,r4,b720 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b720>
    b7d4:	1023883a 	mov	r17,r2
    b7d8:	003fa806 	br	b67c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b67c>
    b7dc:	b0ffd636 	bltu	r22,r3,b738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b738>
    b7e0:	1011883a 	mov	r8,r2
    b7e4:	b0ff341e 	bne	r22,r3,b4b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4b8>
    b7e8:	003f3406 	br	b4bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4bc>
    b7ec:	0005883a 	mov	r2,zero
    b7f0:	003fe006 	br	b774 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b774>
    b7f4:	00800434 	movhi	r2,16
    b7f8:	89400234 	orhi	r5,r17,8
    b7fc:	10bfffc4 	addi	r2,r2,-1
    b800:	b807883a 	mov	r3,r23
    b804:	288a703a 	and	r5,r5,r2
    b808:	4025883a 	mov	r18,r8
    b80c:	003e8206 	br	b218 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b218>

0000b810 <__eqdf2>:
    b810:	2804d53a 	srli	r2,r5,20
    b814:	3806d53a 	srli	r3,r7,20
    b818:	02000434 	movhi	r8,16
    b81c:	423fffc4 	addi	r8,r8,-1
    b820:	1081ffcc 	andi	r2,r2,2047
    b824:	0281ffc4 	movi	r10,2047
    b828:	2a12703a 	and	r9,r5,r8
    b82c:	18c1ffcc 	andi	r3,r3,2047
    b830:	3a10703a 	and	r8,r7,r8
    b834:	280ad7fa 	srli	r5,r5,31
    b838:	380ed7fa 	srli	r7,r7,31
    b83c:	12801026 	beq	r2,r10,b880 <__eqdf2+0x70>
    b840:	0281ffc4 	movi	r10,2047
    b844:	1a800a26 	beq	r3,r10,b870 <__eqdf2+0x60>
    b848:	10c00226 	beq	r2,r3,b854 <__eqdf2+0x44>
    b84c:	00800044 	movi	r2,1
    b850:	f800283a 	ret
    b854:	4a3ffd1e 	bne	r9,r8,b84c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b84c>
    b858:	21bffc1e 	bne	r4,r6,b84c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b84c>
    b85c:	29c00c26 	beq	r5,r7,b890 <__eqdf2+0x80>
    b860:	103ffa1e 	bne	r2,zero,b84c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b84c>
    b864:	2244b03a 	or	r2,r4,r9
    b868:	1004c03a 	cmpne	r2,r2,zero
    b86c:	f800283a 	ret
    b870:	3214b03a 	or	r10,r6,r8
    b874:	503ff426 	beq	r10,zero,b848 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b848>
    b878:	00800044 	movi	r2,1
    b87c:	f800283a 	ret
    b880:	2254b03a 	or	r10,r4,r9
    b884:	503fee26 	beq	r10,zero,b840 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b840>
    b888:	00800044 	movi	r2,1
    b88c:	f800283a 	ret
    b890:	0005883a 	mov	r2,zero
    b894:	f800283a 	ret

0000b898 <__gedf2>:
    b898:	2804d53a 	srli	r2,r5,20
    b89c:	3806d53a 	srli	r3,r7,20
    b8a0:	02000434 	movhi	r8,16
    b8a4:	423fffc4 	addi	r8,r8,-1
    b8a8:	1081ffcc 	andi	r2,r2,2047
    b8ac:	0241ffc4 	movi	r9,2047
    b8b0:	2a14703a 	and	r10,r5,r8
    b8b4:	18c1ffcc 	andi	r3,r3,2047
    b8b8:	3a10703a 	and	r8,r7,r8
    b8bc:	280ad7fa 	srli	r5,r5,31
    b8c0:	380ed7fa 	srli	r7,r7,31
    b8c4:	12401d26 	beq	r2,r9,b93c <__gedf2+0xa4>
    b8c8:	0241ffc4 	movi	r9,2047
    b8cc:	1a401226 	beq	r3,r9,b918 <__gedf2+0x80>
    b8d0:	1000081e 	bne	r2,zero,b8f4 <__gedf2+0x5c>
    b8d4:	2296b03a 	or	r11,r4,r10
    b8d8:	5813003a 	cmpeq	r9,r11,zero
    b8dc:	1800091e 	bne	r3,zero,b904 <__gedf2+0x6c>
    b8e0:	3218b03a 	or	r12,r6,r8
    b8e4:	6000071e 	bne	r12,zero,b904 <__gedf2+0x6c>
    b8e8:	0005883a 	mov	r2,zero
    b8ec:	5800101e 	bne	r11,zero,b930 <__gedf2+0x98>
    b8f0:	f800283a 	ret
    b8f4:	18000c1e 	bne	r3,zero,b928 <__gedf2+0x90>
    b8f8:	3212b03a 	or	r9,r6,r8
    b8fc:	48000c26 	beq	r9,zero,b930 <__gedf2+0x98>
    b900:	0013883a 	mov	r9,zero
    b904:	39c03fcc 	andi	r7,r7,255
    b908:	48000826 	beq	r9,zero,b92c <__gedf2+0x94>
    b90c:	38000926 	beq	r7,zero,b934 <__gedf2+0x9c>
    b910:	00800044 	movi	r2,1
    b914:	f800283a 	ret
    b918:	3212b03a 	or	r9,r6,r8
    b91c:	483fec26 	beq	r9,zero,b8d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b8d0>
    b920:	00bfff84 	movi	r2,-2
    b924:	f800283a 	ret
    b928:	39c03fcc 	andi	r7,r7,255
    b92c:	29c00626 	beq	r5,r7,b948 <__gedf2+0xb0>
    b930:	283ff726 	beq	r5,zero,b910 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b910>
    b934:	00bfffc4 	movi	r2,-1
    b938:	f800283a 	ret
    b93c:	2292b03a 	or	r9,r4,r10
    b940:	483fe126 	beq	r9,zero,b8c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b8c8>
    b944:	003ff606 	br	b920 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b920>
    b948:	18bff916 	blt	r3,r2,b930 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b930>
    b94c:	10c00316 	blt	r2,r3,b95c <__gedf2+0xc4>
    b950:	42bff736 	bltu	r8,r10,b930 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b930>
    b954:	52000326 	beq	r10,r8,b964 <__gedf2+0xcc>
    b958:	5200042e 	bgeu	r10,r8,b96c <__gedf2+0xd4>
    b95c:	283fec1e 	bne	r5,zero,b910 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b910>
    b960:	003ff406 	br	b934 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b934>
    b964:	313ff236 	bltu	r6,r4,b930 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b930>
    b968:	21bffc36 	bltu	r4,r6,b95c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b95c>
    b96c:	0005883a 	mov	r2,zero
    b970:	f800283a 	ret

0000b974 <__ledf2>:
    b974:	2804d53a 	srli	r2,r5,20
    b978:	3810d53a 	srli	r8,r7,20
    b97c:	00c00434 	movhi	r3,16
    b980:	18ffffc4 	addi	r3,r3,-1
    b984:	1081ffcc 	andi	r2,r2,2047
    b988:	0241ffc4 	movi	r9,2047
    b98c:	28d4703a 	and	r10,r5,r3
    b990:	4201ffcc 	andi	r8,r8,2047
    b994:	38c6703a 	and	r3,r7,r3
    b998:	280ad7fa 	srli	r5,r5,31
    b99c:	380ed7fa 	srli	r7,r7,31
    b9a0:	12401f26 	beq	r2,r9,ba20 <__ledf2+0xac>
    b9a4:	0241ffc4 	movi	r9,2047
    b9a8:	42401426 	beq	r8,r9,b9fc <__ledf2+0x88>
    b9ac:	1000091e 	bne	r2,zero,b9d4 <__ledf2+0x60>
    b9b0:	2296b03a 	or	r11,r4,r10
    b9b4:	5813003a 	cmpeq	r9,r11,zero
    b9b8:	29403fcc 	andi	r5,r5,255
    b9bc:	40000a1e 	bne	r8,zero,b9e8 <__ledf2+0x74>
    b9c0:	30d8b03a 	or	r12,r6,r3
    b9c4:	6000081e 	bne	r12,zero,b9e8 <__ledf2+0x74>
    b9c8:	0005883a 	mov	r2,zero
    b9cc:	5800111e 	bne	r11,zero,ba14 <__ledf2+0xa0>
    b9d0:	f800283a 	ret
    b9d4:	29403fcc 	andi	r5,r5,255
    b9d8:	40000c1e 	bne	r8,zero,ba0c <__ledf2+0x98>
    b9dc:	30d2b03a 	or	r9,r6,r3
    b9e0:	48000c26 	beq	r9,zero,ba14 <__ledf2+0xa0>
    b9e4:	0013883a 	mov	r9,zero
    b9e8:	39c03fcc 	andi	r7,r7,255
    b9ec:	48000826 	beq	r9,zero,ba10 <__ledf2+0x9c>
    b9f0:	38001126 	beq	r7,zero,ba38 <__ledf2+0xc4>
    b9f4:	00800044 	movi	r2,1
    b9f8:	f800283a 	ret
    b9fc:	30d2b03a 	or	r9,r6,r3
    ba00:	483fea26 	beq	r9,zero,b9ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9ac>
    ba04:	00800084 	movi	r2,2
    ba08:	f800283a 	ret
    ba0c:	39c03fcc 	andi	r7,r7,255
    ba10:	39400726 	beq	r7,r5,ba30 <__ledf2+0xbc>
    ba14:	2800081e 	bne	r5,zero,ba38 <__ledf2+0xc4>
    ba18:	00800044 	movi	r2,1
    ba1c:	f800283a 	ret
    ba20:	2292b03a 	or	r9,r4,r10
    ba24:	483fdf26 	beq	r9,zero,b9a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9a4>
    ba28:	00800084 	movi	r2,2
    ba2c:	f800283a 	ret
    ba30:	4080030e 	bge	r8,r2,ba40 <__ledf2+0xcc>
    ba34:	383fef26 	beq	r7,zero,b9f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f4>
    ba38:	00bfffc4 	movi	r2,-1
    ba3c:	f800283a 	ret
    ba40:	123feb16 	blt	r2,r8,b9f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f0>
    ba44:	1abff336 	bltu	r3,r10,ba14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ba14>
    ba48:	50c00326 	beq	r10,r3,ba58 <__ledf2+0xe4>
    ba4c:	50c0042e 	bgeu	r10,r3,ba60 <__ledf2+0xec>
    ba50:	283fe81e 	bne	r5,zero,b9f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f4>
    ba54:	003ff806 	br	ba38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ba38>
    ba58:	313fee36 	bltu	r6,r4,ba14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ba14>
    ba5c:	21bffc36 	bltu	r4,r6,ba50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ba50>
    ba60:	0005883a 	mov	r2,zero
    ba64:	f800283a 	ret

0000ba68 <__muldf3>:
    ba68:	defff304 	addi	sp,sp,-52
    ba6c:	dd400815 	stw	r21,32(sp)
    ba70:	282ad53a 	srli	r21,r5,20
    ba74:	dd800915 	stw	r22,36(sp)
    ba78:	282cd7fa 	srli	r22,r5,31
    ba7c:	dc000315 	stw	r16,12(sp)
    ba80:	04000434 	movhi	r16,16
    ba84:	dd000715 	stw	r20,28(sp)
    ba88:	843fffc4 	addi	r16,r16,-1
    ba8c:	dfc00c15 	stw	ra,48(sp)
    ba90:	df000b15 	stw	fp,44(sp)
    ba94:	ddc00a15 	stw	r23,40(sp)
    ba98:	dcc00615 	stw	r19,24(sp)
    ba9c:	dc800515 	stw	r18,20(sp)
    baa0:	dc400415 	stw	r17,16(sp)
    baa4:	ad41ffcc 	andi	r21,r21,2047
    baa8:	2c20703a 	and	r16,r5,r16
    baac:	b029883a 	mov	r20,r22
    bab0:	b2403fcc 	andi	r9,r22,255
    bab4:	a8006026 	beq	r21,zero,bc38 <__muldf3+0x1d0>
    bab8:	0081ffc4 	movi	r2,2047
    babc:	2027883a 	mov	r19,r4
    bac0:	a8803626 	beq	r21,r2,bb9c <__muldf3+0x134>
    bac4:	80c00434 	orhi	r3,r16,16
    bac8:	180690fa 	slli	r3,r3,3
    bacc:	2020d77a 	srli	r16,r4,29
    bad0:	202690fa 	slli	r19,r4,3
    bad4:	ad7f0044 	addi	r21,r21,-1023
    bad8:	80e0b03a 	or	r16,r16,r3
    badc:	0025883a 	mov	r18,zero
    bae0:	0039883a 	mov	fp,zero
    bae4:	3808d53a 	srli	r4,r7,20
    bae8:	382ed7fa 	srli	r23,r7,31
    baec:	04400434 	movhi	r17,16
    baf0:	8c7fffc4 	addi	r17,r17,-1
    baf4:	2101ffcc 	andi	r4,r4,2047
    baf8:	3011883a 	mov	r8,r6
    bafc:	3c62703a 	and	r17,r7,r17
    bb00:	ba803fcc 	andi	r10,r23,255
    bb04:	20006d26 	beq	r4,zero,bcbc <__muldf3+0x254>
    bb08:	0081ffc4 	movi	r2,2047
    bb0c:	20806526 	beq	r4,r2,bca4 <__muldf3+0x23c>
    bb10:	88c00434 	orhi	r3,r17,16
    bb14:	180690fa 	slli	r3,r3,3
    bb18:	3022d77a 	srli	r17,r6,29
    bb1c:	301090fa 	slli	r8,r6,3
    bb20:	213f0044 	addi	r4,r4,-1023
    bb24:	88e2b03a 	or	r17,r17,r3
    bb28:	000b883a 	mov	r5,zero
    bb2c:	a909883a 	add	r4,r21,r4
    bb30:	2c84b03a 	or	r2,r5,r18
    bb34:	00c003c4 	movi	r3,15
    bb38:	bdacf03a 	xor	r22,r23,r22
    bb3c:	22c00044 	addi	r11,r4,1
    bb40:	18809936 	bltu	r3,r2,bda8 <__muldf3+0x340>
    bb44:	100490ba 	slli	r2,r2,2
    bb48:	00c00074 	movhi	r3,1
    bb4c:	18eed704 	addi	r3,r3,-17572
    bb50:	10c5883a 	add	r2,r2,r3
    bb54:	10800017 	ldw	r2,0(r2)
    bb58:	1000683a 	jmp	r2
    bb5c:	0000bda8 	cmpgeui	zero,zero,758
    bb60:	0000bbbc 	xorhi	zero,zero,750
    bb64:	0000bbbc 	xorhi	zero,zero,750
    bb68:	0000bbb8 	rdprs	zero,zero,750
    bb6c:	0000bd84 	movi	zero,758
    bb70:	0000bd84 	movi	zero,758
    bb74:	0000bd6c 	andhi	zero,zero,757
    bb78:	0000bbb8 	rdprs	zero,zero,750
    bb7c:	0000bd84 	movi	zero,758
    bb80:	0000bd6c 	andhi	zero,zero,757
    bb84:	0000bd84 	movi	zero,758
    bb88:	0000bbb8 	rdprs	zero,zero,750
    bb8c:	0000bd94 	movui	zero,758
    bb90:	0000bd94 	movui	zero,758
    bb94:	0000bd94 	movui	zero,758
    bb98:	0000bfb0 	cmpltui	zero,zero,766
    bb9c:	2404b03a 	or	r2,r4,r16
    bba0:	10006f1e 	bne	r2,zero,bd60 <__muldf3+0x2f8>
    bba4:	04800204 	movi	r18,8
    bba8:	0021883a 	mov	r16,zero
    bbac:	0027883a 	mov	r19,zero
    bbb0:	07000084 	movi	fp,2
    bbb4:	003fcb06 	br	bae4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bae4>
    bbb8:	502d883a 	mov	r22,r10
    bbbc:	00800084 	movi	r2,2
    bbc0:	28805726 	beq	r5,r2,bd20 <__muldf3+0x2b8>
    bbc4:	008000c4 	movi	r2,3
    bbc8:	28816626 	beq	r5,r2,c164 <__muldf3+0x6fc>
    bbcc:	00800044 	movi	r2,1
    bbd0:	2881411e 	bne	r5,r2,c0d8 <__muldf3+0x670>
    bbd4:	b029883a 	mov	r20,r22
    bbd8:	0005883a 	mov	r2,zero
    bbdc:	000b883a 	mov	r5,zero
    bbe0:	0027883a 	mov	r19,zero
    bbe4:	1004953a 	slli	r2,r2,20
    bbe8:	a0c03fcc 	andi	r3,r20,255
    bbec:	04400434 	movhi	r17,16
    bbf0:	8c7fffc4 	addi	r17,r17,-1
    bbf4:	180697fa 	slli	r3,r3,31
    bbf8:	2c4a703a 	and	r5,r5,r17
    bbfc:	288ab03a 	or	r5,r5,r2
    bc00:	28c6b03a 	or	r3,r5,r3
    bc04:	9805883a 	mov	r2,r19
    bc08:	dfc00c17 	ldw	ra,48(sp)
    bc0c:	df000b17 	ldw	fp,44(sp)
    bc10:	ddc00a17 	ldw	r23,40(sp)
    bc14:	dd800917 	ldw	r22,36(sp)
    bc18:	dd400817 	ldw	r21,32(sp)
    bc1c:	dd000717 	ldw	r20,28(sp)
    bc20:	dcc00617 	ldw	r19,24(sp)
    bc24:	dc800517 	ldw	r18,20(sp)
    bc28:	dc400417 	ldw	r17,16(sp)
    bc2c:	dc000317 	ldw	r16,12(sp)
    bc30:	dec00d04 	addi	sp,sp,52
    bc34:	f800283a 	ret
    bc38:	2404b03a 	or	r2,r4,r16
    bc3c:	2025883a 	mov	r18,r4
    bc40:	10004226 	beq	r2,zero,bd4c <__muldf3+0x2e4>
    bc44:	8000fc26 	beq	r16,zero,c038 <__muldf3+0x5d0>
    bc48:	8009883a 	mov	r4,r16
    bc4c:	d9800215 	stw	r6,8(sp)
    bc50:	d9c00015 	stw	r7,0(sp)
    bc54:	da400115 	stw	r9,4(sp)
    bc58:	000cc800 	call	cc80 <__clzsi2>
    bc5c:	d9800217 	ldw	r6,8(sp)
    bc60:	d9c00017 	ldw	r7,0(sp)
    bc64:	da400117 	ldw	r9,4(sp)
    bc68:	10fffd44 	addi	r3,r2,-11
    bc6c:	01000704 	movi	r4,28
    bc70:	20c0ed16 	blt	r4,r3,c028 <__muldf3+0x5c0>
    bc74:	01000744 	movi	r4,29
    bc78:	147ffe04 	addi	r17,r2,-8
    bc7c:	20c9c83a 	sub	r4,r4,r3
    bc80:	8460983a 	sll	r16,r16,r17
    bc84:	9108d83a 	srl	r4,r18,r4
    bc88:	9466983a 	sll	r19,r18,r17
    bc8c:	2420b03a 	or	r16,r4,r16
    bc90:	013f0084 	movi	r4,-1022
    bc94:	20ebc83a 	sub	r21,r4,r3
    bc98:	0025883a 	mov	r18,zero
    bc9c:	0039883a 	mov	fp,zero
    bca0:	003f9006 	br	bae4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bae4>
    bca4:	3444b03a 	or	r2,r6,r17
    bca8:	1000261e 	bne	r2,zero,bd44 <__muldf3+0x2dc>
    bcac:	0023883a 	mov	r17,zero
    bcb0:	0011883a 	mov	r8,zero
    bcb4:	01400084 	movi	r5,2
    bcb8:	003f9c06 	br	bb2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb2c>
    bcbc:	3444b03a 	or	r2,r6,r17
    bcc0:	10001c26 	beq	r2,zero,bd34 <__muldf3+0x2cc>
    bcc4:	8800ce26 	beq	r17,zero,c000 <__muldf3+0x598>
    bcc8:	8809883a 	mov	r4,r17
    bccc:	d9800215 	stw	r6,8(sp)
    bcd0:	da400115 	stw	r9,4(sp)
    bcd4:	da800015 	stw	r10,0(sp)
    bcd8:	000cc800 	call	cc80 <__clzsi2>
    bcdc:	d9800217 	ldw	r6,8(sp)
    bce0:	da400117 	ldw	r9,4(sp)
    bce4:	da800017 	ldw	r10,0(sp)
    bce8:	113ffd44 	addi	r4,r2,-11
    bcec:	00c00704 	movi	r3,28
    bcf0:	1900bf16 	blt	r3,r4,bff0 <__muldf3+0x588>
    bcf4:	00c00744 	movi	r3,29
    bcf8:	123ffe04 	addi	r8,r2,-8
    bcfc:	1907c83a 	sub	r3,r3,r4
    bd00:	8a22983a 	sll	r17,r17,r8
    bd04:	30c6d83a 	srl	r3,r6,r3
    bd08:	3210983a 	sll	r8,r6,r8
    bd0c:	1c62b03a 	or	r17,r3,r17
    bd10:	017f0084 	movi	r5,-1022
    bd14:	2909c83a 	sub	r4,r5,r4
    bd18:	000b883a 	mov	r5,zero
    bd1c:	003f8306 	br	bb2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb2c>
    bd20:	b029883a 	mov	r20,r22
    bd24:	0081ffc4 	movi	r2,2047
    bd28:	000b883a 	mov	r5,zero
    bd2c:	0027883a 	mov	r19,zero
    bd30:	003fac06 	br	bbe4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbe4>
    bd34:	0023883a 	mov	r17,zero
    bd38:	0011883a 	mov	r8,zero
    bd3c:	01400044 	movi	r5,1
    bd40:	003f7a06 	br	bb2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb2c>
    bd44:	014000c4 	movi	r5,3
    bd48:	003f7806 	br	bb2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb2c>
    bd4c:	04800104 	movi	r18,4
    bd50:	0021883a 	mov	r16,zero
    bd54:	0027883a 	mov	r19,zero
    bd58:	07000044 	movi	fp,1
    bd5c:	003f6106 	br	bae4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bae4>
    bd60:	04800304 	movi	r18,12
    bd64:	070000c4 	movi	fp,3
    bd68:	003f5e06 	br	bae4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bae4>
    bd6c:	01400434 	movhi	r5,16
    bd70:	0029883a 	mov	r20,zero
    bd74:	297fffc4 	addi	r5,r5,-1
    bd78:	04ffffc4 	movi	r19,-1
    bd7c:	0081ffc4 	movi	r2,2047
    bd80:	003f9806 	br	bbe4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbe4>
    bd84:	8023883a 	mov	r17,r16
    bd88:	9811883a 	mov	r8,r19
    bd8c:	e00b883a 	mov	r5,fp
    bd90:	003f8a06 	br	bbbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbbc>
    bd94:	8023883a 	mov	r17,r16
    bd98:	9811883a 	mov	r8,r19
    bd9c:	482d883a 	mov	r22,r9
    bda0:	e00b883a 	mov	r5,fp
    bda4:	003f8506 	br	bbbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbbc>
    bda8:	980ad43a 	srli	r5,r19,16
    bdac:	401ad43a 	srli	r13,r8,16
    bdb0:	9cffffcc 	andi	r19,r19,65535
    bdb4:	423fffcc 	andi	r8,r8,65535
    bdb8:	44d9383a 	mul	r12,r8,r19
    bdbc:	4145383a 	mul	r2,r8,r5
    bdc0:	6ccd383a 	mul	r6,r13,r19
    bdc4:	6006d43a 	srli	r3,r12,16
    bdc8:	2b5d383a 	mul	r14,r5,r13
    bdcc:	308d883a 	add	r6,r6,r2
    bdd0:	198d883a 	add	r6,r3,r6
    bdd4:	3080022e 	bgeu	r6,r2,bde0 <__muldf3+0x378>
    bdd8:	00800074 	movhi	r2,1
    bddc:	709d883a 	add	r14,r14,r2
    bde0:	8828d43a 	srli	r20,r17,16
    bde4:	8bffffcc 	andi	r15,r17,65535
    bde8:	7ce3383a 	mul	r17,r15,r19
    bdec:	7945383a 	mul	r2,r15,r5
    bdf0:	a4e7383a 	mul	r19,r20,r19
    bdf4:	8814d43a 	srli	r10,r17,16
    bdf8:	3012943a 	slli	r9,r6,16
    bdfc:	98a7883a 	add	r19,r19,r2
    be00:	633fffcc 	andi	r12,r12,65535
    be04:	54d5883a 	add	r10,r10,r19
    be08:	3006d43a 	srli	r3,r6,16
    be0c:	4b13883a 	add	r9,r9,r12
    be10:	2d0b383a 	mul	r5,r5,r20
    be14:	5080022e 	bgeu	r10,r2,be20 <__muldf3+0x3b8>
    be18:	00800074 	movhi	r2,1
    be1c:	288b883a 	add	r5,r5,r2
    be20:	802ad43a 	srli	r21,r16,16
    be24:	843fffcc 	andi	r16,r16,65535
    be28:	440d383a 	mul	r6,r8,r16
    be2c:	4565383a 	mul	r18,r8,r21
    be30:	8359383a 	mul	r12,r16,r13
    be34:	500e943a 	slli	r7,r10,16
    be38:	3010d43a 	srli	r8,r6,16
    be3c:	5026d43a 	srli	r19,r10,16
    be40:	6499883a 	add	r12,r12,r18
    be44:	8abfffcc 	andi	r10,r17,65535
    be48:	3a95883a 	add	r10,r7,r10
    be4c:	4319883a 	add	r12,r8,r12
    be50:	9967883a 	add	r19,r19,r5
    be54:	1a87883a 	add	r3,r3,r10
    be58:	6d5b383a 	mul	r13,r13,r21
    be5c:	6480022e 	bgeu	r12,r18,be68 <__muldf3+0x400>
    be60:	00800074 	movhi	r2,1
    be64:	689b883a 	add	r13,r13,r2
    be68:	7c25383a 	mul	r18,r15,r16
    be6c:	7d4b383a 	mul	r5,r15,r21
    be70:	850f383a 	mul	r7,r16,r20
    be74:	901ed43a 	srli	r15,r18,16
    be78:	6004d43a 	srli	r2,r12,16
    be7c:	6010943a 	slli	r8,r12,16
    be80:	394f883a 	add	r7,r7,r5
    be84:	333fffcc 	andi	r12,r6,65535
    be88:	79df883a 	add	r15,r15,r7
    be8c:	135b883a 	add	r13,r2,r13
    be90:	a563383a 	mul	r17,r20,r21
    be94:	4305883a 	add	r2,r8,r12
    be98:	7940022e 	bgeu	r15,r5,bea4 <__muldf3+0x43c>
    be9c:	01400074 	movhi	r5,1
    bea0:	8963883a 	add	r17,r17,r5
    bea4:	780a943a 	slli	r5,r15,16
    bea8:	91bfffcc 	andi	r6,r18,65535
    beac:	70c7883a 	add	r3,r14,r3
    beb0:	298d883a 	add	r6,r5,r6
    beb4:	1a8f803a 	cmpltu	r7,r3,r10
    beb8:	34cb883a 	add	r5,r6,r19
    bebc:	10c7883a 	add	r3,r2,r3
    bec0:	3955883a 	add	r10,r7,r5
    bec4:	1885803a 	cmpltu	r2,r3,r2
    bec8:	6a91883a 	add	r8,r13,r10
    becc:	780cd43a 	srli	r6,r15,16
    bed0:	1219883a 	add	r12,r2,r8
    bed4:	2ccb803a 	cmpltu	r5,r5,r19
    bed8:	51cf803a 	cmpltu	r7,r10,r7
    bedc:	29ceb03a 	or	r7,r5,r7
    bee0:	4351803a 	cmpltu	r8,r8,r13
    bee4:	608b803a 	cmpltu	r5,r12,r2
    bee8:	4144b03a 	or	r2,r8,r5
    beec:	398f883a 	add	r7,r7,r6
    bef0:	3885883a 	add	r2,r7,r2
    bef4:	1810927a 	slli	r8,r3,9
    bef8:	1445883a 	add	r2,r2,r17
    befc:	1004927a 	slli	r2,r2,9
    bf00:	6022d5fa 	srli	r17,r12,23
    bf04:	1806d5fa 	srli	r3,r3,23
    bf08:	4252b03a 	or	r9,r8,r9
    bf0c:	600a927a 	slli	r5,r12,9
    bf10:	4810c03a 	cmpne	r8,r9,zero
    bf14:	1462b03a 	or	r17,r2,r17
    bf18:	40c6b03a 	or	r3,r8,r3
    bf1c:	8880402c 	andhi	r2,r17,256
    bf20:	1950b03a 	or	r8,r3,r5
    bf24:	10000726 	beq	r2,zero,bf44 <__muldf3+0x4dc>
    bf28:	4006d07a 	srli	r3,r8,1
    bf2c:	880497fa 	slli	r2,r17,31
    bf30:	4200004c 	andi	r8,r8,1
    bf34:	8822d07a 	srli	r17,r17,1
    bf38:	1a10b03a 	or	r8,r3,r8
    bf3c:	1210b03a 	or	r8,r2,r8
    bf40:	5809883a 	mov	r4,r11
    bf44:	2080ffc4 	addi	r2,r4,1023
    bf48:	0080440e 	bge	zero,r2,c05c <__muldf3+0x5f4>
    bf4c:	40c001cc 	andi	r3,r8,7
    bf50:	18000726 	beq	r3,zero,bf70 <__muldf3+0x508>
    bf54:	40c003cc 	andi	r3,r8,15
    bf58:	01400104 	movi	r5,4
    bf5c:	19400426 	beq	r3,r5,bf70 <__muldf3+0x508>
    bf60:	4147883a 	add	r3,r8,r5
    bf64:	1a11803a 	cmpltu	r8,r3,r8
    bf68:	8a23883a 	add	r17,r17,r8
    bf6c:	1811883a 	mov	r8,r3
    bf70:	88c0402c 	andhi	r3,r17,256
    bf74:	18000426 	beq	r3,zero,bf88 <__muldf3+0x520>
    bf78:	00ffc034 	movhi	r3,65280
    bf7c:	18ffffc4 	addi	r3,r3,-1
    bf80:	20810004 	addi	r2,r4,1024
    bf84:	88e2703a 	and	r17,r17,r3
    bf88:	00c1ff84 	movi	r3,2046
    bf8c:	18bf6416 	blt	r3,r2,bd20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd20>
    bf90:	8826977a 	slli	r19,r17,29
    bf94:	4010d0fa 	srli	r8,r8,3
    bf98:	8822927a 	slli	r17,r17,9
    bf9c:	1081ffcc 	andi	r2,r2,2047
    bfa0:	9a26b03a 	or	r19,r19,r8
    bfa4:	880ad33a 	srli	r5,r17,12
    bfa8:	b029883a 	mov	r20,r22
    bfac:	003f0d06 	br	bbe4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbe4>
    bfb0:	8080022c 	andhi	r2,r16,8
    bfb4:	10000926 	beq	r2,zero,bfdc <__muldf3+0x574>
    bfb8:	8880022c 	andhi	r2,r17,8
    bfbc:	1000071e 	bne	r2,zero,bfdc <__muldf3+0x574>
    bfc0:	00800434 	movhi	r2,16
    bfc4:	89400234 	orhi	r5,r17,8
    bfc8:	10bfffc4 	addi	r2,r2,-1
    bfcc:	b829883a 	mov	r20,r23
    bfd0:	288a703a 	and	r5,r5,r2
    bfd4:	4027883a 	mov	r19,r8
    bfd8:	003f6806 	br	bd7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd7c>
    bfdc:	00800434 	movhi	r2,16
    bfe0:	81400234 	orhi	r5,r16,8
    bfe4:	10bfffc4 	addi	r2,r2,-1
    bfe8:	288a703a 	and	r5,r5,r2
    bfec:	003f6306 	br	bd7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd7c>
    bff0:	10bff604 	addi	r2,r2,-40
    bff4:	30a2983a 	sll	r17,r6,r2
    bff8:	0011883a 	mov	r8,zero
    bffc:	003f4406 	br	bd10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd10>
    c000:	3009883a 	mov	r4,r6
    c004:	d9800215 	stw	r6,8(sp)
    c008:	da400115 	stw	r9,4(sp)
    c00c:	da800015 	stw	r10,0(sp)
    c010:	000cc800 	call	cc80 <__clzsi2>
    c014:	10800804 	addi	r2,r2,32
    c018:	da800017 	ldw	r10,0(sp)
    c01c:	da400117 	ldw	r9,4(sp)
    c020:	d9800217 	ldw	r6,8(sp)
    c024:	003f3006 	br	bce8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bce8>
    c028:	10bff604 	addi	r2,r2,-40
    c02c:	90a0983a 	sll	r16,r18,r2
    c030:	0027883a 	mov	r19,zero
    c034:	003f1606 	br	bc90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bc90>
    c038:	d9800215 	stw	r6,8(sp)
    c03c:	d9c00015 	stw	r7,0(sp)
    c040:	da400115 	stw	r9,4(sp)
    c044:	000cc800 	call	cc80 <__clzsi2>
    c048:	10800804 	addi	r2,r2,32
    c04c:	da400117 	ldw	r9,4(sp)
    c050:	d9c00017 	ldw	r7,0(sp)
    c054:	d9800217 	ldw	r6,8(sp)
    c058:	003f0306 	br	bc68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bc68>
    c05c:	00c00044 	movi	r3,1
    c060:	1887c83a 	sub	r3,r3,r2
    c064:	01000e04 	movi	r4,56
    c068:	20feda16 	blt	r4,r3,bbd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbd4>
    c06c:	010007c4 	movi	r4,31
    c070:	20c01b16 	blt	r4,r3,c0e0 <__muldf3+0x678>
    c074:	00800804 	movi	r2,32
    c078:	10c5c83a 	sub	r2,r2,r3
    c07c:	888a983a 	sll	r5,r17,r2
    c080:	40c8d83a 	srl	r4,r8,r3
    c084:	4084983a 	sll	r2,r8,r2
    c088:	88e2d83a 	srl	r17,r17,r3
    c08c:	2906b03a 	or	r3,r5,r4
    c090:	1004c03a 	cmpne	r2,r2,zero
    c094:	1886b03a 	or	r3,r3,r2
    c098:	188001cc 	andi	r2,r3,7
    c09c:	10000726 	beq	r2,zero,c0bc <__muldf3+0x654>
    c0a0:	188003cc 	andi	r2,r3,15
    c0a4:	01000104 	movi	r4,4
    c0a8:	11000426 	beq	r2,r4,c0bc <__muldf3+0x654>
    c0ac:	1805883a 	mov	r2,r3
    c0b0:	10c00104 	addi	r3,r2,4
    c0b4:	1885803a 	cmpltu	r2,r3,r2
    c0b8:	88a3883a 	add	r17,r17,r2
    c0bc:	8880202c 	andhi	r2,r17,128
    c0c0:	10001c26 	beq	r2,zero,c134 <__muldf3+0x6cc>
    c0c4:	b029883a 	mov	r20,r22
    c0c8:	00800044 	movi	r2,1
    c0cc:	000b883a 	mov	r5,zero
    c0d0:	0027883a 	mov	r19,zero
    c0d4:	003ec306 	br	bbe4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbe4>
    c0d8:	5809883a 	mov	r4,r11
    c0dc:	003f9906 	br	bf44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf44>
    c0e0:	013ff844 	movi	r4,-31
    c0e4:	2085c83a 	sub	r2,r4,r2
    c0e8:	8888d83a 	srl	r4,r17,r2
    c0ec:	00800804 	movi	r2,32
    c0f0:	18801a26 	beq	r3,r2,c15c <__muldf3+0x6f4>
    c0f4:	00801004 	movi	r2,64
    c0f8:	10c5c83a 	sub	r2,r2,r3
    c0fc:	8884983a 	sll	r2,r17,r2
    c100:	1204b03a 	or	r2,r2,r8
    c104:	1004c03a 	cmpne	r2,r2,zero
    c108:	2084b03a 	or	r2,r4,r2
    c10c:	144001cc 	andi	r17,r2,7
    c110:	88000d1e 	bne	r17,zero,c148 <__muldf3+0x6e0>
    c114:	000b883a 	mov	r5,zero
    c118:	1026d0fa 	srli	r19,r2,3
    c11c:	b029883a 	mov	r20,r22
    c120:	0005883a 	mov	r2,zero
    c124:	9c66b03a 	or	r19,r19,r17
    c128:	003eae06 	br	bbe4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbe4>
    c12c:	1007883a 	mov	r3,r2
    c130:	0023883a 	mov	r17,zero
    c134:	880a927a 	slli	r5,r17,9
    c138:	1805883a 	mov	r2,r3
    c13c:	8822977a 	slli	r17,r17,29
    c140:	280ad33a 	srli	r5,r5,12
    c144:	003ff406 	br	c118 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c118>
    c148:	10c003cc 	andi	r3,r2,15
    c14c:	01000104 	movi	r4,4
    c150:	193ff626 	beq	r3,r4,c12c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c12c>
    c154:	0023883a 	mov	r17,zero
    c158:	003fd506 	br	c0b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c0b0>
    c15c:	0005883a 	mov	r2,zero
    c160:	003fe706 	br	c100 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c100>
    c164:	00800434 	movhi	r2,16
    c168:	89400234 	orhi	r5,r17,8
    c16c:	10bfffc4 	addi	r2,r2,-1
    c170:	b029883a 	mov	r20,r22
    c174:	288a703a 	and	r5,r5,r2
    c178:	4027883a 	mov	r19,r8
    c17c:	003eff06 	br	bd7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd7c>

0000c180 <__subdf3>:
    c180:	02000434 	movhi	r8,16
    c184:	423fffc4 	addi	r8,r8,-1
    c188:	defffb04 	addi	sp,sp,-20
    c18c:	2a14703a 	and	r10,r5,r8
    c190:	3812d53a 	srli	r9,r7,20
    c194:	3a10703a 	and	r8,r7,r8
    c198:	2006d77a 	srli	r3,r4,29
    c19c:	3004d77a 	srli	r2,r6,29
    c1a0:	dc000015 	stw	r16,0(sp)
    c1a4:	501490fa 	slli	r10,r10,3
    c1a8:	2820d53a 	srli	r16,r5,20
    c1ac:	401090fa 	slli	r8,r8,3
    c1b0:	dc800215 	stw	r18,8(sp)
    c1b4:	dc400115 	stw	r17,4(sp)
    c1b8:	dfc00415 	stw	ra,16(sp)
    c1bc:	202290fa 	slli	r17,r4,3
    c1c0:	dcc00315 	stw	r19,12(sp)
    c1c4:	4a41ffcc 	andi	r9,r9,2047
    c1c8:	0101ffc4 	movi	r4,2047
    c1cc:	2824d7fa 	srli	r18,r5,31
    c1d0:	8401ffcc 	andi	r16,r16,2047
    c1d4:	50c6b03a 	or	r3,r10,r3
    c1d8:	380ed7fa 	srli	r7,r7,31
    c1dc:	408ab03a 	or	r5,r8,r2
    c1e0:	300c90fa 	slli	r6,r6,3
    c1e4:	49009626 	beq	r9,r4,c440 <__subdf3+0x2c0>
    c1e8:	39c0005c 	xori	r7,r7,1
    c1ec:	8245c83a 	sub	r2,r16,r9
    c1f0:	3c807426 	beq	r7,r18,c3c4 <__subdf3+0x244>
    c1f4:	0080af0e 	bge	zero,r2,c4b4 <__subdf3+0x334>
    c1f8:	48002a1e 	bne	r9,zero,c2a4 <__subdf3+0x124>
    c1fc:	2988b03a 	or	r4,r5,r6
    c200:	20009a1e 	bne	r4,zero,c46c <__subdf3+0x2ec>
    c204:	888001cc 	andi	r2,r17,7
    c208:	10000726 	beq	r2,zero,c228 <__subdf3+0xa8>
    c20c:	888003cc 	andi	r2,r17,15
    c210:	01000104 	movi	r4,4
    c214:	11000426 	beq	r2,r4,c228 <__subdf3+0xa8>
    c218:	890b883a 	add	r5,r17,r4
    c21c:	2c63803a 	cmpltu	r17,r5,r17
    c220:	1c47883a 	add	r3,r3,r17
    c224:	2823883a 	mov	r17,r5
    c228:	1880202c 	andhi	r2,r3,128
    c22c:	10005926 	beq	r2,zero,c394 <__subdf3+0x214>
    c230:	84000044 	addi	r16,r16,1
    c234:	0081ffc4 	movi	r2,2047
    c238:	8080be26 	beq	r16,r2,c534 <__subdf3+0x3b4>
    c23c:	017fe034 	movhi	r5,65408
    c240:	297fffc4 	addi	r5,r5,-1
    c244:	1946703a 	and	r3,r3,r5
    c248:	1804977a 	slli	r2,r3,29
    c24c:	1806927a 	slli	r3,r3,9
    c250:	8822d0fa 	srli	r17,r17,3
    c254:	8401ffcc 	andi	r16,r16,2047
    c258:	180ad33a 	srli	r5,r3,12
    c25c:	9100004c 	andi	r4,r18,1
    c260:	1444b03a 	or	r2,r2,r17
    c264:	80c1ffcc 	andi	r3,r16,2047
    c268:	1820953a 	slli	r16,r3,20
    c26c:	20c03fcc 	andi	r3,r4,255
    c270:	180897fa 	slli	r4,r3,31
    c274:	00c00434 	movhi	r3,16
    c278:	18ffffc4 	addi	r3,r3,-1
    c27c:	28c6703a 	and	r3,r5,r3
    c280:	1c06b03a 	or	r3,r3,r16
    c284:	1906b03a 	or	r3,r3,r4
    c288:	dfc00417 	ldw	ra,16(sp)
    c28c:	dcc00317 	ldw	r19,12(sp)
    c290:	dc800217 	ldw	r18,8(sp)
    c294:	dc400117 	ldw	r17,4(sp)
    c298:	dc000017 	ldw	r16,0(sp)
    c29c:	dec00504 	addi	sp,sp,20
    c2a0:	f800283a 	ret
    c2a4:	0101ffc4 	movi	r4,2047
    c2a8:	813fd626 	beq	r16,r4,c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c2ac:	29402034 	orhi	r5,r5,128
    c2b0:	01000e04 	movi	r4,56
    c2b4:	2080a316 	blt	r4,r2,c544 <__subdf3+0x3c4>
    c2b8:	010007c4 	movi	r4,31
    c2bc:	2080c616 	blt	r4,r2,c5d8 <__subdf3+0x458>
    c2c0:	01000804 	movi	r4,32
    c2c4:	2089c83a 	sub	r4,r4,r2
    c2c8:	2910983a 	sll	r8,r5,r4
    c2cc:	308ed83a 	srl	r7,r6,r2
    c2d0:	3108983a 	sll	r4,r6,r4
    c2d4:	2884d83a 	srl	r2,r5,r2
    c2d8:	41ccb03a 	or	r6,r8,r7
    c2dc:	2008c03a 	cmpne	r4,r4,zero
    c2e0:	310cb03a 	or	r6,r6,r4
    c2e4:	898dc83a 	sub	r6,r17,r6
    c2e8:	89a3803a 	cmpltu	r17,r17,r6
    c2ec:	1887c83a 	sub	r3,r3,r2
    c2f0:	1c47c83a 	sub	r3,r3,r17
    c2f4:	3023883a 	mov	r17,r6
    c2f8:	1880202c 	andhi	r2,r3,128
    c2fc:	10002326 	beq	r2,zero,c38c <__subdf3+0x20c>
    c300:	04c02034 	movhi	r19,128
    c304:	9cffffc4 	addi	r19,r19,-1
    c308:	1ce6703a 	and	r19,r3,r19
    c30c:	98007a26 	beq	r19,zero,c4f8 <__subdf3+0x378>
    c310:	9809883a 	mov	r4,r19
    c314:	000cc800 	call	cc80 <__clzsi2>
    c318:	113ffe04 	addi	r4,r2,-8
    c31c:	00c007c4 	movi	r3,31
    c320:	19007b16 	blt	r3,r4,c510 <__subdf3+0x390>
    c324:	00800804 	movi	r2,32
    c328:	1105c83a 	sub	r2,r2,r4
    c32c:	8884d83a 	srl	r2,r17,r2
    c330:	9906983a 	sll	r3,r19,r4
    c334:	8922983a 	sll	r17,r17,r4
    c338:	10c4b03a 	or	r2,r2,r3
    c33c:	24007816 	blt	r4,r16,c520 <__subdf3+0x3a0>
    c340:	2421c83a 	sub	r16,r4,r16
    c344:	80c00044 	addi	r3,r16,1
    c348:	010007c4 	movi	r4,31
    c34c:	20c09516 	blt	r4,r3,c5a4 <__subdf3+0x424>
    c350:	01400804 	movi	r5,32
    c354:	28cbc83a 	sub	r5,r5,r3
    c358:	88c8d83a 	srl	r4,r17,r3
    c35c:	8962983a 	sll	r17,r17,r5
    c360:	114a983a 	sll	r5,r2,r5
    c364:	10c6d83a 	srl	r3,r2,r3
    c368:	8804c03a 	cmpne	r2,r17,zero
    c36c:	290ab03a 	or	r5,r5,r4
    c370:	28a2b03a 	or	r17,r5,r2
    c374:	0021883a 	mov	r16,zero
    c378:	003fa206 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c37c:	2090b03a 	or	r8,r4,r2
    c380:	40018e26 	beq	r8,zero,c9bc <__subdf3+0x83c>
    c384:	1007883a 	mov	r3,r2
    c388:	2023883a 	mov	r17,r4
    c38c:	888001cc 	andi	r2,r17,7
    c390:	103f9e1e 	bne	r2,zero,c20c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c20c>
    c394:	1804977a 	slli	r2,r3,29
    c398:	8822d0fa 	srli	r17,r17,3
    c39c:	1810d0fa 	srli	r8,r3,3
    c3a0:	9100004c 	andi	r4,r18,1
    c3a4:	1444b03a 	or	r2,r2,r17
    c3a8:	00c1ffc4 	movi	r3,2047
    c3ac:	80c02826 	beq	r16,r3,c450 <__subdf3+0x2d0>
    c3b0:	01400434 	movhi	r5,16
    c3b4:	297fffc4 	addi	r5,r5,-1
    c3b8:	80e0703a 	and	r16,r16,r3
    c3bc:	414a703a 	and	r5,r8,r5
    c3c0:	003fa806 	br	c264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c264>
    c3c4:	0080630e 	bge	zero,r2,c554 <__subdf3+0x3d4>
    c3c8:	48003026 	beq	r9,zero,c48c <__subdf3+0x30c>
    c3cc:	0101ffc4 	movi	r4,2047
    c3d0:	813f8c26 	beq	r16,r4,c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c3d4:	29402034 	orhi	r5,r5,128
    c3d8:	01000e04 	movi	r4,56
    c3dc:	2080a90e 	bge	r4,r2,c684 <__subdf3+0x504>
    c3e0:	298cb03a 	or	r6,r5,r6
    c3e4:	3012c03a 	cmpne	r9,r6,zero
    c3e8:	0005883a 	mov	r2,zero
    c3ec:	4c53883a 	add	r9,r9,r17
    c3f0:	4c63803a 	cmpltu	r17,r9,r17
    c3f4:	10c7883a 	add	r3,r2,r3
    c3f8:	88c7883a 	add	r3,r17,r3
    c3fc:	4823883a 	mov	r17,r9
    c400:	1880202c 	andhi	r2,r3,128
    c404:	1000d026 	beq	r2,zero,c748 <__subdf3+0x5c8>
    c408:	84000044 	addi	r16,r16,1
    c40c:	0081ffc4 	movi	r2,2047
    c410:	8080fe26 	beq	r16,r2,c80c <__subdf3+0x68c>
    c414:	00bfe034 	movhi	r2,65408
    c418:	10bfffc4 	addi	r2,r2,-1
    c41c:	1886703a 	and	r3,r3,r2
    c420:	880ad07a 	srli	r5,r17,1
    c424:	180497fa 	slli	r2,r3,31
    c428:	8900004c 	andi	r4,r17,1
    c42c:	2922b03a 	or	r17,r5,r4
    c430:	1806d07a 	srli	r3,r3,1
    c434:	1462b03a 	or	r17,r2,r17
    c438:	3825883a 	mov	r18,r7
    c43c:	003f7106 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c440:	2984b03a 	or	r2,r5,r6
    c444:	103f6826 	beq	r2,zero,c1e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c1e8>
    c448:	39c03fcc 	andi	r7,r7,255
    c44c:	003f6706 	br	c1ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c1ec>
    c450:	4086b03a 	or	r3,r8,r2
    c454:	18015226 	beq	r3,zero,c9a0 <__subdf3+0x820>
    c458:	00c00434 	movhi	r3,16
    c45c:	41400234 	orhi	r5,r8,8
    c460:	18ffffc4 	addi	r3,r3,-1
    c464:	28ca703a 	and	r5,r5,r3
    c468:	003f7e06 	br	c264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c264>
    c46c:	10bfffc4 	addi	r2,r2,-1
    c470:	1000491e 	bne	r2,zero,c598 <__subdf3+0x418>
    c474:	898fc83a 	sub	r7,r17,r6
    c478:	89e3803a 	cmpltu	r17,r17,r7
    c47c:	1947c83a 	sub	r3,r3,r5
    c480:	1c47c83a 	sub	r3,r3,r17
    c484:	3823883a 	mov	r17,r7
    c488:	003f9b06 	br	c2f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2f8>
    c48c:	2988b03a 	or	r4,r5,r6
    c490:	203f5c26 	beq	r4,zero,c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c494:	10bfffc4 	addi	r2,r2,-1
    c498:	1000931e 	bne	r2,zero,c6e8 <__subdf3+0x568>
    c49c:	898d883a 	add	r6,r17,r6
    c4a0:	3463803a 	cmpltu	r17,r6,r17
    c4a4:	1947883a 	add	r3,r3,r5
    c4a8:	88c7883a 	add	r3,r17,r3
    c4ac:	3023883a 	mov	r17,r6
    c4b0:	003fd306 	br	c400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c400>
    c4b4:	1000541e 	bne	r2,zero,c608 <__subdf3+0x488>
    c4b8:	80800044 	addi	r2,r16,1
    c4bc:	1081ffcc 	andi	r2,r2,2047
    c4c0:	01000044 	movi	r4,1
    c4c4:	2080a20e 	bge	r4,r2,c750 <__subdf3+0x5d0>
    c4c8:	8989c83a 	sub	r4,r17,r6
    c4cc:	8905803a 	cmpltu	r2,r17,r4
    c4d0:	1967c83a 	sub	r19,r3,r5
    c4d4:	98a7c83a 	sub	r19,r19,r2
    c4d8:	9880202c 	andhi	r2,r19,128
    c4dc:	10006326 	beq	r2,zero,c66c <__subdf3+0x4ec>
    c4e0:	3463c83a 	sub	r17,r6,r17
    c4e4:	28c7c83a 	sub	r3,r5,r3
    c4e8:	344d803a 	cmpltu	r6,r6,r17
    c4ec:	19a7c83a 	sub	r19,r3,r6
    c4f0:	3825883a 	mov	r18,r7
    c4f4:	983f861e 	bne	r19,zero,c310 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c310>
    c4f8:	8809883a 	mov	r4,r17
    c4fc:	000cc800 	call	cc80 <__clzsi2>
    c500:	10800804 	addi	r2,r2,32
    c504:	113ffe04 	addi	r4,r2,-8
    c508:	00c007c4 	movi	r3,31
    c50c:	193f850e 	bge	r3,r4,c324 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c324>
    c510:	10bff604 	addi	r2,r2,-40
    c514:	8884983a 	sll	r2,r17,r2
    c518:	0023883a 	mov	r17,zero
    c51c:	243f880e 	bge	r4,r16,c340 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c340>
    c520:	00ffe034 	movhi	r3,65408
    c524:	18ffffc4 	addi	r3,r3,-1
    c528:	8121c83a 	sub	r16,r16,r4
    c52c:	10c6703a 	and	r3,r2,r3
    c530:	003f3406 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c534:	9100004c 	andi	r4,r18,1
    c538:	000b883a 	mov	r5,zero
    c53c:	0005883a 	mov	r2,zero
    c540:	003f4806 	br	c264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c264>
    c544:	298cb03a 	or	r6,r5,r6
    c548:	300cc03a 	cmpne	r6,r6,zero
    c54c:	0005883a 	mov	r2,zero
    c550:	003f6406 	br	c2e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2e4>
    c554:	10009a1e 	bne	r2,zero,c7c0 <__subdf3+0x640>
    c558:	82400044 	addi	r9,r16,1
    c55c:	4881ffcc 	andi	r2,r9,2047
    c560:	02800044 	movi	r10,1
    c564:	5080670e 	bge	r10,r2,c704 <__subdf3+0x584>
    c568:	0081ffc4 	movi	r2,2047
    c56c:	4880af26 	beq	r9,r2,c82c <__subdf3+0x6ac>
    c570:	898d883a 	add	r6,r17,r6
    c574:	1945883a 	add	r2,r3,r5
    c578:	3447803a 	cmpltu	r3,r6,r17
    c57c:	1887883a 	add	r3,r3,r2
    c580:	182297fa 	slli	r17,r3,31
    c584:	300cd07a 	srli	r6,r6,1
    c588:	1806d07a 	srli	r3,r3,1
    c58c:	4821883a 	mov	r16,r9
    c590:	89a2b03a 	or	r17,r17,r6
    c594:	003f1b06 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c598:	0101ffc4 	movi	r4,2047
    c59c:	813f441e 	bne	r16,r4,c2b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2b0>
    c5a0:	003f1806 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c5a4:	843ff844 	addi	r16,r16,-31
    c5a8:	01400804 	movi	r5,32
    c5ac:	1408d83a 	srl	r4,r2,r16
    c5b0:	19405026 	beq	r3,r5,c6f4 <__subdf3+0x574>
    c5b4:	01401004 	movi	r5,64
    c5b8:	28c7c83a 	sub	r3,r5,r3
    c5bc:	10c4983a 	sll	r2,r2,r3
    c5c0:	88a2b03a 	or	r17,r17,r2
    c5c4:	8822c03a 	cmpne	r17,r17,zero
    c5c8:	2462b03a 	or	r17,r4,r17
    c5cc:	0007883a 	mov	r3,zero
    c5d0:	0021883a 	mov	r16,zero
    c5d4:	003f6d06 	br	c38c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c38c>
    c5d8:	11fff804 	addi	r7,r2,-32
    c5dc:	01000804 	movi	r4,32
    c5e0:	29ced83a 	srl	r7,r5,r7
    c5e4:	11004526 	beq	r2,r4,c6fc <__subdf3+0x57c>
    c5e8:	01001004 	movi	r4,64
    c5ec:	2089c83a 	sub	r4,r4,r2
    c5f0:	2904983a 	sll	r2,r5,r4
    c5f4:	118cb03a 	or	r6,r2,r6
    c5f8:	300cc03a 	cmpne	r6,r6,zero
    c5fc:	398cb03a 	or	r6,r7,r6
    c600:	0005883a 	mov	r2,zero
    c604:	003f3706 	br	c2e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2e4>
    c608:	80002a26 	beq	r16,zero,c6b4 <__subdf3+0x534>
    c60c:	0101ffc4 	movi	r4,2047
    c610:	49006626 	beq	r9,r4,c7ac <__subdf3+0x62c>
    c614:	0085c83a 	sub	r2,zero,r2
    c618:	18c02034 	orhi	r3,r3,128
    c61c:	01000e04 	movi	r4,56
    c620:	20807e16 	blt	r4,r2,c81c <__subdf3+0x69c>
    c624:	010007c4 	movi	r4,31
    c628:	2080e716 	blt	r4,r2,c9c8 <__subdf3+0x848>
    c62c:	01000804 	movi	r4,32
    c630:	2089c83a 	sub	r4,r4,r2
    c634:	1914983a 	sll	r10,r3,r4
    c638:	8890d83a 	srl	r8,r17,r2
    c63c:	8908983a 	sll	r4,r17,r4
    c640:	1884d83a 	srl	r2,r3,r2
    c644:	5222b03a 	or	r17,r10,r8
    c648:	2006c03a 	cmpne	r3,r4,zero
    c64c:	88e2b03a 	or	r17,r17,r3
    c650:	3463c83a 	sub	r17,r6,r17
    c654:	2885c83a 	sub	r2,r5,r2
    c658:	344d803a 	cmpltu	r6,r6,r17
    c65c:	1187c83a 	sub	r3,r2,r6
    c660:	4821883a 	mov	r16,r9
    c664:	3825883a 	mov	r18,r7
    c668:	003f2306 	br	c2f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2f8>
    c66c:	24d0b03a 	or	r8,r4,r19
    c670:	40001b1e 	bne	r8,zero,c6e0 <__subdf3+0x560>
    c674:	0005883a 	mov	r2,zero
    c678:	0009883a 	mov	r4,zero
    c67c:	0021883a 	mov	r16,zero
    c680:	003f4906 	br	c3a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3a8>
    c684:	010007c4 	movi	r4,31
    c688:	20803a16 	blt	r4,r2,c774 <__subdf3+0x5f4>
    c68c:	01000804 	movi	r4,32
    c690:	2089c83a 	sub	r4,r4,r2
    c694:	2912983a 	sll	r9,r5,r4
    c698:	3090d83a 	srl	r8,r6,r2
    c69c:	3108983a 	sll	r4,r6,r4
    c6a0:	2884d83a 	srl	r2,r5,r2
    c6a4:	4a12b03a 	or	r9,r9,r8
    c6a8:	2008c03a 	cmpne	r4,r4,zero
    c6ac:	4912b03a 	or	r9,r9,r4
    c6b0:	003f4e06 	br	c3ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3ec>
    c6b4:	1c48b03a 	or	r4,r3,r17
    c6b8:	20003c26 	beq	r4,zero,c7ac <__subdf3+0x62c>
    c6bc:	0084303a 	nor	r2,zero,r2
    c6c0:	1000381e 	bne	r2,zero,c7a4 <__subdf3+0x624>
    c6c4:	3463c83a 	sub	r17,r6,r17
    c6c8:	28c5c83a 	sub	r2,r5,r3
    c6cc:	344d803a 	cmpltu	r6,r6,r17
    c6d0:	1187c83a 	sub	r3,r2,r6
    c6d4:	4821883a 	mov	r16,r9
    c6d8:	3825883a 	mov	r18,r7
    c6dc:	003f0606 	br	c2f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2f8>
    c6e0:	2023883a 	mov	r17,r4
    c6e4:	003f0906 	br	c30c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c30c>
    c6e8:	0101ffc4 	movi	r4,2047
    c6ec:	813f3a1e 	bne	r16,r4,c3d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3d8>
    c6f0:	003ec406 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c6f4:	0005883a 	mov	r2,zero
    c6f8:	003fb106 	br	c5c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c5c0>
    c6fc:	0005883a 	mov	r2,zero
    c700:	003fbc06 	br	c5f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c5f4>
    c704:	1c44b03a 	or	r2,r3,r17
    c708:	80008e1e 	bne	r16,zero,c944 <__subdf3+0x7c4>
    c70c:	1000c826 	beq	r2,zero,ca30 <__subdf3+0x8b0>
    c710:	2984b03a 	or	r2,r5,r6
    c714:	103ebb26 	beq	r2,zero,c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c718:	8989883a 	add	r4,r17,r6
    c71c:	1945883a 	add	r2,r3,r5
    c720:	2447803a 	cmpltu	r3,r4,r17
    c724:	1887883a 	add	r3,r3,r2
    c728:	1880202c 	andhi	r2,r3,128
    c72c:	2023883a 	mov	r17,r4
    c730:	103f1626 	beq	r2,zero,c38c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c38c>
    c734:	00bfe034 	movhi	r2,65408
    c738:	10bfffc4 	addi	r2,r2,-1
    c73c:	5021883a 	mov	r16,r10
    c740:	1886703a 	and	r3,r3,r2
    c744:	003eaf06 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c748:	3825883a 	mov	r18,r7
    c74c:	003f0f06 	br	c38c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c38c>
    c750:	1c44b03a 	or	r2,r3,r17
    c754:	8000251e 	bne	r16,zero,c7ec <__subdf3+0x66c>
    c758:	1000661e 	bne	r2,zero,c8f4 <__subdf3+0x774>
    c75c:	2990b03a 	or	r8,r5,r6
    c760:	40009626 	beq	r8,zero,c9bc <__subdf3+0x83c>
    c764:	2807883a 	mov	r3,r5
    c768:	3023883a 	mov	r17,r6
    c76c:	3825883a 	mov	r18,r7
    c770:	003ea406 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c774:	127ff804 	addi	r9,r2,-32
    c778:	01000804 	movi	r4,32
    c77c:	2a52d83a 	srl	r9,r5,r9
    c780:	11008c26 	beq	r2,r4,c9b4 <__subdf3+0x834>
    c784:	01001004 	movi	r4,64
    c788:	2085c83a 	sub	r2,r4,r2
    c78c:	2884983a 	sll	r2,r5,r2
    c790:	118cb03a 	or	r6,r2,r6
    c794:	300cc03a 	cmpne	r6,r6,zero
    c798:	4992b03a 	or	r9,r9,r6
    c79c:	0005883a 	mov	r2,zero
    c7a0:	003f1206 	br	c3ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3ec>
    c7a4:	0101ffc4 	movi	r4,2047
    c7a8:	493f9c1e 	bne	r9,r4,c61c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c61c>
    c7ac:	2807883a 	mov	r3,r5
    c7b0:	3023883a 	mov	r17,r6
    c7b4:	4821883a 	mov	r16,r9
    c7b8:	3825883a 	mov	r18,r7
    c7bc:	003e9106 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c7c0:	80001f1e 	bne	r16,zero,c840 <__subdf3+0x6c0>
    c7c4:	1c48b03a 	or	r4,r3,r17
    c7c8:	20005a26 	beq	r4,zero,c934 <__subdf3+0x7b4>
    c7cc:	0084303a 	nor	r2,zero,r2
    c7d0:	1000561e 	bne	r2,zero,c92c <__subdf3+0x7ac>
    c7d4:	89a3883a 	add	r17,r17,r6
    c7d8:	1945883a 	add	r2,r3,r5
    c7dc:	898d803a 	cmpltu	r6,r17,r6
    c7e0:	3087883a 	add	r3,r6,r2
    c7e4:	4821883a 	mov	r16,r9
    c7e8:	003f0506 	br	c400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c400>
    c7ec:	10002b1e 	bne	r2,zero,c89c <__subdf3+0x71c>
    c7f0:	2984b03a 	or	r2,r5,r6
    c7f4:	10008026 	beq	r2,zero,c9f8 <__subdf3+0x878>
    c7f8:	2807883a 	mov	r3,r5
    c7fc:	3023883a 	mov	r17,r6
    c800:	3825883a 	mov	r18,r7
    c804:	0401ffc4 	movi	r16,2047
    c808:	003e7e06 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c80c:	3809883a 	mov	r4,r7
    c810:	0011883a 	mov	r8,zero
    c814:	0005883a 	mov	r2,zero
    c818:	003ee306 	br	c3a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3a8>
    c81c:	1c62b03a 	or	r17,r3,r17
    c820:	8822c03a 	cmpne	r17,r17,zero
    c824:	0005883a 	mov	r2,zero
    c828:	003f8906 	br	c650 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c650>
    c82c:	3809883a 	mov	r4,r7
    c830:	4821883a 	mov	r16,r9
    c834:	0011883a 	mov	r8,zero
    c838:	0005883a 	mov	r2,zero
    c83c:	003eda06 	br	c3a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3a8>
    c840:	0101ffc4 	movi	r4,2047
    c844:	49003b26 	beq	r9,r4,c934 <__subdf3+0x7b4>
    c848:	0085c83a 	sub	r2,zero,r2
    c84c:	18c02034 	orhi	r3,r3,128
    c850:	01000e04 	movi	r4,56
    c854:	20806e16 	blt	r4,r2,ca10 <__subdf3+0x890>
    c858:	010007c4 	movi	r4,31
    c85c:	20807716 	blt	r4,r2,ca3c <__subdf3+0x8bc>
    c860:	01000804 	movi	r4,32
    c864:	2089c83a 	sub	r4,r4,r2
    c868:	1914983a 	sll	r10,r3,r4
    c86c:	8890d83a 	srl	r8,r17,r2
    c870:	8908983a 	sll	r4,r17,r4
    c874:	1884d83a 	srl	r2,r3,r2
    c878:	5222b03a 	or	r17,r10,r8
    c87c:	2006c03a 	cmpne	r3,r4,zero
    c880:	88e2b03a 	or	r17,r17,r3
    c884:	89a3883a 	add	r17,r17,r6
    c888:	1145883a 	add	r2,r2,r5
    c88c:	898d803a 	cmpltu	r6,r17,r6
    c890:	3087883a 	add	r3,r6,r2
    c894:	4821883a 	mov	r16,r9
    c898:	003ed906 	br	c400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c400>
    c89c:	2984b03a 	or	r2,r5,r6
    c8a0:	10004226 	beq	r2,zero,c9ac <__subdf3+0x82c>
    c8a4:	1808d0fa 	srli	r4,r3,3
    c8a8:	8822d0fa 	srli	r17,r17,3
    c8ac:	1806977a 	slli	r3,r3,29
    c8b0:	2080022c 	andhi	r2,r4,8
    c8b4:	1c62b03a 	or	r17,r3,r17
    c8b8:	10000826 	beq	r2,zero,c8dc <__subdf3+0x75c>
    c8bc:	2812d0fa 	srli	r9,r5,3
    c8c0:	4880022c 	andhi	r2,r9,8
    c8c4:	1000051e 	bne	r2,zero,c8dc <__subdf3+0x75c>
    c8c8:	300cd0fa 	srli	r6,r6,3
    c8cc:	2804977a 	slli	r2,r5,29
    c8d0:	4809883a 	mov	r4,r9
    c8d4:	3825883a 	mov	r18,r7
    c8d8:	11a2b03a 	or	r17,r2,r6
    c8dc:	8806d77a 	srli	r3,r17,29
    c8e0:	200890fa 	slli	r4,r4,3
    c8e4:	882290fa 	slli	r17,r17,3
    c8e8:	0401ffc4 	movi	r16,2047
    c8ec:	1906b03a 	or	r3,r3,r4
    c8f0:	003e4406 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c8f4:	2984b03a 	or	r2,r5,r6
    c8f8:	103e4226 	beq	r2,zero,c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c8fc:	8989c83a 	sub	r4,r17,r6
    c900:	8911803a 	cmpltu	r8,r17,r4
    c904:	1945c83a 	sub	r2,r3,r5
    c908:	1205c83a 	sub	r2,r2,r8
    c90c:	1200202c 	andhi	r8,r2,128
    c910:	403e9a26 	beq	r8,zero,c37c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c37c>
    c914:	3463c83a 	sub	r17,r6,r17
    c918:	28c5c83a 	sub	r2,r5,r3
    c91c:	344d803a 	cmpltu	r6,r6,r17
    c920:	1187c83a 	sub	r3,r2,r6
    c924:	3825883a 	mov	r18,r7
    c928:	003e3606 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c92c:	0101ffc4 	movi	r4,2047
    c930:	493fc71e 	bne	r9,r4,c850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c850>
    c934:	2807883a 	mov	r3,r5
    c938:	3023883a 	mov	r17,r6
    c93c:	4821883a 	mov	r16,r9
    c940:	003e3006 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c944:	10003626 	beq	r2,zero,ca20 <__subdf3+0x8a0>
    c948:	2984b03a 	or	r2,r5,r6
    c94c:	10001726 	beq	r2,zero,c9ac <__subdf3+0x82c>
    c950:	1808d0fa 	srli	r4,r3,3
    c954:	8822d0fa 	srli	r17,r17,3
    c958:	1806977a 	slli	r3,r3,29
    c95c:	2080022c 	andhi	r2,r4,8
    c960:	1c62b03a 	or	r17,r3,r17
    c964:	10000726 	beq	r2,zero,c984 <__subdf3+0x804>
    c968:	2812d0fa 	srli	r9,r5,3
    c96c:	4880022c 	andhi	r2,r9,8
    c970:	1000041e 	bne	r2,zero,c984 <__subdf3+0x804>
    c974:	300cd0fa 	srli	r6,r6,3
    c978:	2804977a 	slli	r2,r5,29
    c97c:	4809883a 	mov	r4,r9
    c980:	11a2b03a 	or	r17,r2,r6
    c984:	8806d77a 	srli	r3,r17,29
    c988:	200890fa 	slli	r4,r4,3
    c98c:	882290fa 	slli	r17,r17,3
    c990:	3825883a 	mov	r18,r7
    c994:	1906b03a 	or	r3,r3,r4
    c998:	0401ffc4 	movi	r16,2047
    c99c:	003e1906 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c9a0:	000b883a 	mov	r5,zero
    c9a4:	0005883a 	mov	r2,zero
    c9a8:	003e2e06 	br	c264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c264>
    c9ac:	0401ffc4 	movi	r16,2047
    c9b0:	003e1406 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    c9b4:	0005883a 	mov	r2,zero
    c9b8:	003f7506 	br	c790 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c790>
    c9bc:	0005883a 	mov	r2,zero
    c9c0:	0009883a 	mov	r4,zero
    c9c4:	003e7806 	br	c3a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3a8>
    c9c8:	123ff804 	addi	r8,r2,-32
    c9cc:	01000804 	movi	r4,32
    c9d0:	1a10d83a 	srl	r8,r3,r8
    c9d4:	11002526 	beq	r2,r4,ca6c <__subdf3+0x8ec>
    c9d8:	01001004 	movi	r4,64
    c9dc:	2085c83a 	sub	r2,r4,r2
    c9e0:	1884983a 	sll	r2,r3,r2
    c9e4:	1444b03a 	or	r2,r2,r17
    c9e8:	1004c03a 	cmpne	r2,r2,zero
    c9ec:	40a2b03a 	or	r17,r8,r2
    c9f0:	0005883a 	mov	r2,zero
    c9f4:	003f1606 	br	c650 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c650>
    c9f8:	02000434 	movhi	r8,16
    c9fc:	0009883a 	mov	r4,zero
    ca00:	423fffc4 	addi	r8,r8,-1
    ca04:	00bfffc4 	movi	r2,-1
    ca08:	0401ffc4 	movi	r16,2047
    ca0c:	003e6606 	br	c3a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c3a8>
    ca10:	1c62b03a 	or	r17,r3,r17
    ca14:	8822c03a 	cmpne	r17,r17,zero
    ca18:	0005883a 	mov	r2,zero
    ca1c:	003f9906 	br	c884 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c884>
    ca20:	2807883a 	mov	r3,r5
    ca24:	3023883a 	mov	r17,r6
    ca28:	0401ffc4 	movi	r16,2047
    ca2c:	003df506 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    ca30:	2807883a 	mov	r3,r5
    ca34:	3023883a 	mov	r17,r6
    ca38:	003df206 	br	c204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c204>
    ca3c:	123ff804 	addi	r8,r2,-32
    ca40:	01000804 	movi	r4,32
    ca44:	1a10d83a 	srl	r8,r3,r8
    ca48:	11000a26 	beq	r2,r4,ca74 <__subdf3+0x8f4>
    ca4c:	01001004 	movi	r4,64
    ca50:	2085c83a 	sub	r2,r4,r2
    ca54:	1884983a 	sll	r2,r3,r2
    ca58:	1444b03a 	or	r2,r2,r17
    ca5c:	1004c03a 	cmpne	r2,r2,zero
    ca60:	40a2b03a 	or	r17,r8,r2
    ca64:	0005883a 	mov	r2,zero
    ca68:	003f8606 	br	c884 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c884>
    ca6c:	0005883a 	mov	r2,zero
    ca70:	003fdc06 	br	c9e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c9e4>
    ca74:	0005883a 	mov	r2,zero
    ca78:	003ff706 	br	ca58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ca58>

0000ca7c <__fixdfsi>:
    ca7c:	280cd53a 	srli	r6,r5,20
    ca80:	00c00434 	movhi	r3,16
    ca84:	18ffffc4 	addi	r3,r3,-1
    ca88:	3181ffcc 	andi	r6,r6,2047
    ca8c:	01c0ff84 	movi	r7,1022
    ca90:	28c6703a 	and	r3,r5,r3
    ca94:	280ad7fa 	srli	r5,r5,31
    ca98:	3980120e 	bge	r7,r6,cae4 <__fixdfsi+0x68>
    ca9c:	00810744 	movi	r2,1053
    caa0:	11800c16 	blt	r2,r6,cad4 <__fixdfsi+0x58>
    caa4:	00810cc4 	movi	r2,1075
    caa8:	1185c83a 	sub	r2,r2,r6
    caac:	01c007c4 	movi	r7,31
    cab0:	18c00434 	orhi	r3,r3,16
    cab4:	38800d16 	blt	r7,r2,caec <__fixdfsi+0x70>
    cab8:	31befb44 	addi	r6,r6,-1043
    cabc:	2084d83a 	srl	r2,r4,r2
    cac0:	1986983a 	sll	r3,r3,r6
    cac4:	1884b03a 	or	r2,r3,r2
    cac8:	28000726 	beq	r5,zero,cae8 <__fixdfsi+0x6c>
    cacc:	0085c83a 	sub	r2,zero,r2
    cad0:	f800283a 	ret
    cad4:	00a00034 	movhi	r2,32768
    cad8:	10bfffc4 	addi	r2,r2,-1
    cadc:	2885883a 	add	r2,r5,r2
    cae0:	f800283a 	ret
    cae4:	0005883a 	mov	r2,zero
    cae8:	f800283a 	ret
    caec:	008104c4 	movi	r2,1043
    caf0:	1185c83a 	sub	r2,r2,r6
    caf4:	1884d83a 	srl	r2,r3,r2
    caf8:	003ff306 	br	cac8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cac8>

0000cafc <__floatsidf>:
    cafc:	defffd04 	addi	sp,sp,-12
    cb00:	dfc00215 	stw	ra,8(sp)
    cb04:	dc400115 	stw	r17,4(sp)
    cb08:	dc000015 	stw	r16,0(sp)
    cb0c:	20002b26 	beq	r4,zero,cbbc <__floatsidf+0xc0>
    cb10:	2023883a 	mov	r17,r4
    cb14:	2020d7fa 	srli	r16,r4,31
    cb18:	20002d16 	blt	r4,zero,cbd0 <__floatsidf+0xd4>
    cb1c:	8809883a 	mov	r4,r17
    cb20:	000cc800 	call	cc80 <__clzsi2>
    cb24:	01410784 	movi	r5,1054
    cb28:	288bc83a 	sub	r5,r5,r2
    cb2c:	01010cc4 	movi	r4,1075
    cb30:	2149c83a 	sub	r4,r4,r5
    cb34:	00c007c4 	movi	r3,31
    cb38:	1900160e 	bge	r3,r4,cb94 <__floatsidf+0x98>
    cb3c:	00c104c4 	movi	r3,1043
    cb40:	1947c83a 	sub	r3,r3,r5
    cb44:	88c6983a 	sll	r3,r17,r3
    cb48:	00800434 	movhi	r2,16
    cb4c:	10bfffc4 	addi	r2,r2,-1
    cb50:	1886703a 	and	r3,r3,r2
    cb54:	2941ffcc 	andi	r5,r5,2047
    cb58:	800d883a 	mov	r6,r16
    cb5c:	0005883a 	mov	r2,zero
    cb60:	280a953a 	slli	r5,r5,20
    cb64:	31803fcc 	andi	r6,r6,255
    cb68:	01000434 	movhi	r4,16
    cb6c:	300c97fa 	slli	r6,r6,31
    cb70:	213fffc4 	addi	r4,r4,-1
    cb74:	1906703a 	and	r3,r3,r4
    cb78:	1946b03a 	or	r3,r3,r5
    cb7c:	1986b03a 	or	r3,r3,r6
    cb80:	dfc00217 	ldw	ra,8(sp)
    cb84:	dc400117 	ldw	r17,4(sp)
    cb88:	dc000017 	ldw	r16,0(sp)
    cb8c:	dec00304 	addi	sp,sp,12
    cb90:	f800283a 	ret
    cb94:	00c002c4 	movi	r3,11
    cb98:	1887c83a 	sub	r3,r3,r2
    cb9c:	88c6d83a 	srl	r3,r17,r3
    cba0:	8904983a 	sll	r2,r17,r4
    cba4:	01000434 	movhi	r4,16
    cba8:	213fffc4 	addi	r4,r4,-1
    cbac:	2941ffcc 	andi	r5,r5,2047
    cbb0:	1906703a 	and	r3,r3,r4
    cbb4:	800d883a 	mov	r6,r16
    cbb8:	003fe906 	br	cb60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb60>
    cbbc:	000d883a 	mov	r6,zero
    cbc0:	000b883a 	mov	r5,zero
    cbc4:	0007883a 	mov	r3,zero
    cbc8:	0005883a 	mov	r2,zero
    cbcc:	003fe406 	br	cb60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb60>
    cbd0:	0123c83a 	sub	r17,zero,r4
    cbd4:	003fd106 	br	cb1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb1c>

0000cbd8 <__floatunsidf>:
    cbd8:	defffe04 	addi	sp,sp,-8
    cbdc:	dc000015 	stw	r16,0(sp)
    cbe0:	dfc00115 	stw	ra,4(sp)
    cbe4:	2021883a 	mov	r16,r4
    cbe8:	20002226 	beq	r4,zero,cc74 <__floatunsidf+0x9c>
    cbec:	000cc800 	call	cc80 <__clzsi2>
    cbf0:	01010784 	movi	r4,1054
    cbf4:	2089c83a 	sub	r4,r4,r2
    cbf8:	01810cc4 	movi	r6,1075
    cbfc:	310dc83a 	sub	r6,r6,r4
    cc00:	00c007c4 	movi	r3,31
    cc04:	1980120e 	bge	r3,r6,cc50 <__floatunsidf+0x78>
    cc08:	00c104c4 	movi	r3,1043
    cc0c:	1907c83a 	sub	r3,r3,r4
    cc10:	80ca983a 	sll	r5,r16,r3
    cc14:	00800434 	movhi	r2,16
    cc18:	10bfffc4 	addi	r2,r2,-1
    cc1c:	2101ffcc 	andi	r4,r4,2047
    cc20:	0021883a 	mov	r16,zero
    cc24:	288a703a 	and	r5,r5,r2
    cc28:	2008953a 	slli	r4,r4,20
    cc2c:	00c00434 	movhi	r3,16
    cc30:	18ffffc4 	addi	r3,r3,-1
    cc34:	28c6703a 	and	r3,r5,r3
    cc38:	8005883a 	mov	r2,r16
    cc3c:	1906b03a 	or	r3,r3,r4
    cc40:	dfc00117 	ldw	ra,4(sp)
    cc44:	dc000017 	ldw	r16,0(sp)
    cc48:	dec00204 	addi	sp,sp,8
    cc4c:	f800283a 	ret
    cc50:	00c002c4 	movi	r3,11
    cc54:	188bc83a 	sub	r5,r3,r2
    cc58:	814ad83a 	srl	r5,r16,r5
    cc5c:	00c00434 	movhi	r3,16
    cc60:	18ffffc4 	addi	r3,r3,-1
    cc64:	81a0983a 	sll	r16,r16,r6
    cc68:	2101ffcc 	andi	r4,r4,2047
    cc6c:	28ca703a 	and	r5,r5,r3
    cc70:	003fed06 	br	cc28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cc28>
    cc74:	0009883a 	mov	r4,zero
    cc78:	000b883a 	mov	r5,zero
    cc7c:	003fea06 	br	cc28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cc28>

0000cc80 <__clzsi2>:
    cc80:	00bfffd4 	movui	r2,65535
    cc84:	11000536 	bltu	r2,r4,cc9c <__clzsi2+0x1c>
    cc88:	00803fc4 	movi	r2,255
    cc8c:	11000f36 	bltu	r2,r4,cccc <__clzsi2+0x4c>
    cc90:	00800804 	movi	r2,32
    cc94:	0007883a 	mov	r3,zero
    cc98:	00000506 	br	ccb0 <__clzsi2+0x30>
    cc9c:	00804034 	movhi	r2,256
    cca0:	10bfffc4 	addi	r2,r2,-1
    cca4:	11000c2e 	bgeu	r2,r4,ccd8 <__clzsi2+0x58>
    cca8:	00800204 	movi	r2,8
    ccac:	00c00604 	movi	r3,24
    ccb0:	20c8d83a 	srl	r4,r4,r3
    ccb4:	00c00074 	movhi	r3,1
    ccb8:	18c19e04 	addi	r3,r3,1656
    ccbc:	1909883a 	add	r4,r3,r4
    ccc0:	20c00003 	ldbu	r3,0(r4)
    ccc4:	10c5c83a 	sub	r2,r2,r3
    ccc8:	f800283a 	ret
    cccc:	00800604 	movi	r2,24
    ccd0:	00c00204 	movi	r3,8
    ccd4:	003ff606 	br	ccb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ccb0>
    ccd8:	00800404 	movi	r2,16
    ccdc:	1007883a 	mov	r3,r2
    cce0:	003ff306 	br	ccb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ccb0>

0000cce4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cce4:	defffe04 	addi	sp,sp,-8
    cce8:	dfc00115 	stw	ra,4(sp)
    ccec:	df000015 	stw	fp,0(sp)
    ccf0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ccf4:	d0a01017 	ldw	r2,-32704(gp)
    ccf8:	10000326 	beq	r2,zero,cd08 <alt_get_errno+0x24>
    ccfc:	d0a01017 	ldw	r2,-32704(gp)
    cd00:	103ee83a 	callr	r2
    cd04:	00000106 	br	cd0c <alt_get_errno+0x28>
    cd08:	d0a76b04 	addi	r2,gp,-25172
}
    cd0c:	e037883a 	mov	sp,fp
    cd10:	dfc00117 	ldw	ra,4(sp)
    cd14:	df000017 	ldw	fp,0(sp)
    cd18:	dec00204 	addi	sp,sp,8
    cd1c:	f800283a 	ret

0000cd20 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    cd20:	defffb04 	addi	sp,sp,-20
    cd24:	dfc00415 	stw	ra,16(sp)
    cd28:	df000315 	stw	fp,12(sp)
    cd2c:	df000304 	addi	fp,sp,12
    cd30:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    cd34:	e0bfff17 	ldw	r2,-4(fp)
    cd38:	10000616 	blt	r2,zero,cd54 <close+0x34>
    cd3c:	e0bfff17 	ldw	r2,-4(fp)
    cd40:	10c00324 	muli	r3,r2,12
    cd44:	00800074 	movhi	r2,1
    cd48:	10845604 	addi	r2,r2,4440
    cd4c:	1885883a 	add	r2,r3,r2
    cd50:	00000106 	br	cd58 <close+0x38>
    cd54:	0005883a 	mov	r2,zero
    cd58:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    cd5c:	e0bffd17 	ldw	r2,-12(fp)
    cd60:	10001926 	beq	r2,zero,cdc8 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    cd64:	e0bffd17 	ldw	r2,-12(fp)
    cd68:	10800017 	ldw	r2,0(r2)
    cd6c:	10800417 	ldw	r2,16(r2)
    cd70:	10000626 	beq	r2,zero,cd8c <close+0x6c>
    cd74:	e0bffd17 	ldw	r2,-12(fp)
    cd78:	10800017 	ldw	r2,0(r2)
    cd7c:	10800417 	ldw	r2,16(r2)
    cd80:	e13ffd17 	ldw	r4,-12(fp)
    cd84:	103ee83a 	callr	r2
    cd88:	00000106 	br	cd90 <close+0x70>
    cd8c:	0005883a 	mov	r2,zero
    cd90:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    cd94:	e13fff17 	ldw	r4,-4(fp)
    cd98:	000d5600 	call	d560 <alt_release_fd>
    if (rval < 0)
    cd9c:	e0bffe17 	ldw	r2,-8(fp)
    cda0:	1000070e 	bge	r2,zero,cdc0 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    cda4:	000cce40 	call	cce4 <alt_get_errno>
    cda8:	1007883a 	mov	r3,r2
    cdac:	e0bffe17 	ldw	r2,-8(fp)
    cdb0:	0085c83a 	sub	r2,zero,r2
    cdb4:	18800015 	stw	r2,0(r3)
      return -1;
    cdb8:	00bfffc4 	movi	r2,-1
    cdbc:	00000706 	br	cddc <close+0xbc>
    }
    return 0;
    cdc0:	0005883a 	mov	r2,zero
    cdc4:	00000506 	br	cddc <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cdc8:	000cce40 	call	cce4 <alt_get_errno>
    cdcc:	1007883a 	mov	r3,r2
    cdd0:	00801444 	movi	r2,81
    cdd4:	18800015 	stw	r2,0(r3)
    return -1;
    cdd8:	00bfffc4 	movi	r2,-1
  }
}
    cddc:	e037883a 	mov	sp,fp
    cde0:	dfc00117 	ldw	ra,4(sp)
    cde4:	df000017 	ldw	fp,0(sp)
    cde8:	dec00204 	addi	sp,sp,8
    cdec:	f800283a 	ret

0000cdf0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    cdf0:	defffc04 	addi	sp,sp,-16
    cdf4:	df000315 	stw	fp,12(sp)
    cdf8:	df000304 	addi	fp,sp,12
    cdfc:	e13ffd15 	stw	r4,-12(fp)
    ce00:	e17ffe15 	stw	r5,-8(fp)
    ce04:	e1bfff15 	stw	r6,-4(fp)
  return len;
    ce08:	e0bfff17 	ldw	r2,-4(fp)
}
    ce0c:	e037883a 	mov	sp,fp
    ce10:	df000017 	ldw	fp,0(sp)
    ce14:	dec00104 	addi	sp,sp,4
    ce18:	f800283a 	ret

0000ce1c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ce1c:	defffe04 	addi	sp,sp,-8
    ce20:	dfc00115 	stw	ra,4(sp)
    ce24:	df000015 	stw	fp,0(sp)
    ce28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ce2c:	d0a01017 	ldw	r2,-32704(gp)
    ce30:	10000326 	beq	r2,zero,ce40 <alt_get_errno+0x24>
    ce34:	d0a01017 	ldw	r2,-32704(gp)
    ce38:	103ee83a 	callr	r2
    ce3c:	00000106 	br	ce44 <alt_get_errno+0x28>
    ce40:	d0a76b04 	addi	r2,gp,-25172
}
    ce44:	e037883a 	mov	sp,fp
    ce48:	dfc00117 	ldw	ra,4(sp)
    ce4c:	df000017 	ldw	fp,0(sp)
    ce50:	dec00204 	addi	sp,sp,8
    ce54:	f800283a 	ret

0000ce58 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    ce58:	defffb04 	addi	sp,sp,-20
    ce5c:	dfc00415 	stw	ra,16(sp)
    ce60:	df000315 	stw	fp,12(sp)
    ce64:	df000304 	addi	fp,sp,12
    ce68:	e13ffe15 	stw	r4,-8(fp)
    ce6c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    ce70:	e0bffe17 	ldw	r2,-8(fp)
    ce74:	10000616 	blt	r2,zero,ce90 <fstat+0x38>
    ce78:	e0bffe17 	ldw	r2,-8(fp)
    ce7c:	10c00324 	muli	r3,r2,12
    ce80:	00800074 	movhi	r2,1
    ce84:	10845604 	addi	r2,r2,4440
    ce88:	1885883a 	add	r2,r3,r2
    ce8c:	00000106 	br	ce94 <fstat+0x3c>
    ce90:	0005883a 	mov	r2,zero
    ce94:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    ce98:	e0bffd17 	ldw	r2,-12(fp)
    ce9c:	10001026 	beq	r2,zero,cee0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    cea0:	e0bffd17 	ldw	r2,-12(fp)
    cea4:	10800017 	ldw	r2,0(r2)
    cea8:	10800817 	ldw	r2,32(r2)
    ceac:	10000726 	beq	r2,zero,cecc <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    ceb0:	e0bffd17 	ldw	r2,-12(fp)
    ceb4:	10800017 	ldw	r2,0(r2)
    ceb8:	10800817 	ldw	r2,32(r2)
    cebc:	e17fff17 	ldw	r5,-4(fp)
    cec0:	e13ffd17 	ldw	r4,-12(fp)
    cec4:	103ee83a 	callr	r2
    cec8:	00000a06 	br	cef4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    cecc:	e0bfff17 	ldw	r2,-4(fp)
    ced0:	00c80004 	movi	r3,8192
    ced4:	10c00115 	stw	r3,4(r2)
      return 0;
    ced8:	0005883a 	mov	r2,zero
    cedc:	00000506 	br	cef4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cee0:	000ce1c0 	call	ce1c <alt_get_errno>
    cee4:	1007883a 	mov	r3,r2
    cee8:	00801444 	movi	r2,81
    ceec:	18800015 	stw	r2,0(r3)
    return -1;
    cef0:	00bfffc4 	movi	r2,-1
  }
}
    cef4:	e037883a 	mov	sp,fp
    cef8:	dfc00117 	ldw	ra,4(sp)
    cefc:	df000017 	ldw	fp,0(sp)
    cf00:	dec00204 	addi	sp,sp,8
    cf04:	f800283a 	ret

0000cf08 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
    cf08:	defff004 	addi	sp,sp,-64
    cf0c:	df000f15 	stw	fp,60(sp)
    cf10:	df000f04 	addi	fp,sp,60
    cf14:	e13ffd15 	stw	r4,-12(fp)
    cf18:	e17ffe15 	stw	r5,-8(fp)
    cf1c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
    cf20:	00bffa84 	movi	r2,-22
    cf24:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    cf28:	e0bffd17 	ldw	r2,-12(fp)
    cf2c:	10800828 	cmpgeui	r2,r2,32
    cf30:	1000501e 	bne	r2,zero,d074 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    cf34:	0005303a 	rdctl	r2,status
    cf38:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    cf3c:	e0fff617 	ldw	r3,-40(fp)
    cf40:	00bfff84 	movi	r2,-2
    cf44:	1884703a 	and	r2,r3,r2
    cf48:	1001703a 	wrctl	status,r2
  
  return context;
    cf4c:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
    cf50:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
    cf54:	00800274 	movhi	r2,9
    cf58:	1090d804 	addi	r2,r2,17248
    cf5c:	e0fffd17 	ldw	r3,-12(fp)
    cf60:	180690fa 	slli	r3,r3,3
    cf64:	10c5883a 	add	r2,r2,r3
    cf68:	e0ffff17 	ldw	r3,-4(fp)
    cf6c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
    cf70:	00800274 	movhi	r2,9
    cf74:	1090d804 	addi	r2,r2,17248
    cf78:	e0fffd17 	ldw	r3,-12(fp)
    cf7c:	180690fa 	slli	r3,r3,3
    cf80:	10c5883a 	add	r2,r2,r3
    cf84:	10800104 	addi	r2,r2,4
    cf88:	e0fffe17 	ldw	r3,-8(fp)
    cf8c:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
    cf90:	e0bfff17 	ldw	r2,-4(fp)
    cf94:	10001926 	beq	r2,zero,cffc <alt_irq_register+0xf4>
    cf98:	e0bffd17 	ldw	r2,-12(fp)
    cf9c:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    cfa0:	0005303a 	rdctl	r2,status
    cfa4:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    cfa8:	e0fff717 	ldw	r3,-36(fp)
    cfac:	00bfff84 	movi	r2,-2
    cfb0:	1884703a 	and	r2,r3,r2
    cfb4:	1001703a 	wrctl	status,r2
  
  return context;
    cfb8:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    cfbc:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
    cfc0:	00c00044 	movi	r3,1
    cfc4:	e0bff217 	ldw	r2,-56(fp)
    cfc8:	1884983a 	sll	r2,r3,r2
    cfcc:	1007883a 	mov	r3,r2
    cfd0:	d0a76c17 	ldw	r2,-25168(gp)
    cfd4:	1884b03a 	or	r2,r3,r2
    cfd8:	d0a76c15 	stw	r2,-25168(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    cfdc:	d0a76c17 	ldw	r2,-25168(gp)
    cfe0:	100170fa 	wrctl	ienable,r2
    cfe4:	e0bff817 	ldw	r2,-32(fp)
    cfe8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    cfec:	e0bff917 	ldw	r2,-28(fp)
    cff0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    cff4:	0005883a 	mov	r2,zero
    cff8:	00001906 	br	d060 <alt_irq_register+0x158>
    cffc:	e0bffd17 	ldw	r2,-12(fp)
    d000:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d004:	0005303a 	rdctl	r2,status
    d008:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d00c:	e0fffa17 	ldw	r3,-24(fp)
    d010:	00bfff84 	movi	r2,-2
    d014:	1884703a 	and	r2,r3,r2
    d018:	1001703a 	wrctl	status,r2
  
  return context;
    d01c:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    d020:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
    d024:	00c00044 	movi	r3,1
    d028:	e0bff417 	ldw	r2,-48(fp)
    d02c:	1884983a 	sll	r2,r3,r2
    d030:	0084303a 	nor	r2,zero,r2
    d034:	1007883a 	mov	r3,r2
    d038:	d0a76c17 	ldw	r2,-25168(gp)
    d03c:	1884703a 	and	r2,r3,r2
    d040:	d0a76c15 	stw	r2,-25168(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    d044:	d0a76c17 	ldw	r2,-25168(gp)
    d048:	100170fa 	wrctl	ienable,r2
    d04c:	e0bffb17 	ldw	r2,-20(fp)
    d050:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d054:	e0bffc17 	ldw	r2,-16(fp)
    d058:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    d05c:	0005883a 	mov	r2,zero
    d060:	e0bff115 	stw	r2,-60(fp)
    d064:	e0bff317 	ldw	r2,-52(fp)
    d068:	e0bff515 	stw	r2,-44(fp)
    d06c:	e0bff517 	ldw	r2,-44(fp)
    d070:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
    d074:	e0bff117 	ldw	r2,-60(fp)
}
    d078:	e037883a 	mov	sp,fp
    d07c:	df000017 	ldw	fp,0(sp)
    d080:	dec00104 	addi	sp,sp,4
    d084:	f800283a 	ret

0000d088 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d088:	defffe04 	addi	sp,sp,-8
    d08c:	dfc00115 	stw	ra,4(sp)
    d090:	df000015 	stw	fp,0(sp)
    d094:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d098:	d0a01017 	ldw	r2,-32704(gp)
    d09c:	10000326 	beq	r2,zero,d0ac <alt_get_errno+0x24>
    d0a0:	d0a01017 	ldw	r2,-32704(gp)
    d0a4:	103ee83a 	callr	r2
    d0a8:	00000106 	br	d0b0 <alt_get_errno+0x28>
    d0ac:	d0a76b04 	addi	r2,gp,-25172
}
    d0b0:	e037883a 	mov	sp,fp
    d0b4:	dfc00117 	ldw	ra,4(sp)
    d0b8:	df000017 	ldw	fp,0(sp)
    d0bc:	dec00204 	addi	sp,sp,8
    d0c0:	f800283a 	ret

0000d0c4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d0c4:	deffed04 	addi	sp,sp,-76
    d0c8:	dfc01215 	stw	ra,72(sp)
    d0cc:	df001115 	stw	fp,68(sp)
    d0d0:	df001104 	addi	fp,sp,68
    d0d4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d0d8:	e0bfff17 	ldw	r2,-4(fp)
    d0dc:	10000616 	blt	r2,zero,d0f8 <isatty+0x34>
    d0e0:	e0bfff17 	ldw	r2,-4(fp)
    d0e4:	10c00324 	muli	r3,r2,12
    d0e8:	00800074 	movhi	r2,1
    d0ec:	10845604 	addi	r2,r2,4440
    d0f0:	1885883a 	add	r2,r3,r2
    d0f4:	00000106 	br	d0fc <isatty+0x38>
    d0f8:	0005883a 	mov	r2,zero
    d0fc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d100:	e0bfef17 	ldw	r2,-68(fp)
    d104:	10000e26 	beq	r2,zero,d140 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d108:	e0bfef17 	ldw	r2,-68(fp)
    d10c:	10800017 	ldw	r2,0(r2)
    d110:	10800817 	ldw	r2,32(r2)
    d114:	1000021e 	bne	r2,zero,d120 <isatty+0x5c>
    {
      return 1;
    d118:	00800044 	movi	r2,1
    d11c:	00000d06 	br	d154 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d120:	e0bff004 	addi	r2,fp,-64
    d124:	100b883a 	mov	r5,r2
    d128:	e13fff17 	ldw	r4,-4(fp)
    d12c:	000ce580 	call	ce58 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d130:	e0bff117 	ldw	r2,-60(fp)
    d134:	10880020 	cmpeqi	r2,r2,8192
    d138:	10803fcc 	andi	r2,r2,255
    d13c:	00000506 	br	d154 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d140:	000d0880 	call	d088 <alt_get_errno>
    d144:	1007883a 	mov	r3,r2
    d148:	00801444 	movi	r2,81
    d14c:	18800015 	stw	r2,0(r3)
    return 0;
    d150:	0005883a 	mov	r2,zero
  }
}
    d154:	e037883a 	mov	sp,fp
    d158:	dfc00117 	ldw	ra,4(sp)
    d15c:	df000017 	ldw	fp,0(sp)
    d160:	dec00204 	addi	sp,sp,8
    d164:	f800283a 	ret

0000d168 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d168:	defffc04 	addi	sp,sp,-16
    d16c:	df000315 	stw	fp,12(sp)
    d170:	df000304 	addi	fp,sp,12
    d174:	e13ffd15 	stw	r4,-12(fp)
    d178:	e17ffe15 	stw	r5,-8(fp)
    d17c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d180:	e0fffe17 	ldw	r3,-8(fp)
    d184:	e0bffd17 	ldw	r2,-12(fp)
    d188:	18800c26 	beq	r3,r2,d1bc <alt_load_section+0x54>
  {
    while( to != end )
    d18c:	00000806 	br	d1b0 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d190:	e0bffe17 	ldw	r2,-8(fp)
    d194:	10c00104 	addi	r3,r2,4
    d198:	e0fffe15 	stw	r3,-8(fp)
    d19c:	e0fffd17 	ldw	r3,-12(fp)
    d1a0:	19000104 	addi	r4,r3,4
    d1a4:	e13ffd15 	stw	r4,-12(fp)
    d1a8:	18c00017 	ldw	r3,0(r3)
    d1ac:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d1b0:	e0fffe17 	ldw	r3,-8(fp)
    d1b4:	e0bfff17 	ldw	r2,-4(fp)
    d1b8:	18bff51e 	bne	r3,r2,d190 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d190>
    {
      *to++ = *from++;
    }
  }
}
    d1bc:	0001883a 	nop
    d1c0:	e037883a 	mov	sp,fp
    d1c4:	df000017 	ldw	fp,0(sp)
    d1c8:	dec00104 	addi	sp,sp,4
    d1cc:	f800283a 	ret

0000d1d0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d1d0:	defffe04 	addi	sp,sp,-8
    d1d4:	dfc00115 	stw	ra,4(sp)
    d1d8:	df000015 	stw	fp,0(sp)
    d1dc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d1e0:	01800074 	movhi	r6,1
    d1e4:	31897004 	addi	r6,r6,9664
    d1e8:	01400074 	movhi	r5,1
    d1ec:	29422304 	addi	r5,r5,2188
    d1f0:	01000074 	movhi	r4,1
    d1f4:	21097004 	addi	r4,r4,9664
    d1f8:	000d1680 	call	d168 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d1fc:	01800034 	movhi	r6,0
    d200:	31809204 	addi	r6,r6,584
    d204:	01400034 	movhi	r5,0
    d208:	29400804 	addi	r5,r5,32
    d20c:	01000034 	movhi	r4,0
    d210:	21000804 	addi	r4,r4,32
    d214:	000d1680 	call	d168 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d218:	01800074 	movhi	r6,1
    d21c:	31822304 	addi	r6,r6,2188
    d220:	01400074 	movhi	r5,1
    d224:	29412a04 	addi	r5,r5,1192
    d228:	01000074 	movhi	r4,1
    d22c:	21012a04 	addi	r4,r4,1192
    d230:	000d1680 	call	d168 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d234:	000f65c0 	call	f65c <alt_dcache_flush_all>
  alt_icache_flush_all();
    d238:	000f8ac0 	call	f8ac <alt_icache_flush_all>
}
    d23c:	0001883a 	nop
    d240:	e037883a 	mov	sp,fp
    d244:	dfc00117 	ldw	ra,4(sp)
    d248:	df000017 	ldw	fp,0(sp)
    d24c:	dec00204 	addi	sp,sp,8
    d250:	f800283a 	ret

0000d254 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d254:	defffe04 	addi	sp,sp,-8
    d258:	dfc00115 	stw	ra,4(sp)
    d25c:	df000015 	stw	fp,0(sp)
    d260:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d264:	d0a01017 	ldw	r2,-32704(gp)
    d268:	10000326 	beq	r2,zero,d278 <alt_get_errno+0x24>
    d26c:	d0a01017 	ldw	r2,-32704(gp)
    d270:	103ee83a 	callr	r2
    d274:	00000106 	br	d27c <alt_get_errno+0x28>
    d278:	d0a76b04 	addi	r2,gp,-25172
}
    d27c:	e037883a 	mov	sp,fp
    d280:	dfc00117 	ldw	ra,4(sp)
    d284:	df000017 	ldw	fp,0(sp)
    d288:	dec00204 	addi	sp,sp,8
    d28c:	f800283a 	ret

0000d290 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d290:	defff904 	addi	sp,sp,-28
    d294:	dfc00615 	stw	ra,24(sp)
    d298:	df000515 	stw	fp,20(sp)
    d29c:	df000504 	addi	fp,sp,20
    d2a0:	e13ffd15 	stw	r4,-12(fp)
    d2a4:	e17ffe15 	stw	r5,-8(fp)
    d2a8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d2ac:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d2b0:	e0bffd17 	ldw	r2,-12(fp)
    d2b4:	10000616 	blt	r2,zero,d2d0 <lseek+0x40>
    d2b8:	e0bffd17 	ldw	r2,-12(fp)
    d2bc:	10c00324 	muli	r3,r2,12
    d2c0:	00800074 	movhi	r2,1
    d2c4:	10845604 	addi	r2,r2,4440
    d2c8:	1885883a 	add	r2,r3,r2
    d2cc:	00000106 	br	d2d4 <lseek+0x44>
    d2d0:	0005883a 	mov	r2,zero
    d2d4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d2d8:	e0bffc17 	ldw	r2,-16(fp)
    d2dc:	10001026 	beq	r2,zero,d320 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d2e0:	e0bffc17 	ldw	r2,-16(fp)
    d2e4:	10800017 	ldw	r2,0(r2)
    d2e8:	10800717 	ldw	r2,28(r2)
    d2ec:	10000926 	beq	r2,zero,d314 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d2f0:	e0bffc17 	ldw	r2,-16(fp)
    d2f4:	10800017 	ldw	r2,0(r2)
    d2f8:	10800717 	ldw	r2,28(r2)
    d2fc:	e1bfff17 	ldw	r6,-4(fp)
    d300:	e17ffe17 	ldw	r5,-8(fp)
    d304:	e13ffc17 	ldw	r4,-16(fp)
    d308:	103ee83a 	callr	r2
    d30c:	e0bffb15 	stw	r2,-20(fp)
    d310:	00000506 	br	d328 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d314:	00bfde84 	movi	r2,-134
    d318:	e0bffb15 	stw	r2,-20(fp)
    d31c:	00000206 	br	d328 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    d320:	00bfebc4 	movi	r2,-81
    d324:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d328:	e0bffb17 	ldw	r2,-20(fp)
    d32c:	1000070e 	bge	r2,zero,d34c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    d330:	000d2540 	call	d254 <alt_get_errno>
    d334:	1007883a 	mov	r3,r2
    d338:	e0bffb17 	ldw	r2,-20(fp)
    d33c:	0085c83a 	sub	r2,zero,r2
    d340:	18800015 	stw	r2,0(r3)
    rc = -1;
    d344:	00bfffc4 	movi	r2,-1
    d348:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d34c:	e0bffb17 	ldw	r2,-20(fp)
}
    d350:	e037883a 	mov	sp,fp
    d354:	dfc00117 	ldw	ra,4(sp)
    d358:	df000017 	ldw	fp,0(sp)
    d35c:	dec00204 	addi	sp,sp,8
    d360:	f800283a 	ret

0000d364 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d364:	defffd04 	addi	sp,sp,-12
    d368:	dfc00215 	stw	ra,8(sp)
    d36c:	df000115 	stw	fp,4(sp)
    d370:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d374:	0009883a 	mov	r4,zero
    d378:	000d7dc0 	call	d7dc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d37c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d380:	000d8140 	call	d814 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d384:	01800074 	movhi	r6,1
    d388:	3181e104 	addi	r6,r6,1924
    d38c:	01400074 	movhi	r5,1
    d390:	2941e104 	addi	r5,r5,1924
    d394:	01000074 	movhi	r4,1
    d398:	2101e104 	addi	r4,r4,1924
    d39c:	000f9a40 	call	f9a4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d3a0:	000f75c0 	call	f75c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d3a4:	01000074 	movhi	r4,1
    d3a8:	213def04 	addi	r4,r4,-2116
    d3ac:	00101140 	call	10114 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d3b0:	d0a76d17 	ldw	r2,-25164(gp)
    d3b4:	d0e76e17 	ldw	r3,-25160(gp)
    d3b8:	d1276f17 	ldw	r4,-25156(gp)
    d3bc:	200d883a 	mov	r6,r4
    d3c0:	180b883a 	mov	r5,r3
    d3c4:	1009883a 	mov	r4,r2
    d3c8:	00002840 	call	284 <main>
    d3cc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d3d0:	01000044 	movi	r4,1
    d3d4:	000cd200 	call	cd20 <close>
  exit (result);
    d3d8:	e13fff17 	ldw	r4,-4(fp)
    d3dc:	00101280 	call	10128 <exit>

0000d3e0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d3e0:	defffe04 	addi	sp,sp,-8
    d3e4:	df000115 	stw	fp,4(sp)
    d3e8:	df000104 	addi	fp,sp,4
    d3ec:	e13fff15 	stw	r4,-4(fp)
}
    d3f0:	0001883a 	nop
    d3f4:	e037883a 	mov	sp,fp
    d3f8:	df000017 	ldw	fp,0(sp)
    d3fc:	dec00104 	addi	sp,sp,4
    d400:	f800283a 	ret

0000d404 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d404:	defffe04 	addi	sp,sp,-8
    d408:	df000115 	stw	fp,4(sp)
    d40c:	df000104 	addi	fp,sp,4
    d410:	e13fff15 	stw	r4,-4(fp)
}
    d414:	0001883a 	nop
    d418:	e037883a 	mov	sp,fp
    d41c:	df000017 	ldw	fp,0(sp)
    d420:	dec00104 	addi	sp,sp,4
    d424:	f800283a 	ret

0000d428 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d428:	defffe04 	addi	sp,sp,-8
    d42c:	dfc00115 	stw	ra,4(sp)
    d430:	df000015 	stw	fp,0(sp)
    d434:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d438:	d0a01017 	ldw	r2,-32704(gp)
    d43c:	10000326 	beq	r2,zero,d44c <alt_get_errno+0x24>
    d440:	d0a01017 	ldw	r2,-32704(gp)
    d444:	103ee83a 	callr	r2
    d448:	00000106 	br	d450 <alt_get_errno+0x28>
    d44c:	d0a76b04 	addi	r2,gp,-25172
}
    d450:	e037883a 	mov	sp,fp
    d454:	dfc00117 	ldw	ra,4(sp)
    d458:	df000017 	ldw	fp,0(sp)
    d45c:	dec00204 	addi	sp,sp,8
    d460:	f800283a 	ret

0000d464 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d464:	defff904 	addi	sp,sp,-28
    d468:	dfc00615 	stw	ra,24(sp)
    d46c:	df000515 	stw	fp,20(sp)
    d470:	df000504 	addi	fp,sp,20
    d474:	e13ffd15 	stw	r4,-12(fp)
    d478:	e17ffe15 	stw	r5,-8(fp)
    d47c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d480:	e0bffd17 	ldw	r2,-12(fp)
    d484:	10000616 	blt	r2,zero,d4a0 <read+0x3c>
    d488:	e0bffd17 	ldw	r2,-12(fp)
    d48c:	10c00324 	muli	r3,r2,12
    d490:	00800074 	movhi	r2,1
    d494:	10845604 	addi	r2,r2,4440
    d498:	1885883a 	add	r2,r3,r2
    d49c:	00000106 	br	d4a4 <read+0x40>
    d4a0:	0005883a 	mov	r2,zero
    d4a4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d4a8:	e0bffb17 	ldw	r2,-20(fp)
    d4ac:	10002226 	beq	r2,zero,d538 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d4b0:	e0bffb17 	ldw	r2,-20(fp)
    d4b4:	10800217 	ldw	r2,8(r2)
    d4b8:	108000cc 	andi	r2,r2,3
    d4bc:	10800060 	cmpeqi	r2,r2,1
    d4c0:	1000181e 	bne	r2,zero,d524 <read+0xc0>
        (fd->dev->read))
    d4c4:	e0bffb17 	ldw	r2,-20(fp)
    d4c8:	10800017 	ldw	r2,0(r2)
    d4cc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d4d0:	10001426 	beq	r2,zero,d524 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d4d4:	e0bffb17 	ldw	r2,-20(fp)
    d4d8:	10800017 	ldw	r2,0(r2)
    d4dc:	10800517 	ldw	r2,20(r2)
    d4e0:	e0ffff17 	ldw	r3,-4(fp)
    d4e4:	180d883a 	mov	r6,r3
    d4e8:	e17ffe17 	ldw	r5,-8(fp)
    d4ec:	e13ffb17 	ldw	r4,-20(fp)
    d4f0:	103ee83a 	callr	r2
    d4f4:	e0bffc15 	stw	r2,-16(fp)
    d4f8:	e0bffc17 	ldw	r2,-16(fp)
    d4fc:	1000070e 	bge	r2,zero,d51c <read+0xb8>
        {
          ALT_ERRNO = -rval;
    d500:	000d4280 	call	d428 <alt_get_errno>
    d504:	1007883a 	mov	r3,r2
    d508:	e0bffc17 	ldw	r2,-16(fp)
    d50c:	0085c83a 	sub	r2,zero,r2
    d510:	18800015 	stw	r2,0(r3)
          return -1;
    d514:	00bfffc4 	movi	r2,-1
    d518:	00000c06 	br	d54c <read+0xe8>
        }
        return rval;
    d51c:	e0bffc17 	ldw	r2,-16(fp)
    d520:	00000a06 	br	d54c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d524:	000d4280 	call	d428 <alt_get_errno>
    d528:	1007883a 	mov	r3,r2
    d52c:	00800344 	movi	r2,13
    d530:	18800015 	stw	r2,0(r3)
    d534:	00000406 	br	d548 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d538:	000d4280 	call	d428 <alt_get_errno>
    d53c:	1007883a 	mov	r3,r2
    d540:	00801444 	movi	r2,81
    d544:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d548:	00bfffc4 	movi	r2,-1
}
    d54c:	e037883a 	mov	sp,fp
    d550:	dfc00117 	ldw	ra,4(sp)
    d554:	df000017 	ldw	fp,0(sp)
    d558:	dec00204 	addi	sp,sp,8
    d55c:	f800283a 	ret

0000d560 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d560:	defffe04 	addi	sp,sp,-8
    d564:	df000115 	stw	fp,4(sp)
    d568:	df000104 	addi	fp,sp,4
    d56c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d570:	e0bfff17 	ldw	r2,-4(fp)
    d574:	108000d0 	cmplti	r2,r2,3
    d578:	10000d1e 	bne	r2,zero,d5b0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    d57c:	00800074 	movhi	r2,1
    d580:	10845604 	addi	r2,r2,4440
    d584:	e0ffff17 	ldw	r3,-4(fp)
    d588:	18c00324 	muli	r3,r3,12
    d58c:	10c5883a 	add	r2,r2,r3
    d590:	10800204 	addi	r2,r2,8
    d594:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d598:	00800074 	movhi	r2,1
    d59c:	10845604 	addi	r2,r2,4440
    d5a0:	e0ffff17 	ldw	r3,-4(fp)
    d5a4:	18c00324 	muli	r3,r3,12
    d5a8:	10c5883a 	add	r2,r2,r3
    d5ac:	10000015 	stw	zero,0(r2)
  }
}
    d5b0:	0001883a 	nop
    d5b4:	e037883a 	mov	sp,fp
    d5b8:	df000017 	ldw	fp,0(sp)
    d5bc:	dec00104 	addi	sp,sp,4
    d5c0:	f800283a 	ret

0000d5c4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d5c4:	defff904 	addi	sp,sp,-28
    d5c8:	df000615 	stw	fp,24(sp)
    d5cc:	df000604 	addi	fp,sp,24
    d5d0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d5d4:	0005303a 	rdctl	r2,status
    d5d8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d5dc:	e0fffe17 	ldw	r3,-8(fp)
    d5e0:	00bfff84 	movi	r2,-2
    d5e4:	1884703a 	and	r2,r3,r2
    d5e8:	1001703a 	wrctl	status,r2
  
  return context;
    d5ec:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d5f0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d5f4:	d0a01217 	ldw	r2,-32696(gp)
    d5f8:	10c000c4 	addi	r3,r2,3
    d5fc:	00bfff04 	movi	r2,-4
    d600:	1884703a 	and	r2,r3,r2
    d604:	d0a01215 	stw	r2,-32696(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d608:	d0e01217 	ldw	r3,-32696(gp)
    d60c:	e0bfff17 	ldw	r2,-4(fp)
    d610:	1887883a 	add	r3,r3,r2
    d614:	00808034 	movhi	r2,512
    d618:	10800004 	addi	r2,r2,0
    d61c:	10c0062e 	bgeu	r2,r3,d638 <sbrk+0x74>
    d620:	e0bffb17 	ldw	r2,-20(fp)
    d624:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d628:	e0bffa17 	ldw	r2,-24(fp)
    d62c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d630:	00bfffc4 	movi	r2,-1
    d634:	00000b06 	br	d664 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d638:	d0a01217 	ldw	r2,-32696(gp)
    d63c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    d640:	d0e01217 	ldw	r3,-32696(gp)
    d644:	e0bfff17 	ldw	r2,-4(fp)
    d648:	1885883a 	add	r2,r3,r2
    d64c:	d0a01215 	stw	r2,-32696(gp)
    d650:	e0bffb17 	ldw	r2,-20(fp)
    d654:	e0bffc15 	stw	r2,-16(fp)
    d658:	e0bffc17 	ldw	r2,-16(fp)
    d65c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d660:	e0bffd17 	ldw	r2,-12(fp)
} 
    d664:	e037883a 	mov	sp,fp
    d668:	df000017 	ldw	fp,0(sp)
    d66c:	dec00104 	addi	sp,sp,4
    d670:	f800283a 	ret

0000d674 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d674:	defffe04 	addi	sp,sp,-8
    d678:	dfc00115 	stw	ra,4(sp)
    d67c:	df000015 	stw	fp,0(sp)
    d680:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d684:	d0a01017 	ldw	r2,-32704(gp)
    d688:	10000326 	beq	r2,zero,d698 <alt_get_errno+0x24>
    d68c:	d0a01017 	ldw	r2,-32704(gp)
    d690:	103ee83a 	callr	r2
    d694:	00000106 	br	d69c <alt_get_errno+0x28>
    d698:	d0a76b04 	addi	r2,gp,-25172
}
    d69c:	e037883a 	mov	sp,fp
    d6a0:	dfc00117 	ldw	ra,4(sp)
    d6a4:	df000017 	ldw	fp,0(sp)
    d6a8:	dec00204 	addi	sp,sp,8
    d6ac:	f800283a 	ret

0000d6b0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d6b0:	defff904 	addi	sp,sp,-28
    d6b4:	dfc00615 	stw	ra,24(sp)
    d6b8:	df000515 	stw	fp,20(sp)
    d6bc:	df000504 	addi	fp,sp,20
    d6c0:	e13ffd15 	stw	r4,-12(fp)
    d6c4:	e17ffe15 	stw	r5,-8(fp)
    d6c8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d6cc:	e0bffd17 	ldw	r2,-12(fp)
    d6d0:	10000616 	blt	r2,zero,d6ec <write+0x3c>
    d6d4:	e0bffd17 	ldw	r2,-12(fp)
    d6d8:	10c00324 	muli	r3,r2,12
    d6dc:	00800074 	movhi	r2,1
    d6e0:	10845604 	addi	r2,r2,4440
    d6e4:	1885883a 	add	r2,r3,r2
    d6e8:	00000106 	br	d6f0 <write+0x40>
    d6ec:	0005883a 	mov	r2,zero
    d6f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d6f4:	e0bffb17 	ldw	r2,-20(fp)
    d6f8:	10002126 	beq	r2,zero,d780 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d6fc:	e0bffb17 	ldw	r2,-20(fp)
    d700:	10800217 	ldw	r2,8(r2)
    d704:	108000cc 	andi	r2,r2,3
    d708:	10001826 	beq	r2,zero,d76c <write+0xbc>
    d70c:	e0bffb17 	ldw	r2,-20(fp)
    d710:	10800017 	ldw	r2,0(r2)
    d714:	10800617 	ldw	r2,24(r2)
    d718:	10001426 	beq	r2,zero,d76c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d71c:	e0bffb17 	ldw	r2,-20(fp)
    d720:	10800017 	ldw	r2,0(r2)
    d724:	10800617 	ldw	r2,24(r2)
    d728:	e0ffff17 	ldw	r3,-4(fp)
    d72c:	180d883a 	mov	r6,r3
    d730:	e17ffe17 	ldw	r5,-8(fp)
    d734:	e13ffb17 	ldw	r4,-20(fp)
    d738:	103ee83a 	callr	r2
    d73c:	e0bffc15 	stw	r2,-16(fp)
    d740:	e0bffc17 	ldw	r2,-16(fp)
    d744:	1000070e 	bge	r2,zero,d764 <write+0xb4>
      {
        ALT_ERRNO = -rval;
    d748:	000d6740 	call	d674 <alt_get_errno>
    d74c:	1007883a 	mov	r3,r2
    d750:	e0bffc17 	ldw	r2,-16(fp)
    d754:	0085c83a 	sub	r2,zero,r2
    d758:	18800015 	stw	r2,0(r3)
        return -1;
    d75c:	00bfffc4 	movi	r2,-1
    d760:	00000c06 	br	d794 <write+0xe4>
      }
      return rval;
    d764:	e0bffc17 	ldw	r2,-16(fp)
    d768:	00000a06 	br	d794 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d76c:	000d6740 	call	d674 <alt_get_errno>
    d770:	1007883a 	mov	r3,r2
    d774:	00800344 	movi	r2,13
    d778:	18800015 	stw	r2,0(r3)
    d77c:	00000406 	br	d790 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d780:	000d6740 	call	d674 <alt_get_errno>
    d784:	1007883a 	mov	r3,r2
    d788:	00801444 	movi	r2,81
    d78c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d790:	00bfffc4 	movi	r2,-1
}
    d794:	e037883a 	mov	sp,fp
    d798:	dfc00117 	ldw	ra,4(sp)
    d79c:	df000017 	ldw	fp,0(sp)
    d7a0:	dec00204 	addi	sp,sp,8
    d7a4:	f800283a 	ret

0000d7a8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d7a8:	defffd04 	addi	sp,sp,-12
    d7ac:	dfc00215 	stw	ra,8(sp)
    d7b0:	df000115 	stw	fp,4(sp)
    d7b4:	df000104 	addi	fp,sp,4
    d7b8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d7bc:	d1600d04 	addi	r5,gp,-32716
    d7c0:	e13fff17 	ldw	r4,-4(fp)
    d7c4:	000f6b80 	call	f6b8 <alt_dev_llist_insert>
}
    d7c8:	e037883a 	mov	sp,fp
    d7cc:	dfc00117 	ldw	ra,4(sp)
    d7d0:	df000017 	ldw	fp,0(sp)
    d7d4:	dec00204 	addi	sp,sp,8
    d7d8:	f800283a 	ret

0000d7dc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d7dc:	defffd04 	addi	sp,sp,-12
    d7e0:	dfc00215 	stw	ra,8(sp)
    d7e4:	df000115 	stw	fp,4(sp)
    d7e8:	df000104 	addi	fp,sp,4
    d7ec:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
    d7f0:	000fe180 	call	fe18 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d7f4:	00800044 	movi	r2,1
    d7f8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d7fc:	0001883a 	nop
    d800:	e037883a 	mov	sp,fp
    d804:	dfc00117 	ldw	ra,4(sp)
    d808:	df000017 	ldw	fp,0(sp)
    d80c:	dec00204 	addi	sp,sp,8
    d810:	f800283a 	ret

0000d814 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d814:	defffc04 	addi	sp,sp,-16
    d818:	dfc00315 	stw	ra,12(sp)
    d81c:	df000215 	stw	fp,8(sp)
    d820:	df000204 	addi	fp,sp,8
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
    d824:	01c00204 	movi	r7,8
    d828:	000d883a 	mov	r6,zero
    d82c:	000b883a 	mov	r5,zero
    d830:	013fc834 	movhi	r4,65312
    d834:	21080004 	addi	r4,r4,8192
    d838:	000ea800 	call	ea80 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    d83c:	01800204 	movi	r6,8
    d840:	000b883a 	mov	r5,zero
    d844:	01000074 	movhi	r4,1
    d848:	2104c004 	addi	r4,r4,4864
    d84c:	000e1080 	call	e108 <altera_avalon_jtag_uart_init>
    d850:	01000074 	movhi	r4,1
    d854:	2104b604 	addi	r4,r4,4824
    d858:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
    d85c:	0001883a 	nop
    ALTERA_UP_AVALON_ADC_INIT ( ADC, ADC);
    d860:	01000074 	movhi	r4,1
    d864:	2108ce04 	addi	r4,r4,9016
    d868:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
    d86c:	01000074 	movhi	r4,1
    d870:	2108d904 	addi	r4,r4,9060
    d874:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
    d878:	01000074 	movhi	r4,1
    d87c:	2108e504 	addi	r4,r4,9108
    d880:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_IRDA_INIT ( IRDA, IrDA);
    d884:	01000074 	movhi	r4,1
    d888:	2108f104 	addi	r4,r4,9156
    d88c:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT, PS2_Port);
    d890:	01000074 	movhi	r4,1
    d894:	2108fc04 	addi	r4,r4,9200
    d898:	000efa80 	call	efa8 <alt_up_ps2_init>
    d89c:	01000074 	movhi	r4,1
    d8a0:	2108fc04 	addi	r4,r4,9200
    d8a4:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT_DUAL, PS2_Port_Dual);
    d8a8:	01000074 	movhi	r4,1
    d8ac:	21090a04 	addi	r4,r4,9256
    d8b0:	000efa80 	call	efa8 <alt_up_ps2_init>
    d8b4:	01000074 	movhi	r4,1
    d8b8:	21090a04 	addi	r4,r4,9256
    d8bc:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA, VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA);
    d8c0:	00800074 	movhi	r2,1
    d8c4:	10891804 	addi	r2,r2,9312
    d8c8:	10800a17 	ldw	r2,40(r2)
    d8cc:	10800017 	ldw	r2,0(r2)
    d8d0:	1007883a 	mov	r3,r2
    d8d4:	00800074 	movhi	r2,1
    d8d8:	10891804 	addi	r2,r2,9312
    d8dc:	10c00b15 	stw	r3,44(r2)
    d8e0:	00800074 	movhi	r2,1
    d8e4:	10891804 	addi	r2,r2,9312
    d8e8:	10800a17 	ldw	r2,40(r2)
    d8ec:	10800104 	addi	r2,r2,4
    d8f0:	10800017 	ldw	r2,0(r2)
    d8f4:	1007883a 	mov	r3,r2
    d8f8:	00800074 	movhi	r2,1
    d8fc:	10891804 	addi	r2,r2,9312
    d900:	10c00c15 	stw	r3,48(r2)
    d904:	00800074 	movhi	r2,1
    d908:	10891804 	addi	r2,r2,9312
    d90c:	10800a17 	ldw	r2,40(r2)
    d910:	10800204 	addi	r2,r2,8
    d914:	10800017 	ldw	r2,0(r2)
    d918:	10ffffcc 	andi	r3,r2,65535
    d91c:	00800074 	movhi	r2,1
    d920:	10891804 	addi	r2,r2,9312
    d924:	10c01115 	stw	r3,68(r2)
    d928:	00800074 	movhi	r2,1
    d92c:	10891804 	addi	r2,r2,9312
    d930:	10800a17 	ldw	r2,40(r2)
    d934:	10800204 	addi	r2,r2,8
    d938:	10800017 	ldw	r2,0(r2)
    d93c:	1006d43a 	srli	r3,r2,16
    d940:	00800074 	movhi	r2,1
    d944:	10891804 	addi	r2,r2,9312
    d948:	10c01215 	stw	r3,72(r2)
    d94c:	00800074 	movhi	r2,1
    d950:	10891804 	addi	r2,r2,9312
    d954:	10800a17 	ldw	r2,40(r2)
    d958:	10800304 	addi	r2,r2,12
    d95c:	10800017 	ldw	r2,0(r2)
    d960:	1005d07a 	srai	r2,r2,1
    d964:	10c0004c 	andi	r3,r2,1
    d968:	00800074 	movhi	r2,1
    d96c:	10891804 	addi	r2,r2,9312
    d970:	10c00d15 	stw	r3,52(r2)
    d974:	00800074 	movhi	r2,1
    d978:	10891804 	addi	r2,r2,9312
    d97c:	10800a17 	ldw	r2,40(r2)
    d980:	10800304 	addi	r2,r2,12
    d984:	10800017 	ldw	r2,0(r2)
    d988:	1005d23a 	srai	r2,r2,8
    d98c:	10c003cc 	andi	r3,r2,15
    d990:	00800074 	movhi	r2,1
    d994:	10891804 	addi	r2,r2,9312
    d998:	10c00e15 	stw	r3,56(r2)
    d99c:	00800074 	movhi	r2,1
    d9a0:	10891804 	addi	r2,r2,9312
    d9a4:	10800a17 	ldw	r2,40(r2)
    d9a8:	10800304 	addi	r2,r2,12
    d9ac:	10800017 	ldw	r2,0(r2)
    d9b0:	1005d1ba 	srai	r2,r2,6
    d9b4:	10c000cc 	andi	r3,r2,3
    d9b8:	00800074 	movhi	r2,1
    d9bc:	10891804 	addi	r2,r2,9312
    d9c0:	10c00f15 	stw	r3,60(r2)
    d9c4:	00800074 	movhi	r2,1
    d9c8:	10891804 	addi	r2,r2,9312
    d9cc:	10800e17 	ldw	r2,56(r2)
    d9d0:	1007883a 	mov	r3,r2
    d9d4:	00800074 	movhi	r2,1
    d9d8:	10891804 	addi	r2,r2,9312
    d9dc:	10800f17 	ldw	r2,60(r2)
    d9e0:	1885383a 	mul	r2,r3,r2
    d9e4:	e0bffe05 	stb	r2,-8(fp)
    d9e8:	e0bffe03 	ldbu	r2,-8(fp)
    d9ec:	10800268 	cmpgeui	r2,r2,9
    d9f0:	1000051e 	bne	r2,zero,da08 <alt_sys_init+0x1f4>
    d9f4:	00800074 	movhi	r2,1
    d9f8:	10891804 	addi	r2,r2,9312
    d9fc:	00c00044 	movi	r3,1
    da00:	10c01015 	stw	r3,64(r2)
    da04:	00000c06 	br	da38 <alt_sys_init+0x224>
    da08:	e0bffe03 	ldbu	r2,-8(fp)
    da0c:	10800468 	cmpgeui	r2,r2,17
    da10:	1000051e 	bne	r2,zero,da28 <alt_sys_init+0x214>
    da14:	00800074 	movhi	r2,1
    da18:	10891804 	addi	r2,r2,9312
    da1c:	00c00084 	movi	r3,2
    da20:	10c01015 	stw	r3,64(r2)
    da24:	00000406 	br	da38 <alt_sys_init+0x224>
    da28:	00800074 	movhi	r2,1
    da2c:	10891804 	addi	r2,r2,9312
    da30:	00c00104 	movi	r3,4
    da34:	10c01015 	stw	r3,64(r2)
    da38:	00800074 	movhi	r2,1
    da3c:	10891804 	addi	r2,r2,9312
    da40:	10800a17 	ldw	r2,40(r2)
    da44:	10800304 	addi	r2,r2,12
    da48:	10800017 	ldw	r2,0(r2)
    da4c:	1005d43a 	srai	r2,r2,16
    da50:	e0bffe45 	stb	r2,-7(fp)
    da54:	00800074 	movhi	r2,1
    da58:	10891804 	addi	r2,r2,9312
    da5c:	10800a17 	ldw	r2,40(r2)
    da60:	10800304 	addi	r2,r2,12
    da64:	10800017 	ldw	r2,0(r2)
    da68:	1004d63a 	srli	r2,r2,24
    da6c:	e0bffe85 	stb	r2,-6(fp)
    da70:	00800074 	movhi	r2,1
    da74:	10891804 	addi	r2,r2,9312
    da78:	10801017 	ldw	r2,64(r2)
    da7c:	10800058 	cmpnei	r2,r2,1
    da80:	1000041e 	bne	r2,zero,da94 <alt_sys_init+0x280>
    da84:	00800074 	movhi	r2,1
    da88:	10891804 	addi	r2,r2,9312
    da8c:	10001315 	stw	zero,76(r2)
    da90:	00000e06 	br	dacc <alt_sys_init+0x2b8>
    da94:	00800074 	movhi	r2,1
    da98:	10891804 	addi	r2,r2,9312
    da9c:	10801017 	ldw	r2,64(r2)
    daa0:	10800098 	cmpnei	r2,r2,2
    daa4:	1000051e 	bne	r2,zero,dabc <alt_sys_init+0x2a8>
    daa8:	00800074 	movhi	r2,1
    daac:	10891804 	addi	r2,r2,9312
    dab0:	00c00044 	movi	r3,1
    dab4:	10c01315 	stw	r3,76(r2)
    dab8:	00000406 	br	dacc <alt_sys_init+0x2b8>
    dabc:	00800074 	movhi	r2,1
    dac0:	10891804 	addi	r2,r2,9312
    dac4:	00c00084 	movi	r3,2
    dac8:	10c01315 	stw	r3,76(r2)
    dacc:	e0bffe43 	ldbu	r2,-7(fp)
    dad0:	00c00804 	movi	r3,32
    dad4:	1885c83a 	sub	r2,r3,r2
    dad8:	00ffffc4 	movi	r3,-1
    dadc:	1886d83a 	srl	r3,r3,r2
    dae0:	00800074 	movhi	r2,1
    dae4:	10891804 	addi	r2,r2,9312
    dae8:	10c01415 	stw	r3,80(r2)
    daec:	e0fffe43 	ldbu	r3,-7(fp)
    daf0:	00800074 	movhi	r2,1
    daf4:	10891804 	addi	r2,r2,9312
    daf8:	10801317 	ldw	r2,76(r2)
    dafc:	1887883a 	add	r3,r3,r2
    db00:	00800074 	movhi	r2,1
    db04:	10891804 	addi	r2,r2,9312
    db08:	10c01515 	stw	r3,84(r2)
    db0c:	e0bffe83 	ldbu	r2,-6(fp)
    db10:	00c00804 	movi	r3,32
    db14:	1885c83a 	sub	r2,r3,r2
    db18:	00ffffc4 	movi	r3,-1
    db1c:	1886d83a 	srl	r3,r3,r2
    db20:	00800074 	movhi	r2,1
    db24:	10891804 	addi	r2,r2,9312
    db28:	10c01615 	stw	r3,88(r2)
    db2c:	01000074 	movhi	r4,1
    db30:	21091804 	addi	r4,r4,9312
    db34:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA, Video_In_Subsystem_Video_In_DMA);
    db38:	00800074 	movhi	r2,1
    db3c:	10892f04 	addi	r2,r2,9404
    db40:	10800a17 	ldw	r2,40(r2)
    db44:	10800017 	ldw	r2,0(r2)
    db48:	1007883a 	mov	r3,r2
    db4c:	00800074 	movhi	r2,1
    db50:	10892f04 	addi	r2,r2,9404
    db54:	10c00b15 	stw	r3,44(r2)
    db58:	00800074 	movhi	r2,1
    db5c:	10892f04 	addi	r2,r2,9404
    db60:	10800a17 	ldw	r2,40(r2)
    db64:	10800104 	addi	r2,r2,4
    db68:	10800017 	ldw	r2,0(r2)
    db6c:	1007883a 	mov	r3,r2
    db70:	00800074 	movhi	r2,1
    db74:	10892f04 	addi	r2,r2,9404
    db78:	10c00c15 	stw	r3,48(r2)
    db7c:	00800074 	movhi	r2,1
    db80:	10892f04 	addi	r2,r2,9404
    db84:	10800a17 	ldw	r2,40(r2)
    db88:	10800204 	addi	r2,r2,8
    db8c:	10800017 	ldw	r2,0(r2)
    db90:	10ffffcc 	andi	r3,r2,65535
    db94:	00800074 	movhi	r2,1
    db98:	10892f04 	addi	r2,r2,9404
    db9c:	10c01115 	stw	r3,68(r2)
    dba0:	00800074 	movhi	r2,1
    dba4:	10892f04 	addi	r2,r2,9404
    dba8:	10800a17 	ldw	r2,40(r2)
    dbac:	10800204 	addi	r2,r2,8
    dbb0:	10800017 	ldw	r2,0(r2)
    dbb4:	1006d43a 	srli	r3,r2,16
    dbb8:	00800074 	movhi	r2,1
    dbbc:	10892f04 	addi	r2,r2,9404
    dbc0:	10c01215 	stw	r3,72(r2)
    dbc4:	00800074 	movhi	r2,1
    dbc8:	10892f04 	addi	r2,r2,9404
    dbcc:	10800a17 	ldw	r2,40(r2)
    dbd0:	10800304 	addi	r2,r2,12
    dbd4:	10800017 	ldw	r2,0(r2)
    dbd8:	1005d07a 	srai	r2,r2,1
    dbdc:	10c0004c 	andi	r3,r2,1
    dbe0:	00800074 	movhi	r2,1
    dbe4:	10892f04 	addi	r2,r2,9404
    dbe8:	10c00d15 	stw	r3,52(r2)
    dbec:	00800074 	movhi	r2,1
    dbf0:	10892f04 	addi	r2,r2,9404
    dbf4:	10800a17 	ldw	r2,40(r2)
    dbf8:	10800304 	addi	r2,r2,12
    dbfc:	10800017 	ldw	r2,0(r2)
    dc00:	1005d23a 	srai	r2,r2,8
    dc04:	10c003cc 	andi	r3,r2,15
    dc08:	00800074 	movhi	r2,1
    dc0c:	10892f04 	addi	r2,r2,9404
    dc10:	10c00e15 	stw	r3,56(r2)
    dc14:	00800074 	movhi	r2,1
    dc18:	10892f04 	addi	r2,r2,9404
    dc1c:	10800a17 	ldw	r2,40(r2)
    dc20:	10800304 	addi	r2,r2,12
    dc24:	10800017 	ldw	r2,0(r2)
    dc28:	1005d1ba 	srai	r2,r2,6
    dc2c:	10c000cc 	andi	r3,r2,3
    dc30:	00800074 	movhi	r2,1
    dc34:	10892f04 	addi	r2,r2,9404
    dc38:	10c00f15 	stw	r3,60(r2)
    dc3c:	00800074 	movhi	r2,1
    dc40:	10892f04 	addi	r2,r2,9404
    dc44:	10800e17 	ldw	r2,56(r2)
    dc48:	1007883a 	mov	r3,r2
    dc4c:	00800074 	movhi	r2,1
    dc50:	10892f04 	addi	r2,r2,9404
    dc54:	10800f17 	ldw	r2,60(r2)
    dc58:	1885383a 	mul	r2,r3,r2
    dc5c:	e0bffec5 	stb	r2,-5(fp)
    dc60:	e0bffec3 	ldbu	r2,-5(fp)
    dc64:	10800268 	cmpgeui	r2,r2,9
    dc68:	1000051e 	bne	r2,zero,dc80 <alt_sys_init+0x46c>
    dc6c:	00800074 	movhi	r2,1
    dc70:	10892f04 	addi	r2,r2,9404
    dc74:	00c00044 	movi	r3,1
    dc78:	10c01015 	stw	r3,64(r2)
    dc7c:	00000c06 	br	dcb0 <alt_sys_init+0x49c>
    dc80:	e0bffec3 	ldbu	r2,-5(fp)
    dc84:	10800468 	cmpgeui	r2,r2,17
    dc88:	1000051e 	bne	r2,zero,dca0 <alt_sys_init+0x48c>
    dc8c:	00800074 	movhi	r2,1
    dc90:	10892f04 	addi	r2,r2,9404
    dc94:	00c00084 	movi	r3,2
    dc98:	10c01015 	stw	r3,64(r2)
    dc9c:	00000406 	br	dcb0 <alt_sys_init+0x49c>
    dca0:	00800074 	movhi	r2,1
    dca4:	10892f04 	addi	r2,r2,9404
    dca8:	00c00104 	movi	r3,4
    dcac:	10c01015 	stw	r3,64(r2)
    dcb0:	00800074 	movhi	r2,1
    dcb4:	10892f04 	addi	r2,r2,9404
    dcb8:	10800a17 	ldw	r2,40(r2)
    dcbc:	10800304 	addi	r2,r2,12
    dcc0:	10800017 	ldw	r2,0(r2)
    dcc4:	1005d43a 	srai	r2,r2,16
    dcc8:	e0bfff05 	stb	r2,-4(fp)
    dccc:	00800074 	movhi	r2,1
    dcd0:	10892f04 	addi	r2,r2,9404
    dcd4:	10800a17 	ldw	r2,40(r2)
    dcd8:	10800304 	addi	r2,r2,12
    dcdc:	10800017 	ldw	r2,0(r2)
    dce0:	1004d63a 	srli	r2,r2,24
    dce4:	e0bfff45 	stb	r2,-3(fp)
    dce8:	00800074 	movhi	r2,1
    dcec:	10892f04 	addi	r2,r2,9404
    dcf0:	10801017 	ldw	r2,64(r2)
    dcf4:	10800058 	cmpnei	r2,r2,1
    dcf8:	1000041e 	bne	r2,zero,dd0c <alt_sys_init+0x4f8>
    dcfc:	00800074 	movhi	r2,1
    dd00:	10892f04 	addi	r2,r2,9404
    dd04:	10001315 	stw	zero,76(r2)
    dd08:	00000e06 	br	dd44 <alt_sys_init+0x530>
    dd0c:	00800074 	movhi	r2,1
    dd10:	10892f04 	addi	r2,r2,9404
    dd14:	10801017 	ldw	r2,64(r2)
    dd18:	10800098 	cmpnei	r2,r2,2
    dd1c:	1000051e 	bne	r2,zero,dd34 <alt_sys_init+0x520>
    dd20:	00800074 	movhi	r2,1
    dd24:	10892f04 	addi	r2,r2,9404
    dd28:	00c00044 	movi	r3,1
    dd2c:	10c01315 	stw	r3,76(r2)
    dd30:	00000406 	br	dd44 <alt_sys_init+0x530>
    dd34:	00800074 	movhi	r2,1
    dd38:	10892f04 	addi	r2,r2,9404
    dd3c:	00c00084 	movi	r3,2
    dd40:	10c01315 	stw	r3,76(r2)
    dd44:	e0bfff03 	ldbu	r2,-4(fp)
    dd48:	00c00804 	movi	r3,32
    dd4c:	1885c83a 	sub	r2,r3,r2
    dd50:	00ffffc4 	movi	r3,-1
    dd54:	1886d83a 	srl	r3,r3,r2
    dd58:	00800074 	movhi	r2,1
    dd5c:	10892f04 	addi	r2,r2,9404
    dd60:	10c01415 	stw	r3,80(r2)
    dd64:	e0ffff03 	ldbu	r3,-4(fp)
    dd68:	00800074 	movhi	r2,1
    dd6c:	10892f04 	addi	r2,r2,9404
    dd70:	10801317 	ldw	r2,76(r2)
    dd74:	1887883a 	add	r3,r3,r2
    dd78:	00800074 	movhi	r2,1
    dd7c:	10892f04 	addi	r2,r2,9404
    dd80:	10c01515 	stw	r3,84(r2)
    dd84:	e0bfff43 	ldbu	r2,-3(fp)
    dd88:	00c00804 	movi	r3,32
    dd8c:	1885c83a 	sub	r2,r3,r2
    dd90:	00ffffc4 	movi	r3,-1
    dd94:	1886d83a 	srl	r3,r3,r2
    dd98:	00800074 	movhi	r2,1
    dd9c:	10892f04 	addi	r2,r2,9404
    dda0:	10c01615 	stw	r3,88(r2)
    dda4:	01000074 	movhi	r4,1
    dda8:	21092f04 	addi	r4,r4,9404
    ddac:	000d7a80 	call	d7a8 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_PIXEL_BUFFER_DMA_INIT ( VGA_SUBSYSTEM_VGA_PIXEL_DMA, VGA_Subsystem_VGA_Pixel_DMA);
    ddb0:	00800074 	movhi	r2,1
    ddb4:	10894604 	addi	r2,r2,9496
    ddb8:	10800a17 	ldw	r2,40(r2)
    ddbc:	10800017 	ldw	r2,0(r2)
    ddc0:	1007883a 	mov	r3,r2
    ddc4:	00800074 	movhi	r2,1
    ddc8:	10894604 	addi	r2,r2,9496
    ddcc:	10c00b15 	stw	r3,44(r2)
    ddd0:	00800074 	movhi	r2,1
    ddd4:	10894604 	addi	r2,r2,9496
    ddd8:	10800a17 	ldw	r2,40(r2)
    dddc:	10800104 	addi	r2,r2,4
    dde0:	10800017 	ldw	r2,0(r2)
    dde4:	1007883a 	mov	r3,r2
    dde8:	00800074 	movhi	r2,1
    ddec:	10894604 	addi	r2,r2,9496
    ddf0:	10c00c15 	stw	r3,48(r2)
    ddf4:	00800074 	movhi	r2,1
    ddf8:	10894604 	addi	r2,r2,9496
    ddfc:	10800a17 	ldw	r2,40(r2)
    de00:	10800204 	addi	r2,r2,8
    de04:	10800017 	ldw	r2,0(r2)
    de08:	10ffffcc 	andi	r3,r2,65535
    de0c:	00800074 	movhi	r2,1
    de10:	10894604 	addi	r2,r2,9496
    de14:	10c00f15 	stw	r3,60(r2)
    de18:	00800074 	movhi	r2,1
    de1c:	10894604 	addi	r2,r2,9496
    de20:	10800a17 	ldw	r2,40(r2)
    de24:	10800204 	addi	r2,r2,8
    de28:	10800017 	ldw	r2,0(r2)
    de2c:	1006d43a 	srli	r3,r2,16
    de30:	00800074 	movhi	r2,1
    de34:	10894604 	addi	r2,r2,9496
    de38:	10c01015 	stw	r3,64(r2)
    de3c:	00800074 	movhi	r2,1
    de40:	10894604 	addi	r2,r2,9496
    de44:	10800a17 	ldw	r2,40(r2)
    de48:	10800304 	addi	r2,r2,12
    de4c:	10800017 	ldw	r2,0(r2)
    de50:	1005d07a 	srai	r2,r2,1
    de54:	10c0004c 	andi	r3,r2,1
    de58:	00800074 	movhi	r2,1
    de5c:	10894604 	addi	r2,r2,9496
    de60:	10c00d15 	stw	r3,52(r2)
    de64:	00800074 	movhi	r2,1
    de68:	10894604 	addi	r2,r2,9496
    de6c:	10800a17 	ldw	r2,40(r2)
    de70:	10800304 	addi	r2,r2,12
    de74:	10800017 	ldw	r2,0(r2)
    de78:	1005d13a 	srai	r2,r2,4
    de7c:	10c003cc 	andi	r3,r2,15
    de80:	00800074 	movhi	r2,1
    de84:	10894604 	addi	r2,r2,9496
    de88:	10c00e15 	stw	r3,56(r2)
    de8c:	00800074 	movhi	r2,1
    de90:	10894604 	addi	r2,r2,9496
    de94:	10800a17 	ldw	r2,40(r2)
    de98:	10800304 	addi	r2,r2,12
    de9c:	10800017 	ldw	r2,0(r2)
    dea0:	1005d43a 	srai	r2,r2,16
    dea4:	e0bfff85 	stb	r2,-2(fp)
    dea8:	00800074 	movhi	r2,1
    deac:	10894604 	addi	r2,r2,9496
    deb0:	10800a17 	ldw	r2,40(r2)
    deb4:	10800304 	addi	r2,r2,12
    deb8:	10800017 	ldw	r2,0(r2)
    debc:	1004d63a 	srli	r2,r2,24
    dec0:	e0bfffc5 	stb	r2,-1(fp)
    dec4:	00800074 	movhi	r2,1
    dec8:	10894604 	addi	r2,r2,9496
    decc:	10800e17 	ldw	r2,56(r2)
    ded0:	10800058 	cmpnei	r2,r2,1
    ded4:	1000041e 	bne	r2,zero,dee8 <alt_sys_init+0x6d4>
    ded8:	00800074 	movhi	r2,1
    dedc:	10894604 	addi	r2,r2,9496
    dee0:	10001115 	stw	zero,68(r2)
    dee4:	00000e06 	br	df20 <alt_sys_init+0x70c>
    dee8:	00800074 	movhi	r2,1
    deec:	10894604 	addi	r2,r2,9496
    def0:	10800e17 	ldw	r2,56(r2)
    def4:	10800098 	cmpnei	r2,r2,2
    def8:	1000051e 	bne	r2,zero,df10 <alt_sys_init+0x6fc>
    defc:	00800074 	movhi	r2,1
    df00:	10894604 	addi	r2,r2,9496
    df04:	00c00044 	movi	r3,1
    df08:	10c01115 	stw	r3,68(r2)
    df0c:	00000406 	br	df20 <alt_sys_init+0x70c>
    df10:	00800074 	movhi	r2,1
    df14:	10894604 	addi	r2,r2,9496
    df18:	00c00084 	movi	r3,2
    df1c:	10c01115 	stw	r3,68(r2)
    df20:	e0bfff83 	ldbu	r2,-2(fp)
    df24:	00c00804 	movi	r3,32
    df28:	1885c83a 	sub	r2,r3,r2
    df2c:	00ffffc4 	movi	r3,-1
    df30:	1886d83a 	srl	r3,r3,r2
    df34:	00800074 	movhi	r2,1
    df38:	10894604 	addi	r2,r2,9496
    df3c:	10c01215 	stw	r3,72(r2)
    df40:	e0ffff83 	ldbu	r3,-2(fp)
    df44:	00800074 	movhi	r2,1
    df48:	10894604 	addi	r2,r2,9496
    df4c:	10801117 	ldw	r2,68(r2)
    df50:	1887883a 	add	r3,r3,r2
    df54:	00800074 	movhi	r2,1
    df58:	10894604 	addi	r2,r2,9496
    df5c:	10c01315 	stw	r3,76(r2)
    df60:	e0bfffc3 	ldbu	r2,-1(fp)
    df64:	00c00804 	movi	r3,32
    df68:	1885c83a 	sub	r2,r3,r2
    df6c:	00ffffc4 	movi	r3,-1
    df70:	1886d83a 	srl	r3,r3,r2
    df74:	00800074 	movhi	r2,1
    df78:	10894604 	addi	r2,r2,9496
    df7c:	10c01415 	stw	r3,80(r2)
    df80:	01000074 	movhi	r4,1
    df84:	21094604 	addi	r4,r4,9496
    df88:	000d7a80 	call	d7a8 <alt_dev_reg>
}
    df8c:	0001883a 	nop
    df90:	e037883a 	mov	sp,fp
    df94:	dfc00117 	ldw	ra,4(sp)
    df98:	df000017 	ldw	fp,0(sp)
    df9c:	dec00204 	addi	sp,sp,8
    dfa0:	f800283a 	ret

0000dfa4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    dfa4:	defffa04 	addi	sp,sp,-24
    dfa8:	dfc00515 	stw	ra,20(sp)
    dfac:	df000415 	stw	fp,16(sp)
    dfb0:	df000404 	addi	fp,sp,16
    dfb4:	e13ffd15 	stw	r4,-12(fp)
    dfb8:	e17ffe15 	stw	r5,-8(fp)
    dfbc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dfc0:	e0bffd17 	ldw	r2,-12(fp)
    dfc4:	10800017 	ldw	r2,0(r2)
    dfc8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    dfcc:	e0bffc17 	ldw	r2,-16(fp)
    dfd0:	10c00a04 	addi	r3,r2,40
    dfd4:	e0bffd17 	ldw	r2,-12(fp)
    dfd8:	10800217 	ldw	r2,8(r2)
    dfdc:	100f883a 	mov	r7,r2
    dfe0:	e1bfff17 	ldw	r6,-4(fp)
    dfe4:	e17ffe17 	ldw	r5,-8(fp)
    dfe8:	1809883a 	mov	r4,r3
    dfec:	000e5c40 	call	e5c4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    dff0:	e037883a 	mov	sp,fp
    dff4:	dfc00117 	ldw	ra,4(sp)
    dff8:	df000017 	ldw	fp,0(sp)
    dffc:	dec00204 	addi	sp,sp,8
    e000:	f800283a 	ret

0000e004 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e004:	defffa04 	addi	sp,sp,-24
    e008:	dfc00515 	stw	ra,20(sp)
    e00c:	df000415 	stw	fp,16(sp)
    e010:	df000404 	addi	fp,sp,16
    e014:	e13ffd15 	stw	r4,-12(fp)
    e018:	e17ffe15 	stw	r5,-8(fp)
    e01c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e020:	e0bffd17 	ldw	r2,-12(fp)
    e024:	10800017 	ldw	r2,0(r2)
    e028:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e02c:	e0bffc17 	ldw	r2,-16(fp)
    e030:	10c00a04 	addi	r3,r2,40
    e034:	e0bffd17 	ldw	r2,-12(fp)
    e038:	10800217 	ldw	r2,8(r2)
    e03c:	100f883a 	mov	r7,r2
    e040:	e1bfff17 	ldw	r6,-4(fp)
    e044:	e17ffe17 	ldw	r5,-8(fp)
    e048:	1809883a 	mov	r4,r3
    e04c:	000e7e00 	call	e7e0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e050:	e037883a 	mov	sp,fp
    e054:	dfc00117 	ldw	ra,4(sp)
    e058:	df000017 	ldw	fp,0(sp)
    e05c:	dec00204 	addi	sp,sp,8
    e060:	f800283a 	ret

0000e064 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e064:	defffc04 	addi	sp,sp,-16
    e068:	dfc00315 	stw	ra,12(sp)
    e06c:	df000215 	stw	fp,8(sp)
    e070:	df000204 	addi	fp,sp,8
    e074:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e078:	e0bfff17 	ldw	r2,-4(fp)
    e07c:	10800017 	ldw	r2,0(r2)
    e080:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e084:	e0bffe17 	ldw	r2,-8(fp)
    e088:	10c00a04 	addi	r3,r2,40
    e08c:	e0bfff17 	ldw	r2,-4(fp)
    e090:	10800217 	ldw	r2,8(r2)
    e094:	100b883a 	mov	r5,r2
    e098:	1809883a 	mov	r4,r3
    e09c:	000e46c0 	call	e46c <altera_avalon_jtag_uart_close>
}
    e0a0:	e037883a 	mov	sp,fp
    e0a4:	dfc00117 	ldw	ra,4(sp)
    e0a8:	df000017 	ldw	fp,0(sp)
    e0ac:	dec00204 	addi	sp,sp,8
    e0b0:	f800283a 	ret

0000e0b4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e0b4:	defffa04 	addi	sp,sp,-24
    e0b8:	dfc00515 	stw	ra,20(sp)
    e0bc:	df000415 	stw	fp,16(sp)
    e0c0:	df000404 	addi	fp,sp,16
    e0c4:	e13ffd15 	stw	r4,-12(fp)
    e0c8:	e17ffe15 	stw	r5,-8(fp)
    e0cc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e0d0:	e0bffd17 	ldw	r2,-12(fp)
    e0d4:	10800017 	ldw	r2,0(r2)
    e0d8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e0dc:	e0bffc17 	ldw	r2,-16(fp)
    e0e0:	10800a04 	addi	r2,r2,40
    e0e4:	e1bfff17 	ldw	r6,-4(fp)
    e0e8:	e17ffe17 	ldw	r5,-8(fp)
    e0ec:	1009883a 	mov	r4,r2
    e0f0:	000e4d40 	call	e4d4 <altera_avalon_jtag_uart_ioctl>
}
    e0f4:	e037883a 	mov	sp,fp
    e0f8:	dfc00117 	ldw	ra,4(sp)
    e0fc:	df000017 	ldw	fp,0(sp)
    e100:	dec00204 	addi	sp,sp,8
    e104:	f800283a 	ret

0000e108 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e108:	defffb04 	addi	sp,sp,-20
    e10c:	dfc00415 	stw	ra,16(sp)
    e110:	df000315 	stw	fp,12(sp)
    e114:	df000304 	addi	fp,sp,12
    e118:	e13ffd15 	stw	r4,-12(fp)
    e11c:	e17ffe15 	stw	r5,-8(fp)
    e120:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e124:	e0bffd17 	ldw	r2,-12(fp)
    e128:	00c00044 	movi	r3,1
    e12c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e130:	e0bffd17 	ldw	r2,-12(fp)
    e134:	10800017 	ldw	r2,0(r2)
    e138:	10800104 	addi	r2,r2,4
    e13c:	1007883a 	mov	r3,r2
    e140:	e0bffd17 	ldw	r2,-12(fp)
    e144:	10800817 	ldw	r2,32(r2)
    e148:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
    e14c:	e0bfff17 	ldw	r2,-4(fp)
    e150:	01800074 	movhi	r6,1
    e154:	31b86f04 	addi	r6,r6,-7748
    e158:	e17ffd17 	ldw	r5,-12(fp)
    e15c:	1009883a 	mov	r4,r2
    e160:	000cf080 	call	cf08 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e164:	e0bffd17 	ldw	r2,-12(fp)
    e168:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e16c:	e0bffd17 	ldw	r2,-12(fp)
    e170:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e174:	d0e77017 	ldw	r3,-25152(gp)
    e178:	e1fffd17 	ldw	r7,-12(fp)
    e17c:	01800074 	movhi	r6,1
    e180:	31b8f304 	addi	r6,r6,-7220
    e184:	180b883a 	mov	r5,r3
    e188:	1009883a 	mov	r4,r2
    e18c:	000f5300 	call	f530 <alt_alarm_start>
    e190:	1000040e 	bge	r2,zero,e1a4 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e194:	e0fffd17 	ldw	r3,-12(fp)
    e198:	00a00034 	movhi	r2,32768
    e19c:	10bfffc4 	addi	r2,r2,-1
    e1a0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e1a4:	0001883a 	nop
    e1a8:	e037883a 	mov	sp,fp
    e1ac:	dfc00117 	ldw	ra,4(sp)
    e1b0:	df000017 	ldw	fp,0(sp)
    e1b4:	dec00204 	addi	sp,sp,8
    e1b8:	f800283a 	ret

0000e1bc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e1bc:	defff704 	addi	sp,sp,-36
    e1c0:	df000815 	stw	fp,32(sp)
    e1c4:	df000804 	addi	fp,sp,32
    e1c8:	e13ffe15 	stw	r4,-8(fp)
    e1cc:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e1d0:	e0bffe17 	ldw	r2,-8(fp)
    e1d4:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
    e1d8:	e0bffa17 	ldw	r2,-24(fp)
    e1dc:	10800017 	ldw	r2,0(r2)
    e1e0:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e1e4:	e0bffb17 	ldw	r2,-20(fp)
    e1e8:	10800104 	addi	r2,r2,4
    e1ec:	10800037 	ldwio	r2,0(r2)
    e1f0:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e1f4:	e0bffc17 	ldw	r2,-16(fp)
    e1f8:	1080c00c 	andi	r2,r2,768
    e1fc:	10006d26 	beq	r2,zero,e3b4 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e200:	e0bffc17 	ldw	r2,-16(fp)
    e204:	1080400c 	andi	r2,r2,256
    e208:	10003526 	beq	r2,zero,e2e0 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e20c:	00800074 	movhi	r2,1
    e210:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e214:	e0bffa17 	ldw	r2,-24(fp)
    e218:	10800a17 	ldw	r2,40(r2)
    e21c:	10800044 	addi	r2,r2,1
    e220:	1081ffcc 	andi	r2,r2,2047
    e224:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
    e228:	e0bffa17 	ldw	r2,-24(fp)
    e22c:	10c00b17 	ldw	r3,44(r2)
    e230:	e0bffd17 	ldw	r2,-12(fp)
    e234:	18801526 	beq	r3,r2,e28c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e238:	e0bffb17 	ldw	r2,-20(fp)
    e23c:	10800037 	ldwio	r2,0(r2)
    e240:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e244:	e0bff817 	ldw	r2,-32(fp)
    e248:	10a0000c 	andi	r2,r2,32768
    e24c:	10001126 	beq	r2,zero,e294 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e250:	e0bffa17 	ldw	r2,-24(fp)
    e254:	10800a17 	ldw	r2,40(r2)
    e258:	e0fff817 	ldw	r3,-32(fp)
    e25c:	1809883a 	mov	r4,r3
    e260:	e0fffa17 	ldw	r3,-24(fp)
    e264:	1885883a 	add	r2,r3,r2
    e268:	10800e04 	addi	r2,r2,56
    e26c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e270:	e0bffa17 	ldw	r2,-24(fp)
    e274:	10800a17 	ldw	r2,40(r2)
    e278:	10800044 	addi	r2,r2,1
    e27c:	10c1ffcc 	andi	r3,r2,2047
    e280:	e0bffa17 	ldw	r2,-24(fp)
    e284:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e288:	003fe206 	br	e214 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e214>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e28c:	0001883a 	nop
    e290:	00000106 	br	e298 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e294:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e298:	e0bff817 	ldw	r2,-32(fp)
    e29c:	10bfffec 	andhi	r2,r2,65535
    e2a0:	10000f26 	beq	r2,zero,e2e0 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e2a4:	e0bffa17 	ldw	r2,-24(fp)
    e2a8:	10c00817 	ldw	r3,32(r2)
    e2ac:	00bfff84 	movi	r2,-2
    e2b0:	1886703a 	and	r3,r3,r2
    e2b4:	e0bffa17 	ldw	r2,-24(fp)
    e2b8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e2bc:	e0bffb17 	ldw	r2,-20(fp)
    e2c0:	10800104 	addi	r2,r2,4
    e2c4:	1007883a 	mov	r3,r2
    e2c8:	e0bffa17 	ldw	r2,-24(fp)
    e2cc:	10800817 	ldw	r2,32(r2)
    e2d0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e2d4:	e0bffb17 	ldw	r2,-20(fp)
    e2d8:	10800104 	addi	r2,r2,4
    e2dc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e2e0:	e0bffc17 	ldw	r2,-16(fp)
    e2e4:	1080800c 	andi	r2,r2,512
    e2e8:	103fbe26 	beq	r2,zero,e1e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e1e4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e2ec:	e0bffc17 	ldw	r2,-16(fp)
    e2f0:	1004d43a 	srli	r2,r2,16
    e2f4:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e2f8:	00001406 	br	e34c <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e2fc:	e0bffb17 	ldw	r2,-20(fp)
    e300:	e0fffa17 	ldw	r3,-24(fp)
    e304:	18c00d17 	ldw	r3,52(r3)
    e308:	e13ffa17 	ldw	r4,-24(fp)
    e30c:	20c7883a 	add	r3,r4,r3
    e310:	18c20e04 	addi	r3,r3,2104
    e314:	18c00003 	ldbu	r3,0(r3)
    e318:	18c03fcc 	andi	r3,r3,255
    e31c:	18c0201c 	xori	r3,r3,128
    e320:	18ffe004 	addi	r3,r3,-128
    e324:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e328:	e0bffa17 	ldw	r2,-24(fp)
    e32c:	10800d17 	ldw	r2,52(r2)
    e330:	10800044 	addi	r2,r2,1
    e334:	10c1ffcc 	andi	r3,r2,2047
    e338:	e0bffa17 	ldw	r2,-24(fp)
    e33c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e340:	e0bff917 	ldw	r2,-28(fp)
    e344:	10bfffc4 	addi	r2,r2,-1
    e348:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e34c:	e0bff917 	ldw	r2,-28(fp)
    e350:	10000526 	beq	r2,zero,e368 <altera_avalon_jtag_uart_irq+0x1ac>
    e354:	e0bffa17 	ldw	r2,-24(fp)
    e358:	10c00d17 	ldw	r3,52(r2)
    e35c:	e0bffa17 	ldw	r2,-24(fp)
    e360:	10800c17 	ldw	r2,48(r2)
    e364:	18bfe51e 	bne	r3,r2,e2fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e2fc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e368:	e0bff917 	ldw	r2,-28(fp)
    e36c:	103f9d26 	beq	r2,zero,e1e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e1e4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e370:	e0bffa17 	ldw	r2,-24(fp)
    e374:	10c00817 	ldw	r3,32(r2)
    e378:	00bfff44 	movi	r2,-3
    e37c:	1886703a 	and	r3,r3,r2
    e380:	e0bffa17 	ldw	r2,-24(fp)
    e384:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e388:	e0bffa17 	ldw	r2,-24(fp)
    e38c:	10800017 	ldw	r2,0(r2)
    e390:	10800104 	addi	r2,r2,4
    e394:	1007883a 	mov	r3,r2
    e398:	e0bffa17 	ldw	r2,-24(fp)
    e39c:	10800817 	ldw	r2,32(r2)
    e3a0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e3a4:	e0bffb17 	ldw	r2,-20(fp)
    e3a8:	10800104 	addi	r2,r2,4
    e3ac:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e3b0:	003f8c06 	br	e1e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e1e4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e3b4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e3b8:	0001883a 	nop
    e3bc:	e037883a 	mov	sp,fp
    e3c0:	df000017 	ldw	fp,0(sp)
    e3c4:	dec00104 	addi	sp,sp,4
    e3c8:	f800283a 	ret

0000e3cc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e3cc:	defff804 	addi	sp,sp,-32
    e3d0:	df000715 	stw	fp,28(sp)
    e3d4:	df000704 	addi	fp,sp,28
    e3d8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e3dc:	e0bffb17 	ldw	r2,-20(fp)
    e3e0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e3e4:	e0bff917 	ldw	r2,-28(fp)
    e3e8:	10800017 	ldw	r2,0(r2)
    e3ec:	10800104 	addi	r2,r2,4
    e3f0:	10800037 	ldwio	r2,0(r2)
    e3f4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e3f8:	e0bffa17 	ldw	r2,-24(fp)
    e3fc:	1081000c 	andi	r2,r2,1024
    e400:	10000b26 	beq	r2,zero,e430 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e404:	e0bff917 	ldw	r2,-28(fp)
    e408:	10800017 	ldw	r2,0(r2)
    e40c:	10800104 	addi	r2,r2,4
    e410:	1007883a 	mov	r3,r2
    e414:	e0bff917 	ldw	r2,-28(fp)
    e418:	10800817 	ldw	r2,32(r2)
    e41c:	10810014 	ori	r2,r2,1024
    e420:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e424:	e0bff917 	ldw	r2,-28(fp)
    e428:	10000915 	stw	zero,36(r2)
    e42c:	00000a06 	br	e458 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e430:	e0bff917 	ldw	r2,-28(fp)
    e434:	10c00917 	ldw	r3,36(r2)
    e438:	00a00034 	movhi	r2,32768
    e43c:	10bfff04 	addi	r2,r2,-4
    e440:	10c00536 	bltu	r2,r3,e458 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e444:	e0bff917 	ldw	r2,-28(fp)
    e448:	10800917 	ldw	r2,36(r2)
    e44c:	10c00044 	addi	r3,r2,1
    e450:	e0bff917 	ldw	r2,-28(fp)
    e454:	10c00915 	stw	r3,36(r2)
    e458:	d0a77017 	ldw	r2,-25152(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e45c:	e037883a 	mov	sp,fp
    e460:	df000017 	ldw	fp,0(sp)
    e464:	dec00104 	addi	sp,sp,4
    e468:	f800283a 	ret

0000e46c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e46c:	defffd04 	addi	sp,sp,-12
    e470:	df000215 	stw	fp,8(sp)
    e474:	df000204 	addi	fp,sp,8
    e478:	e13ffe15 	stw	r4,-8(fp)
    e47c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e480:	00000506 	br	e498 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e484:	e0bfff17 	ldw	r2,-4(fp)
    e488:	1090000c 	andi	r2,r2,16384
    e48c:	10000226 	beq	r2,zero,e498 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e490:	00bffd44 	movi	r2,-11
    e494:	00000b06 	br	e4c4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e498:	e0bffe17 	ldw	r2,-8(fp)
    e49c:	10c00d17 	ldw	r3,52(r2)
    e4a0:	e0bffe17 	ldw	r2,-8(fp)
    e4a4:	10800c17 	ldw	r2,48(r2)
    e4a8:	18800526 	beq	r3,r2,e4c0 <altera_avalon_jtag_uart_close+0x54>
    e4ac:	e0bffe17 	ldw	r2,-8(fp)
    e4b0:	10c00917 	ldw	r3,36(r2)
    e4b4:	e0bffe17 	ldw	r2,-8(fp)
    e4b8:	10800117 	ldw	r2,4(r2)
    e4bc:	18bff136 	bltu	r3,r2,e484 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e484>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e4c0:	0005883a 	mov	r2,zero
}
    e4c4:	e037883a 	mov	sp,fp
    e4c8:	df000017 	ldw	fp,0(sp)
    e4cc:	dec00104 	addi	sp,sp,4
    e4d0:	f800283a 	ret

0000e4d4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e4d4:	defffa04 	addi	sp,sp,-24
    e4d8:	df000515 	stw	fp,20(sp)
    e4dc:	df000504 	addi	fp,sp,20
    e4e0:	e13ffd15 	stw	r4,-12(fp)
    e4e4:	e17ffe15 	stw	r5,-8(fp)
    e4e8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e4ec:	00bff9c4 	movi	r2,-25
    e4f0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e4f4:	e0bffe17 	ldw	r2,-8(fp)
    e4f8:	10da8060 	cmpeqi	r3,r2,27137
    e4fc:	1800031e 	bne	r3,zero,e50c <altera_avalon_jtag_uart_ioctl+0x38>
    e500:	109a80a0 	cmpeqi	r2,r2,27138
    e504:	1000181e 	bne	r2,zero,e568 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e508:	00002906 	br	e5b0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e50c:	e0bffd17 	ldw	r2,-12(fp)
    e510:	10c00117 	ldw	r3,4(r2)
    e514:	00a00034 	movhi	r2,32768
    e518:	10bfffc4 	addi	r2,r2,-1
    e51c:	18802126 	beq	r3,r2,e5a4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e520:	e0bfff17 	ldw	r2,-4(fp)
    e524:	10800017 	ldw	r2,0(r2)
    e528:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e52c:	e0bffc17 	ldw	r2,-16(fp)
    e530:	10800090 	cmplti	r2,r2,2
    e534:	1000061e 	bne	r2,zero,e550 <altera_avalon_jtag_uart_ioctl+0x7c>
    e538:	e0fffc17 	ldw	r3,-16(fp)
    e53c:	00a00034 	movhi	r2,32768
    e540:	10bfffc4 	addi	r2,r2,-1
    e544:	18800226 	beq	r3,r2,e550 <altera_avalon_jtag_uart_ioctl+0x7c>
    e548:	e0bffc17 	ldw	r2,-16(fp)
    e54c:	00000206 	br	e558 <altera_avalon_jtag_uart_ioctl+0x84>
    e550:	00a00034 	movhi	r2,32768
    e554:	10bfff84 	addi	r2,r2,-2
    e558:	e0fffd17 	ldw	r3,-12(fp)
    e55c:	18800115 	stw	r2,4(r3)
      rc = 0;
    e560:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e564:	00000f06 	br	e5a4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e568:	e0bffd17 	ldw	r2,-12(fp)
    e56c:	10c00117 	ldw	r3,4(r2)
    e570:	00a00034 	movhi	r2,32768
    e574:	10bfffc4 	addi	r2,r2,-1
    e578:	18800c26 	beq	r3,r2,e5ac <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e57c:	e0bffd17 	ldw	r2,-12(fp)
    e580:	10c00917 	ldw	r3,36(r2)
    e584:	e0bffd17 	ldw	r2,-12(fp)
    e588:	10800117 	ldw	r2,4(r2)
    e58c:	1885803a 	cmpltu	r2,r3,r2
    e590:	10c03fcc 	andi	r3,r2,255
    e594:	e0bfff17 	ldw	r2,-4(fp)
    e598:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e59c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e5a0:	00000206 	br	e5ac <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e5a4:	0001883a 	nop
    e5a8:	00000106 	br	e5b0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    e5ac:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e5b0:	e0bffb17 	ldw	r2,-20(fp)
}
    e5b4:	e037883a 	mov	sp,fp
    e5b8:	df000017 	ldw	fp,0(sp)
    e5bc:	dec00104 	addi	sp,sp,4
    e5c0:	f800283a 	ret

0000e5c4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e5c4:	defff304 	addi	sp,sp,-52
    e5c8:	dfc00c15 	stw	ra,48(sp)
    e5cc:	df000b15 	stw	fp,44(sp)
    e5d0:	df000b04 	addi	fp,sp,44
    e5d4:	e13ffc15 	stw	r4,-16(fp)
    e5d8:	e17ffd15 	stw	r5,-12(fp)
    e5dc:	e1bffe15 	stw	r6,-8(fp)
    e5e0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e5e4:	e0bffd17 	ldw	r2,-12(fp)
    e5e8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e5ec:	00004706 	br	e70c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e5f0:	e0bffc17 	ldw	r2,-16(fp)
    e5f4:	10800a17 	ldw	r2,40(r2)
    e5f8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e5fc:	e0bffc17 	ldw	r2,-16(fp)
    e600:	10800b17 	ldw	r2,44(r2)
    e604:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e608:	e0fff717 	ldw	r3,-36(fp)
    e60c:	e0bff817 	ldw	r2,-32(fp)
    e610:	18800536 	bltu	r3,r2,e628 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e614:	e0fff717 	ldw	r3,-36(fp)
    e618:	e0bff817 	ldw	r2,-32(fp)
    e61c:	1885c83a 	sub	r2,r3,r2
    e620:	e0bff615 	stw	r2,-40(fp)
    e624:	00000406 	br	e638 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e628:	00c20004 	movi	r3,2048
    e62c:	e0bff817 	ldw	r2,-32(fp)
    e630:	1885c83a 	sub	r2,r3,r2
    e634:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e638:	e0bff617 	ldw	r2,-40(fp)
    e63c:	10001e26 	beq	r2,zero,e6b8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e640:	e0fffe17 	ldw	r3,-8(fp)
    e644:	e0bff617 	ldw	r2,-40(fp)
    e648:	1880022e 	bgeu	r3,r2,e654 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e64c:	e0bffe17 	ldw	r2,-8(fp)
    e650:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e654:	e0bffc17 	ldw	r2,-16(fp)
    e658:	10c00e04 	addi	r3,r2,56
    e65c:	e0bff817 	ldw	r2,-32(fp)
    e660:	1885883a 	add	r2,r3,r2
    e664:	e1bff617 	ldw	r6,-40(fp)
    e668:	100b883a 	mov	r5,r2
    e66c:	e13ff517 	ldw	r4,-44(fp)
    e670:	000593c0 	call	593c <memcpy>
      ptr   += n;
    e674:	e0fff517 	ldw	r3,-44(fp)
    e678:	e0bff617 	ldw	r2,-40(fp)
    e67c:	1885883a 	add	r2,r3,r2
    e680:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    e684:	e0fffe17 	ldw	r3,-8(fp)
    e688:	e0bff617 	ldw	r2,-40(fp)
    e68c:	1885c83a 	sub	r2,r3,r2
    e690:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e694:	e0fff817 	ldw	r3,-32(fp)
    e698:	e0bff617 	ldw	r2,-40(fp)
    e69c:	1885883a 	add	r2,r3,r2
    e6a0:	10c1ffcc 	andi	r3,r2,2047
    e6a4:	e0bffc17 	ldw	r2,-16(fp)
    e6a8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e6ac:	e0bffe17 	ldw	r2,-8(fp)
    e6b0:	00bfcf16 	blt	zero,r2,e5f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e5f0>
    e6b4:	00000106 	br	e6bc <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    e6b8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    e6bc:	e0fff517 	ldw	r3,-44(fp)
    e6c0:	e0bffd17 	ldw	r2,-12(fp)
    e6c4:	1880141e 	bne	r3,r2,e718 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e6c8:	e0bfff17 	ldw	r2,-4(fp)
    e6cc:	1090000c 	andi	r2,r2,16384
    e6d0:	1000131e 	bne	r2,zero,e720 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e6d4:	0001883a 	nop
    e6d8:	e0bffc17 	ldw	r2,-16(fp)
    e6dc:	10c00a17 	ldw	r3,40(r2)
    e6e0:	e0bff717 	ldw	r2,-36(fp)
    e6e4:	1880051e 	bne	r3,r2,e6fc <altera_avalon_jtag_uart_read+0x138>
    e6e8:	e0bffc17 	ldw	r2,-16(fp)
    e6ec:	10c00917 	ldw	r3,36(r2)
    e6f0:	e0bffc17 	ldw	r2,-16(fp)
    e6f4:	10800117 	ldw	r2,4(r2)
    e6f8:	18bff736 	bltu	r3,r2,e6d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e6d8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e6fc:	e0bffc17 	ldw	r2,-16(fp)
    e700:	10c00a17 	ldw	r3,40(r2)
    e704:	e0bff717 	ldw	r2,-36(fp)
    e708:	18800726 	beq	r3,r2,e728 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e70c:	e0bffe17 	ldw	r2,-8(fp)
    e710:	00bfb716 	blt	zero,r2,e5f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e5f0>
    e714:	00000506 	br	e72c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    e718:	0001883a 	nop
    e71c:	00000306 	br	e72c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    e720:	0001883a 	nop
    e724:	00000106 	br	e72c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    e728:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e72c:	e0fff517 	ldw	r3,-44(fp)
    e730:	e0bffd17 	ldw	r2,-12(fp)
    e734:	18801826 	beq	r3,r2,e798 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e738:	0005303a 	rdctl	r2,status
    e73c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e740:	e0fffb17 	ldw	r3,-20(fp)
    e744:	00bfff84 	movi	r2,-2
    e748:	1884703a 	and	r2,r3,r2
    e74c:	1001703a 	wrctl	status,r2
  
  return context;
    e750:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e754:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e758:	e0bffc17 	ldw	r2,-16(fp)
    e75c:	10800817 	ldw	r2,32(r2)
    e760:	10c00054 	ori	r3,r2,1
    e764:	e0bffc17 	ldw	r2,-16(fp)
    e768:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e76c:	e0bffc17 	ldw	r2,-16(fp)
    e770:	10800017 	ldw	r2,0(r2)
    e774:	10800104 	addi	r2,r2,4
    e778:	1007883a 	mov	r3,r2
    e77c:	e0bffc17 	ldw	r2,-16(fp)
    e780:	10800817 	ldw	r2,32(r2)
    e784:	18800035 	stwio	r2,0(r3)
    e788:	e0bffa17 	ldw	r2,-24(fp)
    e78c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e790:	e0bff917 	ldw	r2,-28(fp)
    e794:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e798:	e0fff517 	ldw	r3,-44(fp)
    e79c:	e0bffd17 	ldw	r2,-12(fp)
    e7a0:	18800426 	beq	r3,r2,e7b4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e7a4:	e0fff517 	ldw	r3,-44(fp)
    e7a8:	e0bffd17 	ldw	r2,-12(fp)
    e7ac:	1885c83a 	sub	r2,r3,r2
    e7b0:	00000606 	br	e7cc <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e7b4:	e0bfff17 	ldw	r2,-4(fp)
    e7b8:	1090000c 	andi	r2,r2,16384
    e7bc:	10000226 	beq	r2,zero,e7c8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e7c0:	00bffd44 	movi	r2,-11
    e7c4:	00000106 	br	e7cc <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e7c8:	00bffec4 	movi	r2,-5
}
    e7cc:	e037883a 	mov	sp,fp
    e7d0:	dfc00117 	ldw	ra,4(sp)
    e7d4:	df000017 	ldw	fp,0(sp)
    e7d8:	dec00204 	addi	sp,sp,8
    e7dc:	f800283a 	ret

0000e7e0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e7e0:	defff304 	addi	sp,sp,-52
    e7e4:	dfc00c15 	stw	ra,48(sp)
    e7e8:	df000b15 	stw	fp,44(sp)
    e7ec:	df000b04 	addi	fp,sp,44
    e7f0:	e13ffc15 	stw	r4,-16(fp)
    e7f4:	e17ffd15 	stw	r5,-12(fp)
    e7f8:	e1bffe15 	stw	r6,-8(fp)
    e7fc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e800:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e804:	e0bffd17 	ldw	r2,-12(fp)
    e808:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e80c:	00003706 	br	e8ec <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e810:	e0bffc17 	ldw	r2,-16(fp)
    e814:	10800c17 	ldw	r2,48(r2)
    e818:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    e81c:	e0bffc17 	ldw	r2,-16(fp)
    e820:	10800d17 	ldw	r2,52(r2)
    e824:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e828:	e0fff917 	ldw	r3,-28(fp)
    e82c:	e0bff517 	ldw	r2,-44(fp)
    e830:	1880062e 	bgeu	r3,r2,e84c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e834:	e0fff517 	ldw	r3,-44(fp)
    e838:	e0bff917 	ldw	r2,-28(fp)
    e83c:	1885c83a 	sub	r2,r3,r2
    e840:	10bfffc4 	addi	r2,r2,-1
    e844:	e0bff615 	stw	r2,-40(fp)
    e848:	00000b06 	br	e878 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e84c:	e0bff517 	ldw	r2,-44(fp)
    e850:	10000526 	beq	r2,zero,e868 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e854:	00c20004 	movi	r3,2048
    e858:	e0bff917 	ldw	r2,-28(fp)
    e85c:	1885c83a 	sub	r2,r3,r2
    e860:	e0bff615 	stw	r2,-40(fp)
    e864:	00000406 	br	e878 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e868:	00c1ffc4 	movi	r3,2047
    e86c:	e0bff917 	ldw	r2,-28(fp)
    e870:	1885c83a 	sub	r2,r3,r2
    e874:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e878:	e0bff617 	ldw	r2,-40(fp)
    e87c:	10001e26 	beq	r2,zero,e8f8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e880:	e0fffe17 	ldw	r3,-8(fp)
    e884:	e0bff617 	ldw	r2,-40(fp)
    e888:	1880022e 	bgeu	r3,r2,e894 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e88c:	e0bffe17 	ldw	r2,-8(fp)
    e890:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e894:	e0bffc17 	ldw	r2,-16(fp)
    e898:	10c20e04 	addi	r3,r2,2104
    e89c:	e0bff917 	ldw	r2,-28(fp)
    e8a0:	1885883a 	add	r2,r3,r2
    e8a4:	e1bff617 	ldw	r6,-40(fp)
    e8a8:	e17ffd17 	ldw	r5,-12(fp)
    e8ac:	1009883a 	mov	r4,r2
    e8b0:	000593c0 	call	593c <memcpy>
      ptr   += n;
    e8b4:	e0fffd17 	ldw	r3,-12(fp)
    e8b8:	e0bff617 	ldw	r2,-40(fp)
    e8bc:	1885883a 	add	r2,r3,r2
    e8c0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e8c4:	e0fffe17 	ldw	r3,-8(fp)
    e8c8:	e0bff617 	ldw	r2,-40(fp)
    e8cc:	1885c83a 	sub	r2,r3,r2
    e8d0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e8d4:	e0fff917 	ldw	r3,-28(fp)
    e8d8:	e0bff617 	ldw	r2,-40(fp)
    e8dc:	1885883a 	add	r2,r3,r2
    e8e0:	10c1ffcc 	andi	r3,r2,2047
    e8e4:	e0bffc17 	ldw	r2,-16(fp)
    e8e8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e8ec:	e0bffe17 	ldw	r2,-8(fp)
    e8f0:	00bfc716 	blt	zero,r2,e810 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e810>
    e8f4:	00000106 	br	e8fc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    e8f8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e8fc:	0005303a 	rdctl	r2,status
    e900:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e904:	e0fffb17 	ldw	r3,-20(fp)
    e908:	00bfff84 	movi	r2,-2
    e90c:	1884703a 	and	r2,r3,r2
    e910:	1001703a 	wrctl	status,r2
  
  return context;
    e914:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e918:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e91c:	e0bffc17 	ldw	r2,-16(fp)
    e920:	10800817 	ldw	r2,32(r2)
    e924:	10c00094 	ori	r3,r2,2
    e928:	e0bffc17 	ldw	r2,-16(fp)
    e92c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e930:	e0bffc17 	ldw	r2,-16(fp)
    e934:	10800017 	ldw	r2,0(r2)
    e938:	10800104 	addi	r2,r2,4
    e93c:	1007883a 	mov	r3,r2
    e940:	e0bffc17 	ldw	r2,-16(fp)
    e944:	10800817 	ldw	r2,32(r2)
    e948:	18800035 	stwio	r2,0(r3)
    e94c:	e0bffa17 	ldw	r2,-24(fp)
    e950:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e954:	e0bff817 	ldw	r2,-32(fp)
    e958:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e95c:	e0bffe17 	ldw	r2,-8(fp)
    e960:	0080100e 	bge	zero,r2,e9a4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e964:	e0bfff17 	ldw	r2,-4(fp)
    e968:	1090000c 	andi	r2,r2,16384
    e96c:	1000101e 	bne	r2,zero,e9b0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e970:	0001883a 	nop
    e974:	e0bffc17 	ldw	r2,-16(fp)
    e978:	10c00d17 	ldw	r3,52(r2)
    e97c:	e0bff517 	ldw	r2,-44(fp)
    e980:	1880051e 	bne	r3,r2,e998 <altera_avalon_jtag_uart_write+0x1b8>
    e984:	e0bffc17 	ldw	r2,-16(fp)
    e988:	10c00917 	ldw	r3,36(r2)
    e98c:	e0bffc17 	ldw	r2,-16(fp)
    e990:	10800117 	ldw	r2,4(r2)
    e994:	18bff736 	bltu	r3,r2,e974 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e974>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e998:	e0bffc17 	ldw	r2,-16(fp)
    e99c:	10800917 	ldw	r2,36(r2)
    e9a0:	1000051e 	bne	r2,zero,e9b8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e9a4:	e0bffe17 	ldw	r2,-8(fp)
    e9a8:	00bfd016 	blt	zero,r2,e8ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e8ec>
    e9ac:	00000306 	br	e9bc <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    e9b0:	0001883a 	nop
    e9b4:	00000106 	br	e9bc <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    e9b8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e9bc:	e0fffd17 	ldw	r3,-12(fp)
    e9c0:	e0bff717 	ldw	r2,-36(fp)
    e9c4:	18800426 	beq	r3,r2,e9d8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e9c8:	e0fffd17 	ldw	r3,-12(fp)
    e9cc:	e0bff717 	ldw	r2,-36(fp)
    e9d0:	1885c83a 	sub	r2,r3,r2
    e9d4:	00000606 	br	e9f0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e9d8:	e0bfff17 	ldw	r2,-4(fp)
    e9dc:	1090000c 	andi	r2,r2,16384
    e9e0:	10000226 	beq	r2,zero,e9ec <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e9e4:	00bffd44 	movi	r2,-11
    e9e8:	00000106 	br	e9f0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e9ec:	00bffec4 	movi	r2,-5
}
    e9f0:	e037883a 	mov	sp,fp
    e9f4:	dfc00117 	ldw	ra,4(sp)
    e9f8:	df000017 	ldw	fp,0(sp)
    e9fc:	dec00204 	addi	sp,sp,8
    ea00:	f800283a 	ret

0000ea04 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    ea04:	defff904 	addi	sp,sp,-28
    ea08:	dfc00615 	stw	ra,24(sp)
    ea0c:	df000515 	stw	fp,20(sp)
    ea10:	df000504 	addi	fp,sp,20
    ea14:	e13ffe15 	stw	r4,-8(fp)
    ea18:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    ea1c:	0007883a 	mov	r3,zero
    ea20:	e0bffe17 	ldw	r2,-8(fp)
    ea24:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    ea28:	e0bffe17 	ldw	r2,-8(fp)
    ea2c:	10800104 	addi	r2,r2,4
    ea30:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ea34:	0005303a 	rdctl	r2,status
    ea38:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ea3c:	e0fffc17 	ldw	r3,-16(fp)
    ea40:	00bfff84 	movi	r2,-2
    ea44:	1884703a 	and	r2,r3,r2
    ea48:	1001703a 	wrctl	status,r2
  
  return context;
    ea4c:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    ea50:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
    ea54:	000fd100 	call	fd10 <alt_tick>
    ea58:	e0bffb17 	ldw	r2,-20(fp)
    ea5c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ea60:	e0bffd17 	ldw	r2,-12(fp)
    ea64:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    ea68:	0001883a 	nop
    ea6c:	e037883a 	mov	sp,fp
    ea70:	dfc00117 	ldw	ra,4(sp)
    ea74:	df000017 	ldw	fp,0(sp)
    ea78:	dec00204 	addi	sp,sp,8
    ea7c:	f800283a 	ret

0000ea80 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    ea80:	defff904 	addi	sp,sp,-28
    ea84:	dfc00615 	stw	ra,24(sp)
    ea88:	df000515 	stw	fp,20(sp)
    ea8c:	df000504 	addi	fp,sp,20
    ea90:	e13ffc15 	stw	r4,-16(fp)
    ea94:	e17ffd15 	stw	r5,-12(fp)
    ea98:	e1bffe15 	stw	r6,-8(fp)
    ea9c:	e1ffff15 	stw	r7,-4(fp)
    eaa0:	e0bfff17 	ldw	r2,-4(fp)
    eaa4:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    eaa8:	d0a77017 	ldw	r2,-25152(gp)
    eaac:	1000021e 	bne	r2,zero,eab8 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    eab0:	e0bffb17 	ldw	r2,-20(fp)
    eab4:	d0a77015 	stw	r2,-25152(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    eab8:	e0bffc17 	ldw	r2,-16(fp)
    eabc:	10800104 	addi	r2,r2,4
    eac0:	00c001c4 	movi	r3,7
    eac4:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
    eac8:	01800074 	movhi	r6,1
    eacc:	31ba8104 	addi	r6,r6,-5628
    ead0:	e17ffc17 	ldw	r5,-16(fp)
    ead4:	e13ffe17 	ldw	r4,-8(fp)
    ead8:	000cf080 	call	cf08 <alt_irq_register>
#endif  
}
    eadc:	0001883a 	nop
    eae0:	e037883a 	mov	sp,fp
    eae4:	dfc00117 	ldw	ra,4(sp)
    eae8:	df000017 	ldw	fp,0(sp)
    eaec:	dec00204 	addi	sp,sp,8
    eaf0:	f800283a 	ret

0000eaf4 <alt_up_irda_enable_read_interrupt>:
#include "altera_up_avalon_irda.h"
#include "altera_up_avalon_irda_regs.h"


void alt_up_irda_enable_read_interrupt(alt_up_irda_dev *irda)
{
    eaf4:	defffd04 	addi	sp,sp,-12
    eaf8:	df000215 	stw	fp,8(sp)
    eafc:	df000204 	addi	fp,sp,8
    eb00:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    eb04:	e0bfff17 	ldw	r2,-4(fp)
    eb08:	10800a17 	ldw	r2,40(r2)
    eb0c:	10800104 	addi	r2,r2,4
    eb10:	10800037 	ldwio	r2,0(r2)
    eb14:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_IRDA_CONTROL_RE_MSK;
    eb18:	e0bffe17 	ldw	r2,-8(fp)
    eb1c:	10800054 	ori	r2,r2,1
    eb20:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    eb24:	e0bfff17 	ldw	r2,-4(fp)
    eb28:	10800a17 	ldw	r2,40(r2)
    eb2c:	10800104 	addi	r2,r2,4
    eb30:	1007883a 	mov	r3,r2
    eb34:	e0bffe17 	ldw	r2,-8(fp)
    eb38:	18800035 	stwio	r2,0(r3)
}
    eb3c:	0001883a 	nop
    eb40:	e037883a 	mov	sp,fp
    eb44:	df000017 	ldw	fp,0(sp)
    eb48:	dec00104 	addi	sp,sp,4
    eb4c:	f800283a 	ret

0000eb50 <alt_up_irda_disable_read_interrupt>:

void alt_up_irda_disable_read_interrupt(alt_up_irda_dev *irda)
{
    eb50:	defffd04 	addi	sp,sp,-12
    eb54:	df000215 	stw	fp,8(sp)
    eb58:	df000204 	addi	fp,sp,8
    eb5c:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    eb60:	e0bfff17 	ldw	r2,-4(fp)
    eb64:	10800a17 	ldw	r2,40(r2)
    eb68:	10800104 	addi	r2,r2,4
    eb6c:	10800037 	ldwio	r2,0(r2)
    eb70:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_IRDA_CONTROL_RE_MSK;
    eb74:	e0fffe17 	ldw	r3,-8(fp)
    eb78:	00bfff84 	movi	r2,-2
    eb7c:	1884703a 	and	r2,r3,r2
    eb80:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    eb84:	e0bfff17 	ldw	r2,-4(fp)
    eb88:	10800a17 	ldw	r2,40(r2)
    eb8c:	10800104 	addi	r2,r2,4
    eb90:	1007883a 	mov	r3,r2
    eb94:	e0bffe17 	ldw	r2,-8(fp)
    eb98:	18800035 	stwio	r2,0(r3)
}
    eb9c:	0001883a 	nop
    eba0:	e037883a 	mov	sp,fp
    eba4:	df000017 	ldw	fp,0(sp)
    eba8:	dec00104 	addi	sp,sp,4
    ebac:	f800283a 	ret

0000ebb0 <alt_up_irda_get_used_space_in_read_FIFO>:

unsigned alt_up_irda_get_used_space_in_read_FIFO(alt_up_irda_dev *irda)
{
    ebb0:	defffd04 	addi	sp,sp,-12
    ebb4:	df000215 	stw	fp,8(sp)
    ebb8:	df000204 	addi	fp,sp,8
    ebbc:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
    ebc0:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_IRDA_DATA(irda->base), 2); 
//	return ravail;
	ravail = IORD_ALT_UP_IRDA_RAVAIL(irda->base); 
    ebc4:	e0bfff17 	ldw	r2,-4(fp)
    ebc8:	10800a17 	ldw	r2,40(r2)
    ebcc:	10800084 	addi	r2,r2,2
    ebd0:	1080002b 	ldhuio	r2,0(r2)
    ebd4:	10bfffcc 	andi	r2,r2,65535
    ebd8:	e0bffe0d 	sth	r2,-8(fp)
	return (ravail & ALT_UP_IRDA_RAVAIL_MSK) >> ALT_UP_IRDA_RAVAIL_OFST;
    ebdc:	e0bffe0b 	ldhu	r2,-8(fp)
}
    ebe0:	e037883a 	mov	sp,fp
    ebe4:	df000017 	ldw	fp,0(sp)
    ebe8:	dec00104 	addi	sp,sp,4
    ebec:	f800283a 	ret

0000ebf0 <alt_up_irda_get_available_space_in_write_FIFO>:

unsigned alt_up_irda_get_available_space_in_write_FIFO(alt_up_irda_dev *irda)
{
    ebf0:	defffd04 	addi	sp,sp,-12
    ebf4:	df000215 	stw	fp,8(sp)
    ebf8:	df000204 	addi	fp,sp,8
    ebfc:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    ec00:	e0bfff17 	ldw	r2,-4(fp)
    ec04:	10800a17 	ldw	r2,40(r2)
    ec08:	10800104 	addi	r2,r2,4
    ec0c:	10800037 	ldwio	r2,0(r2)
    ec10:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_IRDA_CONTROL_WSPACE_MSK) >> ALT_UP_IRDA_CONTROL_WSPACE_OFST;
    ec14:	e0bffe17 	ldw	r2,-8(fp)
    ec18:	1004d43a 	srli	r2,r2,16
}
    ec1c:	e037883a 	mov	sp,fp
    ec20:	df000017 	ldw	fp,0(sp)
    ec24:	dec00104 	addi	sp,sp,4
    ec28:	f800283a 	ret

0000ec2c <alt_up_irda_check_parity>:

int alt_up_irda_check_parity(alt_u32 data_reg)
{
    ec2c:	defffd04 	addi	sp,sp,-12
    ec30:	df000215 	stw	fp,8(sp)
    ec34:	df000204 	addi	fp,sp,8
    ec38:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_IRDA_DATA_PE_MSK) >> ALT_UP_IRDA_DATA_PE_OFST;
    ec3c:	e0bfff17 	ldw	r2,-4(fp)
    ec40:	1080800c 	andi	r2,r2,512
    ec44:	1004d27a 	srli	r2,r2,9
    ec48:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
    ec4c:	e0bffe17 	ldw	r2,-8(fp)
    ec50:	10000226 	beq	r2,zero,ec5c <alt_up_irda_check_parity+0x30>
    ec54:	00bfffc4 	movi	r2,-1
    ec58:	00000106 	br	ec60 <alt_up_irda_check_parity+0x34>
    ec5c:	0005883a 	mov	r2,zero
}
    ec60:	e037883a 	mov	sp,fp
    ec64:	df000017 	ldw	fp,0(sp)
    ec68:	dec00104 	addi	sp,sp,4
    ec6c:	f800283a 	ret

0000ec70 <alt_up_irda_write_data>:

int alt_up_irda_write_data(alt_up_irda_dev *irda, alt_u8 data)
{
    ec70:	defffd04 	addi	sp,sp,-12
    ec74:	df000215 	stw	fp,8(sp)
    ec78:	df000204 	addi	fp,sp,8
    ec7c:	e13ffe15 	stw	r4,-8(fp)
    ec80:	2805883a 	mov	r2,r5
    ec84:	e0bfff05 	stb	r2,-4(fp)
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    */

	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_IRDA_DATA(irda->base, (data>>ALT_UP_IRDA_DATA_DATA_OFST) & ALT_UP_IRDA_DATA_DATA_MSK);
    ec88:	e0bffe17 	ldw	r2,-8(fp)
    ec8c:	10800a17 	ldw	r2,40(r2)
    ec90:	1007883a 	mov	r3,r2
    ec94:	e0bfff03 	ldbu	r2,-4(fp)
    ec98:	18800035 	stwio	r2,0(r3)
	return 0;
    ec9c:	0005883a 	mov	r2,zero
}
    eca0:	e037883a 	mov	sp,fp
    eca4:	df000017 	ldw	fp,0(sp)
    eca8:	dec00104 	addi	sp,sp,4
    ecac:	f800283a 	ret

0000ecb0 <alt_up_irda_read_data>:

int alt_up_irda_read_data(alt_up_irda_dev *irda, alt_u8 *data, alt_u8 *parity_error)
{
    ecb0:	defffa04 	addi	sp,sp,-24
    ecb4:	dfc00515 	stw	ra,20(sp)
    ecb8:	df000415 	stw	fp,16(sp)
    ecbc:	df000404 	addi	fp,sp,16
    ecc0:	e13ffd15 	stw	r4,-12(fp)
    ecc4:	e17ffe15 	stw	r5,-8(fp)
    ecc8:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    eccc:	e0bffd17 	ldw	r2,-12(fp)
    ecd0:	10800a17 	ldw	r2,40(r2)
    ecd4:	10800037 	ldwio	r2,0(r2)
    ecd8:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_IRDA_DATA_DATA_MSK) >> ALT_UP_IRDA_DATA_DATA_OFST;
    ecdc:	e0bffc17 	ldw	r2,-16(fp)
    ece0:	1007883a 	mov	r3,r2
    ece4:	e0bffe17 	ldw	r2,-8(fp)
    ece8:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_irda_check_parity(data_reg);
    ecec:	e13ffc17 	ldw	r4,-16(fp)
    ecf0:	000ec2c0 	call	ec2c <alt_up_irda_check_parity>
    ecf4:	1007883a 	mov	r3,r2
    ecf8:	e0bfff17 	ldw	r2,-4(fp)
    ecfc:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_IRDA_DATA_RVALID_MSK) >> ALT_UP_IRDA_DATA_RVALID_OFST) - 1);
    ed00:	e0bffc17 	ldw	r2,-16(fp)
    ed04:	10a0000c 	andi	r2,r2,32768
    ed08:	1004d3fa 	srli	r2,r2,15
    ed0c:	10bfffc4 	addi	r2,r2,-1
}
    ed10:	e037883a 	mov	sp,fp
    ed14:	dfc00117 	ldw	ra,4(sp)
    ed18:	df000017 	ldw	fp,0(sp)
    ed1c:	dec00204 	addi	sp,sp,8
    ed20:	f800283a 	ret

0000ed24 <alt_up_irda_read_fd>:

int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
    ed24:	defff804 	addi	sp,sp,-32
    ed28:	dfc00715 	stw	ra,28(sp)
    ed2c:	df000615 	stw	fp,24(sp)
    ed30:	df000604 	addi	fp,sp,24
    ed34:	e13ffd15 	stw	r4,-12(fp)
    ed38:	e17ffe15 	stw	r5,-8(fp)
    ed3c:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    ed40:	e0bffd17 	ldw	r2,-12(fp)
    ed44:	10800017 	ldw	r2,0(r2)
    ed48:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
    ed4c:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
    ed50:	00000c06 	br	ed84 <alt_up_irda_read_fd+0x60>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
    ed54:	e0bffe17 	ldw	r2,-8(fp)
    ed58:	10c00044 	addi	r3,r2,1
    ed5c:	e0fffe15 	stw	r3,-8(fp)
    ed60:	e0fffc04 	addi	r3,fp,-16
    ed64:	180d883a 	mov	r6,r3
    ed68:	100b883a 	mov	r5,r2
    ed6c:	e13ffb17 	ldw	r4,-20(fp)
    ed70:	000ecb00 	call	ecb0 <alt_up_irda_read_data>
    ed74:	1000081e 	bne	r2,zero,ed98 <alt_up_irda_read_fd+0x74>
			count++;
    ed78:	e0bffa17 	ldw	r2,-24(fp)
    ed7c:	10800044 	addi	r2,r2,1
    ed80:	e0bffa15 	stw	r2,-24(fp)
int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
    ed84:	e0bfff17 	ldw	r2,-4(fp)
    ed88:	10ffffc4 	addi	r3,r2,-1
    ed8c:	e0ffff15 	stw	r3,-4(fp)
    ed90:	103ff01e 	bne	r2,zero,ed54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ed54>
    ed94:	00000106 	br	ed9c <alt_up_irda_read_fd+0x78>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
    ed98:	0001883a 	nop
	}
	return count;
    ed9c:	e0bffa17 	ldw	r2,-24(fp)
}
    eda0:	e037883a 	mov	sp,fp
    eda4:	dfc00117 	ldw	ra,4(sp)
    eda8:	df000017 	ldw	fp,0(sp)
    edac:	dec00204 	addi	sp,sp,8
    edb0:	f800283a 	ret

0000edb4 <alt_up_irda_write_fd>:

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
    edb4:	defff904 	addi	sp,sp,-28
    edb8:	dfc00615 	stw	ra,24(sp)
    edbc:	df000515 	stw	fp,20(sp)
    edc0:	df000504 	addi	fp,sp,20
    edc4:	e13ffd15 	stw	r4,-12(fp)
    edc8:	e17ffe15 	stw	r5,-8(fp)
    edcc:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    edd0:	e0bffd17 	ldw	r2,-12(fp)
    edd4:	10800017 	ldw	r2,0(r2)
    edd8:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
    eddc:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
    ede0:	00000c06 	br	ee14 <alt_up_irda_write_fd+0x60>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
    ede4:	e0bffe17 	ldw	r2,-8(fp)
    ede8:	10c00044 	addi	r3,r2,1
    edec:	e0fffe15 	stw	r3,-8(fp)
    edf0:	10800003 	ldbu	r2,0(r2)
    edf4:	10803fcc 	andi	r2,r2,255
    edf8:	100b883a 	mov	r5,r2
    edfc:	e13ffc17 	ldw	r4,-16(fp)
    ee00:	000ec700 	call	ec70 <alt_up_irda_write_data>
    ee04:	1000081e 	bne	r2,zero,ee28 <alt_up_irda_write_fd+0x74>
			count++;
    ee08:	e0bffb17 	ldw	r2,-20(fp)
    ee0c:	10800044 	addi	r2,r2,1
    ee10:	e0bffb15 	stw	r2,-20(fp)

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	while(len--)
    ee14:	e0bfff17 	ldw	r2,-4(fp)
    ee18:	10ffffc4 	addi	r3,r2,-1
    ee1c:	e0ffff15 	stw	r3,-4(fp)
    ee20:	103ff01e 	bne	r2,zero,ede4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ede4>
    ee24:	00000106 	br	ee2c <alt_up_irda_write_fd+0x78>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
			count++;
		else
			break;
    ee28:	0001883a 	nop
	}
	return count;
    ee2c:	e0bffb17 	ldw	r2,-20(fp)
}
    ee30:	e037883a 	mov	sp,fp
    ee34:	dfc00117 	ldw	ra,4(sp)
    ee38:	df000017 	ldw	fp,0(sp)
    ee3c:	dec00204 	addi	sp,sp,8
    ee40:	f800283a 	ret

0000ee44 <alt_up_irda_open_dev>:

alt_up_irda_dev* alt_up_irda_open_dev(const char* name)
{
    ee44:	defffc04 	addi	sp,sp,-16
    ee48:	dfc00315 	stw	ra,12(sp)
    ee4c:	df000215 	stw	fp,8(sp)
    ee50:	df000204 	addi	fp,sp,8
    ee54:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_irda_dev *dev = (alt_up_irda_dev*)alt_find_dev(name, &alt_dev_list);
    ee58:	d1600d04 	addi	r5,gp,-32716
    ee5c:	e13fff17 	ldw	r4,-4(fp)
    ee60:	000f81c0 	call	f81c <alt_find_dev>
    ee64:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    ee68:	e0bffe17 	ldw	r2,-8(fp)
}
    ee6c:	e037883a 	mov	sp,fp
    ee70:	dfc00117 	ldw	ra,4(sp)
    ee74:	df000017 	ldw	fp,0(sp)
    ee78:	dec00204 	addi	sp,sp,8
    ee7c:	f800283a 	ret

0000ee80 <read_RI_bit>:


//////////////////////////////////////////////////////////////////////////////////////////////
// Internal Functions
alt_u8 read_RI_bit(alt_u32 ctrl_reg)
{
    ee80:	defffd04 	addi	sp,sp,-12
    ee84:	df000215 	stw	fp,8(sp)
    ee88:	df000204 	addi	fp,sp,8
    ee8c:	e13fff15 	stw	r4,-4(fp)
	alt_u8 ri = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RI_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RI_OFST);
    ee90:	e0bfff17 	ldw	r2,-4(fp)
    ee94:	1080400c 	andi	r2,r2,256
    ee98:	1004d23a 	srli	r2,r2,8
    ee9c:	e0bffe05 	stb	r2,-8(fp)
	return ri;
    eea0:	e0bffe03 	ldbu	r2,-8(fp)
}
    eea4:	e037883a 	mov	sp,fp
    eea8:	df000017 	ldw	fp,0(sp)
    eeac:	dec00104 	addi	sp,sp,4
    eeb0:	f800283a 	ret

0000eeb4 <read_RE_bit>:

alt_u8 read_RE_bit(alt_u32 ctrl_reg)
{
    eeb4:	defffd04 	addi	sp,sp,-12
    eeb8:	df000215 	stw	fp,8(sp)
    eebc:	df000204 	addi	fp,sp,8
    eec0:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RE_OFST);
    eec4:	e0bfff17 	ldw	r2,-4(fp)
    eec8:	1080004c 	andi	r2,r2,1
    eecc:	e0bffe05 	stb	r2,-8(fp)
	return re;
    eed0:	e0bffe03 	ldbu	r2,-8(fp)
}
    eed4:	e037883a 	mov	sp,fp
    eed8:	df000017 	ldw	fp,0(sp)
    eedc:	dec00104 	addi	sp,sp,4
    eee0:	f800283a 	ret

0000eee4 <read_CE_bit>:

alt_u8 read_CE_bit(alt_u32 ctrl_reg)
{
    eee4:	defffd04 	addi	sp,sp,-12
    eee8:	df000215 	stw	fp,8(sp)
    eeec:	df000204 	addi	fp,sp,8
    eef0:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_CE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_CE_OFST);
    eef4:	e0bfff17 	ldw	r2,-4(fp)
    eef8:	1081000c 	andi	r2,r2,1024
    eefc:	1004d2ba 	srli	r2,r2,10
    ef00:	e0bffe05 	stb	r2,-8(fp)
	return re;
    ef04:	e0bffe03 	ldbu	r2,-8(fp)
}
    ef08:	e037883a 	mov	sp,fp
    ef0c:	df000017 	ldw	fp,0(sp)
    ef10:	dec00104 	addi	sp,sp,4
    ef14:	f800283a 	ret

0000ef18 <read_num_bytes_available>:

alt_u16 read_num_bytes_available(alt_u32 data_reg)
{
    ef18:	defffd04 	addi	sp,sp,-12
    ef1c:	df000215 	stw	fp,8(sp)
    ef20:	df000204 	addi	fp,sp,8
    ef24:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = (alt_u16)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RAVAIL_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RAVAIL_OFST);
    ef28:	e0bfff17 	ldw	r2,-4(fp)
    ef2c:	1004d43a 	srli	r2,r2,16
    ef30:	e0bffe0d 	sth	r2,-8(fp)
	return ravail;
    ef34:	e0bffe0b 	ldhu	r2,-8(fp)
}
    ef38:	e037883a 	mov	sp,fp
    ef3c:	df000017 	ldw	fp,0(sp)
    ef40:	dec00104 	addi	sp,sp,4
    ef44:	f800283a 	ret

0000ef48 <read_data_valid>:

alt_u8 read_data_valid(alt_u32 data_reg)
{
    ef48:	defffd04 	addi	sp,sp,-12
    ef4c:	df000215 	stw	fp,8(sp)
    ef50:	df000204 	addi	fp,sp,8
    ef54:	e13fff15 	stw	r4,-4(fp)
	alt_u8 rvalid = (alt_u8)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RVALID_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RVALID_OFST);
    ef58:	e0bfff17 	ldw	r2,-4(fp)
    ef5c:	10a0000c 	andi	r2,r2,32768
    ef60:	1004d3fa 	srli	r2,r2,15
    ef64:	e0bffe05 	stb	r2,-8(fp)
	return rvalid;
    ef68:	e0bffe03 	ldbu	r2,-8(fp)
}
    ef6c:	e037883a 	mov	sp,fp
    ef70:	df000017 	ldw	fp,0(sp)
    ef74:	dec00104 	addi	sp,sp,4
    ef78:	f800283a 	ret

0000ef7c <read_data_byte>:

alt_u8 read_data_byte(alt_u32 data_reg)
{
    ef7c:	defffd04 	addi	sp,sp,-12
    ef80:	df000215 	stw	fp,8(sp)
    ef84:	df000204 	addi	fp,sp,8
    ef88:	e13fff15 	stw	r4,-4(fp)
	alt_u8 data = (alt_u8) ( (data_reg & ALT_UP_PS2_PORT_DATA_REG_DATA_MSK) >> ALT_UP_PS2_PORT_DATA_REG_DATA_OFST) ;
    ef8c:	e0bfff17 	ldw	r2,-4(fp)
    ef90:	e0bffe05 	stb	r2,-8(fp)
	return data;
    ef94:	e0bffe03 	ldbu	r2,-8(fp)
}
    ef98:	e037883a 	mov	sp,fp
    ef9c:	df000017 	ldw	fp,0(sp)
    efa0:	dec00104 	addi	sp,sp,4
    efa4:	f800283a 	ret

0000efa8 <alt_up_ps2_init>:

//////////////////////////////////////////////////////////////////////////////////////////////
// HAL Functions
void alt_up_ps2_init(alt_up_ps2_dev *ps2)
{
    efa8:	defffb04 	addi	sp,sp,-20
    efac:	dfc00415 	stw	ra,16(sp)
    efb0:	df000315 	stw	fp,12(sp)
    efb4:	df000304 	addi	fp,sp,12
    efb8:	e13fff15 	stw	r4,-4(fp)
	// initialize the device
	unsigned char byte;
	//send the reset request, wait for ACK
	int status = alt_up_ps2_write_data_byte_with_ack(ps2, 0xff);
    efbc:	01403fc4 	movi	r5,255
    efc0:	e13fff17 	ldw	r4,-4(fp)
    efc4:	000f2080 	call	f208 <alt_up_ps2_write_data_byte_with_ack>
    efc8:	e0bffd15 	stw	r2,-12(fp)
	if (status == 0)
    efcc:	e0bffd17 	ldw	r2,-12(fp)
    efd0:	1000211e 	bne	r2,zero,f058 <alt_up_ps2_init+0xb0>
	{
		// reset succeed, now try to get the BAT result, AA means passed
		status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    efd4:	e0bffe04 	addi	r2,fp,-8
    efd8:	100b883a 	mov	r5,r2
    efdc:	e13fff17 	ldw	r4,-4(fp)
    efe0:	000f26c0 	call	f26c <alt_up_ps2_read_data_byte_timeout>
    efe4:	e0bffd15 	stw	r2,-12(fp)
		if (status == 0 && byte == 0xAA)
    efe8:	e0bffd17 	ldw	r2,-12(fp)
    efec:	10001a1e 	bne	r2,zero,f058 <alt_up_ps2_init+0xb0>
    eff0:	e0bffe03 	ldbu	r2,-8(fp)
    eff4:	10803fcc 	andi	r2,r2,255
    eff8:	10802a98 	cmpnei	r2,r2,170
    effc:	1000161e 	bne	r2,zero,f058 <alt_up_ps2_init+0xb0>
		{
			//get the 2nd byte
			status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    f000:	e0bffe04 	addi	r2,fp,-8
    f004:	100b883a 	mov	r5,r2
    f008:	e13fff17 	ldw	r4,-4(fp)
    f00c:	000f26c0 	call	f26c <alt_up_ps2_read_data_byte_timeout>
    f010:	e0bffd15 	stw	r2,-12(fp)
			if (status == -ETIMEDOUT)
    f014:	e0bffd17 	ldw	r2,-12(fp)
    f018:	10bfe318 	cmpnei	r2,r2,-116
    f01c:	1000041e 	bne	r2,zero,f030 <alt_up_ps2_init+0x88>
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
    f020:	e0bfff17 	ldw	r2,-4(fp)
    f024:	00c00044 	movi	r3,1
    f028:	10c00d15 	stw	r3,52(r2)
				ps2->device_type = PS2_MOUSE;
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
			}
		}
	}
}
    f02c:	00000a06 	br	f058 <alt_up_ps2_init+0xb0>
			if (status == -ETIMEDOUT)
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
			}
			else if (status == 0 && byte == 0x00)
    f030:	e0bffd17 	ldw	r2,-12(fp)
    f034:	1000081e 	bne	r2,zero,f058 <alt_up_ps2_init+0xb0>
    f038:	e0bffe03 	ldbu	r2,-8(fp)
    f03c:	10803fcc 	andi	r2,r2,255
    f040:	1000051e 	bne	r2,zero,f058 <alt_up_ps2_init+0xb0>
			{
				//for mouse, it will sent out 0x00 after sending out ACK and PASS/FAIL.
				ps2->device_type = PS2_MOUSE;
    f044:	e0bfff17 	ldw	r2,-4(fp)
    f048:	10000d15 	stw	zero,52(r2)
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
    f04c:	01403d04 	movi	r5,244
    f050:	e13fff17 	ldw	r4,-4(fp)
    f054:	000f12c0 	call	f12c <alt_up_ps2_write_data_byte>
			}
		}
	}
}
    f058:	0001883a 	nop
    f05c:	e037883a 	mov	sp,fp
    f060:	dfc00117 	ldw	ra,4(sp)
    f064:	df000017 	ldw	fp,0(sp)
    f068:	dec00204 	addi	sp,sp,8
    f06c:	f800283a 	ret

0000f070 <alt_up_ps2_enable_read_interrupt>:

void alt_up_ps2_enable_read_interrupt(alt_up_ps2_dev *ps2)
{
    f070:	defffd04 	addi	sp,sp,-12
    f074:	df000215 	stw	fp,8(sp)
    f078:	df000204 	addi	fp,sp,8
    f07c:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    f080:	e0bfff17 	ldw	r2,-4(fp)
    f084:	10800a17 	ldw	r2,40(r2)
    f088:	10800104 	addi	r2,r2,4
    f08c:	10800037 	ldwio	r2,0(r2)
    f090:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    f094:	e0bffe17 	ldw	r2,-8(fp)
    f098:	10800054 	ori	r2,r2,1
    f09c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    f0a0:	e0bfff17 	ldw	r2,-4(fp)
    f0a4:	10800a17 	ldw	r2,40(r2)
    f0a8:	10800104 	addi	r2,r2,4
    f0ac:	1007883a 	mov	r3,r2
    f0b0:	e0bffe17 	ldw	r2,-8(fp)
    f0b4:	18800035 	stwio	r2,0(r3)
}
    f0b8:	0001883a 	nop
    f0bc:	e037883a 	mov	sp,fp
    f0c0:	df000017 	ldw	fp,0(sp)
    f0c4:	dec00104 	addi	sp,sp,4
    f0c8:	f800283a 	ret

0000f0cc <alt_up_ps2_disable_read_interrupt>:

void alt_up_ps2_disable_read_interrupt(alt_up_ps2_dev *ps2)
{
    f0cc:	defffd04 	addi	sp,sp,-12
    f0d0:	df000215 	stw	fp,8(sp)
    f0d4:	df000204 	addi	fp,sp,8
    f0d8:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    f0dc:	e0bfff17 	ldw	r2,-4(fp)
    f0e0:	10800a17 	ldw	r2,40(r2)
    f0e4:	10800104 	addi	r2,r2,4
    f0e8:	10800037 	ldwio	r2,0(r2)
    f0ec:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    f0f0:	e0fffe17 	ldw	r3,-8(fp)
    f0f4:	00bfff84 	movi	r2,-2
    f0f8:	1884703a 	and	r2,r3,r2
    f0fc:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    f100:	e0bfff17 	ldw	r2,-4(fp)
    f104:	10800a17 	ldw	r2,40(r2)
    f108:	10800104 	addi	r2,r2,4
    f10c:	1007883a 	mov	r3,r2
    f110:	e0bffe17 	ldw	r2,-8(fp)
    f114:	18800035 	stwio	r2,0(r3)
}
    f118:	0001883a 	nop
    f11c:	e037883a 	mov	sp,fp
    f120:	df000017 	ldw	fp,0(sp)
    f124:	dec00104 	addi	sp,sp,4
    f128:	f800283a 	ret

0000f12c <alt_up_ps2_write_data_byte>:

int alt_up_ps2_write_data_byte(alt_up_ps2_dev *ps2, unsigned char byte)
{
    f12c:	defffb04 	addi	sp,sp,-20
    f130:	dfc00415 	stw	ra,16(sp)
    f134:	df000315 	stw	fp,12(sp)
    f138:	df000304 	addi	fp,sp,12
    f13c:	e13ffe15 	stw	r4,-8(fp)
    f140:	2805883a 	mov	r2,r5
    f144:	e0bfff05 	stb	r2,-4(fp)
	//note: data are only located at the lower 8 bits
	//note: the software send command to the PS2 peripheral through the data
	//		register rather than the control register
	IOWR_ALT_UP_PS2_PORT_DATA(ps2->base, byte);
    f148:	e0bffe17 	ldw	r2,-8(fp)
    f14c:	10800a17 	ldw	r2,40(r2)
    f150:	1007883a 	mov	r3,r2
    f154:	e0bfff03 	ldbu	r2,-4(fp)
    f158:	18800025 	stbio	r2,0(r3)
	alt_u32 ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base);
    f15c:	e0bffe17 	ldw	r2,-8(fp)
    f160:	10800a17 	ldw	r2,40(r2)
    f164:	10800104 	addi	r2,r2,4
    f168:	10800037 	ldwio	r2,0(r2)
    f16c:	e0bffd15 	stw	r2,-12(fp)
	if (read_CE_bit(ctrl_reg))
    f170:	e13ffd17 	ldw	r4,-12(fp)
    f174:	000eee40 	call	eee4 <read_CE_bit>
    f178:	10803fcc 	andi	r2,r2,255
    f17c:	10000226 	beq	r2,zero,f188 <alt_up_ps2_write_data_byte+0x5c>
	{
		//CE bit is set --> error occurs on sending commands
		return -EIO;
    f180:	00bffec4 	movi	r2,-5
    f184:	00000106 	br	f18c <alt_up_ps2_write_data_byte+0x60>
	}
	return 0;
    f188:	0005883a 	mov	r2,zero
}
    f18c:	e037883a 	mov	sp,fp
    f190:	dfc00117 	ldw	ra,4(sp)
    f194:	df000017 	ldw	fp,0(sp)
    f198:	dec00204 	addi	sp,sp,8
    f19c:	f800283a 	ret

0000f1a0 <alt_up_ps2_wait_for_ack>:

int alt_up_ps2_wait_for_ack(alt_up_ps2_dev *ps2)
{
    f1a0:	defffc04 	addi	sp,sp,-16
    f1a4:	dfc00315 	stw	ra,12(sp)
    f1a8:	df000215 	stw	fp,8(sp)
    f1ac:	df000204 	addi	fp,sp,8
    f1b0:	e13fff15 	stw	r4,-4(fp)
	unsigned char data = 0;
    f1b4:	e03ffe45 	stb	zero,-7(fp)
	unsigned char status = 0;
    f1b8:	e03ffe05 	stb	zero,-8(fp)
	do
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, &data); 
    f1bc:	e0bffe44 	addi	r2,fp,-7
    f1c0:	100b883a 	mov	r5,r2
    f1c4:	e13fff17 	ldw	r4,-4(fp)
    f1c8:	000f26c0 	call	f26c <alt_up_ps2_read_data_byte_timeout>
    f1cc:	e0bffe05 	stb	r2,-8(fp)
		if ( status == 0)
    f1d0:	e0bffe03 	ldbu	r2,-8(fp)
    f1d4:	1000061e 	bne	r2,zero,f1f0 <alt_up_ps2_wait_for_ack+0x50>
		{
			if (data == PS2_ACK)
    f1d8:	e0bffe43 	ldbu	r2,-7(fp)
    f1dc:	10803fcc 	andi	r2,r2,255
    f1e0:	10803e98 	cmpnei	r2,r2,250
    f1e4:	103ff51e 	bne	r2,zero,f1bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f1bc>
				return 0;
    f1e8:	0005883a 	mov	r2,zero
    f1ec:	00000106 	br	f1f4 <alt_up_ps2_wait_for_ack+0x54>
		}
		else 
		{
			return status;
    f1f0:	e0bffe03 	ldbu	r2,-8(fp)
		}
	} while(1);
	return -ETIMEDOUT;
}
    f1f4:	e037883a 	mov	sp,fp
    f1f8:	dfc00117 	ldw	ra,4(sp)
    f1fc:	df000017 	ldw	fp,0(sp)
    f200:	dec00204 	addi	sp,sp,8
    f204:	f800283a 	ret

0000f208 <alt_up_ps2_write_data_byte_with_ack>:

int alt_up_ps2_write_data_byte_with_ack(alt_up_ps2_dev *ps2, unsigned char byte)
{
    f208:	defffa04 	addi	sp,sp,-24
    f20c:	dfc00515 	stw	ra,20(sp)
    f210:	df000415 	stw	fp,16(sp)
    f214:	df000404 	addi	fp,sp,16
    f218:	e13ffe15 	stw	r4,-8(fp)
    f21c:	2805883a 	mov	r2,r5
    f220:	e0bfff05 	stb	r2,-4(fp)
	int send_status = alt_up_ps2_write_data_byte(ps2, byte);
    f224:	e0bfff03 	ldbu	r2,-4(fp)
    f228:	100b883a 	mov	r5,r2
    f22c:	e13ffe17 	ldw	r4,-8(fp)
    f230:	000f12c0 	call	f12c <alt_up_ps2_write_data_byte>
    f234:	e0bffc15 	stw	r2,-16(fp)
	if ( send_status != 0)
    f238:	e0bffc17 	ldw	r2,-16(fp)
    f23c:	10000226 	beq	r2,zero,f248 <alt_up_ps2_write_data_byte_with_ack+0x40>
		// return on sending error
		return send_status;
    f240:	e0bffc17 	ldw	r2,-16(fp)
    f244:	00000406 	br	f258 <alt_up_ps2_write_data_byte_with_ack+0x50>

	int ack_status = alt_up_ps2_wait_for_ack(ps2);
    f248:	e13ffe17 	ldw	r4,-8(fp)
    f24c:	000f1a00 	call	f1a0 <alt_up_ps2_wait_for_ack>
    f250:	e0bffd15 	stw	r2,-12(fp)
	return ack_status;
    f254:	e0bffd17 	ldw	r2,-12(fp)
}
    f258:	e037883a 	mov	sp,fp
    f25c:	dfc00117 	ldw	ra,4(sp)
    f260:	df000017 	ldw	fp,0(sp)
    f264:	dec00204 	addi	sp,sp,8
    f268:	f800283a 	ret

0000f26c <alt_up_ps2_read_data_byte_timeout>:

int alt_up_ps2_read_data_byte_timeout(alt_up_ps2_dev *ps2, unsigned char *byte)
{
    f26c:	defffa04 	addi	sp,sp,-24
    f270:	dfc00515 	stw	ra,20(sp)
    f274:	df000415 	stw	fp,16(sp)
    f278:	df000404 	addi	fp,sp,16
    f27c:	e13ffe15 	stw	r4,-8(fp)
    f280:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
    f284:	e03ffd15 	stw	zero,-12(fp)
	unsigned int count = 0;
    f288:	e03ffc15 	stw	zero,-16(fp)
	do {
		count++;
    f28c:	e0bffc17 	ldw	r2,-16(fp)
    f290:	10800044 	addi	r2,r2,1
    f294:	e0bffc15 	stw	r2,-16(fp)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    f298:	e0bffe17 	ldw	r2,-8(fp)
    f29c:	10800a17 	ldw	r2,40(r2)
    f2a0:	10800037 	ldwio	r2,0(r2)
    f2a4:	e0bffd15 	stw	r2,-12(fp)
		if (read_data_valid(data_reg))
    f2a8:	e13ffd17 	ldw	r4,-12(fp)
    f2ac:	000ef480 	call	ef48 <read_data_valid>
    f2b0:	10803fcc 	andi	r2,r2,255
    f2b4:	10000726 	beq	r2,zero,f2d4 <alt_up_ps2_read_data_byte_timeout+0x68>
		{
			*byte = read_data_byte(data_reg);
    f2b8:	e13ffd17 	ldw	r4,-12(fp)
    f2bc:	000ef7c0 	call	ef7c <read_data_byte>
    f2c0:	1007883a 	mov	r3,r2
    f2c4:	e0bfff17 	ldw	r2,-4(fp)
    f2c8:	10c00005 	stb	r3,0(r2)
			return 0;
    f2cc:	0005883a 	mov	r2,zero
    f2d0:	00000806 	br	f2f4 <alt_up_ps2_read_data_byte_timeout+0x88>
		}
		//timeout = 0 means to disable the timeout
		if ( ps2->timeout != 0 && count > ps2->timeout)
    f2d4:	e0bffe17 	ldw	r2,-8(fp)
    f2d8:	10800c17 	ldw	r2,48(r2)
    f2dc:	103feb26 	beq	r2,zero,f28c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f28c>
    f2e0:	e0bffe17 	ldw	r2,-8(fp)
    f2e4:	10c00c17 	ldw	r3,48(r2)
    f2e8:	e0bffc17 	ldw	r2,-16(fp)
    f2ec:	18bfe72e 	bgeu	r3,r2,f28c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f28c>
		{
			return -ETIMEDOUT;
    f2f0:	00bfe304 	movi	r2,-116
		}
	} while (1);
}
    f2f4:	e037883a 	mov	sp,fp
    f2f8:	dfc00117 	ldw	ra,4(sp)
    f2fc:	df000017 	ldw	fp,0(sp)
    f300:	dec00204 	addi	sp,sp,8
    f304:	f800283a 	ret

0000f308 <alt_up_ps2_read_data_byte>:

int alt_up_ps2_read_data_byte(alt_up_ps2_dev *ps2, unsigned char *byte)
{
    f308:	defffb04 	addi	sp,sp,-20
    f30c:	dfc00415 	stw	ra,16(sp)
    f310:	df000315 	stw	fp,12(sp)
    f314:	df000304 	addi	fp,sp,12
    f318:	e13ffe15 	stw	r4,-8(fp)
    f31c:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
    f320:	e03ffd15 	stw	zero,-12(fp)
	data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    f324:	e0bffe17 	ldw	r2,-8(fp)
    f328:	10800a17 	ldw	r2,40(r2)
    f32c:	10800037 	ldwio	r2,0(r2)
    f330:	e0bffd15 	stw	r2,-12(fp)
	if (read_data_valid(data_reg))
    f334:	e13ffd17 	ldw	r4,-12(fp)
    f338:	000ef480 	call	ef48 <read_data_valid>
    f33c:	10803fcc 	andi	r2,r2,255
    f340:	10000726 	beq	r2,zero,f360 <alt_up_ps2_read_data_byte+0x58>
	{
		*byte = read_data_byte(data_reg);
    f344:	e13ffd17 	ldw	r4,-12(fp)
    f348:	000ef7c0 	call	ef7c <read_data_byte>
    f34c:	1007883a 	mov	r3,r2
    f350:	e0bfff17 	ldw	r2,-4(fp)
    f354:	10c00005 	stb	r3,0(r2)
		return 0;
    f358:	0005883a 	mov	r2,zero
    f35c:	00000106 	br	f364 <alt_up_ps2_read_data_byte+0x5c>
	}
	return -1;
    f360:	00bfffc4 	movi	r2,-1
}
    f364:	e037883a 	mov	sp,fp
    f368:	dfc00117 	ldw	ra,4(sp)
    f36c:	df000017 	ldw	fp,0(sp)
    f370:	dec00204 	addi	sp,sp,8
    f374:	f800283a 	ret

0000f378 <alt_up_ps2_clear_fifo>:

void alt_up_ps2_clear_fifo(alt_up_ps2_dev *ps2)
{
    f378:	defffb04 	addi	sp,sp,-20
    f37c:	dfc00415 	stw	ra,16(sp)
    f380:	df000315 	stw	fp,12(sp)
    f384:	df000304 	addi	fp,sp,12
    f388:	e13fff15 	stw	r4,-4(fp)
	// The DATA byte of the data register will be automatically cleared after a read
	// So we simply keep reading it until there are no available bytes
	alt_u16 num = 0;
    f38c:	e03ffd0d 	sth	zero,-12(fp)
	unsigned int data_reg = 0;
    f390:	e03ffe15 	stw	zero,-8(fp)
	do
	{
		// read the data register (the DATA byte is cleared)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    f394:	e0bfff17 	ldw	r2,-4(fp)
    f398:	10800a17 	ldw	r2,40(r2)
    f39c:	10800037 	ldwio	r2,0(r2)
    f3a0:	e0bffe15 	stw	r2,-8(fp)
		// get the number of available bytes from the RAVAIL part of data register
		num = read_num_bytes_available(data_reg);
    f3a4:	e13ffe17 	ldw	r4,-8(fp)
    f3a8:	000ef180 	call	ef18 <read_num_bytes_available>
    f3ac:	e0bffd0d 	sth	r2,-12(fp)
	} while (num > 0);
    f3b0:	e0bffd0b 	ldhu	r2,-12(fp)
    f3b4:	103ff71e 	bne	r2,zero,f394 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f394>
}
    f3b8:	0001883a 	nop
    f3bc:	e037883a 	mov	sp,fp
    f3c0:	dfc00117 	ldw	ra,4(sp)
    f3c4:	df000017 	ldw	fp,0(sp)
    f3c8:	dec00204 	addi	sp,sp,8
    f3cc:	f800283a 	ret

0000f3d0 <alt_up_ps2_read_fd>:

//////////////////////////////////////////////////////////////
// FD Functions
int alt_up_ps2_read_fd (alt_fd* fd, char* ptr, int len)
{
    f3d0:	defff804 	addi	sp,sp,-32
    f3d4:	dfc00715 	stw	ra,28(sp)
    f3d8:	df000615 	stw	fp,24(sp)
    f3dc:	df000604 	addi	fp,sp,24
    f3e0:	e13ffd15 	stw	r4,-12(fp)
    f3e4:	e17ffe15 	stw	r5,-8(fp)
    f3e8:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
    f3ec:	e0bffd17 	ldw	r2,-12(fp)
    f3f0:	10800017 	ldw	r2,0(r2)
    f3f4:	e0bffa15 	stw	r2,-24(fp)
	int status = 0;
    f3f8:	e03ffb15 	stw	zero,-20(fp)
	int count = 0;
    f3fc:	e03ffc15 	stw	zero,-16(fp)
	while (count < len);
    f400:	e0fffc17 	ldw	r3,-16(fp)
    f404:	e0bfff17 	ldw	r2,-4(fp)
    f408:	18bffd16 	blt	r3,r2,f400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f400>
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, (unsigned char *)ptr++);
    f40c:	e0bffe17 	ldw	r2,-8(fp)
    f410:	10c00044 	addi	r3,r2,1
    f414:	e0fffe15 	stw	r3,-8(fp)
    f418:	100b883a 	mov	r5,r2
    f41c:	e13ffa17 	ldw	r4,-24(fp)
    f420:	000f26c0 	call	f26c <alt_up_ps2_read_data_byte_timeout>
    f424:	e0bffb15 	stw	r2,-20(fp)
		if (status!=0)
    f428:	e0bffb17 	ldw	r2,-20(fp)
    f42c:	10000226 	beq	r2,zero,f438 <alt_up_ps2_read_fd+0x68>
			return count;
    f430:	e0bffc17 	ldw	r2,-16(fp)
    f434:	00000406 	br	f448 <alt_up_ps2_read_fd+0x78>
		count++;
    f438:	e0bffc17 	ldw	r2,-16(fp)
    f43c:	10800044 	addi	r2,r2,1
    f440:	e0bffc15 	stw	r2,-16(fp)
	} 
	return count;
    f444:	e0bffc17 	ldw	r2,-16(fp)
}
    f448:	e037883a 	mov	sp,fp
    f44c:	dfc00117 	ldw	ra,4(sp)
    f450:	df000017 	ldw	fp,0(sp)
    f454:	dec00204 	addi	sp,sp,8
    f458:	f800283a 	ret

0000f45c <alt_up_ps2_write_fd>:

int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
    f45c:	defff804 	addi	sp,sp,-32
    f460:	dfc00715 	stw	ra,28(sp)
    f464:	df000615 	stw	fp,24(sp)
    f468:	df000604 	addi	fp,sp,24
    f46c:	e13ffd15 	stw	r4,-12(fp)
    f470:	e17ffe15 	stw	r5,-8(fp)
    f474:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
    f478:	e0bffd17 	ldw	r2,-12(fp)
    f47c:	10800017 	ldw	r2,0(r2)
    f480:	e0bffb15 	stw	r2,-20(fp)
	int status = 0;
    f484:	e03ffc15 	stw	zero,-16(fp)
	int count = 0;
    f488:	e03ffa15 	stw	zero,-24(fp)
	while (count < len)
    f48c:	00001006 	br	f4d0 <alt_up_ps2_write_fd+0x74>
	{
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
    f490:	e0bffe17 	ldw	r2,-8(fp)
    f494:	10c00044 	addi	r3,r2,1
    f498:	e0fffe15 	stw	r3,-8(fp)
    f49c:	10800003 	ldbu	r2,0(r2)
    f4a0:	10803fcc 	andi	r2,r2,255
    f4a4:	100b883a 	mov	r5,r2
    f4a8:	e13ffb17 	ldw	r4,-20(fp)
    f4ac:	000f12c0 	call	f12c <alt_up_ps2_write_data_byte>
    f4b0:	e0bffc15 	stw	r2,-16(fp)
		if (status!=0)
    f4b4:	e0bffc17 	ldw	r2,-16(fp)
    f4b8:	10000226 	beq	r2,zero,f4c4 <alt_up_ps2_write_fd+0x68>
			return count;
    f4bc:	e0bffa17 	ldw	r2,-24(fp)
    f4c0:	00000706 	br	f4e0 <alt_up_ps2_write_fd+0x84>
		count++;
    f4c4:	e0bffa17 	ldw	r2,-24(fp)
    f4c8:	10800044 	addi	r2,r2,1
    f4cc:	e0bffa15 	stw	r2,-24(fp)
int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
	int status = 0;
	int count = 0;
	while (count < len)
    f4d0:	e0fffa17 	ldw	r3,-24(fp)
    f4d4:	e0bfff17 	ldw	r2,-4(fp)
    f4d8:	18bfed16 	blt	r3,r2,f490 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f490>
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
		if (status!=0)
			return count;
		count++;
	}
	return count;
    f4dc:	e0bffa17 	ldw	r2,-24(fp)
}
    f4e0:	e037883a 	mov	sp,fp
    f4e4:	dfc00117 	ldw	ra,4(sp)
    f4e8:	df000017 	ldw	fp,0(sp)
    f4ec:	dec00204 	addi	sp,sp,8
    f4f0:	f800283a 	ret

0000f4f4 <alt_up_ps2_open_dev>:

alt_up_ps2_dev* alt_up_ps2_open_dev(const char* name)
{
    f4f4:	defffc04 	addi	sp,sp,-16
    f4f8:	dfc00315 	stw	ra,12(sp)
    f4fc:	df000215 	stw	fp,8(sp)
    f500:	df000204 	addi	fp,sp,8
    f504:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_ps2_dev *dev = (alt_up_ps2_dev*)alt_find_dev(name, &alt_dev_list);
    f508:	d1600d04 	addi	r5,gp,-32716
    f50c:	e13fff17 	ldw	r4,-4(fp)
    f510:	000f81c0 	call	f81c <alt_find_dev>
    f514:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    f518:	e0bffe17 	ldw	r2,-8(fp)
}
    f51c:	e037883a 	mov	sp,fp
    f520:	dfc00117 	ldw	ra,4(sp)
    f524:	df000017 	ldw	fp,0(sp)
    f528:	dec00204 	addi	sp,sp,8
    f52c:	f800283a 	ret

0000f530 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    f530:	defff504 	addi	sp,sp,-44
    f534:	df000a15 	stw	fp,40(sp)
    f538:	df000a04 	addi	fp,sp,40
    f53c:	e13ffc15 	stw	r4,-16(fp)
    f540:	e17ffd15 	stw	r5,-12(fp)
    f544:	e1bffe15 	stw	r6,-8(fp)
    f548:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    f54c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    f550:	d0a77017 	ldw	r2,-25152(gp)
  
  if (alt_ticks_per_second ())
    f554:	10003c26 	beq	r2,zero,f648 <alt_alarm_start+0x118>
  {
    if (alarm)
    f558:	e0bffc17 	ldw	r2,-16(fp)
    f55c:	10003826 	beq	r2,zero,f640 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    f560:	e0bffc17 	ldw	r2,-16(fp)
    f564:	e0fffe17 	ldw	r3,-8(fp)
    f568:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    f56c:	e0bffc17 	ldw	r2,-16(fp)
    f570:	e0ffff17 	ldw	r3,-4(fp)
    f574:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f578:	0005303a 	rdctl	r2,status
    f57c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f580:	e0fff917 	ldw	r3,-28(fp)
    f584:	00bfff84 	movi	r2,-2
    f588:	1884703a 	and	r2,r3,r2
    f58c:	1001703a 	wrctl	status,r2
  
  return context;
    f590:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    f594:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    f598:	d0a77117 	ldw	r2,-25148(gp)
      
      current_nticks = alt_nticks();
    f59c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    f5a0:	e0fffd17 	ldw	r3,-12(fp)
    f5a4:	e0bff617 	ldw	r2,-40(fp)
    f5a8:	1885883a 	add	r2,r3,r2
    f5ac:	10c00044 	addi	r3,r2,1
    f5b0:	e0bffc17 	ldw	r2,-16(fp)
    f5b4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    f5b8:	e0bffc17 	ldw	r2,-16(fp)
    f5bc:	10c00217 	ldw	r3,8(r2)
    f5c0:	e0bff617 	ldw	r2,-40(fp)
    f5c4:	1880042e 	bgeu	r3,r2,f5d8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    f5c8:	e0bffc17 	ldw	r2,-16(fp)
    f5cc:	00c00044 	movi	r3,1
    f5d0:	10c00405 	stb	r3,16(r2)
    f5d4:	00000206 	br	f5e0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    f5d8:	e0bffc17 	ldw	r2,-16(fp)
    f5dc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    f5e0:	e0bffc17 	ldw	r2,-16(fp)
    f5e4:	d0e01304 	addi	r3,gp,-32692
    f5e8:	e0fffa15 	stw	r3,-24(fp)
    f5ec:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f5f0:	e0bffb17 	ldw	r2,-20(fp)
    f5f4:	e0fffa17 	ldw	r3,-24(fp)
    f5f8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f5fc:	e0bffa17 	ldw	r2,-24(fp)
    f600:	10c00017 	ldw	r3,0(r2)
    f604:	e0bffb17 	ldw	r2,-20(fp)
    f608:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f60c:	e0bffa17 	ldw	r2,-24(fp)
    f610:	10800017 	ldw	r2,0(r2)
    f614:	e0fffb17 	ldw	r3,-20(fp)
    f618:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f61c:	e0bffa17 	ldw	r2,-24(fp)
    f620:	e0fffb17 	ldw	r3,-20(fp)
    f624:	10c00015 	stw	r3,0(r2)
    f628:	e0bff817 	ldw	r2,-32(fp)
    f62c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f630:	e0bff717 	ldw	r2,-36(fp)
    f634:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    f638:	0005883a 	mov	r2,zero
    f63c:	00000306 	br	f64c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    f640:	00bffa84 	movi	r2,-22
    f644:	00000106 	br	f64c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    f648:	00bfde84 	movi	r2,-134
  }
}
    f64c:	e037883a 	mov	sp,fp
    f650:	df000017 	ldw	fp,0(sp)
    f654:	dec00104 	addi	sp,sp,4
    f658:	f800283a 	ret

0000f65c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    f65c:	deffff04 	addi	sp,sp,-4
    f660:	df000015 	stw	fp,0(sp)
    f664:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    f668:	0001883a 	nop
    f66c:	e037883a 	mov	sp,fp
    f670:	df000017 	ldw	fp,0(sp)
    f674:	dec00104 	addi	sp,sp,4
    f678:	f800283a 	ret

0000f67c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f67c:	defffe04 	addi	sp,sp,-8
    f680:	dfc00115 	stw	ra,4(sp)
    f684:	df000015 	stw	fp,0(sp)
    f688:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f68c:	d0a01017 	ldw	r2,-32704(gp)
    f690:	10000326 	beq	r2,zero,f6a0 <alt_get_errno+0x24>
    f694:	d0a01017 	ldw	r2,-32704(gp)
    f698:	103ee83a 	callr	r2
    f69c:	00000106 	br	f6a4 <alt_get_errno+0x28>
    f6a0:	d0a76b04 	addi	r2,gp,-25172
}
    f6a4:	e037883a 	mov	sp,fp
    f6a8:	dfc00117 	ldw	ra,4(sp)
    f6ac:	df000017 	ldw	fp,0(sp)
    f6b0:	dec00204 	addi	sp,sp,8
    f6b4:	f800283a 	ret

0000f6b8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    f6b8:	defffa04 	addi	sp,sp,-24
    f6bc:	dfc00515 	stw	ra,20(sp)
    f6c0:	df000415 	stw	fp,16(sp)
    f6c4:	df000404 	addi	fp,sp,16
    f6c8:	e13ffe15 	stw	r4,-8(fp)
    f6cc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    f6d0:	e0bffe17 	ldw	r2,-8(fp)
    f6d4:	10000326 	beq	r2,zero,f6e4 <alt_dev_llist_insert+0x2c>
    f6d8:	e0bffe17 	ldw	r2,-8(fp)
    f6dc:	10800217 	ldw	r2,8(r2)
    f6e0:	1000061e 	bne	r2,zero,f6fc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    f6e4:	000f67c0 	call	f67c <alt_get_errno>
    f6e8:	1007883a 	mov	r3,r2
    f6ec:	00800584 	movi	r2,22
    f6f0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    f6f4:	00bffa84 	movi	r2,-22
    f6f8:	00001306 	br	f748 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    f6fc:	e0bffe17 	ldw	r2,-8(fp)
    f700:	e0ffff17 	ldw	r3,-4(fp)
    f704:	e0fffc15 	stw	r3,-16(fp)
    f708:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f70c:	e0bffd17 	ldw	r2,-12(fp)
    f710:	e0fffc17 	ldw	r3,-16(fp)
    f714:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f718:	e0bffc17 	ldw	r2,-16(fp)
    f71c:	10c00017 	ldw	r3,0(r2)
    f720:	e0bffd17 	ldw	r2,-12(fp)
    f724:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f728:	e0bffc17 	ldw	r2,-16(fp)
    f72c:	10800017 	ldw	r2,0(r2)
    f730:	e0fffd17 	ldw	r3,-12(fp)
    f734:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f738:	e0bffc17 	ldw	r2,-16(fp)
    f73c:	e0fffd17 	ldw	r3,-12(fp)
    f740:	10c00015 	stw	r3,0(r2)

  return 0;  
    f744:	0005883a 	mov	r2,zero
}
    f748:	e037883a 	mov	sp,fp
    f74c:	dfc00117 	ldw	ra,4(sp)
    f750:	df000017 	ldw	fp,0(sp)
    f754:	dec00204 	addi	sp,sp,8
    f758:	f800283a 	ret

0000f75c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    f75c:	defffd04 	addi	sp,sp,-12
    f760:	dfc00215 	stw	ra,8(sp)
    f764:	df000115 	stw	fp,4(sp)
    f768:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f76c:	00800074 	movhi	r2,1
    f770:	10812904 	addi	r2,r2,1188
    f774:	e0bfff15 	stw	r2,-4(fp)
    f778:	00000606 	br	f794 <_do_ctors+0x38>
        (*ctor) (); 
    f77c:	e0bfff17 	ldw	r2,-4(fp)
    f780:	10800017 	ldw	r2,0(r2)
    f784:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f788:	e0bfff17 	ldw	r2,-4(fp)
    f78c:	10bfff04 	addi	r2,r2,-4
    f790:	e0bfff15 	stw	r2,-4(fp)
    f794:	e0ffff17 	ldw	r3,-4(fp)
    f798:	00800074 	movhi	r2,1
    f79c:	10812a04 	addi	r2,r2,1192
    f7a0:	18bff62e 	bgeu	r3,r2,f77c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f77c>
        (*ctor) (); 
}
    f7a4:	0001883a 	nop
    f7a8:	e037883a 	mov	sp,fp
    f7ac:	dfc00117 	ldw	ra,4(sp)
    f7b0:	df000017 	ldw	fp,0(sp)
    f7b4:	dec00204 	addi	sp,sp,8
    f7b8:	f800283a 	ret

0000f7bc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    f7bc:	defffd04 	addi	sp,sp,-12
    f7c0:	dfc00215 	stw	ra,8(sp)
    f7c4:	df000115 	stw	fp,4(sp)
    f7c8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f7cc:	00800074 	movhi	r2,1
    f7d0:	10812904 	addi	r2,r2,1188
    f7d4:	e0bfff15 	stw	r2,-4(fp)
    f7d8:	00000606 	br	f7f4 <_do_dtors+0x38>
        (*dtor) (); 
    f7dc:	e0bfff17 	ldw	r2,-4(fp)
    f7e0:	10800017 	ldw	r2,0(r2)
    f7e4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f7e8:	e0bfff17 	ldw	r2,-4(fp)
    f7ec:	10bfff04 	addi	r2,r2,-4
    f7f0:	e0bfff15 	stw	r2,-4(fp)
    f7f4:	e0ffff17 	ldw	r3,-4(fp)
    f7f8:	00800074 	movhi	r2,1
    f7fc:	10812a04 	addi	r2,r2,1192
    f800:	18bff62e 	bgeu	r3,r2,f7dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f7dc>
        (*dtor) (); 
}
    f804:	0001883a 	nop
    f808:	e037883a 	mov	sp,fp
    f80c:	dfc00117 	ldw	ra,4(sp)
    f810:	df000017 	ldw	fp,0(sp)
    f814:	dec00204 	addi	sp,sp,8
    f818:	f800283a 	ret

0000f81c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f81c:	defffa04 	addi	sp,sp,-24
    f820:	dfc00515 	stw	ra,20(sp)
    f824:	df000415 	stw	fp,16(sp)
    f828:	df000404 	addi	fp,sp,16
    f82c:	e13ffe15 	stw	r4,-8(fp)
    f830:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f834:	e0bfff17 	ldw	r2,-4(fp)
    f838:	10800017 	ldw	r2,0(r2)
    f83c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f840:	e13ffe17 	ldw	r4,-8(fp)
    f844:	0006e880 	call	6e88 <strlen>
    f848:	10800044 	addi	r2,r2,1
    f84c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f850:	00000d06 	br	f888 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f854:	e0bffc17 	ldw	r2,-16(fp)
    f858:	10800217 	ldw	r2,8(r2)
    f85c:	e0fffd17 	ldw	r3,-12(fp)
    f860:	180d883a 	mov	r6,r3
    f864:	e17ffe17 	ldw	r5,-8(fp)
    f868:	1009883a 	mov	r4,r2
    f86c:	00101600 	call	10160 <memcmp>
    f870:	1000021e 	bne	r2,zero,f87c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f874:	e0bffc17 	ldw	r2,-16(fp)
    f878:	00000706 	br	f898 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f87c:	e0bffc17 	ldw	r2,-16(fp)
    f880:	10800017 	ldw	r2,0(r2)
    f884:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f888:	e0fffc17 	ldw	r3,-16(fp)
    f88c:	e0bfff17 	ldw	r2,-4(fp)
    f890:	18bff01e 	bne	r3,r2,f854 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f854>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f894:	0005883a 	mov	r2,zero
}
    f898:	e037883a 	mov	sp,fp
    f89c:	dfc00117 	ldw	ra,4(sp)
    f8a0:	df000017 	ldw	fp,0(sp)
    f8a4:	dec00204 	addi	sp,sp,8
    f8a8:	f800283a 	ret

0000f8ac <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    f8ac:	defffe04 	addi	sp,sp,-8
    f8b0:	dfc00115 	stw	ra,4(sp)
    f8b4:	df000015 	stw	fp,0(sp)
    f8b8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
    f8bc:	01440004 	movi	r5,4096
    f8c0:	0009883a 	mov	r4,zero
    f8c4:	000ffe80 	call	ffe8 <alt_icache_flush>
#endif
}
    f8c8:	0001883a 	nop
    f8cc:	e037883a 	mov	sp,fp
    f8d0:	dfc00117 	ldw	ra,4(sp)
    f8d4:	df000017 	ldw	fp,0(sp)
    f8d8:	dec00204 	addi	sp,sp,8
    f8dc:	f800283a 	ret

0000f8e0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    f8e0:	defff904 	addi	sp,sp,-28
    f8e4:	dfc00615 	stw	ra,24(sp)
    f8e8:	df000515 	stw	fp,20(sp)
    f8ec:	df000504 	addi	fp,sp,20
    f8f0:	e13ffc15 	stw	r4,-16(fp)
    f8f4:	e17ffd15 	stw	r5,-12(fp)
    f8f8:	e1bffe15 	stw	r6,-8(fp)
    f8fc:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
    f900:	e1bfff17 	ldw	r6,-4(fp)
    f904:	e17ffe17 	ldw	r5,-8(fp)
    f908:	e13ffd17 	ldw	r4,-12(fp)
    f90c:	000fb200 	call	fb20 <open>
    f910:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
    f914:	e0bffb17 	ldw	r2,-20(fp)
    f918:	10001c16 	blt	r2,zero,f98c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
    f91c:	00800074 	movhi	r2,1
    f920:	10845604 	addi	r2,r2,4440
    f924:	e0fffb17 	ldw	r3,-20(fp)
    f928:	18c00324 	muli	r3,r3,12
    f92c:	10c5883a 	add	r2,r2,r3
    f930:	10c00017 	ldw	r3,0(r2)
    f934:	e0bffc17 	ldw	r2,-16(fp)
    f938:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    f93c:	00800074 	movhi	r2,1
    f940:	10845604 	addi	r2,r2,4440
    f944:	e0fffb17 	ldw	r3,-20(fp)
    f948:	18c00324 	muli	r3,r3,12
    f94c:	10c5883a 	add	r2,r2,r3
    f950:	10800104 	addi	r2,r2,4
    f954:	10c00017 	ldw	r3,0(r2)
    f958:	e0bffc17 	ldw	r2,-16(fp)
    f95c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f960:	00800074 	movhi	r2,1
    f964:	10845604 	addi	r2,r2,4440
    f968:	e0fffb17 	ldw	r3,-20(fp)
    f96c:	18c00324 	muli	r3,r3,12
    f970:	10c5883a 	add	r2,r2,r3
    f974:	10800204 	addi	r2,r2,8
    f978:	10c00017 	ldw	r3,0(r2)
    f97c:	e0bffc17 	ldw	r2,-16(fp)
    f980:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    f984:	e13ffb17 	ldw	r4,-20(fp)
    f988:	000d5600 	call	d560 <alt_release_fd>
  }
} 
    f98c:	0001883a 	nop
    f990:	e037883a 	mov	sp,fp
    f994:	dfc00117 	ldw	ra,4(sp)
    f998:	df000017 	ldw	fp,0(sp)
    f99c:	dec00204 	addi	sp,sp,8
    f9a0:	f800283a 	ret

0000f9a4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f9a4:	defffb04 	addi	sp,sp,-20
    f9a8:	dfc00415 	stw	ra,16(sp)
    f9ac:	df000315 	stw	fp,12(sp)
    f9b0:	df000304 	addi	fp,sp,12
    f9b4:	e13ffd15 	stw	r4,-12(fp)
    f9b8:	e17ffe15 	stw	r5,-8(fp)
    f9bc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    f9c0:	01c07fc4 	movi	r7,511
    f9c4:	01800044 	movi	r6,1
    f9c8:	e17ffd17 	ldw	r5,-12(fp)
    f9cc:	01000074 	movhi	r4,1
    f9d0:	21045904 	addi	r4,r4,4452
    f9d4:	000f8e00 	call	f8e0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    f9d8:	01c07fc4 	movi	r7,511
    f9dc:	000d883a 	mov	r6,zero
    f9e0:	e17ffe17 	ldw	r5,-8(fp)
    f9e4:	01000074 	movhi	r4,1
    f9e8:	21045604 	addi	r4,r4,4440
    f9ec:	000f8e00 	call	f8e0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    f9f0:	01c07fc4 	movi	r7,511
    f9f4:	01800044 	movi	r6,1
    f9f8:	e17fff17 	ldw	r5,-4(fp)
    f9fc:	01000074 	movhi	r4,1
    fa00:	21045c04 	addi	r4,r4,4464
    fa04:	000f8e00 	call	f8e0 <alt_open_fd>
}  
    fa08:	0001883a 	nop
    fa0c:	e037883a 	mov	sp,fp
    fa10:	dfc00117 	ldw	ra,4(sp)
    fa14:	df000017 	ldw	fp,0(sp)
    fa18:	dec00204 	addi	sp,sp,8
    fa1c:	f800283a 	ret

0000fa20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fa20:	defffe04 	addi	sp,sp,-8
    fa24:	dfc00115 	stw	ra,4(sp)
    fa28:	df000015 	stw	fp,0(sp)
    fa2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    fa30:	d0a01017 	ldw	r2,-32704(gp)
    fa34:	10000326 	beq	r2,zero,fa44 <alt_get_errno+0x24>
    fa38:	d0a01017 	ldw	r2,-32704(gp)
    fa3c:	103ee83a 	callr	r2
    fa40:	00000106 	br	fa48 <alt_get_errno+0x28>
    fa44:	d0a76b04 	addi	r2,gp,-25172
}
    fa48:	e037883a 	mov	sp,fp
    fa4c:	dfc00117 	ldw	ra,4(sp)
    fa50:	df000017 	ldw	fp,0(sp)
    fa54:	dec00204 	addi	sp,sp,8
    fa58:	f800283a 	ret

0000fa5c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    fa5c:	defffd04 	addi	sp,sp,-12
    fa60:	df000215 	stw	fp,8(sp)
    fa64:	df000204 	addi	fp,sp,8
    fa68:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    fa6c:	e0bfff17 	ldw	r2,-4(fp)
    fa70:	10800217 	ldw	r2,8(r2)
    fa74:	10d00034 	orhi	r3,r2,16384
    fa78:	e0bfff17 	ldw	r2,-4(fp)
    fa7c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    fa80:	e03ffe15 	stw	zero,-8(fp)
    fa84:	00001d06 	br	fafc <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    fa88:	00800074 	movhi	r2,1
    fa8c:	10845604 	addi	r2,r2,4440
    fa90:	e0fffe17 	ldw	r3,-8(fp)
    fa94:	18c00324 	muli	r3,r3,12
    fa98:	10c5883a 	add	r2,r2,r3
    fa9c:	10c00017 	ldw	r3,0(r2)
    faa0:	e0bfff17 	ldw	r2,-4(fp)
    faa4:	10800017 	ldw	r2,0(r2)
    faa8:	1880111e 	bne	r3,r2,faf0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    faac:	00800074 	movhi	r2,1
    fab0:	10845604 	addi	r2,r2,4440
    fab4:	e0fffe17 	ldw	r3,-8(fp)
    fab8:	18c00324 	muli	r3,r3,12
    fabc:	10c5883a 	add	r2,r2,r3
    fac0:	10800204 	addi	r2,r2,8
    fac4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    fac8:	1000090e 	bge	r2,zero,faf0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    facc:	e0bffe17 	ldw	r2,-8(fp)
    fad0:	10c00324 	muli	r3,r2,12
    fad4:	00800074 	movhi	r2,1
    fad8:	10845604 	addi	r2,r2,4440
    fadc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    fae0:	e0bfff17 	ldw	r2,-4(fp)
    fae4:	18800226 	beq	r3,r2,faf0 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    fae8:	00bffcc4 	movi	r2,-13
    faec:	00000806 	br	fb10 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    faf0:	e0bffe17 	ldw	r2,-8(fp)
    faf4:	10800044 	addi	r2,r2,1
    faf8:	e0bffe15 	stw	r2,-8(fp)
    fafc:	d0a00f17 	ldw	r2,-32708(gp)
    fb00:	1007883a 	mov	r3,r2
    fb04:	e0bffe17 	ldw	r2,-8(fp)
    fb08:	18bfdf2e 	bgeu	r3,r2,fa88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000fa88>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    fb0c:	0005883a 	mov	r2,zero
}
    fb10:	e037883a 	mov	sp,fp
    fb14:	df000017 	ldw	fp,0(sp)
    fb18:	dec00104 	addi	sp,sp,4
    fb1c:	f800283a 	ret

0000fb20 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    fb20:	defff604 	addi	sp,sp,-40
    fb24:	dfc00915 	stw	ra,36(sp)
    fb28:	df000815 	stw	fp,32(sp)
    fb2c:	df000804 	addi	fp,sp,32
    fb30:	e13ffd15 	stw	r4,-12(fp)
    fb34:	e17ffe15 	stw	r5,-8(fp)
    fb38:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    fb3c:	00bfffc4 	movi	r2,-1
    fb40:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    fb44:	00bffb44 	movi	r2,-19
    fb48:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    fb4c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    fb50:	d1600d04 	addi	r5,gp,-32716
    fb54:	e13ffd17 	ldw	r4,-12(fp)
    fb58:	000f81c0 	call	f81c <alt_find_dev>
    fb5c:	e0bff815 	stw	r2,-32(fp)
    fb60:	e0bff817 	ldw	r2,-32(fp)
    fb64:	1000051e 	bne	r2,zero,fb7c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    fb68:	e13ffd17 	ldw	r4,-12(fp)
    fb6c:	000fe3c0 	call	fe3c <alt_find_file>
    fb70:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    fb74:	00800044 	movi	r2,1
    fb78:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    fb7c:	e0bff817 	ldw	r2,-32(fp)
    fb80:	10002926 	beq	r2,zero,fc28 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
    fb84:	e13ff817 	ldw	r4,-32(fp)
    fb88:	000ff440 	call	ff44 <alt_get_fd>
    fb8c:	e0bff915 	stw	r2,-28(fp)
    fb90:	e0bff917 	ldw	r2,-28(fp)
    fb94:	1000030e 	bge	r2,zero,fba4 <open+0x84>
    {
      status = index;
    fb98:	e0bff917 	ldw	r2,-28(fp)
    fb9c:	e0bffa15 	stw	r2,-24(fp)
    fba0:	00002306 	br	fc30 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
    fba4:	e0bff917 	ldw	r2,-28(fp)
    fba8:	10c00324 	muli	r3,r2,12
    fbac:	00800074 	movhi	r2,1
    fbb0:	10845604 	addi	r2,r2,4440
    fbb4:	1885883a 	add	r2,r3,r2
    fbb8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    fbbc:	e0fffe17 	ldw	r3,-8(fp)
    fbc0:	00900034 	movhi	r2,16384
    fbc4:	10bfffc4 	addi	r2,r2,-1
    fbc8:	1886703a 	and	r3,r3,r2
    fbcc:	e0bffc17 	ldw	r2,-16(fp)
    fbd0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    fbd4:	e0bffb17 	ldw	r2,-20(fp)
    fbd8:	1000051e 	bne	r2,zero,fbf0 <open+0xd0>
    fbdc:	e13ffc17 	ldw	r4,-16(fp)
    fbe0:	000fa5c0 	call	fa5c <alt_file_locked>
    fbe4:	e0bffa15 	stw	r2,-24(fp)
    fbe8:	e0bffa17 	ldw	r2,-24(fp)
    fbec:	10001016 	blt	r2,zero,fc30 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    fbf0:	e0bff817 	ldw	r2,-32(fp)
    fbf4:	10800317 	ldw	r2,12(r2)
    fbf8:	10000826 	beq	r2,zero,fc1c <open+0xfc>
    fbfc:	e0bff817 	ldw	r2,-32(fp)
    fc00:	10800317 	ldw	r2,12(r2)
    fc04:	e1ffff17 	ldw	r7,-4(fp)
    fc08:	e1bffe17 	ldw	r6,-8(fp)
    fc0c:	e17ffd17 	ldw	r5,-12(fp)
    fc10:	e13ffc17 	ldw	r4,-16(fp)
    fc14:	103ee83a 	callr	r2
    fc18:	00000106 	br	fc20 <open+0x100>
    fc1c:	0005883a 	mov	r2,zero
    fc20:	e0bffa15 	stw	r2,-24(fp)
    fc24:	00000206 	br	fc30 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
    fc28:	00bffb44 	movi	r2,-19
    fc2c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    fc30:	e0bffa17 	ldw	r2,-24(fp)
    fc34:	1000090e 	bge	r2,zero,fc5c <open+0x13c>
  {
    alt_release_fd (index);  
    fc38:	e13ff917 	ldw	r4,-28(fp)
    fc3c:	000d5600 	call	d560 <alt_release_fd>
    ALT_ERRNO = -status;
    fc40:	000fa200 	call	fa20 <alt_get_errno>
    fc44:	1007883a 	mov	r3,r2
    fc48:	e0bffa17 	ldw	r2,-24(fp)
    fc4c:	0085c83a 	sub	r2,zero,r2
    fc50:	18800015 	stw	r2,0(r3)
    return -1;
    fc54:	00bfffc4 	movi	r2,-1
    fc58:	00000106 	br	fc60 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
    fc5c:	e0bff917 	ldw	r2,-28(fp)
}
    fc60:	e037883a 	mov	sp,fp
    fc64:	dfc00117 	ldw	ra,4(sp)
    fc68:	df000017 	ldw	fp,0(sp)
    fc6c:	dec00204 	addi	sp,sp,8
    fc70:	f800283a 	ret

0000fc74 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    fc74:	defffa04 	addi	sp,sp,-24
    fc78:	df000515 	stw	fp,20(sp)
    fc7c:	df000504 	addi	fp,sp,20
    fc80:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    fc84:	0005303a 	rdctl	r2,status
    fc88:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fc8c:	e0fffc17 	ldw	r3,-16(fp)
    fc90:	00bfff84 	movi	r2,-2
    fc94:	1884703a 	and	r2,r3,r2
    fc98:	1001703a 	wrctl	status,r2
  
  return context;
    fc9c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    fca0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    fca4:	e0bfff17 	ldw	r2,-4(fp)
    fca8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    fcac:	e0bffd17 	ldw	r2,-12(fp)
    fcb0:	10800017 	ldw	r2,0(r2)
    fcb4:	e0fffd17 	ldw	r3,-12(fp)
    fcb8:	18c00117 	ldw	r3,4(r3)
    fcbc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    fcc0:	e0bffd17 	ldw	r2,-12(fp)
    fcc4:	10800117 	ldw	r2,4(r2)
    fcc8:	e0fffd17 	ldw	r3,-12(fp)
    fccc:	18c00017 	ldw	r3,0(r3)
    fcd0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    fcd4:	e0bffd17 	ldw	r2,-12(fp)
    fcd8:	e0fffd17 	ldw	r3,-12(fp)
    fcdc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    fce0:	e0bffd17 	ldw	r2,-12(fp)
    fce4:	e0fffd17 	ldw	r3,-12(fp)
    fce8:	10c00015 	stw	r3,0(r2)
    fcec:	e0bffb17 	ldw	r2,-20(fp)
    fcf0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    fcf4:	e0bffe17 	ldw	r2,-8(fp)
    fcf8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    fcfc:	0001883a 	nop
    fd00:	e037883a 	mov	sp,fp
    fd04:	df000017 	ldw	fp,0(sp)
    fd08:	dec00104 	addi	sp,sp,4
    fd0c:	f800283a 	ret

0000fd10 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    fd10:	defffb04 	addi	sp,sp,-20
    fd14:	dfc00415 	stw	ra,16(sp)
    fd18:	df000315 	stw	fp,12(sp)
    fd1c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    fd20:	d0a01317 	ldw	r2,-32692(gp)
    fd24:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    fd28:	d0a77117 	ldw	r2,-25148(gp)
    fd2c:	10800044 	addi	r2,r2,1
    fd30:	d0a77115 	stw	r2,-25148(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    fd34:	00002e06 	br	fdf0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    fd38:	e0bffd17 	ldw	r2,-12(fp)
    fd3c:	10800017 	ldw	r2,0(r2)
    fd40:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    fd44:	e0bffd17 	ldw	r2,-12(fp)
    fd48:	10800403 	ldbu	r2,16(r2)
    fd4c:	10803fcc 	andi	r2,r2,255
    fd50:	10000426 	beq	r2,zero,fd64 <alt_tick+0x54>
    fd54:	d0a77117 	ldw	r2,-25148(gp)
    fd58:	1000021e 	bne	r2,zero,fd64 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    fd5c:	e0bffd17 	ldw	r2,-12(fp)
    fd60:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    fd64:	e0bffd17 	ldw	r2,-12(fp)
    fd68:	10800217 	ldw	r2,8(r2)
    fd6c:	d0e77117 	ldw	r3,-25148(gp)
    fd70:	18801d36 	bltu	r3,r2,fde8 <alt_tick+0xd8>
    fd74:	e0bffd17 	ldw	r2,-12(fp)
    fd78:	10800403 	ldbu	r2,16(r2)
    fd7c:	10803fcc 	andi	r2,r2,255
    fd80:	1000191e 	bne	r2,zero,fde8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    fd84:	e0bffd17 	ldw	r2,-12(fp)
    fd88:	10800317 	ldw	r2,12(r2)
    fd8c:	e0fffd17 	ldw	r3,-12(fp)
    fd90:	18c00517 	ldw	r3,20(r3)
    fd94:	1809883a 	mov	r4,r3
    fd98:	103ee83a 	callr	r2
    fd9c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    fda0:	e0bfff17 	ldw	r2,-4(fp)
    fda4:	1000031e 	bne	r2,zero,fdb4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    fda8:	e13ffd17 	ldw	r4,-12(fp)
    fdac:	000fc740 	call	fc74 <alt_alarm_stop>
    fdb0:	00000d06 	br	fde8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    fdb4:	e0bffd17 	ldw	r2,-12(fp)
    fdb8:	10c00217 	ldw	r3,8(r2)
    fdbc:	e0bfff17 	ldw	r2,-4(fp)
    fdc0:	1887883a 	add	r3,r3,r2
    fdc4:	e0bffd17 	ldw	r2,-12(fp)
    fdc8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    fdcc:	e0bffd17 	ldw	r2,-12(fp)
    fdd0:	10c00217 	ldw	r3,8(r2)
    fdd4:	d0a77117 	ldw	r2,-25148(gp)
    fdd8:	1880032e 	bgeu	r3,r2,fde8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    fddc:	e0bffd17 	ldw	r2,-12(fp)
    fde0:	00c00044 	movi	r3,1
    fde4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    fde8:	e0bffe17 	ldw	r2,-8(fp)
    fdec:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    fdf0:	e0fffd17 	ldw	r3,-12(fp)
    fdf4:	d0a01304 	addi	r2,gp,-32692
    fdf8:	18bfcf1e 	bne	r3,r2,fd38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000fd38>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    fdfc:	0001883a 	nop
}
    fe00:	0001883a 	nop
    fe04:	e037883a 	mov	sp,fp
    fe08:	dfc00117 	ldw	ra,4(sp)
    fe0c:	df000017 	ldw	fp,0(sp)
    fe10:	dec00204 	addi	sp,sp,8
    fe14:	f800283a 	ret

0000fe18 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    fe18:	deffff04 	addi	sp,sp,-4
    fe1c:	df000015 	stw	fp,0(sp)
    fe20:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    fe24:	000170fa 	wrctl	ienable,zero
}
    fe28:	0001883a 	nop
    fe2c:	e037883a 	mov	sp,fp
    fe30:	df000017 	ldw	fp,0(sp)
    fe34:	dec00104 	addi	sp,sp,4
    fe38:	f800283a 	ret

0000fe3c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    fe3c:	defffb04 	addi	sp,sp,-20
    fe40:	dfc00415 	stw	ra,16(sp)
    fe44:	df000315 	stw	fp,12(sp)
    fe48:	df000304 	addi	fp,sp,12
    fe4c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    fe50:	d0a00b17 	ldw	r2,-32724(gp)
    fe54:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    fe58:	00003106 	br	ff20 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    fe5c:	e0bffd17 	ldw	r2,-12(fp)
    fe60:	10800217 	ldw	r2,8(r2)
    fe64:	1009883a 	mov	r4,r2
    fe68:	0006e880 	call	6e88 <strlen>
    fe6c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    fe70:	e0bffd17 	ldw	r2,-12(fp)
    fe74:	10c00217 	ldw	r3,8(r2)
    fe78:	e0bffe17 	ldw	r2,-8(fp)
    fe7c:	10bfffc4 	addi	r2,r2,-1
    fe80:	1885883a 	add	r2,r3,r2
    fe84:	10800003 	ldbu	r2,0(r2)
    fe88:	10803fcc 	andi	r2,r2,255
    fe8c:	1080201c 	xori	r2,r2,128
    fe90:	10bfe004 	addi	r2,r2,-128
    fe94:	10800bd8 	cmpnei	r2,r2,47
    fe98:	1000031e 	bne	r2,zero,fea8 <alt_find_file+0x6c>
    {
      len -= 1;
    fe9c:	e0bffe17 	ldw	r2,-8(fp)
    fea0:	10bfffc4 	addi	r2,r2,-1
    fea4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    fea8:	e0bffe17 	ldw	r2,-8(fp)
    feac:	e0ffff17 	ldw	r3,-4(fp)
    feb0:	1885883a 	add	r2,r3,r2
    feb4:	10800003 	ldbu	r2,0(r2)
    feb8:	10803fcc 	andi	r2,r2,255
    febc:	1080201c 	xori	r2,r2,128
    fec0:	10bfe004 	addi	r2,r2,-128
    fec4:	10800be0 	cmpeqi	r2,r2,47
    fec8:	1000081e 	bne	r2,zero,feec <alt_find_file+0xb0>
    fecc:	e0bffe17 	ldw	r2,-8(fp)
    fed0:	e0ffff17 	ldw	r3,-4(fp)
    fed4:	1885883a 	add	r2,r3,r2
    fed8:	10800003 	ldbu	r2,0(r2)
    fedc:	10803fcc 	andi	r2,r2,255
    fee0:	1080201c 	xori	r2,r2,128
    fee4:	10bfe004 	addi	r2,r2,-128
    fee8:	10000a1e 	bne	r2,zero,ff14 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    feec:	e0bffd17 	ldw	r2,-12(fp)
    fef0:	10800217 	ldw	r2,8(r2)
    fef4:	e0fffe17 	ldw	r3,-8(fp)
    fef8:	180d883a 	mov	r6,r3
    fefc:	e17fff17 	ldw	r5,-4(fp)
    ff00:	1009883a 	mov	r4,r2
    ff04:	00101600 	call	10160 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    ff08:	1000021e 	bne	r2,zero,ff14 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    ff0c:	e0bffd17 	ldw	r2,-12(fp)
    ff10:	00000706 	br	ff30 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    ff14:	e0bffd17 	ldw	r2,-12(fp)
    ff18:	10800017 	ldw	r2,0(r2)
    ff1c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    ff20:	e0fffd17 	ldw	r3,-12(fp)
    ff24:	d0a00b04 	addi	r2,gp,-32724
    ff28:	18bfcc1e 	bne	r3,r2,fe5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000fe5c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    ff2c:	0005883a 	mov	r2,zero
}
    ff30:	e037883a 	mov	sp,fp
    ff34:	dfc00117 	ldw	ra,4(sp)
    ff38:	df000017 	ldw	fp,0(sp)
    ff3c:	dec00204 	addi	sp,sp,8
    ff40:	f800283a 	ret

0000ff44 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    ff44:	defffc04 	addi	sp,sp,-16
    ff48:	df000315 	stw	fp,12(sp)
    ff4c:	df000304 	addi	fp,sp,12
    ff50:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
    ff54:	00bffa04 	movi	r2,-24
    ff58:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ff5c:	e03ffd15 	stw	zero,-12(fp)
    ff60:	00001906 	br	ffc8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
    ff64:	00800074 	movhi	r2,1
    ff68:	10845604 	addi	r2,r2,4440
    ff6c:	e0fffd17 	ldw	r3,-12(fp)
    ff70:	18c00324 	muli	r3,r3,12
    ff74:	10c5883a 	add	r2,r2,r3
    ff78:	10800017 	ldw	r2,0(r2)
    ff7c:	10000f1e 	bne	r2,zero,ffbc <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
    ff80:	00800074 	movhi	r2,1
    ff84:	10845604 	addi	r2,r2,4440
    ff88:	e0fffd17 	ldw	r3,-12(fp)
    ff8c:	18c00324 	muli	r3,r3,12
    ff90:	10c5883a 	add	r2,r2,r3
    ff94:	e0ffff17 	ldw	r3,-4(fp)
    ff98:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    ff9c:	d0e00f17 	ldw	r3,-32708(gp)
    ffa0:	e0bffd17 	ldw	r2,-12(fp)
    ffa4:	1880020e 	bge	r3,r2,ffb0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
    ffa8:	e0bffd17 	ldw	r2,-12(fp)
    ffac:	d0a00f15 	stw	r2,-32708(gp)
      }
      rc = i;
    ffb0:	e0bffd17 	ldw	r2,-12(fp)
    ffb4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    ffb8:	00000606 	br	ffd4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ffbc:	e0bffd17 	ldw	r2,-12(fp)
    ffc0:	10800044 	addi	r2,r2,1
    ffc4:	e0bffd15 	stw	r2,-12(fp)
    ffc8:	e0bffd17 	ldw	r2,-12(fp)
    ffcc:	10800810 	cmplti	r2,r2,32
    ffd0:	103fe41e 	bne	r2,zero,ff64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ff64>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    ffd4:	e0bffe17 	ldw	r2,-8(fp)
}
    ffd8:	e037883a 	mov	sp,fp
    ffdc:	df000017 	ldw	fp,0(sp)
    ffe0:	dec00104 	addi	sp,sp,4
    ffe4:	f800283a 	ret

0000ffe8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
    ffe8:	defffb04 	addi	sp,sp,-20
    ffec:	df000415 	stw	fp,16(sp)
    fff0:	df000404 	addi	fp,sp,16
    fff4:	e13ffe15 	stw	r4,-8(fp)
    fff8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
    fffc:	e0bfff17 	ldw	r2,-4(fp)
   10000:	10840070 	cmpltui	r2,r2,4097
   10004:	1000021e 	bne	r2,zero,10010 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   10008:	00840004 	movi	r2,4096
   1000c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   10010:	e0fffe17 	ldw	r3,-8(fp)
   10014:	e0bfff17 	ldw	r2,-4(fp)
   10018:	1885883a 	add	r2,r3,r2
   1001c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   10020:	e0bffe17 	ldw	r2,-8(fp)
   10024:	e0bffc15 	stw	r2,-16(fp)
   10028:	00000506 	br	10040 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   1002c:	e0bffc17 	ldw	r2,-16(fp)
   10030:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   10034:	e0bffc17 	ldw	r2,-16(fp)
   10038:	10800804 	addi	r2,r2,32
   1003c:	e0bffc15 	stw	r2,-16(fp)
   10040:	e0fffc17 	ldw	r3,-16(fp)
   10044:	e0bffd17 	ldw	r2,-12(fp)
   10048:	18bff836 	bltu	r3,r2,1002c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001002c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   1004c:	e0bffe17 	ldw	r2,-8(fp)
   10050:	108007cc 	andi	r2,r2,31
   10054:	10000226 	beq	r2,zero,10060 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   10058:	e0bffc17 	ldw	r2,-16(fp)
   1005c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   10060:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   10064:	0001883a 	nop
   10068:	e037883a 	mov	sp,fp
   1006c:	df000017 	ldw	fp,0(sp)
   10070:	dec00104 	addi	sp,sp,4
   10074:	f800283a 	ret

00010078 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   10078:	defffe04 	addi	sp,sp,-8
   1007c:	df000115 	stw	fp,4(sp)
   10080:	df000104 	addi	fp,sp,4
   10084:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   10088:	e0bfff17 	ldw	r2,-4(fp)
   1008c:	10bffe84 	addi	r2,r2,-6
   10090:	10c00428 	cmpgeui	r3,r2,16
   10094:	18001a1e 	bne	r3,zero,10100 <alt_exception_cause_generated_bad_addr+0x88>
   10098:	100690ba 	slli	r3,r2,2
   1009c:	00800074 	movhi	r2,1
   100a0:	10802c04 	addi	r2,r2,176
   100a4:	1885883a 	add	r2,r3,r2
   100a8:	10800017 	ldw	r2,0(r2)
   100ac:	1000683a 	jmp	r2
   100b0:	000100f0 	cmpltui	zero,zero,1027
   100b4:	000100f0 	cmpltui	zero,zero,1027
   100b8:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100bc:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100c0:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100c4:	000100f0 	cmpltui	zero,zero,1027
   100c8:	000100f8 	rdprs	zero,zero,1027
   100cc:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100d0:	000100f0 	cmpltui	zero,zero,1027
   100d4:	000100f0 	cmpltui	zero,zero,1027
   100d8:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100dc:	000100f0 	cmpltui	zero,zero,1027
   100e0:	000100f8 	rdprs	zero,zero,1027
   100e4:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100e8:	00010100 	call	1010 <___vfprintf_internal_r+0xb0c>
   100ec:	000100f0 	cmpltui	zero,zero,1027
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   100f0:	00800044 	movi	r2,1
   100f4:	00000306 	br	10104 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   100f8:	0005883a 	mov	r2,zero
   100fc:	00000106 	br	10104 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   10100:	0005883a 	mov	r2,zero
  }
}
   10104:	e037883a 	mov	sp,fp
   10108:	df000017 	ldw	fp,0(sp)
   1010c:	dec00104 	addi	sp,sp,4
   10110:	f800283a 	ret

00010114 <atexit>:
   10114:	200b883a 	mov	r5,r4
   10118:	000f883a 	mov	r7,zero
   1011c:	000d883a 	mov	r6,zero
   10120:	0009883a 	mov	r4,zero
   10124:	00101dc1 	jmpi	101dc <__register_exitproc>

00010128 <exit>:
   10128:	defffe04 	addi	sp,sp,-8
   1012c:	000b883a 	mov	r5,zero
   10130:	dc000015 	stw	r16,0(sp)
   10134:	dfc00115 	stw	ra,4(sp)
   10138:	2021883a 	mov	r16,r4
   1013c:	00102f40 	call	102f4 <__call_exitprocs>
   10140:	00800074 	movhi	r2,1
   10144:	10896004 	addi	r2,r2,9600
   10148:	11000017 	ldw	r4,0(r2)
   1014c:	20800f17 	ldw	r2,60(r4)
   10150:	10000126 	beq	r2,zero,10158 <exit+0x30>
   10154:	103ee83a 	callr	r2
   10158:	8009883a 	mov	r4,r16
   1015c:	00104740 	call	10474 <_exit>

00010160 <memcmp>:
   10160:	01c000c4 	movi	r7,3
   10164:	3980192e 	bgeu	r7,r6,101cc <memcmp+0x6c>
   10168:	2144b03a 	or	r2,r4,r5
   1016c:	11c4703a 	and	r2,r2,r7
   10170:	10000f26 	beq	r2,zero,101b0 <memcmp+0x50>
   10174:	20800003 	ldbu	r2,0(r4)
   10178:	28c00003 	ldbu	r3,0(r5)
   1017c:	10c0151e 	bne	r2,r3,101d4 <memcmp+0x74>
   10180:	31bfff84 	addi	r6,r6,-2
   10184:	01ffffc4 	movi	r7,-1
   10188:	00000406 	br	1019c <memcmp+0x3c>
   1018c:	20800003 	ldbu	r2,0(r4)
   10190:	28c00003 	ldbu	r3,0(r5)
   10194:	31bfffc4 	addi	r6,r6,-1
   10198:	10c00e1e 	bne	r2,r3,101d4 <memcmp+0x74>
   1019c:	21000044 	addi	r4,r4,1
   101a0:	29400044 	addi	r5,r5,1
   101a4:	31fff91e 	bne	r6,r7,1018c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001018c>
   101a8:	0005883a 	mov	r2,zero
   101ac:	f800283a 	ret
   101b0:	20c00017 	ldw	r3,0(r4)
   101b4:	28800017 	ldw	r2,0(r5)
   101b8:	18bfee1e 	bne	r3,r2,10174 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010174>
   101bc:	31bfff04 	addi	r6,r6,-4
   101c0:	21000104 	addi	r4,r4,4
   101c4:	29400104 	addi	r5,r5,4
   101c8:	39bff936 	bltu	r7,r6,101b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00101b0>
   101cc:	303fe91e 	bne	r6,zero,10174 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010174>
   101d0:	003ff506 	br	101a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00101a8>
   101d4:	10c5c83a 	sub	r2,r2,r3
   101d8:	f800283a 	ret

000101dc <__register_exitproc>:
   101dc:	defffa04 	addi	sp,sp,-24
   101e0:	dc000315 	stw	r16,12(sp)
   101e4:	04000074 	movhi	r16,1
   101e8:	84096004 	addi	r16,r16,9600
   101ec:	80c00017 	ldw	r3,0(r16)
   101f0:	dc400415 	stw	r17,16(sp)
   101f4:	dfc00515 	stw	ra,20(sp)
   101f8:	18805217 	ldw	r2,328(r3)
   101fc:	2023883a 	mov	r17,r4
   10200:	10003726 	beq	r2,zero,102e0 <__register_exitproc+0x104>
   10204:	10c00117 	ldw	r3,4(r2)
   10208:	010007c4 	movi	r4,31
   1020c:	20c00e16 	blt	r4,r3,10248 <__register_exitproc+0x6c>
   10210:	1a000044 	addi	r8,r3,1
   10214:	8800221e 	bne	r17,zero,102a0 <__register_exitproc+0xc4>
   10218:	18c00084 	addi	r3,r3,2
   1021c:	18c7883a 	add	r3,r3,r3
   10220:	18c7883a 	add	r3,r3,r3
   10224:	12000115 	stw	r8,4(r2)
   10228:	10c7883a 	add	r3,r2,r3
   1022c:	19400015 	stw	r5,0(r3)
   10230:	0005883a 	mov	r2,zero
   10234:	dfc00517 	ldw	ra,20(sp)
   10238:	dc400417 	ldw	r17,16(sp)
   1023c:	dc000317 	ldw	r16,12(sp)
   10240:	dec00604 	addi	sp,sp,24
   10244:	f800283a 	ret
   10248:	00800034 	movhi	r2,0
   1024c:	10800004 	addi	r2,r2,0
   10250:	10002626 	beq	r2,zero,102ec <__register_exitproc+0x110>
   10254:	01006404 	movi	r4,400
   10258:	d9400015 	stw	r5,0(sp)
   1025c:	d9800115 	stw	r6,4(sp)
   10260:	d9c00215 	stw	r7,8(sp)
   10264:	00000000 	call	0 <__alt_mem_SDRAM>
   10268:	d9400017 	ldw	r5,0(sp)
   1026c:	d9800117 	ldw	r6,4(sp)
   10270:	d9c00217 	ldw	r7,8(sp)
   10274:	10001d26 	beq	r2,zero,102ec <__register_exitproc+0x110>
   10278:	81000017 	ldw	r4,0(r16)
   1027c:	10000115 	stw	zero,4(r2)
   10280:	02000044 	movi	r8,1
   10284:	22405217 	ldw	r9,328(r4)
   10288:	0007883a 	mov	r3,zero
   1028c:	12400015 	stw	r9,0(r2)
   10290:	20805215 	stw	r2,328(r4)
   10294:	10006215 	stw	zero,392(r2)
   10298:	10006315 	stw	zero,396(r2)
   1029c:	883fde26 	beq	r17,zero,10218 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010218>
   102a0:	18c9883a 	add	r4,r3,r3
   102a4:	2109883a 	add	r4,r4,r4
   102a8:	1109883a 	add	r4,r2,r4
   102ac:	21802215 	stw	r6,136(r4)
   102b0:	01800044 	movi	r6,1
   102b4:	12406217 	ldw	r9,392(r2)
   102b8:	30cc983a 	sll	r6,r6,r3
   102bc:	4992b03a 	or	r9,r9,r6
   102c0:	12406215 	stw	r9,392(r2)
   102c4:	21c04215 	stw	r7,264(r4)
   102c8:	01000084 	movi	r4,2
   102cc:	893fd21e 	bne	r17,r4,10218 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010218>
   102d0:	11006317 	ldw	r4,396(r2)
   102d4:	218cb03a 	or	r6,r4,r6
   102d8:	11806315 	stw	r6,396(r2)
   102dc:	003fce06 	br	10218 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010218>
   102e0:	18805304 	addi	r2,r3,332
   102e4:	18805215 	stw	r2,328(r3)
   102e8:	003fc606 	br	10204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010204>
   102ec:	00bfffc4 	movi	r2,-1
   102f0:	003fd006 	br	10234 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010234>

000102f4 <__call_exitprocs>:
   102f4:	defff504 	addi	sp,sp,-44
   102f8:	df000915 	stw	fp,36(sp)
   102fc:	dd400615 	stw	r21,24(sp)
   10300:	dc800315 	stw	r18,12(sp)
   10304:	dfc00a15 	stw	ra,40(sp)
   10308:	ddc00815 	stw	r23,32(sp)
   1030c:	dd800715 	stw	r22,28(sp)
   10310:	dd000515 	stw	r20,20(sp)
   10314:	dcc00415 	stw	r19,16(sp)
   10318:	dc400215 	stw	r17,8(sp)
   1031c:	dc000115 	stw	r16,4(sp)
   10320:	d9000015 	stw	r4,0(sp)
   10324:	2839883a 	mov	fp,r5
   10328:	04800044 	movi	r18,1
   1032c:	057fffc4 	movi	r21,-1
   10330:	00800074 	movhi	r2,1
   10334:	10896004 	addi	r2,r2,9600
   10338:	12000017 	ldw	r8,0(r2)
   1033c:	45005217 	ldw	r20,328(r8)
   10340:	44c05204 	addi	r19,r8,328
   10344:	a0001c26 	beq	r20,zero,103b8 <__call_exitprocs+0xc4>
   10348:	a0800117 	ldw	r2,4(r20)
   1034c:	15ffffc4 	addi	r23,r2,-1
   10350:	b8000d16 	blt	r23,zero,10388 <__call_exitprocs+0x94>
   10354:	14000044 	addi	r16,r2,1
   10358:	8421883a 	add	r16,r16,r16
   1035c:	8421883a 	add	r16,r16,r16
   10360:	84402004 	addi	r17,r16,128
   10364:	a463883a 	add	r17,r20,r17
   10368:	a421883a 	add	r16,r20,r16
   1036c:	e0001e26 	beq	fp,zero,103e8 <__call_exitprocs+0xf4>
   10370:	80804017 	ldw	r2,256(r16)
   10374:	e0801c26 	beq	fp,r2,103e8 <__call_exitprocs+0xf4>
   10378:	bdffffc4 	addi	r23,r23,-1
   1037c:	843fff04 	addi	r16,r16,-4
   10380:	8c7fff04 	addi	r17,r17,-4
   10384:	bd7ff91e 	bne	r23,r21,1036c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001036c>
   10388:	00800034 	movhi	r2,0
   1038c:	10800004 	addi	r2,r2,0
   10390:	10000926 	beq	r2,zero,103b8 <__call_exitprocs+0xc4>
   10394:	a0800117 	ldw	r2,4(r20)
   10398:	1000301e 	bne	r2,zero,1045c <__call_exitprocs+0x168>
   1039c:	a0800017 	ldw	r2,0(r20)
   103a0:	10003226 	beq	r2,zero,1046c <__call_exitprocs+0x178>
   103a4:	a009883a 	mov	r4,r20
   103a8:	98800015 	stw	r2,0(r19)
   103ac:	00000000 	call	0 <__alt_mem_SDRAM>
   103b0:	9d000017 	ldw	r20,0(r19)
   103b4:	a03fe41e 	bne	r20,zero,10348 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010348>
   103b8:	dfc00a17 	ldw	ra,40(sp)
   103bc:	df000917 	ldw	fp,36(sp)
   103c0:	ddc00817 	ldw	r23,32(sp)
   103c4:	dd800717 	ldw	r22,28(sp)
   103c8:	dd400617 	ldw	r21,24(sp)
   103cc:	dd000517 	ldw	r20,20(sp)
   103d0:	dcc00417 	ldw	r19,16(sp)
   103d4:	dc800317 	ldw	r18,12(sp)
   103d8:	dc400217 	ldw	r17,8(sp)
   103dc:	dc000117 	ldw	r16,4(sp)
   103e0:	dec00b04 	addi	sp,sp,44
   103e4:	f800283a 	ret
   103e8:	a0800117 	ldw	r2,4(r20)
   103ec:	80c00017 	ldw	r3,0(r16)
   103f0:	10bfffc4 	addi	r2,r2,-1
   103f4:	15c01426 	beq	r2,r23,10448 <__call_exitprocs+0x154>
   103f8:	80000015 	stw	zero,0(r16)
   103fc:	183fde26 	beq	r3,zero,10378 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010378>
   10400:	95c8983a 	sll	r4,r18,r23
   10404:	a0806217 	ldw	r2,392(r20)
   10408:	a5800117 	ldw	r22,4(r20)
   1040c:	2084703a 	and	r2,r4,r2
   10410:	10000b26 	beq	r2,zero,10440 <__call_exitprocs+0x14c>
   10414:	a0806317 	ldw	r2,396(r20)
   10418:	2088703a 	and	r4,r4,r2
   1041c:	20000c1e 	bne	r4,zero,10450 <__call_exitprocs+0x15c>
   10420:	89400017 	ldw	r5,0(r17)
   10424:	d9000017 	ldw	r4,0(sp)
   10428:	183ee83a 	callr	r3
   1042c:	a0800117 	ldw	r2,4(r20)
   10430:	15bfbf1e 	bne	r2,r22,10330 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010330>
   10434:	98800017 	ldw	r2,0(r19)
   10438:	153fcf26 	beq	r2,r20,10378 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010378>
   1043c:	003fbc06 	br	10330 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010330>
   10440:	183ee83a 	callr	r3
   10444:	003ff906 	br	1042c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001042c>
   10448:	a5c00115 	stw	r23,4(r20)
   1044c:	003feb06 	br	103fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00103fc>
   10450:	89000017 	ldw	r4,0(r17)
   10454:	183ee83a 	callr	r3
   10458:	003ff406 	br	1042c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001042c>
   1045c:	a0800017 	ldw	r2,0(r20)
   10460:	a027883a 	mov	r19,r20
   10464:	1029883a 	mov	r20,r2
   10468:	003fb606 	br	10344 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010344>
   1046c:	0005883a 	mov	r2,zero
   10470:	003ffb06 	br	10460 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010460>

00010474 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   10474:	defffd04 	addi	sp,sp,-12
   10478:	df000215 	stw	fp,8(sp)
   1047c:	df000204 	addi	fp,sp,8
   10480:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   10484:	0001883a 	nop
   10488:	e0bfff17 	ldw	r2,-4(fp)
   1048c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   10490:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   10494:	10000226 	beq	r2,zero,104a0 <_exit+0x2c>
    ALT_SIM_FAIL();
   10498:	002af070 	cmpltui	zero,zero,43969
   1049c:	00000106 	br	104a4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   104a0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   104a4:	003fff06 	br	104a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00104a4>
