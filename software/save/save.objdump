
save.elf:     file format elf32-littlenios2
save.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000248

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00010ddc memsz 0x00010ddc flags r-x
    LOAD off    0x00011dfc vaddr 0x00010dfc paddr 0x00012b1c align 2**12
         filesz 0x00001d20 memsz 0x00001d20 flags rw-
    LOAD off    0x0001483c vaddr 0x0001483c paddr 0x0001483c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010794  00000248  00000248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000420  000109dc  000109dc  000119dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001d20  00010dfc  00012b1c  00011dfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0001483c  0001483c  0001483c  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  0001499c  0001499c  00013b1c  2**0
                  CONTENTS
  7 .Onchip_SRAM  00000000  08000000  08000000  00013b1c  2**0
                  CONTENTS
  8 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM 00000000  09000000  09000000  00013b1c  2**0
                  CONTENTS
  9 .ARM_A9_HPS_axi_sdram 00000000  40000000  40000000  00013b1c  2**0
                  CONTENTS
 10 .comment      00000023  00000000  00000000  00013b1c  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 00000ed8  00000000  00000000  00013b40  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   00024737  00000000  00000000  00014a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000922a  00000000  00000000  0003914f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000ba3a  00000000  00000000  00042379  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000242c  00000000  00000000  0004ddb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00003f19  00000000  00000000  000501e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00017868  00000000  00000000  000540f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_alt_sim_info 00000020  00000000  00000000  0006b964  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 000018c0  00000000  00000000  0006b988  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .thread_model 00000003  00000000  00000000  000709fa  2**0
                  CONTENTS, READONLY
 21 .cpu          00000005  00000000  00000000  000709fd  2**0
                  CONTENTS, READONLY
 22 .qsys         00000001  00000000  00000000  00070a02  2**0
                  CONTENTS, READONLY
 23 .simulation_enabled 00000001  00000000  00000000  00070a03  2**0
                  CONTENTS, READONLY
 24 .sysid_hash   00000004  00000000  00000000  00070a04  2**0
                  CONTENTS, READONLY
 25 .sysid_base   00000004  00000000  00000000  00070a08  2**0
                  CONTENTS, READONLY
 26 .sysid_time   00000004  00000000  00000000  00070a0c  2**0
                  CONTENTS, READONLY
 27 .stderr_dev   00000009  00000000  00000000  00070a10  2**0
                  CONTENTS, READONLY
 28 .stdin_dev    00000009  00000000  00000000  00070a19  2**0
                  CONTENTS, READONLY
 29 .stdout_dev   00000009  00000000  00000000  00070a22  2**0
                  CONTENTS, READONLY
 30 .sopc_system_name 0000000f  00000000  00000000  00070a2b  2**0
                  CONTENTS, READONLY
 31 .quartus_project_dir 0000005b  00000000  00000000  00070a3a  2**0
                  CONTENTS, READONLY
 32 .jdi          0000ebbf  00000000  00000000  00070a95  2**0
                  CONTENTS, READONLY
 33 .sopcinfo     00461a55  00000000  00000000  0007f654  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000248 l    d  .text	00000000 .text
000109dc l    d  .rodata	00000000 .rodata
00010dfc l    d  .rwdata	00000000 .rwdata
0001483c l    d  .bss	00000000 .bss
0001499c l    d  .SDRAM	00000000 .SDRAM
08000000 l    d  .Onchip_SRAM	00000000 .Onchip_SRAM
09000000 l    d  .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM	00000000 .VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
40000000 l    d  .ARM_A9_HPS_axi_sdram	00000000 .ARM_A9_HPS_axi_sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../save_bsp//obj/HAL/src/crt0.o
00000280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00010a62 l     O .rodata	00000010 zeroes.4404
00002ce4 l     F .text	000000bc __sbprintf
00010a72 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002ef4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004a24 l     F .text	00000008 __fp_unlock
00004a38 l     F .text	0000019c __sinit.part.1
00004bd4 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00010dfc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00011240 l     O .rwdata	00000020 lc_ctype_charset
00011220 l     O .rwdata	00000020 lc_message_charset
00011260 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00010aa4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007fd0 l     F .text	000000fc __sprint_r.part.0
00010bd8 l     O .rodata	00000010 blanks.4348
00010bc8 l     O .rodata	00000010 zeroes.4349
0000955c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d218 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d324 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d350 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d43c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d51c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d608 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d7dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00012b0c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000da28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000db5c l     F .text	00000034 alt_dev_reg
00011848 l     O .rwdata	00001060 JTAG_UART
000128a8 l     O .rwdata	0000002c ADC
000128d4 l     O .rwdata	00000030 AV_Config
00012904 l     O .rwdata	00000030 Audio_Subsystem_Audio
00012934 l     O .rwdata	0000002c IrDA
00012960 l     O .rwdata	00000038 PS2_Port
00012998 l     O .rwdata	00000038 PS2_Port_Dual
000129d0 l     O .rwdata	0000005c VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA
00012a2c l     O .rwdata	0000005c Video_In_Subsystem_Video_In_DMA
00012a88 l     O .rwdata	00000054 VGA_Subsystem_VGA_Pixel_DMA
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e570 l     F .text	00000210 altera_avalon_jtag_uart_irq
0000e780 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000edb8 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_irda.c
00000000 l    df *ABS*	00000000 altera_up_avalon_ps2.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000fa30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000fc94 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000ff54 l     F .text	0000003c alt_get_errno
0000ff90 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00014870 g     O .bss	00000004 alt_instruction_exception_handler
00007614 g     F .text	00000074 _mprec_log10
00007700 g     F .text	0000008c __any_on
00009af8 g     F .text	00000054 _isatty_r
00010ab0 g     O .rodata	00000028 __mprec_tinytens
0000d718 g     F .text	0000007c alt_main
00000964 g     F .text	000000c0 _puts_r
0001489c g     O .bss	00000100 alt_irq
0000f480 g     F .text	00000060 alt_up_ps2_disable_read_interrupt
00009b4c g     F .text	00000060 _lseek_r
00012b1c g       *ABS*	00000000 __flash_rwdata_start
0000bd44 g     F .text	00000088 .hidden __eqdf2
0001499c g       *ABS*	00000000 __alt_heap_start
00000928 g     F .text	0000003c printf
00009d64 g     F .text	0000009c _wcrtomb_r
00007e90 g     F .text	0000005c __sseek
00004d74 g     F .text	00000010 __sinit
00009c0c g     F .text	00000140 __swbuf_r
0000f298 g     F .text	00000034 read_CE_bit
0000583c g     F .text	0000007c _setlocale_r
00004bdc g     F .text	00000068 __sfmoreglue
0000d7b8 g     F .text	00000024 __malloc_unlock
0000f620 g     F .text	0000009c alt_up_ps2_read_data_byte_timeout
0000650c g     F .text	0000015c memmove
00004d5c g     F .text	00000018 _cleanup
00006790 g     F .text	000000a8 _Balloc
0000bdcc g     F .text	000000dc .hidden __gtdf2
0001034c g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009a9c g     F .text	0000005c _fstat_r
00014854 g     O .bss	00000004 errno
00007e0c g     F .text	00000008 __seofread
0001485c g     O .bss	00000004 alt_argv
0001aadc g       *ABS*	00000000 _gp
000116c8 g     O .rwdata	00000180 alt_fd_list
0000fbd0 g     F .text	00000090 alt_find_dev
000063c4 g     F .text	00000148 memcpy
00004a2c g     F .text	0000000c _cleanup_r
0000d030 g     F .text	000000dc .hidden __floatsidf
0000fd58 g     F .text	0000007c alt_io_redirect
0000bea8 g     F .text	000000f4 .hidden __ltdf2
000109dc g       *ABS*	00000000 __DTOR_END__
0000f168 g     F .text	00000090 alt_up_irda_write_fd
00000a24 g     F .text	00000014 puts
000105ac g     F .text	0000009c alt_exception_cause_generated_bad_addr
00007cf0 g     F .text	00000074 __fpclassifyd
00007570 g     F .text	000000a4 __ratio
00009540 g     F .text	0000001c __vfiprintf_internal
0000ef64 g     F .text	00000040 alt_up_irda_get_used_space_in_read_FIFO
0000e978 g     F .text	0000021c altera_avalon_jtag_uart_read
000008f8 g     F .text	00000030 _printf_r
0000aaf4 g     F .text	00000064 .hidden __udivsi3
0000d478 g     F .text	000000a4 isatty
00010b00 g     O .rodata	000000c8 __mprec_tens
000058b8 g     F .text	0000000c __locale_charset
0000ef04 g     F .text	00000060 alt_up_irda_disable_read_interrupt
0001051c g     F .text	00000090 alt_icache_flush
00014850 g     O .bss	00000004 __malloc_top_pad
00012ae4 g     O .rwdata	00000004 __mb_cur_max
000058e8 g     F .text	0000000c _localeconv_r
00006b9c g     F .text	0000003c __i2b
000051f8 g     F .text	000004bc __sfvwrite_r
00007d64 g     F .text	00000054 _sbrk_r
00009bac g     F .text	00000060 _read_r
00012b04 g     O .rwdata	00000004 alt_max_fd
00009790 g     F .text	000000f0 _fclose_r
0000f2cc g     F .text	00000030 read_num_bytes_available
000049f4 g     F .text	00000030 fflush
0001484c g     O .bss	00000004 __malloc_max_sbrked_mem
0000fdd4 g     F .text	00000180 alt_irq_register
0000f234 g     F .text	00000034 read_RI_bit
0000abb0 g     F .text	000008ac .hidden __adddf3
00007318 g     F .text	0000010c __b2d
0000a4c4 g     F .text	00000538 .hidden __umoddi3
0000d644 g     F .text	000000d4 lseek
00012adc g     O .rwdata	00000004 _global_impure_ptr
0000778c g     F .text	00000564 _realloc_r
0001499c g       *ABS*	00000000 __bss_end
00010244 g     F .text	00000108 alt_tick
00009f4c g     F .text	00000578 .hidden __udivdi3
000099f8 g     F .text	00000024 _fputwc_r
00010ad8 g     O .rodata	00000028 __mprec_bigtens
00006980 g     F .text	00000104 __s2b
0000d10c g     F .text	000000a8 .hidden __floatunsidf
00007058 g     F .text	00000060 __mcmp
0000f330 g     F .text	0000002c read_data_byte
00004d94 g     F .text	00000018 __fp_lock_all
00000284 g     F .text	000000b4 check_KEYs
000101a8 g     F .text	0000009c alt_alarm_stop
0000f268 g     F .text	00000030 read_RE_bit
00014864 g     O .bss	00000004 alt_irq_active
0000efa4 g     F .text	0000003c alt_up_irda_get_available_space_in_write_FIFO
000000fc g     F .exceptions	000000d8 alt_irq_handler
000116a0 g     O .rwdata	00000028 alt_dev_null
0000f4e0 g     F .text	00000074 alt_up_ps2_write_data_byte
0000fa10 g     F .text	00000020 alt_dcache_flush_all
00006a84 g     F .text	00000068 __hi0bits
0000cfb0 g     F .text	00000080 .hidden __fixdfsi
00012b1c g       *ABS*	00000000 __ram_rwdata_end
00012afc g     O .rwdata	00000008 alt_dev_list
0000da64 g     F .text	000000f8 write
00010dfc g       *ABS*	00000000 __ram_rodata_end
0000d38c g     F .text	000000b0 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000bea8 g     F .text	000000f4 .hidden __ledf2
00006dd0 g     F .text	00000140 __pow5mult
000080e4 g     F .text	0000145c ___vfiprintf_internal_r
00014844 g     O .bss	00000004 __nlocale_changed
40000000 g       *ABS*	00000000 __alt_mem_ARM_A9_HPS_axi_sdram
0000ab58 g     F .text	00000058 .hidden __umodsi3
0001499c g       *ABS*	00000000 end
0000f810 g     F .text	00000098 alt_up_ps2_write_fd
0000efe0 g     F .text	00000044 alt_up_irda_check_parity
0000e4bc g     F .text	000000b4 altera_avalon_jtag_uart_init
000001d4 g     F .exceptions	00000074 alt_instruction_exception_entry
000109dc g       *ABS*	00000000 __CTOR_LIST__
02000000 g       *ABS*	00000000 __alt_stack_pointer
0000ee34 g     F .text	00000074 alt_avalon_timer_sc_init
0000d1b4 g     F .text	00000064 .hidden __clzsi2
0000eb94 g     F .text	00000224 altera_avalon_jtag_uart_write
00004d84 g     F .text	00000004 __sfp_lock_acquire
000062e0 g     F .text	000000e4 memchr
00000ad0 g     F .text	000021f8 ___vfprintf_internal_r
00004ee8 g     F .text	00000310 _free_r
000058c4 g     F .text	00000010 __locale_mb_cur_max
00010828 g     F .text	00000180 __call_exitprocs
00014840 g     O .bss	00000004 __mlocale_changed
00012ae8 g     O .rwdata	00000004 __malloc_sbrk_base
00000248 g     F .text	0000003c _start
00014868 g     O .bss	00000004 _alt_tick_rate
00006f10 g     F .text	00000148 __lshift
0001486c g     O .bss	00000004 _alt_nticks
0000d818 g     F .text	000000fc read
0000dbc8 g     F .text	00000790 alt_sys_init
00010710 g     F .text	00000118 __register_exitproc
0000f72c g     F .text	00000058 alt_up_ps2_clear_fifo
00006bd8 g     F .text	000001f8 __multiply
0000e820 g     F .text	00000068 altera_avalon_jtag_uart_close
00010dfc g       *ABS*	00000000 __ram_rwdata_start
000109dc g       *ABS*	00000000 __ram_rodata_start
00014874 g     O .bss	00000028 __malloc_current_mallinfo
00007424 g     F .text	0000014c __d2b
0000e358 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00010478 g     F .text	000000a4 alt_get_fd
00009678 g     F .text	00000054 _close_r
00010694 g     F .text	0000007c memcmp
0000e418 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0001499c g       *ABS*	00000000 __alt_stack_base
0000e468 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000eea8 g     F .text	0000005c alt_up_irda_enable_read_interrupt
00002da0 g     F .text	00000154 __swsetup_r
0000b45c g     F .text	000008e8 .hidden __divdf3
00004c44 g     F .text	00000118 __sfp
00007688 g     F .text	00000078 __copybits
00011298 g     O .rwdata	00000408 __malloc_av_
00004d90 g     F .text	00000004 __sinit_lock_release
0000bf9c g     F .text	00000718 .hidden __muldf3
00007db8 g     F .text	00000054 __sread
00010370 g     F .text	00000108 alt_find_file
0000fa6c g     F .text	000000a4 alt_dev_llist_insert
0000d794 g     F .text	00000024 __malloc_lock
0000d978 g     F .text	000000b0 sbrk
00004998 g     F .text	0000005c _fflush_r
000096cc g     F .text	000000c4 _calloc_r
0001483c g       *ABS*	00000000 __bss_start
00006668 g     F .text	00000128 memset
00000338 g     F .text	000005c0 main
00014860 g     O .bss	00000004 alt_envp
00014848 g     O .bss	00000004 __malloc_max_total_mem
0000e3b8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009d4c g     F .text	00000018 __swbuf
00007eec g     F .text	00000008 __sclose
02000000 g       *ABS*	00000000 __alt_heap_limit
00009880 g     F .text	00000014 fclose
0000f6bc g     F .text	00000070 alt_up_ps2_read_data_byte
000030f4 g     F .text	00001688 _dtoa_r
00005ad4 g     F .text	0000080c _malloc_r
00009ec0 g     F .text	00000030 __ascii_wctomb
00012b08 g     O .rwdata	00000004 alt_errno
000056b4 g     F .text	000000c4 _fwalk
0000f024 g     F .text	00000040 alt_up_irda_write_data
0000f8a8 g     F .text	0000003c alt_up_ps2_open_dev
0000a9fc g     F .text	00000084 .hidden __divsi3
00004dc4 g     F .text	00000124 _malloc_trim_r
0000f424 g     F .text	0000005c alt_up_ps2_enable_read_interrupt
000109dc g       *ABS*	00000000 __CTOR_END__
00007ef4 g     F .text	000000dc strcmp
000109dc g       *ABS*	00000000 __flash_rodata_start
000109dc g       *ABS*	00000000 __DTOR_LIST__
0000bd44 g     F .text	00000088 .hidden __nedf2
0000db90 g     F .text	00000038 alt_irq_init
0000d914 g     F .text	00000064 alt_release_fd
0000f2fc g     F .text	00000034 read_data_valid
00010be8 g     O .rodata	00000100 .hidden __clz_tab
0001483c g     O .bss	00000004 _PathLocale
0000f5bc g     F .text	00000064 alt_up_ps2_write_data_byte_with_ack
00010648 g     F .text	00000014 atexit
00009618 g     F .text	00000060 _write_r
000058f4 g     F .text	00000018 setlocale
00012ae0 g     O .rwdata	00000004 _impure_ptr
00014858 g     O .bss	00000004 alt_argc
0000477c g     F .text	0000021c __sflush_r
0000fb70 g     F .text	00000060 _do_dtors
000058e0 g     F .text	00000008 __locale_cjk_lang
09000000 g       *ABS*	00000000 __alt_mem_VGA_Subsystem_Char_Buf_Subsystem_Onchip_SRAM
00000020 g       .exceptions	00000000 alt_irq_entry
000072b4 g     F .text	00000064 __ulp
00004dac g     F .text	00000018 __fp_unlock_all
00012af4 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
0000590c g     F .text	0000000c localeconv
00012b1c g       *ABS*	00000000 _edata
0001499c g       *ABS*	00000000 _end
00009894 g     F .text	00000164 __fputwc
00000248 g       *ABS*	00000000 __ram_exceptions_end
0000e888 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08000000 g       *ABS*	00000000 __alt_mem_Onchip_SRAM
00007e14 g     F .text	0000007c __swrite
00012aec g     O .rwdata	00000004 __malloc_trim_threshold
000058d4 g     F .text	0000000c __locale_msgcharset
0001065c g     F .text	00000038 exit
0000f064 g     F .text	00000074 alt_up_irda_read_data
00005778 g     F .text	000000c4 _fwalk_reent
0000f35c g     F .text	000000c8 alt_up_ps2_init
000070b8 g     F .text	000001fc __mdiff
0000aa80 g     F .text	00000074 .hidden __modsi3
02000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004d88 g     F .text	00000004 __sfp_lock_release
0000f1f8 g     F .text	0000003c alt_up_irda_open_dev
000109a8 g     F .text	00000034 _exit
0000f8e4 g     F .text	0000012c alt_alarm_start
00005918 g     F .text	000001bc __smakebuf_r
0000f554 g     F .text	00000068 alt_up_ps2_wait_for_ack
00000a38 g     F .text	00000098 strlen
00010054 g     F .text	00000154 open
0000bdcc g     F .text	000000dc .hidden __gedf2
00012af0 g     O .rwdata	00000004 __wctomb
000080cc g     F .text	00000018 __sprint_r
0000fc60 g     F .text	00000034 alt_icache_flush_all
00012b10 g     O .rwdata	00000004 alt_priority_mask
00002cc8 g     F .text	0000001c __vfprintf_internal
00009ef0 g     F .text	0000005c _wctomb_r
0000f784 g     F .text	0000008c alt_up_ps2_read_fd
0000c6b4 g     F .text	000008fc .hidden __subdf3
0000f0d8 g     F .text	00000090 alt_up_irda_read_fd
00006aec g     F .text	000000b0 __lo0bits
00012b14 g     O .rwdata	00000008 alt_alarm_list
0000fb10 g     F .text	00000060 _do_ctors
00009e00 g     F .text	000000c0 wcrtomb
0000d254 g     F .text	000000d0 close
0000d584 g     F .text	00000084 alt_load
00009a1c g     F .text	00000080 fputwc
00004d8c g     F .text	00000004 __sinit_lock_acquire
00006860 g     F .text	00000120 __multadd
00006838 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409214 	ori	at,at,584
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d40 	call	1d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001526 	beq	r2,zero,190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 13c:	00800074 	movhi	r2,1
 140:	10922704 	addi	r2,r2,18588
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	10922704 	addi	r2,r2,18588
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	e17ffd17 	ldw	r5,-12(fp)
 174:	1009883a 	mov	r4,r2
 178:	183ee83a 	callr	r3
#endif
        break;
 17c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 180:	0005313a 	rdctl	r2,ipending
 184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 188:	e0bfff17 	ldw	r2,-4(fp)
 18c:	00000706 	br	1ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 190:	e0bffc17 	ldw	r2,-16(fp)
 194:	1085883a 	add	r2,r2,r2
 198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 19c:	e0bffd17 	ldw	r2,-12(fp)
 1a0:	10800044 	addi	r2,r2,1
 1a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a8:	003fe006 	br	12c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000012c>

    active = alt_irq_pending ();
 1ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1b0:	e0bffb17 	ldw	r2,-20(fp)
 1b4:	103fda1e 	bne	r2,zero,120 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b8:	0001883a 	nop
}
 1bc:	0001883a 	nop
 1c0:	e037883a 	mov	sp,fp
 1c4:	dfc00117 	ldw	ra,4(sp)
 1c8:	df000017 	ldw	fp,0(sp)
 1cc:	dec00204 	addi	sp,sp,8
 1d0:	f800283a 	ret

000001d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d4:	defffb04 	addi	sp,sp,-20
 1d8:	dfc00415 	stw	ra,16(sp)
 1dc:	df000315 	stw	fp,12(sp)
 1e0:	df000304 	addi	fp,sp,12
 1e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e8:	000531fa 	rdctl	r2,exception
 1ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1f0:	e0bffd17 	ldw	r2,-12(fp)
 1f4:	10801f0c 	andi	r2,r2,124
 1f8:	1004d0ba 	srli	r2,r2,2
 1fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 200:	0005333a 	rdctl	r2,badaddr
 204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 208:	d0a76517 	ldw	r2,-25196(gp)
 20c:	10000726 	beq	r2,zero,22c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 210:	d0a76517 	ldw	r2,-25196(gp)
 214:	e0fffd17 	ldw	r3,-12(fp)
 218:	e1bffe17 	ldw	r6,-8(fp)
 21c:	e17fff17 	ldw	r5,-4(fp)
 220:	1809883a 	mov	r4,r3
 224:	103ee83a 	callr	r2
 228:	00000206 	br	234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 22c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 230:	0005883a 	mov	r2,zero
}
 234:	e037883a 	mov	sp,fp
 238:	dfc00117 	ldw	ra,4(sp)
 23c:	df000017 	ldw	fp,0(sp)
 240:	dec00204 	addi	sp,sp,8
 244:	f800283a 	ret

Disassembly of section .text:

00000248 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     248:	06c08034 	movhi	sp,512
    ori sp, sp, %lo(__alt_stack_pointer)
     24c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     250:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     254:	d6aab714 	ori	gp,gp,43740
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     258:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     25c:	10920f14 	ori	r2,r2,18492

    movhi r3, %hi(__bss_end)
     260:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     264:	18d26714 	ori	r3,r3,18844

    beq r2, r3, 1f
     268:	10c00326 	beq	r2,r3,278 <_start+0x30>

0:
    stw zero, (r2)
     26c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     274:	10fffd36 	bltu	r2,r3,26c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000026c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     278:	000d5840 	call	d584 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     27c:	000d7180 	call	d718 <alt_main>

00000280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     280:	003fff06 	br	280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000280>

00000284 <check_KEYs>:
#include "stdio.h"
#define BUF_SIZE 500000 // about 10 seconds of buffer (@ 48K samples/sec)
#define BUF_THRESHOLD 96 // 75% of 128 word buffer
#define BUF_THRESHOLD 96

int check_KEYs(int * record, int * play, volatile int * pKEY) {
     284:	defffb04 	addi	sp,sp,-20
     288:	df000415 	stw	fp,16(sp)
     28c:	df000404 	addi	fp,sp,16
     290:	e13ffd15 	stw	r4,-12(fp)
     294:	e17ffe15 	stw	r5,-8(fp)
     298:	e1bfff15 	stw	r6,-4(fp)
	int temp = 0;
     29c:	e03ffc15 	stw	zero,-16(fp)
	while (*pKEY != 0) {
     2a0:	00000606 	br	2bc <check_KEYs+0x38>
		temp = *pKEY;
     2a4:	e0bfff17 	ldw	r2,-4(fp)
     2a8:	10800017 	ldw	r2,0(r2)
     2ac:	e0bffc15 	stw	r2,-16(fp)
		if (*pKEY == 0)
     2b0:	e0bfff17 	ldw	r2,-4(fp)
     2b4:	10800017 	ldw	r2,0(r2)
     2b8:	10000426 	beq	r2,zero,2cc <check_KEYs+0x48>
#define BUF_THRESHOLD 96 // 75% of 128 word buffer
#define BUF_THRESHOLD 96

int check_KEYs(int * record, int * play, volatile int * pKEY) {
	int temp = 0;
	while (*pKEY != 0) {
     2bc:	e0bfff17 	ldw	r2,-4(fp)
     2c0:	10800017 	ldw	r2,0(r2)
     2c4:	103ff71e 	bne	r2,zero,2a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00002a4>
     2c8:	00000106 	br	2d0 <check_KEYs+0x4c>
		temp = *pKEY;
		if (*pKEY == 0)
			break;
     2cc:	0001883a 	nop
	}

	if (temp != 0) {
     2d0:	e0bffc17 	ldw	r2,-16(fp)
     2d4:	10001326 	beq	r2,zero,324 <check_KEYs+0xa0>
		if (temp == 2) {
     2d8:	e0bffc17 	ldw	r2,-16(fp)
     2dc:	10800098 	cmpnei	r2,r2,2
     2e0:	1000061e 	bne	r2,zero,2fc <check_KEYs+0x78>
			*record = 1;
     2e4:	e0bffd17 	ldw	r2,-12(fp)
     2e8:	00c00044 	movi	r3,1
     2ec:	10c00015 	stw	r3,0(r2)
			*play = 0;
     2f0:	e0bffe17 	ldw	r2,-8(fp)
     2f4:	10000015 	stw	zero,0(r2)
     2f8:	00000806 	br	31c <check_KEYs+0x98>
		} else if (temp == 4) {
     2fc:	e0bffc17 	ldw	r2,-16(fp)
     300:	10800118 	cmpnei	r2,r2,4
     304:	1000051e 	bne	r2,zero,31c <check_KEYs+0x98>
			*record = 0;
     308:	e0bffd17 	ldw	r2,-12(fp)
     30c:	10000015 	stw	zero,0(r2)
			*play = 1;
     310:	e0bffe17 	ldw	r2,-8(fp)
     314:	00c00044 	movi	r3,1
     318:	10c00015 	stw	r3,0(r2)
		}
		return temp;
     31c:	e0bffc17 	ldw	r2,-16(fp)
     320:	00000106 	br	328 <check_KEYs+0xa4>
	} else
		return 0;
     324:	0005883a 	mov	r2,zero
}
     328:	e037883a 	mov	sp,fp
     32c:	df000017 	ldw	fp,0(sp)
     330:	dec00104 	addi	sp,sp,4
     334:	f800283a 	ret

00000338 <main>:

int main(void) {
     338:	defffe04 	addi	sp,sp,-8
     33c:	dfc00115 	stw	ra,4(sp)
     340:	df000015 	stw	fp,0(sp)
     344:	d839883a 	mov	fp,sp
     348:	023ff0f4 	movhi	r8,65475
     34c:	423db004 	addi	r8,r8,-2368
     350:	da37883a 	add	sp,sp,r8
	volatile int * pKEY = (int *) 0xff200050;
     354:	00bfc834 	movhi	r2,65312
     358:	10801404 	addi	r2,r2,80
     35c:	00fff0f4 	movhi	r3,65475
     360:	18fdb404 	addi	r3,r3,-2352
     364:	1f07883a 	add	r3,r3,fp
     368:	18800015 	stw	r2,0(r3)
	volatile int * pLED = (int *) LEDS_BASE; // red LED address
     36c:	00bfc834 	movhi	r2,65312
     370:	013ff0f4 	movhi	r4,65475
     374:	213db504 	addi	r4,r4,-2348
     378:	2709883a 	add	r4,r4,fp
     37c:	20800015 	stw	r2,0(r4)
	volatile int * pAudio = (int *) AUDIO_SUBSYSTEM_AUDIO_BASE; // audio port address
     380:	00bfc834 	movhi	r2,65312
     384:	108c1004 	addi	r2,r2,12352
     388:	017ff0f4 	movhi	r5,65475
     38c:	297db604 	addi	r5,r5,-2344
     390:	2f0b883a 	add	r5,r5,fp
     394:	28800015 	stw	r2,0(r5)

	volatile unsigned char * RARC = 0xFF203044;
     398:	00bfc834 	movhi	r2,65312
     39c:	108c1104 	addi	r2,r2,12356
     3a0:	00fff0f4 	movhi	r3,65475
     3a4:	18fdb704 	addi	r3,r3,-2340
     3a8:	1f07883a 	add	r3,r3,fp
     3ac:	18800015 	stw	r2,0(r3)
	volatile unsigned char * RALC = 0xFF203045;
     3b0:	00bfc834 	movhi	r2,65312
     3b4:	108c1144 	addi	r2,r2,12357
     3b8:	013ff0f4 	movhi	r4,65475
     3bc:	213db804 	addi	r4,r4,-2336
     3c0:	2709883a 	add	r4,r4,fp
     3c4:	20800015 	stw	r2,0(r4)
	volatile unsigned char * WSRC = 0xFF203046;
     3c8:	00bfc834 	movhi	r2,65312
     3cc:	108c1184 	addi	r2,r2,12358
     3d0:	017ff0f4 	movhi	r5,65475
     3d4:	297db904 	addi	r5,r5,-2332
     3d8:	2f0b883a 	add	r5,r5,fp
     3dc:	28800015 	stw	r2,0(r5)
	volatile unsigned char * WSLC = 0xFF203047;
     3e0:	00bfc834 	movhi	r2,65312
     3e4:	108c11c4 	addi	r2,r2,12359
     3e8:	00fff0f4 	movhi	r3,65475
     3ec:	18fdba04 	addi	r3,r3,-2328
     3f0:	1f07883a 	add	r3,r3,fp
     3f4:	18800015 	stw	r2,0(r3)
	volatile int * LeftData = 0xFF203048;
     3f8:	00bfc834 	movhi	r2,65312
     3fc:	108c1204 	addi	r2,r2,12360
     400:	013ff0f4 	movhi	r4,65475
     404:	213dbb04 	addi	r4,r4,-2324
     408:	2709883a 	add	r4,r4,fp
     40c:	20800015 	stw	r2,0(r4)
	volatile int * RightData = 0xFF20304C;
     410:	00bfc834 	movhi	r2,65312
     414:	108c1304 	addi	r2,r2,12364
     418:	017ff0f4 	movhi	r5,65475
     41c:	297dbc04 	addi	r5,r5,-2320
     420:	2f0b883a 	add	r5,r5,fp
     424:	28800015 	stw	r2,0(r5)

	int left_buffer[BUF_SIZE];
	int right_buffer[BUF_SIZE];

	int record = 0, play = 0;
     428:	00800f74 	movhi	r2,61
     42c:	10824e04 	addi	r2,r2,2360
     430:	00fff0f4 	movhi	r3,65475
     434:	18fdb004 	addi	r3,r3,-2368
     438:	1f07883a 	add	r3,r3,fp
     43c:	1885883a 	add	r2,r3,r2
     440:	10000015 	stw	zero,0(r2)
     444:	00800f74 	movhi	r2,61
     448:	10824f04 	addi	r2,r2,2364
     44c:	013ff0f4 	movhi	r4,65475
     450:	213db004 	addi	r4,r4,-2368
     454:	2709883a 	add	r4,r4,fp
     458:	2085883a 	add	r2,r4,r2
     45c:	10000015 	stw	zero,0(r2)
	*(pLED) = 0;
     460:	017ff0f4 	movhi	r5,65475
     464:	297db504 	addi	r5,r5,-2348
     468:	2f0b883a 	add	r5,r5,fp
     46c:	28800017 	ldw	r2,0(r5)
     470:	10000015 	stw	zero,0(r2)

	while (1) {
		int check = check_KEYs(&record, &play, pKEY);
     474:	00800f74 	movhi	r2,61
     478:	10824f04 	addi	r2,r2,2364
     47c:	013ff0f4 	movhi	r4,65475
     480:	213db004 	addi	r4,r4,-2368
     484:	2709883a 	add	r4,r4,fp
     488:	2087883a 	add	r3,r4,r2
     48c:	00800f74 	movhi	r2,61
     490:	10824e04 	addi	r2,r2,2360
     494:	017ff0f4 	movhi	r5,65475
     498:	297db004 	addi	r5,r5,-2368
     49c:	2f0b883a 	add	r5,r5,fp
     4a0:	2885883a 	add	r2,r5,r2
     4a4:	013ff0f4 	movhi	r4,65475
     4a8:	213db404 	addi	r4,r4,-2352
     4ac:	2709883a 	add	r4,r4,fp
     4b0:	21800017 	ldw	r6,0(r4)
     4b4:	180b883a 	mov	r5,r3
     4b8:	1009883a 	mov	r4,r2
     4bc:	00002840 	call	284 <check_KEYs>
     4c0:	017ff0f4 	movhi	r5,65475
     4c4:	297dbd04 	addi	r5,r5,-2316
     4c8:	2f0b883a 	add	r5,r5,fp
     4cc:	28800015 	stw	r2,0(r5)

		if (record) {
     4d0:	00800f74 	movhi	r2,61
     4d4:	10824e04 	addi	r2,r2,2360
     4d8:	00fff0f4 	movhi	r3,65475
     4dc:	18fdb004 	addi	r3,r3,-2368
     4e0:	1f07883a 	add	r3,r3,fp
     4e4:	1885883a 	add	r2,r3,r2
     4e8:	10800017 	ldw	r2,0(r2)
     4ec:	10007d26 	beq	r2,zero,6e4 <main+0x3ac>
			*pLED = 0x1;
     4f0:	013ff0f4 	movhi	r4,65475
     4f4:	213db504 	addi	r4,r4,-2348
     4f8:	2709883a 	add	r4,r4,fp
     4fc:	20800017 	ldw	r2,0(r4)
     500:	00c00044 	movi	r3,1
     504:	10c00015 	stw	r3,0(r2)
			int recSec = 0;
     508:	017ff0f4 	movhi	r5,65475
     50c:	297db004 	addi	r5,r5,-2368
     510:	2f0b883a 	add	r5,r5,fp
     514:	28000015 	stw	zero,0(r5)
			int offset = 0;
     518:	00bff0f4 	movhi	r2,65475
     51c:	10bdb104 	addi	r2,r2,-2364
     520:	1705883a 	add	r2,r2,fp
     524:	10000015 	stw	zero,0(r2)
			printf("recording Start\n");
     528:	01000074 	movhi	r4,1
     52c:	21027704 	addi	r4,r4,2524
     530:	0000a240 	call	a24 <puts>
			while (offset < BUF_SIZE) {
     534:	00005406 	br	688 <main+0x350>
				if (*RARC >= BUF_THRESHOLD || *RALC >= BUF_THRESHOLD) {
     538:	00fff0f4 	movhi	r3,65475
     53c:	18fdb704 	addi	r3,r3,-2340
     540:	1f07883a 	add	r3,r3,fp
     544:	18800017 	ldw	r2,0(r3)
     548:	10800003 	ldbu	r2,0(r2)
     54c:	10803fcc 	andi	r2,r2,255
     550:	10801828 	cmpgeui	r2,r2,96
     554:	1000081e 	bne	r2,zero,578 <main+0x240>
     558:	013ff0f4 	movhi	r4,65475
     55c:	213db804 	addi	r4,r4,-2336
     560:	2709883a 	add	r4,r4,fp
     564:	20800017 	ldw	r2,0(r4)
     568:	10800003 	ldbu	r2,0(r2)
     56c:	10803fcc 	andi	r2,r2,255
     570:	10801830 	cmpltui	r2,r2,96
     574:	10002d1e 	bne	r2,zero,62c <main+0x2f4>
					right_buffer[offset] = *RightData;
     578:	017ff0f4 	movhi	r5,65475
     57c:	297dbc04 	addi	r5,r5,-2320
     580:	2f0b883a 	add	r5,r5,fp
     584:	28800017 	ldw	r2,0(r5)
     588:	10c00017 	ldw	r3,0(r2)
     58c:	008007f4 	movhi	r2,31
     590:	10a12e04 	addi	r2,r2,-31560
     594:	017ff0f4 	movhi	r5,65475
     598:	297db004 	addi	r5,r5,-2368
     59c:	2f0b883a 	add	r5,r5,fp
     5a0:	2889883a 	add	r4,r5,r2
     5a4:	017ff0f4 	movhi	r5,65475
     5a8:	297db104 	addi	r5,r5,-2364
     5ac:	2f0b883a 	add	r5,r5,fp
     5b0:	28800017 	ldw	r2,0(r5)
     5b4:	1085883a 	add	r2,r2,r2
     5b8:	1085883a 	add	r2,r2,r2
     5bc:	2085883a 	add	r2,r4,r2
     5c0:	10c00015 	stw	r3,0(r2)
					left_buffer[offset] = *LeftData;
     5c4:	00fff0f4 	movhi	r3,65475
     5c8:	18fdbb04 	addi	r3,r3,-2324
     5cc:	1f07883a 	add	r3,r3,fp
     5d0:	18800017 	ldw	r2,0(r3)
     5d4:	10c00017 	ldw	r3,0(r2)
     5d8:	013ff0f4 	movhi	r4,65475
     5dc:	213db104 	addi	r4,r4,-2364
     5e0:	2709883a 	add	r4,r4,fp
     5e4:	20800017 	ldw	r2,0(r4)
     5e8:	1085883a 	add	r2,r2,r2
     5ec:	1085883a 	add	r2,r2,r2
     5f0:	017ff0f4 	movhi	r5,65475
     5f4:	297db004 	addi	r5,r5,-2368
     5f8:	2f0b883a 	add	r5,r5,fp
     5fc:	2885883a 	add	r2,r5,r2
     600:	10800e04 	addi	r2,r2,56
     604:	10c00015 	stw	r3,0(r2)
					offset++;
     608:	00fff0f4 	movhi	r3,65475
     60c:	18fdb104 	addi	r3,r3,-2364
     610:	1f07883a 	add	r3,r3,fp
     614:	18800017 	ldw	r2,0(r3)
     618:	10800044 	addi	r2,r2,1
     61c:	013ff0f4 	movhi	r4,65475
     620:	213db104 	addi	r4,r4,-2364
     624:	2709883a 	add	r4,r4,fp
     628:	20800015 	stw	r2,0(r4)
				}
				if (offset % 48000 == 0)
     62c:	017ff0f4 	movhi	r5,65475
     630:	297db104 	addi	r5,r5,-2364
     634:	2f0b883a 	add	r5,r5,fp
     638:	28800017 	ldw	r2,0(r5)
     63c:	00eee014 	movui	r3,48000
     640:	10c9283a 	div	r4,r2,r3
     644:	00eee014 	movui	r3,48000
     648:	20c7383a 	mul	r3,r4,r3
     64c:	10c5c83a 	sub	r2,r2,r3
     650:	10000d1e 	bne	r2,zero,688 <main+0x350>
					printf("%d...\n", recSec++);
     654:	00fff0f4 	movhi	r3,65475
     658:	18fdb004 	addi	r3,r3,-2368
     65c:	1f07883a 	add	r3,r3,fp
     660:	18800017 	ldw	r2,0(r3)
     664:	10c00044 	addi	r3,r2,1
     668:	013ff0f4 	movhi	r4,65475
     66c:	213db004 	addi	r4,r4,-2368
     670:	2709883a 	add	r4,r4,fp
     674:	20c00015 	stw	r3,0(r4)
     678:	100b883a 	mov	r5,r2
     67c:	01000074 	movhi	r4,1
     680:	21027b04 	addi	r4,r4,2540
     684:	00009280 	call	928 <printf>
		if (record) {
			*pLED = 0x1;
			int recSec = 0;
			int offset = 0;
			printf("recording Start\n");
			while (offset < BUF_SIZE) {
     688:	017ff0f4 	movhi	r5,65475
     68c:	297db104 	addi	r5,r5,-2364
     690:	2f0b883a 	add	r5,r5,fp
     694:	28c00017 	ldw	r3,0(r5)
     698:	00800234 	movhi	r2,8
     69c:	10a847c4 	addi	r2,r2,-24289
     6a0:	10ffa50e 	bge	r2,r3,538 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000538>
					offset++;
				}
				if (offset % 48000 == 0)
					printf("%d...\n", recSec++);
			}
			record = 0;
     6a4:	00800f74 	movhi	r2,61
     6a8:	10824e04 	addi	r2,r2,2360
     6ac:	00fff0f4 	movhi	r3,65475
     6b0:	18fdb004 	addi	r3,r3,-2368
     6b4:	1f07883a 	add	r3,r3,fp
     6b8:	1885883a 	add	r2,r3,r2
     6bc:	10000015 	stw	zero,0(r2)
			printf("recording Done\n");
     6c0:	01000074 	movhi	r4,1
     6c4:	21027d04 	addi	r4,r4,2548
     6c8:	0000a240 	call	a24 <puts>
			*pLED = 0x0;
     6cc:	013ff0f4 	movhi	r4,65475
     6d0:	213db504 	addi	r4,r4,-2348
     6d4:	2709883a 	add	r4,r4,fp
     6d8:	20800017 	ldw	r2,0(r4)
     6dc:	10000015 	stw	zero,0(r2)
     6e0:	003f6406 	br	474 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000474>
		} else if (play) {
     6e4:	00800f74 	movhi	r2,61
     6e8:	10824f04 	addi	r2,r2,2364
     6ec:	017ff0f4 	movhi	r5,65475
     6f0:	297db004 	addi	r5,r5,-2368
     6f4:	2f0b883a 	add	r5,r5,fp
     6f8:	2885883a 	add	r2,r5,r2
     6fc:	10800017 	ldw	r2,0(r2)
     700:	103f5c26 	beq	r2,zero,474 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000474>
			*pLED = 0x2;
     704:	00fff0f4 	movhi	r3,65475
     708:	18fdb504 	addi	r3,r3,-2348
     70c:	1f07883a 	add	r3,r3,fp
     710:	18800017 	ldw	r2,0(r3)
     714:	00c00084 	movi	r3,2
     718:	10c00015 	stw	r3,0(r2)
			int playSec = 0;
     71c:	013ff0f4 	movhi	r4,65475
     720:	213db204 	addi	r4,r4,-2360
     724:	2709883a 	add	r4,r4,fp
     728:	20000015 	stw	zero,0(r4)
			int offset = 0;
     72c:	017ff0f4 	movhi	r5,65475
     730:	297db304 	addi	r5,r5,-2356
     734:	2f0b883a 	add	r5,r5,fp
     738:	28000015 	stw	zero,0(r5)
			printf("Play Start\n");
     73c:	01000074 	movhi	r4,1
     740:	21028104 	addi	r4,r4,2564
     744:	0000a240 	call	a24 <puts>
			while (offset < BUF_SIZE) {
     748:	00005406 	br	89c <main+0x564>
				if (*WSLC >= BUF_THRESHOLD || *WSRC >= BUF_THRESHOLD){
     74c:	00fff0f4 	movhi	r3,65475
     750:	18fdba04 	addi	r3,r3,-2328
     754:	1f07883a 	add	r3,r3,fp
     758:	18800017 	ldw	r2,0(r3)
     75c:	10800003 	ldbu	r2,0(r2)
     760:	10803fcc 	andi	r2,r2,255
     764:	10801828 	cmpgeui	r2,r2,96
     768:	1000081e 	bne	r2,zero,78c <main+0x454>
     76c:	013ff0f4 	movhi	r4,65475
     770:	213db904 	addi	r4,r4,-2332
     774:	2709883a 	add	r4,r4,fp
     778:	20800017 	ldw	r2,0(r4)
     77c:	10800003 	ldbu	r2,0(r2)
     780:	10803fcc 	andi	r2,r2,255
     784:	10801830 	cmpltui	r2,r2,96
     788:	1000441e 	bne	r2,zero,89c <main+0x564>
					*RightData = right_buffer[offset];
     78c:	008007f4 	movhi	r2,31
     790:	10a12e04 	addi	r2,r2,-31560
     794:	017ff0f4 	movhi	r5,65475
     798:	297db004 	addi	r5,r5,-2368
     79c:	2f0b883a 	add	r5,r5,fp
     7a0:	2887883a 	add	r3,r5,r2
     7a4:	013ff0f4 	movhi	r4,65475
     7a8:	213db304 	addi	r4,r4,-2356
     7ac:	2709883a 	add	r4,r4,fp
     7b0:	20800017 	ldw	r2,0(r4)
     7b4:	1085883a 	add	r2,r2,r2
     7b8:	1085883a 	add	r2,r2,r2
     7bc:	1885883a 	add	r2,r3,r2
     7c0:	10c00017 	ldw	r3,0(r2)
     7c4:	017ff0f4 	movhi	r5,65475
     7c8:	297dbc04 	addi	r5,r5,-2320
     7cc:	2f0b883a 	add	r5,r5,fp
     7d0:	28800017 	ldw	r2,0(r5)
     7d4:	10c00015 	stw	r3,0(r2)
					*LeftData = left_buffer[offset];
     7d8:	00fff0f4 	movhi	r3,65475
     7dc:	18fdb304 	addi	r3,r3,-2356
     7e0:	1f07883a 	add	r3,r3,fp
     7e4:	18800017 	ldw	r2,0(r3)
     7e8:	1085883a 	add	r2,r2,r2
     7ec:	1085883a 	add	r2,r2,r2
     7f0:	013ff0f4 	movhi	r4,65475
     7f4:	213db004 	addi	r4,r4,-2368
     7f8:	2709883a 	add	r4,r4,fp
     7fc:	2085883a 	add	r2,r4,r2
     800:	10800e04 	addi	r2,r2,56
     804:	10c00017 	ldw	r3,0(r2)
     808:	017ff0f4 	movhi	r5,65475
     80c:	297dbb04 	addi	r5,r5,-2324
     810:	2f0b883a 	add	r5,r5,fp
     814:	28800017 	ldw	r2,0(r5)
     818:	10c00015 	stw	r3,0(r2)
					offset++;
     81c:	00fff0f4 	movhi	r3,65475
     820:	18fdb304 	addi	r3,r3,-2356
     824:	1f07883a 	add	r3,r3,fp
     828:	18800017 	ldw	r2,0(r3)
     82c:	10800044 	addi	r2,r2,1
     830:	013ff0f4 	movhi	r4,65475
     834:	213db304 	addi	r4,r4,-2356
     838:	2709883a 	add	r4,r4,fp
     83c:	20800015 	stw	r2,0(r4)

					if (offset % 48000 == 0)
     840:	017ff0f4 	movhi	r5,65475
     844:	297db304 	addi	r5,r5,-2356
     848:	2f0b883a 	add	r5,r5,fp
     84c:	28800017 	ldw	r2,0(r5)
     850:	00eee014 	movui	r3,48000
     854:	10c9283a 	div	r4,r2,r3
     858:	00eee014 	movui	r3,48000
     85c:	20c7383a 	mul	r3,r4,r3
     860:	10c5c83a 	sub	r2,r2,r3
     864:	10000d1e 	bne	r2,zero,89c <main+0x564>
						printf("%d...\n", playSec++);
     868:	00fff0f4 	movhi	r3,65475
     86c:	18fdb204 	addi	r3,r3,-2360
     870:	1f07883a 	add	r3,r3,fp
     874:	18800017 	ldw	r2,0(r3)
     878:	10c00044 	addi	r3,r2,1
     87c:	013ff0f4 	movhi	r4,65475
     880:	213db204 	addi	r4,r4,-2360
     884:	2709883a 	add	r4,r4,fp
     888:	20c00015 	stw	r3,0(r4)
     88c:	100b883a 	mov	r5,r2
     890:	01000074 	movhi	r4,1
     894:	21027b04 	addi	r4,r4,2540
     898:	00009280 	call	928 <printf>
		} else if (play) {
			*pLED = 0x2;
			int playSec = 0;
			int offset = 0;
			printf("Play Start\n");
			while (offset < BUF_SIZE) {
     89c:	017ff0f4 	movhi	r5,65475
     8a0:	297db304 	addi	r5,r5,-2356
     8a4:	2f0b883a 	add	r5,r5,fp
     8a8:	28c00017 	ldw	r3,0(r5)
     8ac:	00800234 	movhi	r2,8
     8b0:	10a847c4 	addi	r2,r2,-24289
     8b4:	10ffa50e 	bge	r2,r3,74c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000074c>

					if (offset % 48000 == 0)
						printf("%d...\n", playSec++);
				}
			}
			play = 0;
     8b8:	00800f74 	movhi	r2,61
     8bc:	10824f04 	addi	r2,r2,2364
     8c0:	00fff0f4 	movhi	r3,65475
     8c4:	18fdb004 	addi	r3,r3,-2368
     8c8:	1f07883a 	add	r3,r3,fp
     8cc:	1885883a 	add	r2,r3,r2
     8d0:	10000015 	stw	zero,0(r2)
			printf("Play Done\n");
     8d4:	01000074 	movhi	r4,1
     8d8:	21028404 	addi	r4,r4,2576
     8dc:	0000a240 	call	a24 <puts>
			*pLED = 0x0;
     8e0:	013ff0f4 	movhi	r4,65475
     8e4:	213db504 	addi	r4,r4,-2348
     8e8:	2709883a 	add	r4,r4,fp
     8ec:	20800017 	ldw	r2,0(r4)
     8f0:	10000015 	stw	zero,0(r2)
		}
	}
     8f4:	003edf06 	br	474 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000474>

000008f8 <_printf_r>:
     8f8:	defffd04 	addi	sp,sp,-12
     8fc:	2805883a 	mov	r2,r5
     900:	dfc00015 	stw	ra,0(sp)
     904:	d9800115 	stw	r6,4(sp)
     908:	d9c00215 	stw	r7,8(sp)
     90c:	21400217 	ldw	r5,8(r4)
     910:	d9c00104 	addi	r7,sp,4
     914:	100d883a 	mov	r6,r2
     918:	0000ad00 	call	ad0 <___vfprintf_internal_r>
     91c:	dfc00017 	ldw	ra,0(sp)
     920:	dec00304 	addi	sp,sp,12
     924:	f800283a 	ret

00000928 <printf>:
     928:	defffc04 	addi	sp,sp,-16
     92c:	dfc00015 	stw	ra,0(sp)
     930:	d9400115 	stw	r5,4(sp)
     934:	d9800215 	stw	r6,8(sp)
     938:	d9c00315 	stw	r7,12(sp)
     93c:	00800074 	movhi	r2,1
     940:	108ab804 	addi	r2,r2,10976
     944:	10800017 	ldw	r2,0(r2)
     948:	200b883a 	mov	r5,r4
     94c:	d9800104 	addi	r6,sp,4
     950:	11000217 	ldw	r4,8(r2)
     954:	0002cc80 	call	2cc8 <__vfprintf_internal>
     958:	dfc00017 	ldw	ra,0(sp)
     95c:	dec00404 	addi	sp,sp,16
     960:	f800283a 	ret

00000964 <_puts_r>:
     964:	defff604 	addi	sp,sp,-40
     968:	dc000715 	stw	r16,28(sp)
     96c:	2021883a 	mov	r16,r4
     970:	2809883a 	mov	r4,r5
     974:	dc400815 	stw	r17,32(sp)
     978:	dfc00915 	stw	ra,36(sp)
     97c:	2823883a 	mov	r17,r5
     980:	0000a380 	call	a38 <strlen>
     984:	10c00044 	addi	r3,r2,1
     988:	d8800115 	stw	r2,4(sp)
     98c:	00800074 	movhi	r2,1
     990:	10828704 	addi	r2,r2,2588
     994:	d8800215 	stw	r2,8(sp)
     998:	00800044 	movi	r2,1
     99c:	d8800315 	stw	r2,12(sp)
     9a0:	00800084 	movi	r2,2
     9a4:	dc400015 	stw	r17,0(sp)
     9a8:	d8c00615 	stw	r3,24(sp)
     9ac:	dec00415 	stw	sp,16(sp)
     9b0:	d8800515 	stw	r2,20(sp)
     9b4:	80000226 	beq	r16,zero,9c0 <_puts_r+0x5c>
     9b8:	80800e17 	ldw	r2,56(r16)
     9bc:	10001426 	beq	r2,zero,a10 <_puts_r+0xac>
     9c0:	81400217 	ldw	r5,8(r16)
     9c4:	2880030b 	ldhu	r2,12(r5)
     9c8:	10c8000c 	andi	r3,r2,8192
     9cc:	1800061e 	bne	r3,zero,9e8 <_puts_r+0x84>
     9d0:	29001917 	ldw	r4,100(r5)
     9d4:	00f7ffc4 	movi	r3,-8193
     9d8:	10880014 	ori	r2,r2,8192
     9dc:	20c6703a 	and	r3,r4,r3
     9e0:	2880030d 	sth	r2,12(r5)
     9e4:	28c01915 	stw	r3,100(r5)
     9e8:	d9800404 	addi	r6,sp,16
     9ec:	8009883a 	mov	r4,r16
     9f0:	00051f80 	call	51f8 <__sfvwrite_r>
     9f4:	1000091e 	bne	r2,zero,a1c <_puts_r+0xb8>
     9f8:	00800284 	movi	r2,10
     9fc:	dfc00917 	ldw	ra,36(sp)
     a00:	dc400817 	ldw	r17,32(sp)
     a04:	dc000717 	ldw	r16,28(sp)
     a08:	dec00a04 	addi	sp,sp,40
     a0c:	f800283a 	ret
     a10:	8009883a 	mov	r4,r16
     a14:	0004d740 	call	4d74 <__sinit>
     a18:	003fe906 	br	9c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00009c0>
     a1c:	00bfffc4 	movi	r2,-1
     a20:	003ff606 	br	9fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00009fc>

00000a24 <puts>:
     a24:	00800074 	movhi	r2,1
     a28:	108ab804 	addi	r2,r2,10976
     a2c:	200b883a 	mov	r5,r4
     a30:	11000017 	ldw	r4,0(r2)
     a34:	00009641 	jmpi	964 <_puts_r>

00000a38 <strlen>:
     a38:	208000cc 	andi	r2,r4,3
     a3c:	10002026 	beq	r2,zero,ac0 <strlen+0x88>
     a40:	20800007 	ldb	r2,0(r4)
     a44:	10002026 	beq	r2,zero,ac8 <strlen+0x90>
     a48:	2005883a 	mov	r2,r4
     a4c:	00000206 	br	a58 <strlen+0x20>
     a50:	10c00007 	ldb	r3,0(r2)
     a54:	18001826 	beq	r3,zero,ab8 <strlen+0x80>
     a58:	10800044 	addi	r2,r2,1
     a5c:	10c000cc 	andi	r3,r2,3
     a60:	183ffb1e 	bne	r3,zero,a50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a50>
     a64:	10c00017 	ldw	r3,0(r2)
     a68:	01ffbff4 	movhi	r7,65279
     a6c:	39ffbfc4 	addi	r7,r7,-257
     a70:	00ca303a 	nor	r5,zero,r3
     a74:	01a02074 	movhi	r6,32897
     a78:	19c7883a 	add	r3,r3,r7
     a7c:	31a02004 	addi	r6,r6,-32640
     a80:	1946703a 	and	r3,r3,r5
     a84:	1986703a 	and	r3,r3,r6
     a88:	1800091e 	bne	r3,zero,ab0 <strlen+0x78>
     a8c:	10800104 	addi	r2,r2,4
     a90:	10c00017 	ldw	r3,0(r2)
     a94:	19cb883a 	add	r5,r3,r7
     a98:	00c6303a 	nor	r3,zero,r3
     a9c:	28c6703a 	and	r3,r5,r3
     aa0:	1986703a 	and	r3,r3,r6
     aa4:	183ff926 	beq	r3,zero,a8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a8c>
     aa8:	00000106 	br	ab0 <strlen+0x78>
     aac:	10800044 	addi	r2,r2,1
     ab0:	10c00007 	ldb	r3,0(r2)
     ab4:	183ffd1e 	bne	r3,zero,aac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000aac>
     ab8:	1105c83a 	sub	r2,r2,r4
     abc:	f800283a 	ret
     ac0:	2005883a 	mov	r2,r4
     ac4:	003fe706 	br	a64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000a64>
     ac8:	0005883a 	mov	r2,zero
     acc:	f800283a 	ret

00000ad0 <___vfprintf_internal_r>:
     ad0:	deffb804 	addi	sp,sp,-288
     ad4:	dfc04715 	stw	ra,284(sp)
     ad8:	ddc04515 	stw	r23,276(sp)
     adc:	dd404315 	stw	r21,268(sp)
     ae0:	d9002c15 	stw	r4,176(sp)
     ae4:	282f883a 	mov	r23,r5
     ae8:	302b883a 	mov	r21,r6
     aec:	d9c02d15 	stw	r7,180(sp)
     af0:	df004615 	stw	fp,280(sp)
     af4:	dd804415 	stw	r22,272(sp)
     af8:	dd004215 	stw	r20,264(sp)
     afc:	dcc04115 	stw	r19,260(sp)
     b00:	dc804015 	stw	r18,256(sp)
     b04:	dc403f15 	stw	r17,252(sp)
     b08:	dc003e15 	stw	r16,248(sp)
     b0c:	00058e80 	call	58e8 <_localeconv_r>
     b10:	10800017 	ldw	r2,0(r2)
     b14:	1009883a 	mov	r4,r2
     b18:	d8803415 	stw	r2,208(sp)
     b1c:	0000a380 	call	a38 <strlen>
     b20:	d8803715 	stw	r2,220(sp)
     b24:	d8802c17 	ldw	r2,176(sp)
     b28:	10000226 	beq	r2,zero,b34 <___vfprintf_internal_r+0x64>
     b2c:	10800e17 	ldw	r2,56(r2)
     b30:	1000f926 	beq	r2,zero,f18 <___vfprintf_internal_r+0x448>
     b34:	b880030b 	ldhu	r2,12(r23)
     b38:	10c8000c 	andi	r3,r2,8192
     b3c:	1800061e 	bne	r3,zero,b58 <___vfprintf_internal_r+0x88>
     b40:	b9001917 	ldw	r4,100(r23)
     b44:	00f7ffc4 	movi	r3,-8193
     b48:	10880014 	ori	r2,r2,8192
     b4c:	20c6703a 	and	r3,r4,r3
     b50:	b880030d 	sth	r2,12(r23)
     b54:	b8c01915 	stw	r3,100(r23)
     b58:	10c0020c 	andi	r3,r2,8
     b5c:	1800c126 	beq	r3,zero,e64 <___vfprintf_internal_r+0x394>
     b60:	b8c00417 	ldw	r3,16(r23)
     b64:	1800bf26 	beq	r3,zero,e64 <___vfprintf_internal_r+0x394>
     b68:	1080068c 	andi	r2,r2,26
     b6c:	00c00284 	movi	r3,10
     b70:	10c0c426 	beq	r2,r3,e84 <___vfprintf_internal_r+0x3b4>
     b74:	d8c00404 	addi	r3,sp,16
     b78:	05000074 	movhi	r20,1
     b7c:	d9001e04 	addi	r4,sp,120
     b80:	a5029884 	addi	r20,r20,2658
     b84:	d8c01e15 	stw	r3,120(sp)
     b88:	d8002015 	stw	zero,128(sp)
     b8c:	d8001f15 	stw	zero,124(sp)
     b90:	d8003315 	stw	zero,204(sp)
     b94:	d8003615 	stw	zero,216(sp)
     b98:	d8003815 	stw	zero,224(sp)
     b9c:	1811883a 	mov	r8,r3
     ba0:	d8003915 	stw	zero,228(sp)
     ba4:	d8003a15 	stw	zero,232(sp)
     ba8:	d8002f15 	stw	zero,188(sp)
     bac:	d9002815 	stw	r4,160(sp)
     bb0:	a8800007 	ldb	r2,0(r21)
     bb4:	10027b26 	beq	r2,zero,15a4 <___vfprintf_internal_r+0xad4>
     bb8:	00c00944 	movi	r3,37
     bbc:	a821883a 	mov	r16,r21
     bc0:	10c0021e 	bne	r2,r3,bcc <___vfprintf_internal_r+0xfc>
     bc4:	00001406 	br	c18 <___vfprintf_internal_r+0x148>
     bc8:	10c00326 	beq	r2,r3,bd8 <___vfprintf_internal_r+0x108>
     bcc:	84000044 	addi	r16,r16,1
     bd0:	80800007 	ldb	r2,0(r16)
     bd4:	103ffc1e 	bne	r2,zero,bc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bc8>
     bd8:	8563c83a 	sub	r17,r16,r21
     bdc:	88000e26 	beq	r17,zero,c18 <___vfprintf_internal_r+0x148>
     be0:	d8c02017 	ldw	r3,128(sp)
     be4:	d8801f17 	ldw	r2,124(sp)
     be8:	45400015 	stw	r21,0(r8)
     bec:	1c47883a 	add	r3,r3,r17
     bf0:	10800044 	addi	r2,r2,1
     bf4:	d8c02015 	stw	r3,128(sp)
     bf8:	44400115 	stw	r17,4(r8)
     bfc:	d8801f15 	stw	r2,124(sp)
     c00:	00c001c4 	movi	r3,7
     c04:	1880a716 	blt	r3,r2,ea4 <___vfprintf_internal_r+0x3d4>
     c08:	42000204 	addi	r8,r8,8
     c0c:	d9402f17 	ldw	r5,188(sp)
     c10:	2c4b883a 	add	r5,r5,r17
     c14:	d9402f15 	stw	r5,188(sp)
     c18:	80800007 	ldb	r2,0(r16)
     c1c:	1000a826 	beq	r2,zero,ec0 <___vfprintf_internal_r+0x3f0>
     c20:	84400047 	ldb	r17,1(r16)
     c24:	00bfffc4 	movi	r2,-1
     c28:	85400044 	addi	r21,r16,1
     c2c:	d8002785 	stb	zero,158(sp)
     c30:	0007883a 	mov	r3,zero
     c34:	000f883a 	mov	r7,zero
     c38:	d8802915 	stw	r2,164(sp)
     c3c:	d8003115 	stw	zero,196(sp)
     c40:	0025883a 	mov	r18,zero
     c44:	01401604 	movi	r5,88
     c48:	01800244 	movi	r6,9
     c4c:	02800a84 	movi	r10,42
     c50:	02401b04 	movi	r9,108
     c54:	ad400044 	addi	r21,r21,1
     c58:	88bff804 	addi	r2,r17,-32
     c5c:	28830436 	bltu	r5,r2,1870 <___vfprintf_internal_r+0xda0>
     c60:	100490ba 	slli	r2,r2,2
     c64:	01000034 	movhi	r4,0
     c68:	21031e04 	addi	r4,r4,3192
     c6c:	1105883a 	add	r2,r2,r4
     c70:	10800017 	ldw	r2,0(r2)
     c74:	1000683a 	jmp	r2
     c78:	00001790 	cmplti	zero,zero,94
     c7c:	00001870 	cmpltui	zero,zero,97
     c80:	00001870 	cmpltui	zero,zero,97
     c84:	000017b0 	cmpltui	zero,zero,94
     c88:	00001870 	cmpltui	zero,zero,97
     c8c:	00001870 	cmpltui	zero,zero,97
     c90:	00001870 	cmpltui	zero,zero,97
     c94:	00001870 	cmpltui	zero,zero,97
     c98:	00001870 	cmpltui	zero,zero,97
     c9c:	00001870 	cmpltui	zero,zero,97
     ca0:	00000f24 	muli	zero,zero,60
     ca4:	000016cc 	andi	zero,zero,91
     ca8:	00001870 	cmpltui	zero,zero,97
     cac:	00000dec 	andhi	zero,zero,55
     cb0:	00000f4c 	andi	zero,zero,61
     cb4:	00001870 	cmpltui	zero,zero,97
     cb8:	00000f8c 	andi	zero,zero,62
     cbc:	00000f98 	cmpnei	zero,zero,62
     cc0:	00000f98 	cmpnei	zero,zero,62
     cc4:	00000f98 	cmpnei	zero,zero,62
     cc8:	00000f98 	cmpnei	zero,zero,62
     ccc:	00000f98 	cmpnei	zero,zero,62
     cd0:	00000f98 	cmpnei	zero,zero,62
     cd4:	00000f98 	cmpnei	zero,zero,62
     cd8:	00000f98 	cmpnei	zero,zero,62
     cdc:	00000f98 	cmpnei	zero,zero,62
     ce0:	00001870 	cmpltui	zero,zero,97
     ce4:	00001870 	cmpltui	zero,zero,97
     ce8:	00001870 	cmpltui	zero,zero,97
     cec:	00001870 	cmpltui	zero,zero,97
     cf0:	00001870 	cmpltui	zero,zero,97
     cf4:	00001870 	cmpltui	zero,zero,97
     cf8:	00001870 	cmpltui	zero,zero,97
     cfc:	00001870 	cmpltui	zero,zero,97
     d00:	00001870 	cmpltui	zero,zero,97
     d04:	00001870 	cmpltui	zero,zero,97
     d08:	00000fcc 	andi	zero,zero,63
     d0c:	00001088 	cmpgei	zero,zero,66
     d10:	00001870 	cmpltui	zero,zero,97
     d14:	00001088 	cmpgei	zero,zero,66
     d18:	00001870 	cmpltui	zero,zero,97
     d1c:	00001870 	cmpltui	zero,zero,97
     d20:	00001870 	cmpltui	zero,zero,97
     d24:	00001870 	cmpltui	zero,zero,97
     d28:	00001128 	cmpgeui	zero,zero,68
     d2c:	00001870 	cmpltui	zero,zero,97
     d30:	00001870 	cmpltui	zero,zero,97
     d34:	00001134 	movhi	zero,68
     d38:	00001870 	cmpltui	zero,zero,97
     d3c:	00001870 	cmpltui	zero,zero,97
     d40:	00001870 	cmpltui	zero,zero,97
     d44:	00001870 	cmpltui	zero,zero,97
     d48:	00001870 	cmpltui	zero,zero,97
     d4c:	000015ac 	andhi	zero,zero,86
     d50:	00001870 	cmpltui	zero,zero,97
     d54:	00001870 	cmpltui	zero,zero,97
     d58:	0000160c 	andi	zero,zero,88
     d5c:	00001870 	cmpltui	zero,zero,97
     d60:	00001870 	cmpltui	zero,zero,97
     d64:	00001870 	cmpltui	zero,zero,97
     d68:	00001870 	cmpltui	zero,zero,97
     d6c:	00001870 	cmpltui	zero,zero,97
     d70:	00001870 	cmpltui	zero,zero,97
     d74:	00001870 	cmpltui	zero,zero,97
     d78:	00001870 	cmpltui	zero,zero,97
     d7c:	00001870 	cmpltui	zero,zero,97
     d80:	00001870 	cmpltui	zero,zero,97
     d84:	0000181c 	xori	zero,zero,96
     d88:	000017bc 	xorhi	zero,zero,94
     d8c:	00001088 	cmpgei	zero,zero,66
     d90:	00001088 	cmpgei	zero,zero,66
     d94:	00001088 	cmpgei	zero,zero,66
     d98:	000017cc 	andi	zero,zero,95
     d9c:	000017bc 	xorhi	zero,zero,94
     da0:	00001870 	cmpltui	zero,zero,97
     da4:	00001870 	cmpltui	zero,zero,97
     da8:	000017d8 	cmpnei	zero,zero,95
     dac:	00001870 	cmpltui	zero,zero,97
     db0:	000017e8 	cmpgeui	zero,zero,95
     db4:	000016bc 	xorhi	zero,zero,90
     db8:	00000df8 	rdprs	zero,zero,55
     dbc:	000016dc 	xori	zero,zero,91
     dc0:	00001870 	cmpltui	zero,zero,97
     dc4:	000016e8 	cmpgeui	zero,zero,91
     dc8:	00001870 	cmpltui	zero,zero,97
     dcc:	00001744 	movi	zero,93
     dd0:	00001870 	cmpltui	zero,zero,97
     dd4:	00001870 	cmpltui	zero,zero,97
     dd8:	00001754 	movui	zero,93
     ddc:	d9003117 	ldw	r4,196(sp)
     de0:	d8802d15 	stw	r2,180(sp)
     de4:	0109c83a 	sub	r4,zero,r4
     de8:	d9003115 	stw	r4,196(sp)
     dec:	94800114 	ori	r18,r18,4
     df0:	ac400007 	ldb	r17,0(r21)
     df4:	003f9706 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
     df8:	00800c04 	movi	r2,48
     dfc:	d9002d17 	ldw	r4,180(sp)
     e00:	d9402917 	ldw	r5,164(sp)
     e04:	d8802705 	stb	r2,156(sp)
     e08:	00801e04 	movi	r2,120
     e0c:	d8802745 	stb	r2,157(sp)
     e10:	d8002785 	stb	zero,158(sp)
     e14:	20c00104 	addi	r3,r4,4
     e18:	24c00017 	ldw	r19,0(r4)
     e1c:	002d883a 	mov	r22,zero
     e20:	90800094 	ori	r2,r18,2
     e24:	28029a16 	blt	r5,zero,1890 <___vfprintf_internal_r+0xdc0>
     e28:	00bfdfc4 	movi	r2,-129
     e2c:	90a4703a 	and	r18,r18,r2
     e30:	d8c02d15 	stw	r3,180(sp)
     e34:	94800094 	ori	r18,r18,2
     e38:	9802871e 	bne	r19,zero,1858 <___vfprintf_internal_r+0xd88>
     e3c:	00800074 	movhi	r2,1
     e40:	10829104 	addi	r2,r2,2628
     e44:	d8803915 	stw	r2,228(sp)
     e48:	04401e04 	movi	r17,120
     e4c:	d8802917 	ldw	r2,164(sp)
     e50:	0039883a 	mov	fp,zero
     e54:	1001e926 	beq	r2,zero,15fc <___vfprintf_internal_r+0xb2c>
     e58:	0027883a 	mov	r19,zero
     e5c:	002d883a 	mov	r22,zero
     e60:	00020506 	br	1678 <___vfprintf_internal_r+0xba8>
     e64:	d9002c17 	ldw	r4,176(sp)
     e68:	b80b883a 	mov	r5,r23
     e6c:	0002da00 	call	2da0 <__swsetup_r>
     e70:	1005ac1e 	bne	r2,zero,2524 <___vfprintf_internal_r+0x1a54>
     e74:	b880030b 	ldhu	r2,12(r23)
     e78:	00c00284 	movi	r3,10
     e7c:	1080068c 	andi	r2,r2,26
     e80:	10ff3c1e 	bne	r2,r3,b74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b74>
     e84:	b880038f 	ldh	r2,14(r23)
     e88:	103f3a16 	blt	r2,zero,b74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b74>
     e8c:	d9c02d17 	ldw	r7,180(sp)
     e90:	d9002c17 	ldw	r4,176(sp)
     e94:	a80d883a 	mov	r6,r21
     e98:	b80b883a 	mov	r5,r23
     e9c:	0002ce40 	call	2ce4 <__sbprintf>
     ea0:	00001106 	br	ee8 <___vfprintf_internal_r+0x418>
     ea4:	d9002c17 	ldw	r4,176(sp)
     ea8:	d9801e04 	addi	r6,sp,120
     eac:	b80b883a 	mov	r5,r23
     eb0:	00080cc0 	call	80cc <__sprint_r>
     eb4:	1000081e 	bne	r2,zero,ed8 <___vfprintf_internal_r+0x408>
     eb8:	da000404 	addi	r8,sp,16
     ebc:	003f5306 	br	c0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c0c>
     ec0:	d8802017 	ldw	r2,128(sp)
     ec4:	10000426 	beq	r2,zero,ed8 <___vfprintf_internal_r+0x408>
     ec8:	d9002c17 	ldw	r4,176(sp)
     ecc:	d9801e04 	addi	r6,sp,120
     ed0:	b80b883a 	mov	r5,r23
     ed4:	00080cc0 	call	80cc <__sprint_r>
     ed8:	b880030b 	ldhu	r2,12(r23)
     edc:	1080100c 	andi	r2,r2,64
     ee0:	1005901e 	bne	r2,zero,2524 <___vfprintf_internal_r+0x1a54>
     ee4:	d8802f17 	ldw	r2,188(sp)
     ee8:	dfc04717 	ldw	ra,284(sp)
     eec:	df004617 	ldw	fp,280(sp)
     ef0:	ddc04517 	ldw	r23,276(sp)
     ef4:	dd804417 	ldw	r22,272(sp)
     ef8:	dd404317 	ldw	r21,268(sp)
     efc:	dd004217 	ldw	r20,264(sp)
     f00:	dcc04117 	ldw	r19,260(sp)
     f04:	dc804017 	ldw	r18,256(sp)
     f08:	dc403f17 	ldw	r17,252(sp)
     f0c:	dc003e17 	ldw	r16,248(sp)
     f10:	dec04804 	addi	sp,sp,288
     f14:	f800283a 	ret
     f18:	d9002c17 	ldw	r4,176(sp)
     f1c:	0004d740 	call	4d74 <__sinit>
     f20:	003f0406 	br	b34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000b34>
     f24:	d8802d17 	ldw	r2,180(sp)
     f28:	d9002d17 	ldw	r4,180(sp)
     f2c:	10800017 	ldw	r2,0(r2)
     f30:	d8803115 	stw	r2,196(sp)
     f34:	20800104 	addi	r2,r4,4
     f38:	d9003117 	ldw	r4,196(sp)
     f3c:	203fa716 	blt	r4,zero,ddc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ddc>
     f40:	d8802d15 	stw	r2,180(sp)
     f44:	ac400007 	ldb	r17,0(r21)
     f48:	003f4206 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
     f4c:	ac400007 	ldb	r17,0(r21)
     f50:	aac00044 	addi	r11,r21,1
     f54:	8a872826 	beq	r17,r10,2bf8 <___vfprintf_internal_r+0x2128>
     f58:	88bff404 	addi	r2,r17,-48
     f5c:	0009883a 	mov	r4,zero
     f60:	30867d36 	bltu	r6,r2,2958 <___vfprintf_internal_r+0x1e88>
     f64:	5c400007 	ldb	r17,0(r11)
     f68:	210002a4 	muli	r4,r4,10
     f6c:	5d400044 	addi	r21,r11,1
     f70:	a817883a 	mov	r11,r21
     f74:	2089883a 	add	r4,r4,r2
     f78:	88bff404 	addi	r2,r17,-48
     f7c:	30bff92e 	bgeu	r6,r2,f64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000f64>
     f80:	2005c916 	blt	r4,zero,26a8 <___vfprintf_internal_r+0x1bd8>
     f84:	d9002915 	stw	r4,164(sp)
     f88:	003f3306 	br	c58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c58>
     f8c:	94802014 	ori	r18,r18,128
     f90:	ac400007 	ldb	r17,0(r21)
     f94:	003f2f06 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
     f98:	a809883a 	mov	r4,r21
     f9c:	d8003115 	stw	zero,196(sp)
     fa0:	88bff404 	addi	r2,r17,-48
     fa4:	0017883a 	mov	r11,zero
     fa8:	24400007 	ldb	r17,0(r4)
     fac:	5ac002a4 	muli	r11,r11,10
     fb0:	ad400044 	addi	r21,r21,1
     fb4:	a809883a 	mov	r4,r21
     fb8:	12d7883a 	add	r11,r2,r11
     fbc:	88bff404 	addi	r2,r17,-48
     fc0:	30bff92e 	bgeu	r6,r2,fa8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fa8>
     fc4:	dac03115 	stw	r11,196(sp)
     fc8:	003f2306 	br	c58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c58>
     fcc:	18c03fcc 	andi	r3,r3,255
     fd0:	18072b1e 	bne	r3,zero,2c80 <___vfprintf_internal_r+0x21b0>
     fd4:	94800414 	ori	r18,r18,16
     fd8:	9080080c 	andi	r2,r18,32
     fdc:	10037b26 	beq	r2,zero,1dcc <___vfprintf_internal_r+0x12fc>
     fe0:	d9402d17 	ldw	r5,180(sp)
     fe4:	28800117 	ldw	r2,4(r5)
     fe8:	2cc00017 	ldw	r19,0(r5)
     fec:	29400204 	addi	r5,r5,8
     ff0:	d9402d15 	stw	r5,180(sp)
     ff4:	102d883a 	mov	r22,r2
     ff8:	10044b16 	blt	r2,zero,2128 <___vfprintf_internal_r+0x1658>
     ffc:	d9402917 	ldw	r5,164(sp)
    1000:	df002783 	ldbu	fp,158(sp)
    1004:	2803bc16 	blt	r5,zero,1ef8 <___vfprintf_internal_r+0x1428>
    1008:	00ffdfc4 	movi	r3,-129
    100c:	9d84b03a 	or	r2,r19,r22
    1010:	90e4703a 	and	r18,r18,r3
    1014:	10017726 	beq	r2,zero,15f4 <___vfprintf_internal_r+0xb24>
    1018:	b0038326 	beq	r22,zero,1e28 <___vfprintf_internal_r+0x1358>
    101c:	dc402a15 	stw	r17,168(sp)
    1020:	dc001e04 	addi	r16,sp,120
    1024:	b023883a 	mov	r17,r22
    1028:	402d883a 	mov	r22,r8
    102c:	9809883a 	mov	r4,r19
    1030:	880b883a 	mov	r5,r17
    1034:	01800284 	movi	r6,10
    1038:	000f883a 	mov	r7,zero
    103c:	000a4c40 	call	a4c4 <__umoddi3>
    1040:	10800c04 	addi	r2,r2,48
    1044:	843fffc4 	addi	r16,r16,-1
    1048:	9809883a 	mov	r4,r19
    104c:	880b883a 	mov	r5,r17
    1050:	80800005 	stb	r2,0(r16)
    1054:	01800284 	movi	r6,10
    1058:	000f883a 	mov	r7,zero
    105c:	0009f4c0 	call	9f4c <__udivdi3>
    1060:	1027883a 	mov	r19,r2
    1064:	10c4b03a 	or	r2,r2,r3
    1068:	1823883a 	mov	r17,r3
    106c:	103fef1e 	bne	r2,zero,102c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000102c>
    1070:	d8c02817 	ldw	r3,160(sp)
    1074:	dc402a17 	ldw	r17,168(sp)
    1078:	b011883a 	mov	r8,r22
    107c:	1c07c83a 	sub	r3,r3,r16
    1080:	d8c02e15 	stw	r3,184(sp)
    1084:	00005906 	br	11ec <___vfprintf_internal_r+0x71c>
    1088:	18c03fcc 	andi	r3,r3,255
    108c:	1806fa1e 	bne	r3,zero,2c78 <___vfprintf_internal_r+0x21a8>
    1090:	9080020c 	andi	r2,r18,8
    1094:	10048a26 	beq	r2,zero,22c0 <___vfprintf_internal_r+0x17f0>
    1098:	d8c02d17 	ldw	r3,180(sp)
    109c:	d9002d17 	ldw	r4,180(sp)
    10a0:	d9402d17 	ldw	r5,180(sp)
    10a4:	18c00017 	ldw	r3,0(r3)
    10a8:	21000117 	ldw	r4,4(r4)
    10ac:	29400204 	addi	r5,r5,8
    10b0:	d8c03615 	stw	r3,216(sp)
    10b4:	d9003815 	stw	r4,224(sp)
    10b8:	d9402d15 	stw	r5,180(sp)
    10bc:	d9003617 	ldw	r4,216(sp)
    10c0:	d9403817 	ldw	r5,224(sp)
    10c4:	da003d15 	stw	r8,244(sp)
    10c8:	04000044 	movi	r16,1
    10cc:	0007cf00 	call	7cf0 <__fpclassifyd>
    10d0:	da003d17 	ldw	r8,244(sp)
    10d4:	14041f1e 	bne	r2,r16,2154 <___vfprintf_internal_r+0x1684>
    10d8:	d9003617 	ldw	r4,216(sp)
    10dc:	d9403817 	ldw	r5,224(sp)
    10e0:	000d883a 	mov	r6,zero
    10e4:	000f883a 	mov	r7,zero
    10e8:	000bea80 	call	bea8 <__ledf2>
    10ec:	da003d17 	ldw	r8,244(sp)
    10f0:	1005be16 	blt	r2,zero,27ec <___vfprintf_internal_r+0x1d1c>
    10f4:	df002783 	ldbu	fp,158(sp)
    10f8:	008011c4 	movi	r2,71
    10fc:	1445330e 	bge	r2,r17,25cc <___vfprintf_internal_r+0x1afc>
    1100:	04000074 	movhi	r16,1
    1104:	84028904 	addi	r16,r16,2596
    1108:	00c000c4 	movi	r3,3
    110c:	00bfdfc4 	movi	r2,-129
    1110:	d8c02a15 	stw	r3,168(sp)
    1114:	90a4703a 	and	r18,r18,r2
    1118:	d8c02e15 	stw	r3,184(sp)
    111c:	d8002915 	stw	zero,164(sp)
    1120:	d8003215 	stw	zero,200(sp)
    1124:	00003706 	br	1204 <___vfprintf_internal_r+0x734>
    1128:	94800214 	ori	r18,r18,8
    112c:	ac400007 	ldb	r17,0(r21)
    1130:	003ec806 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    1134:	18c03fcc 	andi	r3,r3,255
    1138:	1806db1e 	bne	r3,zero,2ca8 <___vfprintf_internal_r+0x21d8>
    113c:	94800414 	ori	r18,r18,16
    1140:	9080080c 	andi	r2,r18,32
    1144:	1002d826 	beq	r2,zero,1ca8 <___vfprintf_internal_r+0x11d8>
    1148:	d9402d17 	ldw	r5,180(sp)
    114c:	d8c02917 	ldw	r3,164(sp)
    1150:	d8002785 	stb	zero,158(sp)
    1154:	28800204 	addi	r2,r5,8
    1158:	2cc00017 	ldw	r19,0(r5)
    115c:	2d800117 	ldw	r22,4(r5)
    1160:	18048f16 	blt	r3,zero,23a0 <___vfprintf_internal_r+0x18d0>
    1164:	013fdfc4 	movi	r4,-129
    1168:	9d86b03a 	or	r3,r19,r22
    116c:	d8802d15 	stw	r2,180(sp)
    1170:	9124703a 	and	r18,r18,r4
    1174:	1802d91e 	bne	r3,zero,1cdc <___vfprintf_internal_r+0x120c>
    1178:	d8c02917 	ldw	r3,164(sp)
    117c:	0039883a 	mov	fp,zero
    1180:	1805c326 	beq	r3,zero,2890 <___vfprintf_internal_r+0x1dc0>
    1184:	0027883a 	mov	r19,zero
    1188:	002d883a 	mov	r22,zero
    118c:	dc001e04 	addi	r16,sp,120
    1190:	9806d0fa 	srli	r3,r19,3
    1194:	b008977a 	slli	r4,r22,29
    1198:	b02cd0fa 	srli	r22,r22,3
    119c:	9cc001cc 	andi	r19,r19,7
    11a0:	98800c04 	addi	r2,r19,48
    11a4:	843fffc4 	addi	r16,r16,-1
    11a8:	20e6b03a 	or	r19,r4,r3
    11ac:	80800005 	stb	r2,0(r16)
    11b0:	9d86b03a 	or	r3,r19,r22
    11b4:	183ff61e 	bne	r3,zero,1190 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001190>
    11b8:	90c0004c 	andi	r3,r18,1
    11bc:	18013b26 	beq	r3,zero,16ac <___vfprintf_internal_r+0xbdc>
    11c0:	10803fcc 	andi	r2,r2,255
    11c4:	1080201c 	xori	r2,r2,128
    11c8:	10bfe004 	addi	r2,r2,-128
    11cc:	00c00c04 	movi	r3,48
    11d0:	10c13626 	beq	r2,r3,16ac <___vfprintf_internal_r+0xbdc>
    11d4:	80ffffc5 	stb	r3,-1(r16)
    11d8:	d8c02817 	ldw	r3,160(sp)
    11dc:	80bfffc4 	addi	r2,r16,-1
    11e0:	1021883a 	mov	r16,r2
    11e4:	1887c83a 	sub	r3,r3,r2
    11e8:	d8c02e15 	stw	r3,184(sp)
    11ec:	d8802e17 	ldw	r2,184(sp)
    11f0:	d9002917 	ldw	r4,164(sp)
    11f4:	1100010e 	bge	r2,r4,11fc <___vfprintf_internal_r+0x72c>
    11f8:	2005883a 	mov	r2,r4
    11fc:	d8802a15 	stw	r2,168(sp)
    1200:	d8003215 	stw	zero,200(sp)
    1204:	e7003fcc 	andi	fp,fp,255
    1208:	e700201c 	xori	fp,fp,128
    120c:	e73fe004 	addi	fp,fp,-128
    1210:	e0000326 	beq	fp,zero,1220 <___vfprintf_internal_r+0x750>
    1214:	d8c02a17 	ldw	r3,168(sp)
    1218:	18c00044 	addi	r3,r3,1
    121c:	d8c02a15 	stw	r3,168(sp)
    1220:	90c0008c 	andi	r3,r18,2
    1224:	d8c02b15 	stw	r3,172(sp)
    1228:	18000326 	beq	r3,zero,1238 <___vfprintf_internal_r+0x768>
    122c:	d8c02a17 	ldw	r3,168(sp)
    1230:	18c00084 	addi	r3,r3,2
    1234:	d8c02a15 	stw	r3,168(sp)
    1238:	90c0210c 	andi	r3,r18,132
    123c:	d8c03015 	stw	r3,192(sp)
    1240:	1801a31e 	bne	r3,zero,18d0 <___vfprintf_internal_r+0xe00>
    1244:	d9003117 	ldw	r4,196(sp)
    1248:	d8c02a17 	ldw	r3,168(sp)
    124c:	20e7c83a 	sub	r19,r4,r3
    1250:	04c19f0e 	bge	zero,r19,18d0 <___vfprintf_internal_r+0xe00>
    1254:	02400404 	movi	r9,16
    1258:	d8c02017 	ldw	r3,128(sp)
    125c:	d8801f17 	ldw	r2,124(sp)
    1260:	4cc50d0e 	bge	r9,r19,2698 <___vfprintf_internal_r+0x1bc8>
    1264:	01400074 	movhi	r5,1
    1268:	29429c84 	addi	r5,r5,2674
    126c:	dc403b15 	stw	r17,236(sp)
    1270:	d9403515 	stw	r5,212(sp)
    1274:	9823883a 	mov	r17,r19
    1278:	482d883a 	mov	r22,r9
    127c:	9027883a 	mov	r19,r18
    1280:	070001c4 	movi	fp,7
    1284:	8025883a 	mov	r18,r16
    1288:	dc002c17 	ldw	r16,176(sp)
    128c:	00000306 	br	129c <___vfprintf_internal_r+0x7cc>
    1290:	8c7ffc04 	addi	r17,r17,-16
    1294:	42000204 	addi	r8,r8,8
    1298:	b440130e 	bge	r22,r17,12e8 <___vfprintf_internal_r+0x818>
    129c:	01000074 	movhi	r4,1
    12a0:	18c00404 	addi	r3,r3,16
    12a4:	10800044 	addi	r2,r2,1
    12a8:	21029c84 	addi	r4,r4,2674
    12ac:	41000015 	stw	r4,0(r8)
    12b0:	45800115 	stw	r22,4(r8)
    12b4:	d8c02015 	stw	r3,128(sp)
    12b8:	d8801f15 	stw	r2,124(sp)
    12bc:	e0bff40e 	bge	fp,r2,1290 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001290>
    12c0:	d9801e04 	addi	r6,sp,120
    12c4:	b80b883a 	mov	r5,r23
    12c8:	8009883a 	mov	r4,r16
    12cc:	00080cc0 	call	80cc <__sprint_r>
    12d0:	103f011e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    12d4:	8c7ffc04 	addi	r17,r17,-16
    12d8:	d8c02017 	ldw	r3,128(sp)
    12dc:	d8801f17 	ldw	r2,124(sp)
    12e0:	da000404 	addi	r8,sp,16
    12e4:	b47fed16 	blt	r22,r17,129c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000129c>
    12e8:	9021883a 	mov	r16,r18
    12ec:	9825883a 	mov	r18,r19
    12f0:	8827883a 	mov	r19,r17
    12f4:	dc403b17 	ldw	r17,236(sp)
    12f8:	d9403517 	ldw	r5,212(sp)
    12fc:	98c7883a 	add	r3,r19,r3
    1300:	10800044 	addi	r2,r2,1
    1304:	41400015 	stw	r5,0(r8)
    1308:	44c00115 	stw	r19,4(r8)
    130c:	d8c02015 	stw	r3,128(sp)
    1310:	d8801f15 	stw	r2,124(sp)
    1314:	010001c4 	movi	r4,7
    1318:	2082a316 	blt	r4,r2,1da8 <___vfprintf_internal_r+0x12d8>
    131c:	df002787 	ldb	fp,158(sp)
    1320:	42000204 	addi	r8,r8,8
    1324:	e0000c26 	beq	fp,zero,1358 <___vfprintf_internal_r+0x888>
    1328:	d8801f17 	ldw	r2,124(sp)
    132c:	d9002784 	addi	r4,sp,158
    1330:	18c00044 	addi	r3,r3,1
    1334:	10800044 	addi	r2,r2,1
    1338:	41000015 	stw	r4,0(r8)
    133c:	01000044 	movi	r4,1
    1340:	41000115 	stw	r4,4(r8)
    1344:	d8c02015 	stw	r3,128(sp)
    1348:	d8801f15 	stw	r2,124(sp)
    134c:	010001c4 	movi	r4,7
    1350:	20823c16 	blt	r4,r2,1c44 <___vfprintf_internal_r+0x1174>
    1354:	42000204 	addi	r8,r8,8
    1358:	d8802b17 	ldw	r2,172(sp)
    135c:	10000c26 	beq	r2,zero,1390 <___vfprintf_internal_r+0x8c0>
    1360:	d8801f17 	ldw	r2,124(sp)
    1364:	d9002704 	addi	r4,sp,156
    1368:	18c00084 	addi	r3,r3,2
    136c:	10800044 	addi	r2,r2,1
    1370:	41000015 	stw	r4,0(r8)
    1374:	01000084 	movi	r4,2
    1378:	41000115 	stw	r4,4(r8)
    137c:	d8c02015 	stw	r3,128(sp)
    1380:	d8801f15 	stw	r2,124(sp)
    1384:	010001c4 	movi	r4,7
    1388:	20823616 	blt	r4,r2,1c64 <___vfprintf_internal_r+0x1194>
    138c:	42000204 	addi	r8,r8,8
    1390:	d9003017 	ldw	r4,192(sp)
    1394:	00802004 	movi	r2,128
    1398:	20819926 	beq	r4,r2,1a00 <___vfprintf_internal_r+0xf30>
    139c:	d9402917 	ldw	r5,164(sp)
    13a0:	d8802e17 	ldw	r2,184(sp)
    13a4:	28adc83a 	sub	r22,r5,r2
    13a8:	0580310e 	bge	zero,r22,1470 <___vfprintf_internal_r+0x9a0>
    13ac:	07000404 	movi	fp,16
    13b0:	d8801f17 	ldw	r2,124(sp)
    13b4:	e584140e 	bge	fp,r22,2408 <___vfprintf_internal_r+0x1938>
    13b8:	01400074 	movhi	r5,1
    13bc:	29429884 	addi	r5,r5,2658
    13c0:	dc402915 	stw	r17,164(sp)
    13c4:	d9402b15 	stw	r5,172(sp)
    13c8:	b023883a 	mov	r17,r22
    13cc:	04c001c4 	movi	r19,7
    13d0:	a82d883a 	mov	r22,r21
    13d4:	902b883a 	mov	r21,r18
    13d8:	8025883a 	mov	r18,r16
    13dc:	dc002c17 	ldw	r16,176(sp)
    13e0:	00000306 	br	13f0 <___vfprintf_internal_r+0x920>
    13e4:	8c7ffc04 	addi	r17,r17,-16
    13e8:	42000204 	addi	r8,r8,8
    13ec:	e440110e 	bge	fp,r17,1434 <___vfprintf_internal_r+0x964>
    13f0:	18c00404 	addi	r3,r3,16
    13f4:	10800044 	addi	r2,r2,1
    13f8:	45000015 	stw	r20,0(r8)
    13fc:	47000115 	stw	fp,4(r8)
    1400:	d8c02015 	stw	r3,128(sp)
    1404:	d8801f15 	stw	r2,124(sp)
    1408:	98bff60e 	bge	r19,r2,13e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00013e4>
    140c:	d9801e04 	addi	r6,sp,120
    1410:	b80b883a 	mov	r5,r23
    1414:	8009883a 	mov	r4,r16
    1418:	00080cc0 	call	80cc <__sprint_r>
    141c:	103eae1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1420:	8c7ffc04 	addi	r17,r17,-16
    1424:	d8c02017 	ldw	r3,128(sp)
    1428:	d8801f17 	ldw	r2,124(sp)
    142c:	da000404 	addi	r8,sp,16
    1430:	e47fef16 	blt	fp,r17,13f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00013f0>
    1434:	9021883a 	mov	r16,r18
    1438:	a825883a 	mov	r18,r21
    143c:	b02b883a 	mov	r21,r22
    1440:	882d883a 	mov	r22,r17
    1444:	dc402917 	ldw	r17,164(sp)
    1448:	d9002b17 	ldw	r4,172(sp)
    144c:	1d87883a 	add	r3,r3,r22
    1450:	10800044 	addi	r2,r2,1
    1454:	41000015 	stw	r4,0(r8)
    1458:	45800115 	stw	r22,4(r8)
    145c:	d8c02015 	stw	r3,128(sp)
    1460:	d8801f15 	stw	r2,124(sp)
    1464:	010001c4 	movi	r4,7
    1468:	2081ee16 	blt	r4,r2,1c24 <___vfprintf_internal_r+0x1154>
    146c:	42000204 	addi	r8,r8,8
    1470:	9080400c 	andi	r2,r18,256
    1474:	1001181e 	bne	r2,zero,18d8 <___vfprintf_internal_r+0xe08>
    1478:	d9402e17 	ldw	r5,184(sp)
    147c:	d8801f17 	ldw	r2,124(sp)
    1480:	44000015 	stw	r16,0(r8)
    1484:	1947883a 	add	r3,r3,r5
    1488:	10800044 	addi	r2,r2,1
    148c:	41400115 	stw	r5,4(r8)
    1490:	d8c02015 	stw	r3,128(sp)
    1494:	d8801f15 	stw	r2,124(sp)
    1498:	010001c4 	movi	r4,7
    149c:	2081d316 	blt	r4,r2,1bec <___vfprintf_internal_r+0x111c>
    14a0:	42000204 	addi	r8,r8,8
    14a4:	9480010c 	andi	r18,r18,4
    14a8:	90003226 	beq	r18,zero,1574 <___vfprintf_internal_r+0xaa4>
    14ac:	d9403117 	ldw	r5,196(sp)
    14b0:	d8802a17 	ldw	r2,168(sp)
    14b4:	28a1c83a 	sub	r16,r5,r2
    14b8:	04002e0e 	bge	zero,r16,1574 <___vfprintf_internal_r+0xaa4>
    14bc:	04400404 	movi	r17,16
    14c0:	d8801f17 	ldw	r2,124(sp)
    14c4:	8c04a20e 	bge	r17,r16,2750 <___vfprintf_internal_r+0x1c80>
    14c8:	01400074 	movhi	r5,1
    14cc:	29429c84 	addi	r5,r5,2674
    14d0:	d9403515 	stw	r5,212(sp)
    14d4:	048001c4 	movi	r18,7
    14d8:	dcc02c17 	ldw	r19,176(sp)
    14dc:	00000306 	br	14ec <___vfprintf_internal_r+0xa1c>
    14e0:	843ffc04 	addi	r16,r16,-16
    14e4:	42000204 	addi	r8,r8,8
    14e8:	8c00130e 	bge	r17,r16,1538 <___vfprintf_internal_r+0xa68>
    14ec:	01000074 	movhi	r4,1
    14f0:	18c00404 	addi	r3,r3,16
    14f4:	10800044 	addi	r2,r2,1
    14f8:	21029c84 	addi	r4,r4,2674
    14fc:	41000015 	stw	r4,0(r8)
    1500:	44400115 	stw	r17,4(r8)
    1504:	d8c02015 	stw	r3,128(sp)
    1508:	d8801f15 	stw	r2,124(sp)
    150c:	90bff40e 	bge	r18,r2,14e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014e0>
    1510:	d9801e04 	addi	r6,sp,120
    1514:	b80b883a 	mov	r5,r23
    1518:	9809883a 	mov	r4,r19
    151c:	00080cc0 	call	80cc <__sprint_r>
    1520:	103e6d1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1524:	843ffc04 	addi	r16,r16,-16
    1528:	d8c02017 	ldw	r3,128(sp)
    152c:	d8801f17 	ldw	r2,124(sp)
    1530:	da000404 	addi	r8,sp,16
    1534:	8c3fed16 	blt	r17,r16,14ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014ec>
    1538:	d9403517 	ldw	r5,212(sp)
    153c:	1c07883a 	add	r3,r3,r16
    1540:	10800044 	addi	r2,r2,1
    1544:	41400015 	stw	r5,0(r8)
    1548:	44000115 	stw	r16,4(r8)
    154c:	d8c02015 	stw	r3,128(sp)
    1550:	d8801f15 	stw	r2,124(sp)
    1554:	010001c4 	movi	r4,7
    1558:	2080060e 	bge	r4,r2,1574 <___vfprintf_internal_r+0xaa4>
    155c:	d9002c17 	ldw	r4,176(sp)
    1560:	d9801e04 	addi	r6,sp,120
    1564:	b80b883a 	mov	r5,r23
    1568:	00080cc0 	call	80cc <__sprint_r>
    156c:	103e5a1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1570:	d8c02017 	ldw	r3,128(sp)
    1574:	d8803117 	ldw	r2,196(sp)
    1578:	d9002a17 	ldw	r4,168(sp)
    157c:	1100010e 	bge	r2,r4,1584 <___vfprintf_internal_r+0xab4>
    1580:	2005883a 	mov	r2,r4
    1584:	d9402f17 	ldw	r5,188(sp)
    1588:	288b883a 	add	r5,r5,r2
    158c:	d9402f15 	stw	r5,188(sp)
    1590:	18019e1e 	bne	r3,zero,1c0c <___vfprintf_internal_r+0x113c>
    1594:	a8800007 	ldb	r2,0(r21)
    1598:	d8001f15 	stw	zero,124(sp)
    159c:	da000404 	addi	r8,sp,16
    15a0:	103d851e 	bne	r2,zero,bb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bb8>
    15a4:	a821883a 	mov	r16,r21
    15a8:	003d9b06 	br	c18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c18>
    15ac:	18c03fcc 	andi	r3,r3,255
    15b0:	1805c11e 	bne	r3,zero,2cb8 <___vfprintf_internal_r+0x21e8>
    15b4:	94800414 	ori	r18,r18,16
    15b8:	9080080c 	andi	r2,r18,32
    15bc:	10020c26 	beq	r2,zero,1df0 <___vfprintf_internal_r+0x1320>
    15c0:	d8802d17 	ldw	r2,180(sp)
    15c4:	d9002917 	ldw	r4,164(sp)
    15c8:	d8002785 	stb	zero,158(sp)
    15cc:	10c00204 	addi	r3,r2,8
    15d0:	14c00017 	ldw	r19,0(r2)
    15d4:	15800117 	ldw	r22,4(r2)
    15d8:	20040f16 	blt	r4,zero,2618 <___vfprintf_internal_r+0x1b48>
    15dc:	013fdfc4 	movi	r4,-129
    15e0:	9d84b03a 	or	r2,r19,r22
    15e4:	d8c02d15 	stw	r3,180(sp)
    15e8:	9124703a 	and	r18,r18,r4
    15ec:	0039883a 	mov	fp,zero
    15f0:	103e891e 	bne	r2,zero,1018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001018>
    15f4:	d9002917 	ldw	r4,164(sp)
    15f8:	2002c11e 	bne	r4,zero,2100 <___vfprintf_internal_r+0x1630>
    15fc:	d8002915 	stw	zero,164(sp)
    1600:	d8002e15 	stw	zero,184(sp)
    1604:	dc001e04 	addi	r16,sp,120
    1608:	003ef806 	br	11ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00011ec>
    160c:	18c03fcc 	andi	r3,r3,255
    1610:	18059d1e 	bne	r3,zero,2c88 <___vfprintf_internal_r+0x21b8>
    1614:	01400074 	movhi	r5,1
    1618:	29428c04 	addi	r5,r5,2608
    161c:	d9403915 	stw	r5,228(sp)
    1620:	9080080c 	andi	r2,r18,32
    1624:	10005226 	beq	r2,zero,1770 <___vfprintf_internal_r+0xca0>
    1628:	d8802d17 	ldw	r2,180(sp)
    162c:	14c00017 	ldw	r19,0(r2)
    1630:	15800117 	ldw	r22,4(r2)
    1634:	10800204 	addi	r2,r2,8
    1638:	d8802d15 	stw	r2,180(sp)
    163c:	9080004c 	andi	r2,r18,1
    1640:	10019026 	beq	r2,zero,1c84 <___vfprintf_internal_r+0x11b4>
    1644:	9d84b03a 	or	r2,r19,r22
    1648:	10036926 	beq	r2,zero,23f0 <___vfprintf_internal_r+0x1920>
    164c:	d8c02917 	ldw	r3,164(sp)
    1650:	00800c04 	movi	r2,48
    1654:	d8802705 	stb	r2,156(sp)
    1658:	dc402745 	stb	r17,157(sp)
    165c:	d8002785 	stb	zero,158(sp)
    1660:	90800094 	ori	r2,r18,2
    1664:	18045d16 	blt	r3,zero,27dc <___vfprintf_internal_r+0x1d0c>
    1668:	00bfdfc4 	movi	r2,-129
    166c:	90a4703a 	and	r18,r18,r2
    1670:	94800094 	ori	r18,r18,2
    1674:	0039883a 	mov	fp,zero
    1678:	d9003917 	ldw	r4,228(sp)
    167c:	dc001e04 	addi	r16,sp,120
    1680:	988003cc 	andi	r2,r19,15
    1684:	b006973a 	slli	r3,r22,28
    1688:	2085883a 	add	r2,r4,r2
    168c:	9826d13a 	srli	r19,r19,4
    1690:	10800003 	ldbu	r2,0(r2)
    1694:	b02cd13a 	srli	r22,r22,4
    1698:	843fffc4 	addi	r16,r16,-1
    169c:	1ce6b03a 	or	r19,r3,r19
    16a0:	80800005 	stb	r2,0(r16)
    16a4:	9d84b03a 	or	r2,r19,r22
    16a8:	103ff51e 	bne	r2,zero,1680 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001680>
    16ac:	d8c02817 	ldw	r3,160(sp)
    16b0:	1c07c83a 	sub	r3,r3,r16
    16b4:	d8c02e15 	stw	r3,184(sp)
    16b8:	003ecc06 	br	11ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00011ec>
    16bc:	18c03fcc 	andi	r3,r3,255
    16c0:	183e9f26 	beq	r3,zero,1140 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001140>
    16c4:	d9c02785 	stb	r7,158(sp)
    16c8:	003e9d06 	br	1140 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001140>
    16cc:	00c00044 	movi	r3,1
    16d0:	01c00ac4 	movi	r7,43
    16d4:	ac400007 	ldb	r17,0(r21)
    16d8:	003d5e06 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    16dc:	94800814 	ori	r18,r18,32
    16e0:	ac400007 	ldb	r17,0(r21)
    16e4:	003d5b06 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    16e8:	d8c02d17 	ldw	r3,180(sp)
    16ec:	d8002785 	stb	zero,158(sp)
    16f0:	1c000017 	ldw	r16,0(r3)
    16f4:	1cc00104 	addi	r19,r3,4
    16f8:	80041926 	beq	r16,zero,2760 <___vfprintf_internal_r+0x1c90>
    16fc:	d9002917 	ldw	r4,164(sp)
    1700:	2003d016 	blt	r4,zero,2644 <___vfprintf_internal_r+0x1b74>
    1704:	200d883a 	mov	r6,r4
    1708:	000b883a 	mov	r5,zero
    170c:	8009883a 	mov	r4,r16
    1710:	da003d15 	stw	r8,244(sp)
    1714:	00062e00 	call	62e0 <memchr>
    1718:	da003d17 	ldw	r8,244(sp)
    171c:	10045426 	beq	r2,zero,2870 <___vfprintf_internal_r+0x1da0>
    1720:	1405c83a 	sub	r2,r2,r16
    1724:	d8802e15 	stw	r2,184(sp)
    1728:	1003cc16 	blt	r2,zero,265c <___vfprintf_internal_r+0x1b8c>
    172c:	df002783 	ldbu	fp,158(sp)
    1730:	d8802a15 	stw	r2,168(sp)
    1734:	dcc02d15 	stw	r19,180(sp)
    1738:	d8002915 	stw	zero,164(sp)
    173c:	d8003215 	stw	zero,200(sp)
    1740:	003eb006 	br	1204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001204>
    1744:	18c03fcc 	andi	r3,r3,255
    1748:	183f9b26 	beq	r3,zero,15b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015b8>
    174c:	d9c02785 	stb	r7,158(sp)
    1750:	003f9906 	br	15b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015b8>
    1754:	18c03fcc 	andi	r3,r3,255
    1758:	1805551e 	bne	r3,zero,2cb0 <___vfprintf_internal_r+0x21e0>
    175c:	01400074 	movhi	r5,1
    1760:	29429104 	addi	r5,r5,2628
    1764:	d9403915 	stw	r5,228(sp)
    1768:	9080080c 	andi	r2,r18,32
    176c:	103fae1e 	bne	r2,zero,1628 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001628>
    1770:	9080040c 	andi	r2,r18,16
    1774:	1002de26 	beq	r2,zero,22f0 <___vfprintf_internal_r+0x1820>
    1778:	d8c02d17 	ldw	r3,180(sp)
    177c:	002d883a 	mov	r22,zero
    1780:	1cc00017 	ldw	r19,0(r3)
    1784:	18c00104 	addi	r3,r3,4
    1788:	d8c02d15 	stw	r3,180(sp)
    178c:	003fab06 	br	163c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000163c>
    1790:	38803fcc 	andi	r2,r7,255
    1794:	1080201c 	xori	r2,r2,128
    1798:	10bfe004 	addi	r2,r2,-128
    179c:	1002d21e 	bne	r2,zero,22e8 <___vfprintf_internal_r+0x1818>
    17a0:	00c00044 	movi	r3,1
    17a4:	01c00804 	movi	r7,32
    17a8:	ac400007 	ldb	r17,0(r21)
    17ac:	003d2906 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    17b0:	94800054 	ori	r18,r18,1
    17b4:	ac400007 	ldb	r17,0(r21)
    17b8:	003d2606 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    17bc:	18c03fcc 	andi	r3,r3,255
    17c0:	183e0526 	beq	r3,zero,fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fd8>
    17c4:	d9c02785 	stb	r7,158(sp)
    17c8:	003e0306 	br	fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fd8>
    17cc:	94801014 	ori	r18,r18,64
    17d0:	ac400007 	ldb	r17,0(r21)
    17d4:	003d1f06 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    17d8:	ac400007 	ldb	r17,0(r21)
    17dc:	8a438726 	beq	r17,r9,25fc <___vfprintf_internal_r+0x1b2c>
    17e0:	94800414 	ori	r18,r18,16
    17e4:	003d1b06 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    17e8:	18c03fcc 	andi	r3,r3,255
    17ec:	1805341e 	bne	r3,zero,2cc0 <___vfprintf_internal_r+0x21f0>
    17f0:	9080080c 	andi	r2,r18,32
    17f4:	1002cd26 	beq	r2,zero,232c <___vfprintf_internal_r+0x185c>
    17f8:	d9402d17 	ldw	r5,180(sp)
    17fc:	d9002f17 	ldw	r4,188(sp)
    1800:	28800017 	ldw	r2,0(r5)
    1804:	2007d7fa 	srai	r3,r4,31
    1808:	29400104 	addi	r5,r5,4
    180c:	d9402d15 	stw	r5,180(sp)
    1810:	11000015 	stw	r4,0(r2)
    1814:	10c00115 	stw	r3,4(r2)
    1818:	003ce506 	br	bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bb0>
    181c:	d8c02d17 	ldw	r3,180(sp)
    1820:	d9002d17 	ldw	r4,180(sp)
    1824:	d8002785 	stb	zero,158(sp)
    1828:	18800017 	ldw	r2,0(r3)
    182c:	21000104 	addi	r4,r4,4
    1830:	00c00044 	movi	r3,1
    1834:	d8c02a15 	stw	r3,168(sp)
    1838:	d8801405 	stb	r2,80(sp)
    183c:	d9002d15 	stw	r4,180(sp)
    1840:	d8c02e15 	stw	r3,184(sp)
    1844:	d8002915 	stw	zero,164(sp)
    1848:	d8003215 	stw	zero,200(sp)
    184c:	dc001404 	addi	r16,sp,80
    1850:	0039883a 	mov	fp,zero
    1854:	003e7206 	br	1220 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001220>
    1858:	01000074 	movhi	r4,1
    185c:	21029104 	addi	r4,r4,2628
    1860:	0039883a 	mov	fp,zero
    1864:	d9003915 	stw	r4,228(sp)
    1868:	04401e04 	movi	r17,120
    186c:	003f8206 	br	1678 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001678>
    1870:	18c03fcc 	andi	r3,r3,255
    1874:	1805061e 	bne	r3,zero,2c90 <___vfprintf_internal_r+0x21c0>
    1878:	883d9126 	beq	r17,zero,ec0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ec0>
    187c:	00c00044 	movi	r3,1
    1880:	d8c02a15 	stw	r3,168(sp)
    1884:	dc401405 	stb	r17,80(sp)
    1888:	d8002785 	stb	zero,158(sp)
    188c:	003fec06 	br	1840 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001840>
    1890:	01400074 	movhi	r5,1
    1894:	29429104 	addi	r5,r5,2628
    1898:	d9403915 	stw	r5,228(sp)
    189c:	d8c02d15 	stw	r3,180(sp)
    18a0:	1025883a 	mov	r18,r2
    18a4:	04401e04 	movi	r17,120
    18a8:	9d84b03a 	or	r2,r19,r22
    18ac:	1000fc1e 	bne	r2,zero,1ca0 <___vfprintf_internal_r+0x11d0>
    18b0:	0039883a 	mov	fp,zero
    18b4:	00800084 	movi	r2,2
    18b8:	10803fcc 	andi	r2,r2,255
    18bc:	00c00044 	movi	r3,1
    18c0:	10c20f26 	beq	r2,r3,2100 <___vfprintf_internal_r+0x1630>
    18c4:	00c00084 	movi	r3,2
    18c8:	10fd6326 	beq	r2,r3,e58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000e58>
    18cc:	003e2d06 	br	1184 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001184>
    18d0:	d8c02017 	ldw	r3,128(sp)
    18d4:	003e9306 	br	1324 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001324>
    18d8:	00801944 	movi	r2,101
    18dc:	14407e0e 	bge	r2,r17,1ad8 <___vfprintf_internal_r+0x1008>
    18e0:	d9003617 	ldw	r4,216(sp)
    18e4:	d9403817 	ldw	r5,224(sp)
    18e8:	000d883a 	mov	r6,zero
    18ec:	000f883a 	mov	r7,zero
    18f0:	d8c03c15 	stw	r3,240(sp)
    18f4:	da003d15 	stw	r8,244(sp)
    18f8:	000bd440 	call	bd44 <__eqdf2>
    18fc:	d8c03c17 	ldw	r3,240(sp)
    1900:	da003d17 	ldw	r8,244(sp)
    1904:	1000f71e 	bne	r2,zero,1ce4 <___vfprintf_internal_r+0x1214>
    1908:	d8801f17 	ldw	r2,124(sp)
    190c:	01000074 	movhi	r4,1
    1910:	21029804 	addi	r4,r4,2656
    1914:	18c00044 	addi	r3,r3,1
    1918:	10800044 	addi	r2,r2,1
    191c:	41000015 	stw	r4,0(r8)
    1920:	01000044 	movi	r4,1
    1924:	41000115 	stw	r4,4(r8)
    1928:	d8c02015 	stw	r3,128(sp)
    192c:	d8801f15 	stw	r2,124(sp)
    1930:	010001c4 	movi	r4,7
    1934:	2082b816 	blt	r4,r2,2418 <___vfprintf_internal_r+0x1948>
    1938:	42000204 	addi	r8,r8,8
    193c:	d8802617 	ldw	r2,152(sp)
    1940:	d9403317 	ldw	r5,204(sp)
    1944:	11400216 	blt	r2,r5,1950 <___vfprintf_internal_r+0xe80>
    1948:	9080004c 	andi	r2,r18,1
    194c:	103ed526 	beq	r2,zero,14a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a4>
    1950:	d8803717 	ldw	r2,220(sp)
    1954:	d9003417 	ldw	r4,208(sp)
    1958:	d9403717 	ldw	r5,220(sp)
    195c:	1887883a 	add	r3,r3,r2
    1960:	d8801f17 	ldw	r2,124(sp)
    1964:	41000015 	stw	r4,0(r8)
    1968:	41400115 	stw	r5,4(r8)
    196c:	10800044 	addi	r2,r2,1
    1970:	d8c02015 	stw	r3,128(sp)
    1974:	d8801f15 	stw	r2,124(sp)
    1978:	010001c4 	movi	r4,7
    197c:	20832916 	blt	r4,r2,2624 <___vfprintf_internal_r+0x1b54>
    1980:	42000204 	addi	r8,r8,8
    1984:	d8803317 	ldw	r2,204(sp)
    1988:	143fffc4 	addi	r16,r2,-1
    198c:	043ec50e 	bge	zero,r16,14a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a4>
    1990:	04400404 	movi	r17,16
    1994:	d8801f17 	ldw	r2,124(sp)
    1998:	8c00880e 	bge	r17,r16,1bbc <___vfprintf_internal_r+0x10ec>
    199c:	01400074 	movhi	r5,1
    19a0:	29429884 	addi	r5,r5,2658
    19a4:	d9402b15 	stw	r5,172(sp)
    19a8:	058001c4 	movi	r22,7
    19ac:	dcc02c17 	ldw	r19,176(sp)
    19b0:	00000306 	br	19c0 <___vfprintf_internal_r+0xef0>
    19b4:	42000204 	addi	r8,r8,8
    19b8:	843ffc04 	addi	r16,r16,-16
    19bc:	8c00820e 	bge	r17,r16,1bc8 <___vfprintf_internal_r+0x10f8>
    19c0:	18c00404 	addi	r3,r3,16
    19c4:	10800044 	addi	r2,r2,1
    19c8:	45000015 	stw	r20,0(r8)
    19cc:	44400115 	stw	r17,4(r8)
    19d0:	d8c02015 	stw	r3,128(sp)
    19d4:	d8801f15 	stw	r2,124(sp)
    19d8:	b0bff60e 	bge	r22,r2,19b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00019b4>
    19dc:	d9801e04 	addi	r6,sp,120
    19e0:	b80b883a 	mov	r5,r23
    19e4:	9809883a 	mov	r4,r19
    19e8:	00080cc0 	call	80cc <__sprint_r>
    19ec:	103d3a1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    19f0:	d8c02017 	ldw	r3,128(sp)
    19f4:	d8801f17 	ldw	r2,124(sp)
    19f8:	da000404 	addi	r8,sp,16
    19fc:	003fee06 	br	19b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00019b8>
    1a00:	d9403117 	ldw	r5,196(sp)
    1a04:	d8802a17 	ldw	r2,168(sp)
    1a08:	28adc83a 	sub	r22,r5,r2
    1a0c:	05be630e 	bge	zero,r22,139c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000139c>
    1a10:	07000404 	movi	fp,16
    1a14:	d8801f17 	ldw	r2,124(sp)
    1a18:	e5838f0e 	bge	fp,r22,2858 <___vfprintf_internal_r+0x1d88>
    1a1c:	01400074 	movhi	r5,1
    1a20:	29429884 	addi	r5,r5,2658
    1a24:	dc403015 	stw	r17,192(sp)
    1a28:	d9402b15 	stw	r5,172(sp)
    1a2c:	b023883a 	mov	r17,r22
    1a30:	04c001c4 	movi	r19,7
    1a34:	a82d883a 	mov	r22,r21
    1a38:	902b883a 	mov	r21,r18
    1a3c:	8025883a 	mov	r18,r16
    1a40:	dc002c17 	ldw	r16,176(sp)
    1a44:	00000306 	br	1a54 <___vfprintf_internal_r+0xf84>
    1a48:	8c7ffc04 	addi	r17,r17,-16
    1a4c:	42000204 	addi	r8,r8,8
    1a50:	e440110e 	bge	fp,r17,1a98 <___vfprintf_internal_r+0xfc8>
    1a54:	18c00404 	addi	r3,r3,16
    1a58:	10800044 	addi	r2,r2,1
    1a5c:	45000015 	stw	r20,0(r8)
    1a60:	47000115 	stw	fp,4(r8)
    1a64:	d8c02015 	stw	r3,128(sp)
    1a68:	d8801f15 	stw	r2,124(sp)
    1a6c:	98bff60e 	bge	r19,r2,1a48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001a48>
    1a70:	d9801e04 	addi	r6,sp,120
    1a74:	b80b883a 	mov	r5,r23
    1a78:	8009883a 	mov	r4,r16
    1a7c:	00080cc0 	call	80cc <__sprint_r>
    1a80:	103d151e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1a84:	8c7ffc04 	addi	r17,r17,-16
    1a88:	d8c02017 	ldw	r3,128(sp)
    1a8c:	d8801f17 	ldw	r2,124(sp)
    1a90:	da000404 	addi	r8,sp,16
    1a94:	e47fef16 	blt	fp,r17,1a54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001a54>
    1a98:	9021883a 	mov	r16,r18
    1a9c:	a825883a 	mov	r18,r21
    1aa0:	b02b883a 	mov	r21,r22
    1aa4:	882d883a 	mov	r22,r17
    1aa8:	dc403017 	ldw	r17,192(sp)
    1aac:	d9002b17 	ldw	r4,172(sp)
    1ab0:	1d87883a 	add	r3,r3,r22
    1ab4:	10800044 	addi	r2,r2,1
    1ab8:	41000015 	stw	r4,0(r8)
    1abc:	45800115 	stw	r22,4(r8)
    1ac0:	d8c02015 	stw	r3,128(sp)
    1ac4:	d8801f15 	stw	r2,124(sp)
    1ac8:	010001c4 	movi	r4,7
    1acc:	20818e16 	blt	r4,r2,2108 <___vfprintf_internal_r+0x1638>
    1ad0:	42000204 	addi	r8,r8,8
    1ad4:	003e3106 	br	139c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000139c>
    1ad8:	d9403317 	ldw	r5,204(sp)
    1adc:	00800044 	movi	r2,1
    1ae0:	18c00044 	addi	r3,r3,1
    1ae4:	1141530e 	bge	r2,r5,2034 <___vfprintf_internal_r+0x1564>
    1ae8:	dc401f17 	ldw	r17,124(sp)
    1aec:	00800044 	movi	r2,1
    1af0:	40800115 	stw	r2,4(r8)
    1af4:	8c400044 	addi	r17,r17,1
    1af8:	44000015 	stw	r16,0(r8)
    1afc:	d8c02015 	stw	r3,128(sp)
    1b00:	dc401f15 	stw	r17,124(sp)
    1b04:	008001c4 	movi	r2,7
    1b08:	14416b16 	blt	r2,r17,20b8 <___vfprintf_internal_r+0x15e8>
    1b0c:	42000204 	addi	r8,r8,8
    1b10:	d8803717 	ldw	r2,220(sp)
    1b14:	d9003417 	ldw	r4,208(sp)
    1b18:	8c400044 	addi	r17,r17,1
    1b1c:	10c7883a 	add	r3,r2,r3
    1b20:	40800115 	stw	r2,4(r8)
    1b24:	41000015 	stw	r4,0(r8)
    1b28:	d8c02015 	stw	r3,128(sp)
    1b2c:	dc401f15 	stw	r17,124(sp)
    1b30:	008001c4 	movi	r2,7
    1b34:	14416916 	blt	r2,r17,20dc <___vfprintf_internal_r+0x160c>
    1b38:	45800204 	addi	r22,r8,8
    1b3c:	d9003617 	ldw	r4,216(sp)
    1b40:	d9403817 	ldw	r5,224(sp)
    1b44:	000d883a 	mov	r6,zero
    1b48:	000f883a 	mov	r7,zero
    1b4c:	d8c03c15 	stw	r3,240(sp)
    1b50:	000bd440 	call	bd44 <__eqdf2>
    1b54:	d8c03c17 	ldw	r3,240(sp)
    1b58:	1000bc26 	beq	r2,zero,1e4c <___vfprintf_internal_r+0x137c>
    1b5c:	d9403317 	ldw	r5,204(sp)
    1b60:	84000044 	addi	r16,r16,1
    1b64:	8c400044 	addi	r17,r17,1
    1b68:	28bfffc4 	addi	r2,r5,-1
    1b6c:	1887883a 	add	r3,r3,r2
    1b70:	b0800115 	stw	r2,4(r22)
    1b74:	b4000015 	stw	r16,0(r22)
    1b78:	d8c02015 	stw	r3,128(sp)
    1b7c:	dc401f15 	stw	r17,124(sp)
    1b80:	008001c4 	movi	r2,7
    1b84:	14414316 	blt	r2,r17,2094 <___vfprintf_internal_r+0x15c4>
    1b88:	b5800204 	addi	r22,r22,8
    1b8c:	d9003a17 	ldw	r4,232(sp)
    1b90:	df0022c4 	addi	fp,sp,139
    1b94:	8c400044 	addi	r17,r17,1
    1b98:	20c7883a 	add	r3,r4,r3
    1b9c:	b7000015 	stw	fp,0(r22)
    1ba0:	b1000115 	stw	r4,4(r22)
    1ba4:	d8c02015 	stw	r3,128(sp)
    1ba8:	dc401f15 	stw	r17,124(sp)
    1bac:	008001c4 	movi	r2,7
    1bb0:	14400e16 	blt	r2,r17,1bec <___vfprintf_internal_r+0x111c>
    1bb4:	b2000204 	addi	r8,r22,8
    1bb8:	003e3a06 	br	14a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a4>
    1bbc:	01000074 	movhi	r4,1
    1bc0:	21029884 	addi	r4,r4,2658
    1bc4:	d9002b15 	stw	r4,172(sp)
    1bc8:	d9002b17 	ldw	r4,172(sp)
    1bcc:	1c07883a 	add	r3,r3,r16
    1bd0:	44000115 	stw	r16,4(r8)
    1bd4:	41000015 	stw	r4,0(r8)
    1bd8:	10800044 	addi	r2,r2,1
    1bdc:	d8c02015 	stw	r3,128(sp)
    1be0:	d8801f15 	stw	r2,124(sp)
    1be4:	010001c4 	movi	r4,7
    1be8:	20be2d0e 	bge	r4,r2,14a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a0>
    1bec:	d9002c17 	ldw	r4,176(sp)
    1bf0:	d9801e04 	addi	r6,sp,120
    1bf4:	b80b883a 	mov	r5,r23
    1bf8:	00080cc0 	call	80cc <__sprint_r>
    1bfc:	103cb61e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1c00:	d8c02017 	ldw	r3,128(sp)
    1c04:	da000404 	addi	r8,sp,16
    1c08:	003e2606 	br	14a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a4>
    1c0c:	d9002c17 	ldw	r4,176(sp)
    1c10:	d9801e04 	addi	r6,sp,120
    1c14:	b80b883a 	mov	r5,r23
    1c18:	00080cc0 	call	80cc <__sprint_r>
    1c1c:	103e5d26 	beq	r2,zero,1594 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001594>
    1c20:	003cad06 	br	ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1c24:	d9002c17 	ldw	r4,176(sp)
    1c28:	d9801e04 	addi	r6,sp,120
    1c2c:	b80b883a 	mov	r5,r23
    1c30:	00080cc0 	call	80cc <__sprint_r>
    1c34:	103ca81e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1c38:	d8c02017 	ldw	r3,128(sp)
    1c3c:	da000404 	addi	r8,sp,16
    1c40:	003e0b06 	br	1470 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001470>
    1c44:	d9002c17 	ldw	r4,176(sp)
    1c48:	d9801e04 	addi	r6,sp,120
    1c4c:	b80b883a 	mov	r5,r23
    1c50:	00080cc0 	call	80cc <__sprint_r>
    1c54:	103ca01e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1c58:	d8c02017 	ldw	r3,128(sp)
    1c5c:	da000404 	addi	r8,sp,16
    1c60:	003dbd06 	br	1358 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001358>
    1c64:	d9002c17 	ldw	r4,176(sp)
    1c68:	d9801e04 	addi	r6,sp,120
    1c6c:	b80b883a 	mov	r5,r23
    1c70:	00080cc0 	call	80cc <__sprint_r>
    1c74:	103c981e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1c78:	d8c02017 	ldw	r3,128(sp)
    1c7c:	da000404 	addi	r8,sp,16
    1c80:	003dc306 	br	1390 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001390>
    1c84:	d8802917 	ldw	r2,164(sp)
    1c88:	d8002785 	stb	zero,158(sp)
    1c8c:	103f0616 	blt	r2,zero,18a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00018a8>
    1c90:	00ffdfc4 	movi	r3,-129
    1c94:	9d84b03a 	or	r2,r19,r22
    1c98:	90e4703a 	and	r18,r18,r3
    1c9c:	103c6b26 	beq	r2,zero,e4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000e4c>
    1ca0:	0039883a 	mov	fp,zero
    1ca4:	003e7406 	br	1678 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001678>
    1ca8:	9080040c 	andi	r2,r18,16
    1cac:	1001b326 	beq	r2,zero,237c <___vfprintf_internal_r+0x18ac>
    1cb0:	d9002d17 	ldw	r4,180(sp)
    1cb4:	d9402917 	ldw	r5,164(sp)
    1cb8:	d8002785 	stb	zero,158(sp)
    1cbc:	20800104 	addi	r2,r4,4
    1cc0:	24c00017 	ldw	r19,0(r4)
    1cc4:	002d883a 	mov	r22,zero
    1cc8:	2801b516 	blt	r5,zero,23a0 <___vfprintf_internal_r+0x18d0>
    1ccc:	00ffdfc4 	movi	r3,-129
    1cd0:	d8802d15 	stw	r2,180(sp)
    1cd4:	90e4703a 	and	r18,r18,r3
    1cd8:	983d2726 	beq	r19,zero,1178 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001178>
    1cdc:	0039883a 	mov	fp,zero
    1ce0:	003d2a06 	br	118c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000118c>
    1ce4:	dc402617 	ldw	r17,152(sp)
    1ce8:	0441d30e 	bge	zero,r17,2438 <___vfprintf_internal_r+0x1968>
    1cec:	dc403217 	ldw	r17,200(sp)
    1cf0:	d8803317 	ldw	r2,204(sp)
    1cf4:	1440010e 	bge	r2,r17,1cfc <___vfprintf_internal_r+0x122c>
    1cf8:	1023883a 	mov	r17,r2
    1cfc:	04400a0e 	bge	zero,r17,1d28 <___vfprintf_internal_r+0x1258>
    1d00:	d8801f17 	ldw	r2,124(sp)
    1d04:	1c47883a 	add	r3,r3,r17
    1d08:	44000015 	stw	r16,0(r8)
    1d0c:	10800044 	addi	r2,r2,1
    1d10:	44400115 	stw	r17,4(r8)
    1d14:	d8c02015 	stw	r3,128(sp)
    1d18:	d8801f15 	stw	r2,124(sp)
    1d1c:	010001c4 	movi	r4,7
    1d20:	20826516 	blt	r4,r2,26b8 <___vfprintf_internal_r+0x1be8>
    1d24:	42000204 	addi	r8,r8,8
    1d28:	88026116 	blt	r17,zero,26b0 <___vfprintf_internal_r+0x1be0>
    1d2c:	d9003217 	ldw	r4,200(sp)
    1d30:	2463c83a 	sub	r17,r4,r17
    1d34:	04407b0e 	bge	zero,r17,1f24 <___vfprintf_internal_r+0x1454>
    1d38:	05800404 	movi	r22,16
    1d3c:	d8801f17 	ldw	r2,124(sp)
    1d40:	b4419d0e 	bge	r22,r17,23b8 <___vfprintf_internal_r+0x18e8>
    1d44:	01000074 	movhi	r4,1
    1d48:	21029884 	addi	r4,r4,2658
    1d4c:	d9002b15 	stw	r4,172(sp)
    1d50:	070001c4 	movi	fp,7
    1d54:	dcc02c17 	ldw	r19,176(sp)
    1d58:	00000306 	br	1d68 <___vfprintf_internal_r+0x1298>
    1d5c:	42000204 	addi	r8,r8,8
    1d60:	8c7ffc04 	addi	r17,r17,-16
    1d64:	b441970e 	bge	r22,r17,23c4 <___vfprintf_internal_r+0x18f4>
    1d68:	18c00404 	addi	r3,r3,16
    1d6c:	10800044 	addi	r2,r2,1
    1d70:	45000015 	stw	r20,0(r8)
    1d74:	45800115 	stw	r22,4(r8)
    1d78:	d8c02015 	stw	r3,128(sp)
    1d7c:	d8801f15 	stw	r2,124(sp)
    1d80:	e0bff60e 	bge	fp,r2,1d5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001d5c>
    1d84:	d9801e04 	addi	r6,sp,120
    1d88:	b80b883a 	mov	r5,r23
    1d8c:	9809883a 	mov	r4,r19
    1d90:	00080cc0 	call	80cc <__sprint_r>
    1d94:	103c501e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1d98:	d8c02017 	ldw	r3,128(sp)
    1d9c:	d8801f17 	ldw	r2,124(sp)
    1da0:	da000404 	addi	r8,sp,16
    1da4:	003fee06 	br	1d60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001d60>
    1da8:	d9002c17 	ldw	r4,176(sp)
    1dac:	d9801e04 	addi	r6,sp,120
    1db0:	b80b883a 	mov	r5,r23
    1db4:	00080cc0 	call	80cc <__sprint_r>
    1db8:	103c471e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1dbc:	d8c02017 	ldw	r3,128(sp)
    1dc0:	df002787 	ldb	fp,158(sp)
    1dc4:	da000404 	addi	r8,sp,16
    1dc8:	003d5606 	br	1324 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001324>
    1dcc:	9080040c 	andi	r2,r18,16
    1dd0:	10016126 	beq	r2,zero,2358 <___vfprintf_internal_r+0x1888>
    1dd4:	d8802d17 	ldw	r2,180(sp)
    1dd8:	14c00017 	ldw	r19,0(r2)
    1ddc:	10800104 	addi	r2,r2,4
    1de0:	d8802d15 	stw	r2,180(sp)
    1de4:	982dd7fa 	srai	r22,r19,31
    1de8:	b005883a 	mov	r2,r22
    1dec:	003c8206 	br	ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ff8>
    1df0:	9080040c 	andi	r2,r18,16
    1df4:	10003526 	beq	r2,zero,1ecc <___vfprintf_internal_r+0x13fc>
    1df8:	d9402d17 	ldw	r5,180(sp)
    1dfc:	d8c02917 	ldw	r3,164(sp)
    1e00:	d8002785 	stb	zero,158(sp)
    1e04:	28800104 	addi	r2,r5,4
    1e08:	2cc00017 	ldw	r19,0(r5)
    1e0c:	002d883a 	mov	r22,zero
    1e10:	18003716 	blt	r3,zero,1ef0 <___vfprintf_internal_r+0x1420>
    1e14:	00ffdfc4 	movi	r3,-129
    1e18:	d8802d15 	stw	r2,180(sp)
    1e1c:	90e4703a 	and	r18,r18,r3
    1e20:	0039883a 	mov	fp,zero
    1e24:	983df326 	beq	r19,zero,15f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015f4>
    1e28:	00800244 	movi	r2,9
    1e2c:	14fc7b36 	bltu	r2,r19,101c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000101c>
    1e30:	d8c02817 	ldw	r3,160(sp)
    1e34:	dc001dc4 	addi	r16,sp,119
    1e38:	9cc00c04 	addi	r19,r19,48
    1e3c:	1c07c83a 	sub	r3,r3,r16
    1e40:	dcc01dc5 	stb	r19,119(sp)
    1e44:	d8c02e15 	stw	r3,184(sp)
    1e48:	003ce806 	br	11ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00011ec>
    1e4c:	d8803317 	ldw	r2,204(sp)
    1e50:	143fffc4 	addi	r16,r2,-1
    1e54:	043f4d0e 	bge	zero,r16,1b8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001b8c>
    1e58:	07000404 	movi	fp,16
    1e5c:	e400810e 	bge	fp,r16,2064 <___vfprintf_internal_r+0x1594>
    1e60:	01400074 	movhi	r5,1
    1e64:	29429884 	addi	r5,r5,2658
    1e68:	d9402b15 	stw	r5,172(sp)
    1e6c:	01c001c4 	movi	r7,7
    1e70:	dcc02c17 	ldw	r19,176(sp)
    1e74:	00000306 	br	1e84 <___vfprintf_internal_r+0x13b4>
    1e78:	b5800204 	addi	r22,r22,8
    1e7c:	843ffc04 	addi	r16,r16,-16
    1e80:	e4007b0e 	bge	fp,r16,2070 <___vfprintf_internal_r+0x15a0>
    1e84:	18c00404 	addi	r3,r3,16
    1e88:	8c400044 	addi	r17,r17,1
    1e8c:	b5000015 	stw	r20,0(r22)
    1e90:	b7000115 	stw	fp,4(r22)
    1e94:	d8c02015 	stw	r3,128(sp)
    1e98:	dc401f15 	stw	r17,124(sp)
    1e9c:	3c7ff60e 	bge	r7,r17,1e78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001e78>
    1ea0:	d9801e04 	addi	r6,sp,120
    1ea4:	b80b883a 	mov	r5,r23
    1ea8:	9809883a 	mov	r4,r19
    1eac:	d9c03c15 	stw	r7,240(sp)
    1eb0:	00080cc0 	call	80cc <__sprint_r>
    1eb4:	d9c03c17 	ldw	r7,240(sp)
    1eb8:	103c071e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1ebc:	d8c02017 	ldw	r3,128(sp)
    1ec0:	dc401f17 	ldw	r17,124(sp)
    1ec4:	dd800404 	addi	r22,sp,16
    1ec8:	003fec06 	br	1e7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001e7c>
    1ecc:	9080100c 	andi	r2,r18,64
    1ed0:	d8002785 	stb	zero,158(sp)
    1ed4:	10010e26 	beq	r2,zero,2310 <___vfprintf_internal_r+0x1840>
    1ed8:	d9002d17 	ldw	r4,180(sp)
    1edc:	d9402917 	ldw	r5,164(sp)
    1ee0:	002d883a 	mov	r22,zero
    1ee4:	20800104 	addi	r2,r4,4
    1ee8:	24c0000b 	ldhu	r19,0(r4)
    1eec:	283fc90e 	bge	r5,zero,1e14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001e14>
    1ef0:	d8802d15 	stw	r2,180(sp)
    1ef4:	0039883a 	mov	fp,zero
    1ef8:	9d84b03a 	or	r2,r19,r22
    1efc:	103c461e 	bne	r2,zero,1018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001018>
    1f00:	00800044 	movi	r2,1
    1f04:	003e6c06 	br	18b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00018b8>
    1f08:	d9002c17 	ldw	r4,176(sp)
    1f0c:	d9801e04 	addi	r6,sp,120
    1f10:	b80b883a 	mov	r5,r23
    1f14:	00080cc0 	call	80cc <__sprint_r>
    1f18:	103bef1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    1f1c:	d8c02017 	ldw	r3,128(sp)
    1f20:	da000404 	addi	r8,sp,16
    1f24:	d9003217 	ldw	r4,200(sp)
    1f28:	d8802617 	ldw	r2,152(sp)
    1f2c:	d9403317 	ldw	r5,204(sp)
    1f30:	8123883a 	add	r17,r16,r4
    1f34:	11400216 	blt	r2,r5,1f40 <___vfprintf_internal_r+0x1470>
    1f38:	9100004c 	andi	r4,r18,1
    1f3c:	20000d26 	beq	r4,zero,1f74 <___vfprintf_internal_r+0x14a4>
    1f40:	d9003717 	ldw	r4,220(sp)
    1f44:	d9403417 	ldw	r5,208(sp)
    1f48:	1907883a 	add	r3,r3,r4
    1f4c:	d9001f17 	ldw	r4,124(sp)
    1f50:	41400015 	stw	r5,0(r8)
    1f54:	d9403717 	ldw	r5,220(sp)
    1f58:	21000044 	addi	r4,r4,1
    1f5c:	d8c02015 	stw	r3,128(sp)
    1f60:	41400115 	stw	r5,4(r8)
    1f64:	d9001f15 	stw	r4,124(sp)
    1f68:	014001c4 	movi	r5,7
    1f6c:	2901e816 	blt	r5,r4,2710 <___vfprintf_internal_r+0x1c40>
    1f70:	42000204 	addi	r8,r8,8
    1f74:	d9003317 	ldw	r4,204(sp)
    1f78:	8121883a 	add	r16,r16,r4
    1f7c:	2085c83a 	sub	r2,r4,r2
    1f80:	8461c83a 	sub	r16,r16,r17
    1f84:	1400010e 	bge	r2,r16,1f8c <___vfprintf_internal_r+0x14bc>
    1f88:	1021883a 	mov	r16,r2
    1f8c:	04000a0e 	bge	zero,r16,1fb8 <___vfprintf_internal_r+0x14e8>
    1f90:	d9001f17 	ldw	r4,124(sp)
    1f94:	1c07883a 	add	r3,r3,r16
    1f98:	44400015 	stw	r17,0(r8)
    1f9c:	21000044 	addi	r4,r4,1
    1fa0:	44000115 	stw	r16,4(r8)
    1fa4:	d8c02015 	stw	r3,128(sp)
    1fa8:	d9001f15 	stw	r4,124(sp)
    1fac:	014001c4 	movi	r5,7
    1fb0:	2901fb16 	blt	r5,r4,27a0 <___vfprintf_internal_r+0x1cd0>
    1fb4:	42000204 	addi	r8,r8,8
    1fb8:	8001f716 	blt	r16,zero,2798 <___vfprintf_internal_r+0x1cc8>
    1fbc:	1421c83a 	sub	r16,r2,r16
    1fc0:	043d380e 	bge	zero,r16,14a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a4>
    1fc4:	04400404 	movi	r17,16
    1fc8:	d8801f17 	ldw	r2,124(sp)
    1fcc:	8c3efb0e 	bge	r17,r16,1bbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bbc>
    1fd0:	01400074 	movhi	r5,1
    1fd4:	29429884 	addi	r5,r5,2658
    1fd8:	d9402b15 	stw	r5,172(sp)
    1fdc:	058001c4 	movi	r22,7
    1fe0:	dcc02c17 	ldw	r19,176(sp)
    1fe4:	00000306 	br	1ff4 <___vfprintf_internal_r+0x1524>
    1fe8:	42000204 	addi	r8,r8,8
    1fec:	843ffc04 	addi	r16,r16,-16
    1ff0:	8c3ef50e 	bge	r17,r16,1bc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001bc8>
    1ff4:	18c00404 	addi	r3,r3,16
    1ff8:	10800044 	addi	r2,r2,1
    1ffc:	45000015 	stw	r20,0(r8)
    2000:	44400115 	stw	r17,4(r8)
    2004:	d8c02015 	stw	r3,128(sp)
    2008:	d8801f15 	stw	r2,124(sp)
    200c:	b0bff60e 	bge	r22,r2,1fe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001fe8>
    2010:	d9801e04 	addi	r6,sp,120
    2014:	b80b883a 	mov	r5,r23
    2018:	9809883a 	mov	r4,r19
    201c:	00080cc0 	call	80cc <__sprint_r>
    2020:	103bad1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    2024:	d8c02017 	ldw	r3,128(sp)
    2028:	d8801f17 	ldw	r2,124(sp)
    202c:	da000404 	addi	r8,sp,16
    2030:	003fee06 	br	1fec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001fec>
    2034:	9088703a 	and	r4,r18,r2
    2038:	203eab1e 	bne	r4,zero,1ae8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ae8>
    203c:	dc401f17 	ldw	r17,124(sp)
    2040:	40800115 	stw	r2,4(r8)
    2044:	44000015 	stw	r16,0(r8)
    2048:	8c400044 	addi	r17,r17,1
    204c:	d8c02015 	stw	r3,128(sp)
    2050:	dc401f15 	stw	r17,124(sp)
    2054:	008001c4 	movi	r2,7
    2058:	14400e16 	blt	r2,r17,2094 <___vfprintf_internal_r+0x15c4>
    205c:	45800204 	addi	r22,r8,8
    2060:	003eca06 	br	1b8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001b8c>
    2064:	01000074 	movhi	r4,1
    2068:	21029884 	addi	r4,r4,2658
    206c:	d9002b15 	stw	r4,172(sp)
    2070:	d8802b17 	ldw	r2,172(sp)
    2074:	1c07883a 	add	r3,r3,r16
    2078:	8c400044 	addi	r17,r17,1
    207c:	b0800015 	stw	r2,0(r22)
    2080:	b4000115 	stw	r16,4(r22)
    2084:	d8c02015 	stw	r3,128(sp)
    2088:	dc401f15 	stw	r17,124(sp)
    208c:	008001c4 	movi	r2,7
    2090:	147ebd0e 	bge	r2,r17,1b88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001b88>
    2094:	d9002c17 	ldw	r4,176(sp)
    2098:	d9801e04 	addi	r6,sp,120
    209c:	b80b883a 	mov	r5,r23
    20a0:	00080cc0 	call	80cc <__sprint_r>
    20a4:	103b8c1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    20a8:	d8c02017 	ldw	r3,128(sp)
    20ac:	dc401f17 	ldw	r17,124(sp)
    20b0:	dd800404 	addi	r22,sp,16
    20b4:	003eb506 	br	1b8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001b8c>
    20b8:	d9002c17 	ldw	r4,176(sp)
    20bc:	d9801e04 	addi	r6,sp,120
    20c0:	b80b883a 	mov	r5,r23
    20c4:	00080cc0 	call	80cc <__sprint_r>
    20c8:	103b831e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    20cc:	d8c02017 	ldw	r3,128(sp)
    20d0:	dc401f17 	ldw	r17,124(sp)
    20d4:	da000404 	addi	r8,sp,16
    20d8:	003e8d06 	br	1b10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001b10>
    20dc:	d9002c17 	ldw	r4,176(sp)
    20e0:	d9801e04 	addi	r6,sp,120
    20e4:	b80b883a 	mov	r5,r23
    20e8:	00080cc0 	call	80cc <__sprint_r>
    20ec:	103b7a1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    20f0:	d8c02017 	ldw	r3,128(sp)
    20f4:	dc401f17 	ldw	r17,124(sp)
    20f8:	dd800404 	addi	r22,sp,16
    20fc:	003e8f06 	br	1b3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001b3c>
    2100:	0027883a 	mov	r19,zero
    2104:	003f4a06 	br	1e30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001e30>
    2108:	d9002c17 	ldw	r4,176(sp)
    210c:	d9801e04 	addi	r6,sp,120
    2110:	b80b883a 	mov	r5,r23
    2114:	00080cc0 	call	80cc <__sprint_r>
    2118:	103b6f1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    211c:	d8c02017 	ldw	r3,128(sp)
    2120:	da000404 	addi	r8,sp,16
    2124:	003c9d06 	br	139c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000139c>
    2128:	04e7c83a 	sub	r19,zero,r19
    212c:	9804c03a 	cmpne	r2,r19,zero
    2130:	05adc83a 	sub	r22,zero,r22
    2134:	b0adc83a 	sub	r22,r22,r2
    2138:	d8802917 	ldw	r2,164(sp)
    213c:	07000b44 	movi	fp,45
    2140:	df002785 	stb	fp,158(sp)
    2144:	10017b16 	blt	r2,zero,2734 <___vfprintf_internal_r+0x1c64>
    2148:	00bfdfc4 	movi	r2,-129
    214c:	90a4703a 	and	r18,r18,r2
    2150:	003bb106 	br	1018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001018>
    2154:	d9003617 	ldw	r4,216(sp)
    2158:	d9403817 	ldw	r5,224(sp)
    215c:	da003d15 	stw	r8,244(sp)
    2160:	0007cf00 	call	7cf0 <__fpclassifyd>
    2164:	da003d17 	ldw	r8,244(sp)
    2168:	1000f026 	beq	r2,zero,252c <___vfprintf_internal_r+0x1a5c>
    216c:	d9002917 	ldw	r4,164(sp)
    2170:	05bff7c4 	movi	r22,-33
    2174:	00bfffc4 	movi	r2,-1
    2178:	8dac703a 	and	r22,r17,r22
    217c:	20820026 	beq	r4,r2,2980 <___vfprintf_internal_r+0x1eb0>
    2180:	008011c4 	movi	r2,71
    2184:	b081f726 	beq	r22,r2,2964 <___vfprintf_internal_r+0x1e94>
    2188:	d9003817 	ldw	r4,224(sp)
    218c:	90c04014 	ori	r3,r18,256
    2190:	d8c02b15 	stw	r3,172(sp)
    2194:	20021516 	blt	r4,zero,29ec <___vfprintf_internal_r+0x1f1c>
    2198:	dcc03817 	ldw	r19,224(sp)
    219c:	d8002a05 	stb	zero,168(sp)
    21a0:	00801984 	movi	r2,102
    21a4:	8881f926 	beq	r17,r2,298c <___vfprintf_internal_r+0x1ebc>
    21a8:	00801184 	movi	r2,70
    21ac:	88821c26 	beq	r17,r2,2a20 <___vfprintf_internal_r+0x1f50>
    21b0:	00801144 	movi	r2,69
    21b4:	b081ef26 	beq	r22,r2,2974 <___vfprintf_internal_r+0x1ea4>
    21b8:	d8c02917 	ldw	r3,164(sp)
    21bc:	d8802104 	addi	r2,sp,132
    21c0:	d8800315 	stw	r2,12(sp)
    21c4:	d9403617 	ldw	r5,216(sp)
    21c8:	d8802504 	addi	r2,sp,148
    21cc:	d9002c17 	ldw	r4,176(sp)
    21d0:	d8800215 	stw	r2,8(sp)
    21d4:	d8802604 	addi	r2,sp,152
    21d8:	d8c00015 	stw	r3,0(sp)
    21dc:	d8800115 	stw	r2,4(sp)
    21e0:	01c00084 	movi	r7,2
    21e4:	980d883a 	mov	r6,r19
    21e8:	d8c03c15 	stw	r3,240(sp)
    21ec:	da003d15 	stw	r8,244(sp)
    21f0:	00030f40 	call	30f4 <_dtoa_r>
    21f4:	1021883a 	mov	r16,r2
    21f8:	008019c4 	movi	r2,103
    21fc:	d8c03c17 	ldw	r3,240(sp)
    2200:	da003d17 	ldw	r8,244(sp)
    2204:	88817126 	beq	r17,r2,27cc <___vfprintf_internal_r+0x1cfc>
    2208:	008011c4 	movi	r2,71
    220c:	88829226 	beq	r17,r2,2c58 <___vfprintf_internal_r+0x2188>
    2210:	80f9883a 	add	fp,r16,r3
    2214:	d9003617 	ldw	r4,216(sp)
    2218:	000d883a 	mov	r6,zero
    221c:	000f883a 	mov	r7,zero
    2220:	980b883a 	mov	r5,r19
    2224:	da003d15 	stw	r8,244(sp)
    2228:	000bd440 	call	bd44 <__eqdf2>
    222c:	da003d17 	ldw	r8,244(sp)
    2230:	10018d26 	beq	r2,zero,2868 <___vfprintf_internal_r+0x1d98>
    2234:	d8802117 	ldw	r2,132(sp)
    2238:	1700062e 	bgeu	r2,fp,2254 <___vfprintf_internal_r+0x1784>
    223c:	01000c04 	movi	r4,48
    2240:	10c00044 	addi	r3,r2,1
    2244:	d8c02115 	stw	r3,132(sp)
    2248:	11000005 	stb	r4,0(r2)
    224c:	d8802117 	ldw	r2,132(sp)
    2250:	173ffb36 	bltu	r2,fp,2240 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002240>
    2254:	1405c83a 	sub	r2,r2,r16
    2258:	d8803315 	stw	r2,204(sp)
    225c:	008011c4 	movi	r2,71
    2260:	b0817626 	beq	r22,r2,283c <___vfprintf_internal_r+0x1d6c>
    2264:	00801944 	movi	r2,101
    2268:	1442810e 	bge	r2,r17,2c70 <___vfprintf_internal_r+0x21a0>
    226c:	d8c02617 	ldw	r3,152(sp)
    2270:	00801984 	movi	r2,102
    2274:	d8c03215 	stw	r3,200(sp)
    2278:	8881fe26 	beq	r17,r2,2a74 <___vfprintf_internal_r+0x1fa4>
    227c:	d8c03217 	ldw	r3,200(sp)
    2280:	d9003317 	ldw	r4,204(sp)
    2284:	1901dd16 	blt	r3,r4,29fc <___vfprintf_internal_r+0x1f2c>
    2288:	9480004c 	andi	r18,r18,1
    228c:	90022b1e 	bne	r18,zero,2b3c <___vfprintf_internal_r+0x206c>
    2290:	1805883a 	mov	r2,r3
    2294:	18028016 	blt	r3,zero,2c98 <___vfprintf_internal_r+0x21c8>
    2298:	d8c03217 	ldw	r3,200(sp)
    229c:	044019c4 	movi	r17,103
    22a0:	d8c02e15 	stw	r3,184(sp)
    22a4:	df002a07 	ldb	fp,168(sp)
    22a8:	e001531e 	bne	fp,zero,27f8 <___vfprintf_internal_r+0x1d28>
    22ac:	df002783 	ldbu	fp,158(sp)
    22b0:	d8802a15 	stw	r2,168(sp)
    22b4:	dc802b17 	ldw	r18,172(sp)
    22b8:	d8002915 	stw	zero,164(sp)
    22bc:	003bd106 	br	1204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001204>
    22c0:	d8802d17 	ldw	r2,180(sp)
    22c4:	d8c02d17 	ldw	r3,180(sp)
    22c8:	d9002d17 	ldw	r4,180(sp)
    22cc:	10800017 	ldw	r2,0(r2)
    22d0:	18c00117 	ldw	r3,4(r3)
    22d4:	21000204 	addi	r4,r4,8
    22d8:	d8803615 	stw	r2,216(sp)
    22dc:	d8c03815 	stw	r3,224(sp)
    22e0:	d9002d15 	stw	r4,180(sp)
    22e4:	003b7506 	br	10bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010bc>
    22e8:	ac400007 	ldb	r17,0(r21)
    22ec:	003a5906 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    22f0:	9080100c 	andi	r2,r18,64
    22f4:	1000a826 	beq	r2,zero,2598 <___vfprintf_internal_r+0x1ac8>
    22f8:	d9002d17 	ldw	r4,180(sp)
    22fc:	002d883a 	mov	r22,zero
    2300:	24c0000b 	ldhu	r19,0(r4)
    2304:	21000104 	addi	r4,r4,4
    2308:	d9002d15 	stw	r4,180(sp)
    230c:	003ccb06 	br	163c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000163c>
    2310:	d8c02d17 	ldw	r3,180(sp)
    2314:	d9002917 	ldw	r4,164(sp)
    2318:	002d883a 	mov	r22,zero
    231c:	18800104 	addi	r2,r3,4
    2320:	1cc00017 	ldw	r19,0(r3)
    2324:	203ebb0e 	bge	r4,zero,1e14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001e14>
    2328:	003ef106 	br	1ef0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ef0>
    232c:	9080040c 	andi	r2,r18,16
    2330:	1000921e 	bne	r2,zero,257c <___vfprintf_internal_r+0x1aac>
    2334:	9480100c 	andi	r18,r18,64
    2338:	90013926 	beq	r18,zero,2820 <___vfprintf_internal_r+0x1d50>
    233c:	d9002d17 	ldw	r4,180(sp)
    2340:	d9402f17 	ldw	r5,188(sp)
    2344:	20800017 	ldw	r2,0(r4)
    2348:	21000104 	addi	r4,r4,4
    234c:	d9002d15 	stw	r4,180(sp)
    2350:	1140000d 	sth	r5,0(r2)
    2354:	003a1606 	br	bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bb0>
    2358:	9080100c 	andi	r2,r18,64
    235c:	10008026 	beq	r2,zero,2560 <___vfprintf_internal_r+0x1a90>
    2360:	d8c02d17 	ldw	r3,180(sp)
    2364:	1cc0000f 	ldh	r19,0(r3)
    2368:	18c00104 	addi	r3,r3,4
    236c:	d8c02d15 	stw	r3,180(sp)
    2370:	982dd7fa 	srai	r22,r19,31
    2374:	b005883a 	mov	r2,r22
    2378:	003b1f06 	br	ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ff8>
    237c:	9080100c 	andi	r2,r18,64
    2380:	d8002785 	stb	zero,158(sp)
    2384:	10008a1e 	bne	r2,zero,25b0 <___vfprintf_internal_r+0x1ae0>
    2388:	d9402d17 	ldw	r5,180(sp)
    238c:	d8c02917 	ldw	r3,164(sp)
    2390:	002d883a 	mov	r22,zero
    2394:	28800104 	addi	r2,r5,4
    2398:	2cc00017 	ldw	r19,0(r5)
    239c:	183e4b0e 	bge	r3,zero,1ccc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ccc>
    23a0:	9d86b03a 	or	r3,r19,r22
    23a4:	d8802d15 	stw	r2,180(sp)
    23a8:	183e4c1e 	bne	r3,zero,1cdc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001cdc>
    23ac:	0039883a 	mov	fp,zero
    23b0:	0005883a 	mov	r2,zero
    23b4:	003d4006 	br	18b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00018b8>
    23b8:	01400074 	movhi	r5,1
    23bc:	29429884 	addi	r5,r5,2658
    23c0:	d9402b15 	stw	r5,172(sp)
    23c4:	d9402b17 	ldw	r5,172(sp)
    23c8:	1c47883a 	add	r3,r3,r17
    23cc:	10800044 	addi	r2,r2,1
    23d0:	41400015 	stw	r5,0(r8)
    23d4:	44400115 	stw	r17,4(r8)
    23d8:	d8c02015 	stw	r3,128(sp)
    23dc:	d8801f15 	stw	r2,124(sp)
    23e0:	010001c4 	movi	r4,7
    23e4:	20bec816 	blt	r4,r2,1f08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001f08>
    23e8:	42000204 	addi	r8,r8,8
    23ec:	003ecd06 	br	1f24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001f24>
    23f0:	d9002917 	ldw	r4,164(sp)
    23f4:	d8002785 	stb	zero,158(sp)
    23f8:	203d2d16 	blt	r4,zero,18b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00018b0>
    23fc:	00bfdfc4 	movi	r2,-129
    2400:	90a4703a 	and	r18,r18,r2
    2404:	003a9106 	br	e4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000e4c>
    2408:	01000074 	movhi	r4,1
    240c:	21029884 	addi	r4,r4,2658
    2410:	d9002b15 	stw	r4,172(sp)
    2414:	003c0c06 	br	1448 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001448>
    2418:	d9002c17 	ldw	r4,176(sp)
    241c:	d9801e04 	addi	r6,sp,120
    2420:	b80b883a 	mov	r5,r23
    2424:	00080cc0 	call	80cc <__sprint_r>
    2428:	103aab1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    242c:	d8c02017 	ldw	r3,128(sp)
    2430:	da000404 	addi	r8,sp,16
    2434:	003d4106 	br	193c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000193c>
    2438:	d8801f17 	ldw	r2,124(sp)
    243c:	01400074 	movhi	r5,1
    2440:	01000044 	movi	r4,1
    2444:	18c00044 	addi	r3,r3,1
    2448:	10800044 	addi	r2,r2,1
    244c:	29429804 	addi	r5,r5,2656
    2450:	41000115 	stw	r4,4(r8)
    2454:	41400015 	stw	r5,0(r8)
    2458:	d8c02015 	stw	r3,128(sp)
    245c:	d8801f15 	stw	r2,124(sp)
    2460:	010001c4 	movi	r4,7
    2464:	20805c16 	blt	r4,r2,25d8 <___vfprintf_internal_r+0x1b08>
    2468:	42000204 	addi	r8,r8,8
    246c:	8800041e 	bne	r17,zero,2480 <___vfprintf_internal_r+0x19b0>
    2470:	d8803317 	ldw	r2,204(sp)
    2474:	1000021e 	bne	r2,zero,2480 <___vfprintf_internal_r+0x19b0>
    2478:	9080004c 	andi	r2,r18,1
    247c:	103c0926 	beq	r2,zero,14a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00014a4>
    2480:	d9003717 	ldw	r4,220(sp)
    2484:	d8801f17 	ldw	r2,124(sp)
    2488:	d9403417 	ldw	r5,208(sp)
    248c:	20c7883a 	add	r3,r4,r3
    2490:	10800044 	addi	r2,r2,1
    2494:	41000115 	stw	r4,4(r8)
    2498:	41400015 	stw	r5,0(r8)
    249c:	d8c02015 	stw	r3,128(sp)
    24a0:	d8801f15 	stw	r2,124(sp)
    24a4:	010001c4 	movi	r4,7
    24a8:	20812116 	blt	r4,r2,2930 <___vfprintf_internal_r+0x1e60>
    24ac:	42000204 	addi	r8,r8,8
    24b0:	0463c83a 	sub	r17,zero,r17
    24b4:	0440730e 	bge	zero,r17,2684 <___vfprintf_internal_r+0x1bb4>
    24b8:	05800404 	movi	r22,16
    24bc:	b440860e 	bge	r22,r17,26d8 <___vfprintf_internal_r+0x1c08>
    24c0:	01400074 	movhi	r5,1
    24c4:	29429884 	addi	r5,r5,2658
    24c8:	d9402b15 	stw	r5,172(sp)
    24cc:	070001c4 	movi	fp,7
    24d0:	dcc02c17 	ldw	r19,176(sp)
    24d4:	00000306 	br	24e4 <___vfprintf_internal_r+0x1a14>
    24d8:	42000204 	addi	r8,r8,8
    24dc:	8c7ffc04 	addi	r17,r17,-16
    24e0:	b440800e 	bge	r22,r17,26e4 <___vfprintf_internal_r+0x1c14>
    24e4:	18c00404 	addi	r3,r3,16
    24e8:	10800044 	addi	r2,r2,1
    24ec:	45000015 	stw	r20,0(r8)
    24f0:	45800115 	stw	r22,4(r8)
    24f4:	d8c02015 	stw	r3,128(sp)
    24f8:	d8801f15 	stw	r2,124(sp)
    24fc:	e0bff60e 	bge	fp,r2,24d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00024d8>
    2500:	d9801e04 	addi	r6,sp,120
    2504:	b80b883a 	mov	r5,r23
    2508:	9809883a 	mov	r4,r19
    250c:	00080cc0 	call	80cc <__sprint_r>
    2510:	103a711e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    2514:	d8c02017 	ldw	r3,128(sp)
    2518:	d8801f17 	ldw	r2,124(sp)
    251c:	da000404 	addi	r8,sp,16
    2520:	003fee06 	br	24dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00024dc>
    2524:	00bfffc4 	movi	r2,-1
    2528:	003a6f06 	br	ee8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ee8>
    252c:	008011c4 	movi	r2,71
    2530:	1440b816 	blt	r2,r17,2814 <___vfprintf_internal_r+0x1d44>
    2534:	04000074 	movhi	r16,1
    2538:	84028a04 	addi	r16,r16,2600
    253c:	00c000c4 	movi	r3,3
    2540:	00bfdfc4 	movi	r2,-129
    2544:	d8c02a15 	stw	r3,168(sp)
    2548:	90a4703a 	and	r18,r18,r2
    254c:	df002783 	ldbu	fp,158(sp)
    2550:	d8c02e15 	stw	r3,184(sp)
    2554:	d8002915 	stw	zero,164(sp)
    2558:	d8003215 	stw	zero,200(sp)
    255c:	003b2906 	br	1204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001204>
    2560:	d9002d17 	ldw	r4,180(sp)
    2564:	24c00017 	ldw	r19,0(r4)
    2568:	21000104 	addi	r4,r4,4
    256c:	d9002d15 	stw	r4,180(sp)
    2570:	982dd7fa 	srai	r22,r19,31
    2574:	b005883a 	mov	r2,r22
    2578:	003a9f06 	br	ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ff8>
    257c:	d9402d17 	ldw	r5,180(sp)
    2580:	d8c02f17 	ldw	r3,188(sp)
    2584:	28800017 	ldw	r2,0(r5)
    2588:	29400104 	addi	r5,r5,4
    258c:	d9402d15 	stw	r5,180(sp)
    2590:	10c00015 	stw	r3,0(r2)
    2594:	00398606 	br	bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bb0>
    2598:	d9402d17 	ldw	r5,180(sp)
    259c:	002d883a 	mov	r22,zero
    25a0:	2cc00017 	ldw	r19,0(r5)
    25a4:	29400104 	addi	r5,r5,4
    25a8:	d9402d15 	stw	r5,180(sp)
    25ac:	003c2306 	br	163c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000163c>
    25b0:	d8c02d17 	ldw	r3,180(sp)
    25b4:	d9002917 	ldw	r4,164(sp)
    25b8:	002d883a 	mov	r22,zero
    25bc:	18800104 	addi	r2,r3,4
    25c0:	1cc0000b 	ldhu	r19,0(r3)
    25c4:	203dc10e 	bge	r4,zero,1ccc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ccc>
    25c8:	003f7506 	br	23a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00023a0>
    25cc:	04000074 	movhi	r16,1
    25d0:	84028804 	addi	r16,r16,2592
    25d4:	003acc06 	br	1108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001108>
    25d8:	d9002c17 	ldw	r4,176(sp)
    25dc:	d9801e04 	addi	r6,sp,120
    25e0:	b80b883a 	mov	r5,r23
    25e4:	00080cc0 	call	80cc <__sprint_r>
    25e8:	103a3b1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    25ec:	dc402617 	ldw	r17,152(sp)
    25f0:	d8c02017 	ldw	r3,128(sp)
    25f4:	da000404 	addi	r8,sp,16
    25f8:	003f9c06 	br	246c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000246c>
    25fc:	ac400043 	ldbu	r17,1(r21)
    2600:	94800814 	ori	r18,r18,32
    2604:	ad400044 	addi	r21,r21,1
    2608:	8c403fcc 	andi	r17,r17,255
    260c:	8c40201c 	xori	r17,r17,128
    2610:	8c7fe004 	addi	r17,r17,-128
    2614:	00398f06 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    2618:	d8c02d15 	stw	r3,180(sp)
    261c:	0039883a 	mov	fp,zero
    2620:	003e3506 	br	1ef8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001ef8>
    2624:	d9002c17 	ldw	r4,176(sp)
    2628:	d9801e04 	addi	r6,sp,120
    262c:	b80b883a 	mov	r5,r23
    2630:	00080cc0 	call	80cc <__sprint_r>
    2634:	103a281e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    2638:	d8c02017 	ldw	r3,128(sp)
    263c:	da000404 	addi	r8,sp,16
    2640:	003cd006 	br	1984 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001984>
    2644:	8009883a 	mov	r4,r16
    2648:	da003d15 	stw	r8,244(sp)
    264c:	0000a380 	call	a38 <strlen>
    2650:	d8802e15 	stw	r2,184(sp)
    2654:	da003d17 	ldw	r8,244(sp)
    2658:	103c340e 	bge	r2,zero,172c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000172c>
    265c:	0005883a 	mov	r2,zero
    2660:	003c3206 	br	172c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000172c>
    2664:	d9002c17 	ldw	r4,176(sp)
    2668:	d9801e04 	addi	r6,sp,120
    266c:	b80b883a 	mov	r5,r23
    2670:	00080cc0 	call	80cc <__sprint_r>
    2674:	103a181e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    2678:	d8c02017 	ldw	r3,128(sp)
    267c:	d8801f17 	ldw	r2,124(sp)
    2680:	da000404 	addi	r8,sp,16
    2684:	d9403317 	ldw	r5,204(sp)
    2688:	10800044 	addi	r2,r2,1
    268c:	44000015 	stw	r16,0(r8)
    2690:	28c7883a 	add	r3,r5,r3
    2694:	003b7d06 	br	148c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000148c>
    2698:	01000074 	movhi	r4,1
    269c:	21029c84 	addi	r4,r4,2674
    26a0:	d9003515 	stw	r4,212(sp)
    26a4:	003b1406 	br	12f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00012f8>
    26a8:	013fffc4 	movi	r4,-1
    26ac:	003a3506 	br	f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000f84>
    26b0:	0023883a 	mov	r17,zero
    26b4:	003d9d06 	br	1d2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001d2c>
    26b8:	d9002c17 	ldw	r4,176(sp)
    26bc:	d9801e04 	addi	r6,sp,120
    26c0:	b80b883a 	mov	r5,r23
    26c4:	00080cc0 	call	80cc <__sprint_r>
    26c8:	103a031e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    26cc:	d8c02017 	ldw	r3,128(sp)
    26d0:	da000404 	addi	r8,sp,16
    26d4:	003d9406 	br	1d28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001d28>
    26d8:	01000074 	movhi	r4,1
    26dc:	21029884 	addi	r4,r4,2658
    26e0:	d9002b15 	stw	r4,172(sp)
    26e4:	d9002b17 	ldw	r4,172(sp)
    26e8:	1c47883a 	add	r3,r3,r17
    26ec:	10800044 	addi	r2,r2,1
    26f0:	41000015 	stw	r4,0(r8)
    26f4:	44400115 	stw	r17,4(r8)
    26f8:	d8c02015 	stw	r3,128(sp)
    26fc:	d8801f15 	stw	r2,124(sp)
    2700:	010001c4 	movi	r4,7
    2704:	20bfd716 	blt	r4,r2,2664 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002664>
    2708:	42000204 	addi	r8,r8,8
    270c:	003fdd06 	br	2684 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002684>
    2710:	d9002c17 	ldw	r4,176(sp)
    2714:	d9801e04 	addi	r6,sp,120
    2718:	b80b883a 	mov	r5,r23
    271c:	00080cc0 	call	80cc <__sprint_r>
    2720:	1039ed1e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    2724:	d8802617 	ldw	r2,152(sp)
    2728:	d8c02017 	ldw	r3,128(sp)
    272c:	da000404 	addi	r8,sp,16
    2730:	003e1006 	br	1f74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001f74>
    2734:	00800044 	movi	r2,1
    2738:	10803fcc 	andi	r2,r2,255
    273c:	00c00044 	movi	r3,1
    2740:	10fa3526 	beq	r2,r3,1018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001018>
    2744:	00c00084 	movi	r3,2
    2748:	10fbcb26 	beq	r2,r3,1678 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001678>
    274c:	003a8f06 	br	118c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000118c>
    2750:	01000074 	movhi	r4,1
    2754:	21029c84 	addi	r4,r4,2674
    2758:	d9003515 	stw	r4,212(sp)
    275c:	003b7606 	br	1538 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001538>
    2760:	d8802917 	ldw	r2,164(sp)
    2764:	00c00184 	movi	r3,6
    2768:	1880012e 	bgeu	r3,r2,2770 <___vfprintf_internal_r+0x1ca0>
    276c:	1805883a 	mov	r2,r3
    2770:	d8802e15 	stw	r2,184(sp)
    2774:	1000ef16 	blt	r2,zero,2b34 <___vfprintf_internal_r+0x2064>
    2778:	04000074 	movhi	r16,1
    277c:	d8802a15 	stw	r2,168(sp)
    2780:	dcc02d15 	stw	r19,180(sp)
    2784:	d8002915 	stw	zero,164(sp)
    2788:	d8003215 	stw	zero,200(sp)
    278c:	84029604 	addi	r16,r16,2648
    2790:	0039883a 	mov	fp,zero
    2794:	003aa206 	br	1220 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001220>
    2798:	0021883a 	mov	r16,zero
    279c:	003e0706 	br	1fbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001fbc>
    27a0:	d9002c17 	ldw	r4,176(sp)
    27a4:	d9801e04 	addi	r6,sp,120
    27a8:	b80b883a 	mov	r5,r23
    27ac:	00080cc0 	call	80cc <__sprint_r>
    27b0:	1039c91e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    27b4:	d8802617 	ldw	r2,152(sp)
    27b8:	d9403317 	ldw	r5,204(sp)
    27bc:	d8c02017 	ldw	r3,128(sp)
    27c0:	da000404 	addi	r8,sp,16
    27c4:	2885c83a 	sub	r2,r5,r2
    27c8:	003dfb06 	br	1fb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001fb8>
    27cc:	9080004c 	andi	r2,r18,1
    27d0:	103e8f1e 	bne	r2,zero,2210 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002210>
    27d4:	d8802117 	ldw	r2,132(sp)
    27d8:	003e9e06 	br	2254 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002254>
    27dc:	1025883a 	mov	r18,r2
    27e0:	0039883a 	mov	fp,zero
    27e4:	00800084 	movi	r2,2
    27e8:	003fd306 	br	2738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002738>
    27ec:	07000b44 	movi	fp,45
    27f0:	df002785 	stb	fp,158(sp)
    27f4:	003a4006 	br	10f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00010f8>
    27f8:	00c00b44 	movi	r3,45
    27fc:	d8c02785 	stb	r3,158(sp)
    2800:	d8802a15 	stw	r2,168(sp)
    2804:	dc802b17 	ldw	r18,172(sp)
    2808:	d8002915 	stw	zero,164(sp)
    280c:	07000b44 	movi	fp,45
    2810:	003a8006 	br	1214 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001214>
    2814:	04000074 	movhi	r16,1
    2818:	84028b04 	addi	r16,r16,2604
    281c:	003f4706 	br	253c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000253c>
    2820:	d8c02d17 	ldw	r3,180(sp)
    2824:	d9002f17 	ldw	r4,188(sp)
    2828:	18800017 	ldw	r2,0(r3)
    282c:	18c00104 	addi	r3,r3,4
    2830:	d8c02d15 	stw	r3,180(sp)
    2834:	11000015 	stw	r4,0(r2)
    2838:	0038dd06 	br	bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000bb0>
    283c:	dd802617 	ldw	r22,152(sp)
    2840:	00bfff44 	movi	r2,-3
    2844:	b0801c16 	blt	r22,r2,28b8 <___vfprintf_internal_r+0x1de8>
    2848:	d9402917 	ldw	r5,164(sp)
    284c:	2d801a16 	blt	r5,r22,28b8 <___vfprintf_internal_r+0x1de8>
    2850:	dd803215 	stw	r22,200(sp)
    2854:	003e8906 	br	227c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000227c>
    2858:	01000074 	movhi	r4,1
    285c:	21029884 	addi	r4,r4,2658
    2860:	d9002b15 	stw	r4,172(sp)
    2864:	003c9106 	br	1aac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001aac>
    2868:	e005883a 	mov	r2,fp
    286c:	003e7906 	br	2254 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002254>
    2870:	d9402917 	ldw	r5,164(sp)
    2874:	df002783 	ldbu	fp,158(sp)
    2878:	dcc02d15 	stw	r19,180(sp)
    287c:	d9402a15 	stw	r5,168(sp)
    2880:	d9402e15 	stw	r5,184(sp)
    2884:	d8002915 	stw	zero,164(sp)
    2888:	d8003215 	stw	zero,200(sp)
    288c:	003a5d06 	br	1204 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001204>
    2890:	9080004c 	andi	r2,r18,1
    2894:	0039883a 	mov	fp,zero
    2898:	10000426 	beq	r2,zero,28ac <___vfprintf_internal_r+0x1ddc>
    289c:	00800c04 	movi	r2,48
    28a0:	dc001dc4 	addi	r16,sp,119
    28a4:	d8801dc5 	stb	r2,119(sp)
    28a8:	003b8006 	br	16ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00016ac>
    28ac:	d8002e15 	stw	zero,184(sp)
    28b0:	dc001e04 	addi	r16,sp,120
    28b4:	003a4d06 	br	11ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00011ec>
    28b8:	8c7fff84 	addi	r17,r17,-2
    28bc:	b5bfffc4 	addi	r22,r22,-1
    28c0:	dd802615 	stw	r22,152(sp)
    28c4:	dc4022c5 	stb	r17,139(sp)
    28c8:	b000bf16 	blt	r22,zero,2bc8 <___vfprintf_internal_r+0x20f8>
    28cc:	00800ac4 	movi	r2,43
    28d0:	d8802305 	stb	r2,140(sp)
    28d4:	00800244 	movi	r2,9
    28d8:	15807016 	blt	r2,r22,2a9c <___vfprintf_internal_r+0x1fcc>
    28dc:	00800c04 	movi	r2,48
    28e0:	b5800c04 	addi	r22,r22,48
    28e4:	d8802345 	stb	r2,141(sp)
    28e8:	dd802385 	stb	r22,142(sp)
    28ec:	d88023c4 	addi	r2,sp,143
    28f0:	df0022c4 	addi	fp,sp,139
    28f4:	d8c03317 	ldw	r3,204(sp)
    28f8:	1739c83a 	sub	fp,r2,fp
    28fc:	d9003317 	ldw	r4,204(sp)
    2900:	e0c7883a 	add	r3,fp,r3
    2904:	df003a15 	stw	fp,232(sp)
    2908:	d8c02e15 	stw	r3,184(sp)
    290c:	00800044 	movi	r2,1
    2910:	1100b30e 	bge	r2,r4,2be0 <___vfprintf_internal_r+0x2110>
    2914:	d8c02e17 	ldw	r3,184(sp)
    2918:	18c00044 	addi	r3,r3,1
    291c:	d8c02e15 	stw	r3,184(sp)
    2920:	1805883a 	mov	r2,r3
    2924:	1800ac16 	blt	r3,zero,2bd8 <___vfprintf_internal_r+0x2108>
    2928:	d8003215 	stw	zero,200(sp)
    292c:	003e5d06 	br	22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2930:	d9002c17 	ldw	r4,176(sp)
    2934:	d9801e04 	addi	r6,sp,120
    2938:	b80b883a 	mov	r5,r23
    293c:	00080cc0 	call	80cc <__sprint_r>
    2940:	1039651e 	bne	r2,zero,ed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000ed8>
    2944:	dc402617 	ldw	r17,152(sp)
    2948:	d8c02017 	ldw	r3,128(sp)
    294c:	d8801f17 	ldw	r2,124(sp)
    2950:	da000404 	addi	r8,sp,16
    2954:	003ed606 	br	24b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00024b0>
    2958:	582b883a 	mov	r21,r11
    295c:	d8002915 	stw	zero,164(sp)
    2960:	0038bd06 	br	c58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c58>
    2964:	d8802917 	ldw	r2,164(sp)
    2968:	103e071e 	bne	r2,zero,2188 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002188>
    296c:	dc002915 	stw	r16,164(sp)
    2970:	003e0506 	br	2188 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002188>
    2974:	d9002917 	ldw	r4,164(sp)
    2978:	20c00044 	addi	r3,r4,1
    297c:	003e0f06 	br	21bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00021bc>
    2980:	01400184 	movi	r5,6
    2984:	d9402915 	stw	r5,164(sp)
    2988:	003dff06 	br	2188 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002188>
    298c:	d8802104 	addi	r2,sp,132
    2990:	d8800315 	stw	r2,12(sp)
    2994:	d8802504 	addi	r2,sp,148
    2998:	d8800215 	stw	r2,8(sp)
    299c:	d8802604 	addi	r2,sp,152
    29a0:	d8800115 	stw	r2,4(sp)
    29a4:	d8802917 	ldw	r2,164(sp)
    29a8:	d9403617 	ldw	r5,216(sp)
    29ac:	d9002c17 	ldw	r4,176(sp)
    29b0:	d8800015 	stw	r2,0(sp)
    29b4:	01c000c4 	movi	r7,3
    29b8:	980d883a 	mov	r6,r19
    29bc:	da003d15 	stw	r8,244(sp)
    29c0:	00030f40 	call	30f4 <_dtoa_r>
    29c4:	d8c02917 	ldw	r3,164(sp)
    29c8:	da003d17 	ldw	r8,244(sp)
    29cc:	1021883a 	mov	r16,r2
    29d0:	10f9883a 	add	fp,r2,r3
    29d4:	81000007 	ldb	r4,0(r16)
    29d8:	00800c04 	movi	r2,48
    29dc:	20805e26 	beq	r4,r2,2b58 <___vfprintf_internal_r+0x2088>
    29e0:	d8c02617 	ldw	r3,152(sp)
    29e4:	e0f9883a 	add	fp,fp,r3
    29e8:	003e0a06 	br	2214 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002214>
    29ec:	00c00b44 	movi	r3,45
    29f0:	24e0003c 	xorhi	r19,r4,32768
    29f4:	d8c02a05 	stb	r3,168(sp)
    29f8:	003de906 	br	21a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00021a0>
    29fc:	d8c03217 	ldw	r3,200(sp)
    2a00:	00c07a0e 	bge	zero,r3,2bec <___vfprintf_internal_r+0x211c>
    2a04:	00800044 	movi	r2,1
    2a08:	d9003317 	ldw	r4,204(sp)
    2a0c:	1105883a 	add	r2,r2,r4
    2a10:	d8802e15 	stw	r2,184(sp)
    2a14:	10004e16 	blt	r2,zero,2b50 <___vfprintf_internal_r+0x2080>
    2a18:	044019c4 	movi	r17,103
    2a1c:	003e2106 	br	22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2a20:	d9002917 	ldw	r4,164(sp)
    2a24:	d8802104 	addi	r2,sp,132
    2a28:	d8800315 	stw	r2,12(sp)
    2a2c:	d9000015 	stw	r4,0(sp)
    2a30:	d8802504 	addi	r2,sp,148
    2a34:	d9403617 	ldw	r5,216(sp)
    2a38:	d9002c17 	ldw	r4,176(sp)
    2a3c:	d8800215 	stw	r2,8(sp)
    2a40:	d8802604 	addi	r2,sp,152
    2a44:	d8800115 	stw	r2,4(sp)
    2a48:	01c000c4 	movi	r7,3
    2a4c:	980d883a 	mov	r6,r19
    2a50:	da003d15 	stw	r8,244(sp)
    2a54:	00030f40 	call	30f4 <_dtoa_r>
    2a58:	d8c02917 	ldw	r3,164(sp)
    2a5c:	da003d17 	ldw	r8,244(sp)
    2a60:	1021883a 	mov	r16,r2
    2a64:	00801184 	movi	r2,70
    2a68:	80f9883a 	add	fp,r16,r3
    2a6c:	88bfd926 	beq	r17,r2,29d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00029d4>
    2a70:	003de806 	br	2214 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002214>
    2a74:	d9002917 	ldw	r4,164(sp)
    2a78:	00c04d0e 	bge	zero,r3,2bb0 <___vfprintf_internal_r+0x20e0>
    2a7c:	2000441e 	bne	r4,zero,2b90 <___vfprintf_internal_r+0x20c0>
    2a80:	9480004c 	andi	r18,r18,1
    2a84:	9000421e 	bne	r18,zero,2b90 <___vfprintf_internal_r+0x20c0>
    2a88:	1805883a 	mov	r2,r3
    2a8c:	18007016 	blt	r3,zero,2c50 <___vfprintf_internal_r+0x2180>
    2a90:	d8c03217 	ldw	r3,200(sp)
    2a94:	d8c02e15 	stw	r3,184(sp)
    2a98:	003e0206 	br	22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2a9c:	df0022c4 	addi	fp,sp,139
    2aa0:	dc002915 	stw	r16,164(sp)
    2aa4:	4027883a 	mov	r19,r8
    2aa8:	e021883a 	mov	r16,fp
    2aac:	b009883a 	mov	r4,r22
    2ab0:	01400284 	movi	r5,10
    2ab4:	000aa800 	call	aa80 <__modsi3>
    2ab8:	10800c04 	addi	r2,r2,48
    2abc:	843fffc4 	addi	r16,r16,-1
    2ac0:	b009883a 	mov	r4,r22
    2ac4:	01400284 	movi	r5,10
    2ac8:	80800005 	stb	r2,0(r16)
    2acc:	000a9fc0 	call	a9fc <__divsi3>
    2ad0:	102d883a 	mov	r22,r2
    2ad4:	00800244 	movi	r2,9
    2ad8:	15bff416 	blt	r2,r22,2aac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002aac>
    2adc:	9811883a 	mov	r8,r19
    2ae0:	b0800c04 	addi	r2,r22,48
    2ae4:	8027883a 	mov	r19,r16
    2ae8:	997fffc4 	addi	r5,r19,-1
    2aec:	98bfffc5 	stb	r2,-1(r19)
    2af0:	dc002917 	ldw	r16,164(sp)
    2af4:	2f006a2e 	bgeu	r5,fp,2ca0 <___vfprintf_internal_r+0x21d0>
    2af8:	d9c02384 	addi	r7,sp,142
    2afc:	3ccfc83a 	sub	r7,r7,r19
    2b00:	d9002344 	addi	r4,sp,141
    2b04:	e1cf883a 	add	r7,fp,r7
    2b08:	00000106 	br	2b10 <___vfprintf_internal_r+0x2040>
    2b0c:	28800003 	ldbu	r2,0(r5)
    2b10:	20800005 	stb	r2,0(r4)
    2b14:	21000044 	addi	r4,r4,1
    2b18:	29400044 	addi	r5,r5,1
    2b1c:	393ffb1e 	bne	r7,r4,2b0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002b0c>
    2b20:	d8802304 	addi	r2,sp,140
    2b24:	14c5c83a 	sub	r2,r2,r19
    2b28:	d8c02344 	addi	r3,sp,141
    2b2c:	1885883a 	add	r2,r3,r2
    2b30:	003f7006 	br	28f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00028f4>
    2b34:	0005883a 	mov	r2,zero
    2b38:	003f0f06 	br	2778 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002778>
    2b3c:	d8c03217 	ldw	r3,200(sp)
    2b40:	18c00044 	addi	r3,r3,1
    2b44:	d8c02e15 	stw	r3,184(sp)
    2b48:	1805883a 	mov	r2,r3
    2b4c:	183fb20e 	bge	r3,zero,2a18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a18>
    2b50:	0005883a 	mov	r2,zero
    2b54:	003fb006 	br	2a18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a18>
    2b58:	d9003617 	ldw	r4,216(sp)
    2b5c:	000d883a 	mov	r6,zero
    2b60:	000f883a 	mov	r7,zero
    2b64:	980b883a 	mov	r5,r19
    2b68:	d8c03c15 	stw	r3,240(sp)
    2b6c:	da003d15 	stw	r8,244(sp)
    2b70:	000bd440 	call	bd44 <__eqdf2>
    2b74:	d8c03c17 	ldw	r3,240(sp)
    2b78:	da003d17 	ldw	r8,244(sp)
    2b7c:	103f9826 	beq	r2,zero,29e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00029e0>
    2b80:	00800044 	movi	r2,1
    2b84:	10c7c83a 	sub	r3,r2,r3
    2b88:	d8c02615 	stw	r3,152(sp)
    2b8c:	003f9506 	br	29e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00029e4>
    2b90:	d9002917 	ldw	r4,164(sp)
    2b94:	d8c03217 	ldw	r3,200(sp)
    2b98:	20800044 	addi	r2,r4,1
    2b9c:	1885883a 	add	r2,r3,r2
    2ba0:	d8802e15 	stw	r2,184(sp)
    2ba4:	103dbf0e 	bge	r2,zero,22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2ba8:	0005883a 	mov	r2,zero
    2bac:	003dbd06 	br	22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2bb0:	2000211e 	bne	r4,zero,2c38 <___vfprintf_internal_r+0x2168>
    2bb4:	9480004c 	andi	r18,r18,1
    2bb8:	90001f1e 	bne	r18,zero,2c38 <___vfprintf_internal_r+0x2168>
    2bbc:	00800044 	movi	r2,1
    2bc0:	d8802e15 	stw	r2,184(sp)
    2bc4:	003db706 	br	22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2bc8:	00800b44 	movi	r2,45
    2bcc:	05adc83a 	sub	r22,zero,r22
    2bd0:	d8802305 	stb	r2,140(sp)
    2bd4:	003f3f06 	br	28d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00028d4>
    2bd8:	0005883a 	mov	r2,zero
    2bdc:	003f5206 	br	2928 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002928>
    2be0:	90a4703a 	and	r18,r18,r2
    2be4:	903f4e26 	beq	r18,zero,2920 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002920>
    2be8:	003f4a06 	br	2914 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002914>
    2bec:	00800084 	movi	r2,2
    2bf0:	10c5c83a 	sub	r2,r2,r3
    2bf4:	003f8406 	br	2a08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a08>
    2bf8:	d8802d17 	ldw	r2,180(sp)
    2bfc:	d9002d17 	ldw	r4,180(sp)
    2c00:	ac400043 	ldbu	r17,1(r21)
    2c04:	10800017 	ldw	r2,0(r2)
    2c08:	582b883a 	mov	r21,r11
    2c0c:	d8802915 	stw	r2,164(sp)
    2c10:	20800104 	addi	r2,r4,4
    2c14:	d9002917 	ldw	r4,164(sp)
    2c18:	d8802d15 	stw	r2,180(sp)
    2c1c:	203e7a0e 	bge	r4,zero,2608 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002608>
    2c20:	8c403fcc 	andi	r17,r17,255
    2c24:	00bfffc4 	movi	r2,-1
    2c28:	8c40201c 	xori	r17,r17,128
    2c2c:	d8802915 	stw	r2,164(sp)
    2c30:	8c7fe004 	addi	r17,r17,-128
    2c34:	00380706 	br	c54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000c54>
    2c38:	d8c02917 	ldw	r3,164(sp)
    2c3c:	18c00084 	addi	r3,r3,2
    2c40:	d8c02e15 	stw	r3,184(sp)
    2c44:	1805883a 	mov	r2,r3
    2c48:	183d960e 	bge	r3,zero,22a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00022a4>
    2c4c:	003fd606 	br	2ba8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002ba8>
    2c50:	0005883a 	mov	r2,zero
    2c54:	003f8e06 	br	2a90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a90>
    2c58:	9080004c 	andi	r2,r18,1
    2c5c:	103f811e 	bne	r2,zero,2a64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002a64>
    2c60:	d8802117 	ldw	r2,132(sp)
    2c64:	1405c83a 	sub	r2,r2,r16
    2c68:	d8803315 	stw	r2,204(sp)
    2c6c:	b47ef326 	beq	r22,r17,283c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000283c>
    2c70:	dd802617 	ldw	r22,152(sp)
    2c74:	003f1106 	br	28bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00028bc>
    2c78:	d9c02785 	stb	r7,158(sp)
    2c7c:	00390406 	br	1090 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001090>
    2c80:	d9c02785 	stb	r7,158(sp)
    2c84:	0038d306 	br	fd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0000fd4>
    2c88:	d9c02785 	stb	r7,158(sp)
    2c8c:	003a6106 	br	1614 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001614>
    2c90:	d9c02785 	stb	r7,158(sp)
    2c94:	003af806 	br	1878 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0001878>
    2c98:	0005883a 	mov	r2,zero
    2c9c:	003d7e06 	br	2298 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002298>
    2ca0:	d8802344 	addi	r2,sp,141
    2ca4:	003f1306 	br	28f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00028f4>
    2ca8:	d9c02785 	stb	r7,158(sp)
    2cac:	00392306 	br	113c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000113c>
    2cb0:	d9c02785 	stb	r7,158(sp)
    2cb4:	003aa906 	br	175c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000175c>
    2cb8:	d9c02785 	stb	r7,158(sp)
    2cbc:	003a3d06 	br	15b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00015b4>
    2cc0:	d9c02785 	stb	r7,158(sp)
    2cc4:	003aca06 	br	17f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00017f0>

00002cc8 <__vfprintf_internal>:
    2cc8:	00800074 	movhi	r2,1
    2ccc:	108ab804 	addi	r2,r2,10976
    2cd0:	300f883a 	mov	r7,r6
    2cd4:	280d883a 	mov	r6,r5
    2cd8:	200b883a 	mov	r5,r4
    2cdc:	11000017 	ldw	r4,0(r2)
    2ce0:	0000ad01 	jmpi	ad0 <___vfprintf_internal_r>

00002ce4 <__sbprintf>:
    2ce4:	2880030b 	ldhu	r2,12(r5)
    2ce8:	2ac01917 	ldw	r11,100(r5)
    2cec:	2a80038b 	ldhu	r10,14(r5)
    2cf0:	2a400717 	ldw	r9,28(r5)
    2cf4:	2a000917 	ldw	r8,36(r5)
    2cf8:	defee204 	addi	sp,sp,-1144
    2cfc:	00c10004 	movi	r3,1024
    2d00:	dc011a15 	stw	r16,1128(sp)
    2d04:	10bfff4c 	andi	r2,r2,65533
    2d08:	2821883a 	mov	r16,r5
    2d0c:	d8cb883a 	add	r5,sp,r3
    2d10:	dc811c15 	stw	r18,1136(sp)
    2d14:	dc411b15 	stw	r17,1132(sp)
    2d18:	dfc11d15 	stw	ra,1140(sp)
    2d1c:	2025883a 	mov	r18,r4
    2d20:	d881030d 	sth	r2,1036(sp)
    2d24:	dac11915 	stw	r11,1124(sp)
    2d28:	da81038d 	sth	r10,1038(sp)
    2d2c:	da410715 	stw	r9,1052(sp)
    2d30:	da010915 	stw	r8,1060(sp)
    2d34:	dec10015 	stw	sp,1024(sp)
    2d38:	dec10415 	stw	sp,1040(sp)
    2d3c:	d8c10215 	stw	r3,1032(sp)
    2d40:	d8c10515 	stw	r3,1044(sp)
    2d44:	d8010615 	stw	zero,1048(sp)
    2d48:	0000ad00 	call	ad0 <___vfprintf_internal_r>
    2d4c:	1023883a 	mov	r17,r2
    2d50:	10000416 	blt	r2,zero,2d64 <__sbprintf+0x80>
    2d54:	d9410004 	addi	r5,sp,1024
    2d58:	9009883a 	mov	r4,r18
    2d5c:	00049980 	call	4998 <_fflush_r>
    2d60:	10000d1e 	bne	r2,zero,2d98 <__sbprintf+0xb4>
    2d64:	d881030b 	ldhu	r2,1036(sp)
    2d68:	1080100c 	andi	r2,r2,64
    2d6c:	10000326 	beq	r2,zero,2d7c <__sbprintf+0x98>
    2d70:	8080030b 	ldhu	r2,12(r16)
    2d74:	10801014 	ori	r2,r2,64
    2d78:	8080030d 	sth	r2,12(r16)
    2d7c:	8805883a 	mov	r2,r17
    2d80:	dfc11d17 	ldw	ra,1140(sp)
    2d84:	dc811c17 	ldw	r18,1136(sp)
    2d88:	dc411b17 	ldw	r17,1132(sp)
    2d8c:	dc011a17 	ldw	r16,1128(sp)
    2d90:	dec11e04 	addi	sp,sp,1144
    2d94:	f800283a 	ret
    2d98:	047fffc4 	movi	r17,-1
    2d9c:	003ff106 	br	2d64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002d64>

00002da0 <__swsetup_r>:
    2da0:	00800074 	movhi	r2,1
    2da4:	defffd04 	addi	sp,sp,-12
    2da8:	108ab804 	addi	r2,r2,10976
    2dac:	dc400115 	stw	r17,4(sp)
    2db0:	2023883a 	mov	r17,r4
    2db4:	11000017 	ldw	r4,0(r2)
    2db8:	dc000015 	stw	r16,0(sp)
    2dbc:	dfc00215 	stw	ra,8(sp)
    2dc0:	2821883a 	mov	r16,r5
    2dc4:	20000226 	beq	r4,zero,2dd0 <__swsetup_r+0x30>
    2dc8:	20800e17 	ldw	r2,56(r4)
    2dcc:	10003126 	beq	r2,zero,2e94 <__swsetup_r+0xf4>
    2dd0:	8080030b 	ldhu	r2,12(r16)
    2dd4:	10c0020c 	andi	r3,r2,8
    2dd8:	1009883a 	mov	r4,r2
    2ddc:	18000f26 	beq	r3,zero,2e1c <__swsetup_r+0x7c>
    2de0:	80c00417 	ldw	r3,16(r16)
    2de4:	18001526 	beq	r3,zero,2e3c <__swsetup_r+0x9c>
    2de8:	1100004c 	andi	r4,r2,1
    2dec:	20001c1e 	bne	r4,zero,2e60 <__swsetup_r+0xc0>
    2df0:	1080008c 	andi	r2,r2,2
    2df4:	1000291e 	bne	r2,zero,2e9c <__swsetup_r+0xfc>
    2df8:	80800517 	ldw	r2,20(r16)
    2dfc:	80800215 	stw	r2,8(r16)
    2e00:	18001c26 	beq	r3,zero,2e74 <__swsetup_r+0xd4>
    2e04:	0005883a 	mov	r2,zero
    2e08:	dfc00217 	ldw	ra,8(sp)
    2e0c:	dc400117 	ldw	r17,4(sp)
    2e10:	dc000017 	ldw	r16,0(sp)
    2e14:	dec00304 	addi	sp,sp,12
    2e18:	f800283a 	ret
    2e1c:	2080040c 	andi	r2,r4,16
    2e20:	10002e26 	beq	r2,zero,2edc <__swsetup_r+0x13c>
    2e24:	2080010c 	andi	r2,r4,4
    2e28:	10001e1e 	bne	r2,zero,2ea4 <__swsetup_r+0x104>
    2e2c:	80c00417 	ldw	r3,16(r16)
    2e30:	20800214 	ori	r2,r4,8
    2e34:	8080030d 	sth	r2,12(r16)
    2e38:	183feb1e 	bne	r3,zero,2de8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002de8>
    2e3c:	1100a00c 	andi	r4,r2,640
    2e40:	01408004 	movi	r5,512
    2e44:	217fe826 	beq	r4,r5,2de8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002de8>
    2e48:	800b883a 	mov	r5,r16
    2e4c:	8809883a 	mov	r4,r17
    2e50:	00059180 	call	5918 <__smakebuf_r>
    2e54:	8080030b 	ldhu	r2,12(r16)
    2e58:	80c00417 	ldw	r3,16(r16)
    2e5c:	003fe206 	br	2de8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002de8>
    2e60:	80800517 	ldw	r2,20(r16)
    2e64:	80000215 	stw	zero,8(r16)
    2e68:	0085c83a 	sub	r2,zero,r2
    2e6c:	80800615 	stw	r2,24(r16)
    2e70:	183fe41e 	bne	r3,zero,2e04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e04>
    2e74:	80c0030b 	ldhu	r3,12(r16)
    2e78:	0005883a 	mov	r2,zero
    2e7c:	1900200c 	andi	r4,r3,128
    2e80:	203fe126 	beq	r4,zero,2e08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e08>
    2e84:	18c01014 	ori	r3,r3,64
    2e88:	80c0030d 	sth	r3,12(r16)
    2e8c:	00bfffc4 	movi	r2,-1
    2e90:	003fdd06 	br	2e08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e08>
    2e94:	0004d740 	call	4d74 <__sinit>
    2e98:	003fcd06 	br	2dd0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002dd0>
    2e9c:	0005883a 	mov	r2,zero
    2ea0:	003fd606 	br	2dfc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002dfc>
    2ea4:	81400c17 	ldw	r5,48(r16)
    2ea8:	28000626 	beq	r5,zero,2ec4 <__swsetup_r+0x124>
    2eac:	80801004 	addi	r2,r16,64
    2eb0:	28800326 	beq	r5,r2,2ec0 <__swsetup_r+0x120>
    2eb4:	8809883a 	mov	r4,r17
    2eb8:	0004ee80 	call	4ee8 <_free_r>
    2ebc:	8100030b 	ldhu	r4,12(r16)
    2ec0:	80000c15 	stw	zero,48(r16)
    2ec4:	80c00417 	ldw	r3,16(r16)
    2ec8:	00bff6c4 	movi	r2,-37
    2ecc:	1108703a 	and	r4,r2,r4
    2ed0:	80000115 	stw	zero,4(r16)
    2ed4:	80c00015 	stw	r3,0(r16)
    2ed8:	003fd506 	br	2e30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e30>
    2edc:	00800244 	movi	r2,9
    2ee0:	88800015 	stw	r2,0(r17)
    2ee4:	20801014 	ori	r2,r4,64
    2ee8:	8080030d 	sth	r2,12(r16)
    2eec:	00bfffc4 	movi	r2,-1
    2ef0:	003fc506 	br	2e08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002e08>

00002ef4 <quorem>:
    2ef4:	defff704 	addi	sp,sp,-36
    2ef8:	dc800215 	stw	r18,8(sp)
    2efc:	20800417 	ldw	r2,16(r4)
    2f00:	2c800417 	ldw	r18,16(r5)
    2f04:	dfc00815 	stw	ra,32(sp)
    2f08:	ddc00715 	stw	r23,28(sp)
    2f0c:	dd800615 	stw	r22,24(sp)
    2f10:	dd400515 	stw	r21,20(sp)
    2f14:	dd000415 	stw	r20,16(sp)
    2f18:	dcc00315 	stw	r19,12(sp)
    2f1c:	dc400115 	stw	r17,4(sp)
    2f20:	dc000015 	stw	r16,0(sp)
    2f24:	14807116 	blt	r2,r18,30ec <quorem+0x1f8>
    2f28:	94bfffc4 	addi	r18,r18,-1
    2f2c:	94ad883a 	add	r22,r18,r18
    2f30:	b5ad883a 	add	r22,r22,r22
    2f34:	2c400504 	addi	r17,r5,20
    2f38:	8da9883a 	add	r20,r17,r22
    2f3c:	25400504 	addi	r21,r4,20
    2f40:	282f883a 	mov	r23,r5
    2f44:	adad883a 	add	r22,r21,r22
    2f48:	a1400017 	ldw	r5,0(r20)
    2f4c:	2021883a 	mov	r16,r4
    2f50:	b1000017 	ldw	r4,0(r22)
    2f54:	29400044 	addi	r5,r5,1
    2f58:	000aaf40 	call	aaf4 <__udivsi3>
    2f5c:	1027883a 	mov	r19,r2
    2f60:	10002c26 	beq	r2,zero,3014 <quorem+0x120>
    2f64:	a813883a 	mov	r9,r21
    2f68:	880b883a 	mov	r5,r17
    2f6c:	0009883a 	mov	r4,zero
    2f70:	000d883a 	mov	r6,zero
    2f74:	2a000017 	ldw	r8,0(r5)
    2f78:	49c00017 	ldw	r7,0(r9)
    2f7c:	29400104 	addi	r5,r5,4
    2f80:	40bfffcc 	andi	r2,r8,65535
    2f84:	14c5383a 	mul	r2,r2,r19
    2f88:	4010d43a 	srli	r8,r8,16
    2f8c:	38ffffcc 	andi	r3,r7,65535
    2f90:	1105883a 	add	r2,r2,r4
    2f94:	1008d43a 	srli	r4,r2,16
    2f98:	44d1383a 	mul	r8,r8,r19
    2f9c:	198d883a 	add	r6,r3,r6
    2fa0:	10ffffcc 	andi	r3,r2,65535
    2fa4:	30c7c83a 	sub	r3,r6,r3
    2fa8:	380ed43a 	srli	r7,r7,16
    2fac:	4105883a 	add	r2,r8,r4
    2fb0:	180dd43a 	srai	r6,r3,16
    2fb4:	113fffcc 	andi	r4,r2,65535
    2fb8:	390fc83a 	sub	r7,r7,r4
    2fbc:	398d883a 	add	r6,r7,r6
    2fc0:	300e943a 	slli	r7,r6,16
    2fc4:	18ffffcc 	andi	r3,r3,65535
    2fc8:	1008d43a 	srli	r4,r2,16
    2fcc:	38ceb03a 	or	r7,r7,r3
    2fd0:	49c00015 	stw	r7,0(r9)
    2fd4:	300dd43a 	srai	r6,r6,16
    2fd8:	4a400104 	addi	r9,r9,4
    2fdc:	a17fe52e 	bgeu	r20,r5,2f74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002f74>
    2fe0:	b0800017 	ldw	r2,0(r22)
    2fe4:	10000b1e 	bne	r2,zero,3014 <quorem+0x120>
    2fe8:	b0bfff04 	addi	r2,r22,-4
    2fec:	a880082e 	bgeu	r21,r2,3010 <quorem+0x11c>
    2ff0:	b0ffff17 	ldw	r3,-4(r22)
    2ff4:	18000326 	beq	r3,zero,3004 <quorem+0x110>
    2ff8:	00000506 	br	3010 <quorem+0x11c>
    2ffc:	10c00017 	ldw	r3,0(r2)
    3000:	1800031e 	bne	r3,zero,3010 <quorem+0x11c>
    3004:	10bfff04 	addi	r2,r2,-4
    3008:	94bfffc4 	addi	r18,r18,-1
    300c:	a8bffb36 	bltu	r21,r2,2ffc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0002ffc>
    3010:	84800415 	stw	r18,16(r16)
    3014:	b80b883a 	mov	r5,r23
    3018:	8009883a 	mov	r4,r16
    301c:	00070580 	call	7058 <__mcmp>
    3020:	10002616 	blt	r2,zero,30bc <quorem+0x1c8>
    3024:	9cc00044 	addi	r19,r19,1
    3028:	a805883a 	mov	r2,r21
    302c:	000b883a 	mov	r5,zero
    3030:	11000017 	ldw	r4,0(r2)
    3034:	89800017 	ldw	r6,0(r17)
    3038:	10800104 	addi	r2,r2,4
    303c:	20ffffcc 	andi	r3,r4,65535
    3040:	194b883a 	add	r5,r3,r5
    3044:	30ffffcc 	andi	r3,r6,65535
    3048:	28c7c83a 	sub	r3,r5,r3
    304c:	300cd43a 	srli	r6,r6,16
    3050:	2008d43a 	srli	r4,r4,16
    3054:	180bd43a 	srai	r5,r3,16
    3058:	18ffffcc 	andi	r3,r3,65535
    305c:	2189c83a 	sub	r4,r4,r6
    3060:	2149883a 	add	r4,r4,r5
    3064:	200c943a 	slli	r6,r4,16
    3068:	8c400104 	addi	r17,r17,4
    306c:	200bd43a 	srai	r5,r4,16
    3070:	30c6b03a 	or	r3,r6,r3
    3074:	10ffff15 	stw	r3,-4(r2)
    3078:	a47fed2e 	bgeu	r20,r17,3030 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003030>
    307c:	9485883a 	add	r2,r18,r18
    3080:	1085883a 	add	r2,r2,r2
    3084:	a887883a 	add	r3,r21,r2
    3088:	18800017 	ldw	r2,0(r3)
    308c:	10000b1e 	bne	r2,zero,30bc <quorem+0x1c8>
    3090:	18bfff04 	addi	r2,r3,-4
    3094:	a880082e 	bgeu	r21,r2,30b8 <quorem+0x1c4>
    3098:	18ffff17 	ldw	r3,-4(r3)
    309c:	18000326 	beq	r3,zero,30ac <quorem+0x1b8>
    30a0:	00000506 	br	30b8 <quorem+0x1c4>
    30a4:	10c00017 	ldw	r3,0(r2)
    30a8:	1800031e 	bne	r3,zero,30b8 <quorem+0x1c4>
    30ac:	10bfff04 	addi	r2,r2,-4
    30b0:	94bfffc4 	addi	r18,r18,-1
    30b4:	a8bffb36 	bltu	r21,r2,30a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00030a4>
    30b8:	84800415 	stw	r18,16(r16)
    30bc:	9805883a 	mov	r2,r19
    30c0:	dfc00817 	ldw	ra,32(sp)
    30c4:	ddc00717 	ldw	r23,28(sp)
    30c8:	dd800617 	ldw	r22,24(sp)
    30cc:	dd400517 	ldw	r21,20(sp)
    30d0:	dd000417 	ldw	r20,16(sp)
    30d4:	dcc00317 	ldw	r19,12(sp)
    30d8:	dc800217 	ldw	r18,8(sp)
    30dc:	dc400117 	ldw	r17,4(sp)
    30e0:	dc000017 	ldw	r16,0(sp)
    30e4:	dec00904 	addi	sp,sp,36
    30e8:	f800283a 	ret
    30ec:	0005883a 	mov	r2,zero
    30f0:	003ff306 	br	30c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00030c0>

000030f4 <_dtoa_r>:
    30f4:	20801017 	ldw	r2,64(r4)
    30f8:	deffde04 	addi	sp,sp,-136
    30fc:	df002015 	stw	fp,128(sp)
    3100:	dcc01b15 	stw	r19,108(sp)
    3104:	dc801a15 	stw	r18,104(sp)
    3108:	dc401915 	stw	r17,100(sp)
    310c:	dc001815 	stw	r16,96(sp)
    3110:	dfc02115 	stw	ra,132(sp)
    3114:	ddc01f15 	stw	r23,124(sp)
    3118:	dd801e15 	stw	r22,120(sp)
    311c:	dd401d15 	stw	r21,116(sp)
    3120:	dd001c15 	stw	r20,112(sp)
    3124:	d9c00315 	stw	r7,12(sp)
    3128:	2039883a 	mov	fp,r4
    312c:	3023883a 	mov	r17,r6
    3130:	2825883a 	mov	r18,r5
    3134:	dc002417 	ldw	r16,144(sp)
    3138:	3027883a 	mov	r19,r6
    313c:	10000826 	beq	r2,zero,3160 <_dtoa_r+0x6c>
    3140:	21801117 	ldw	r6,68(r4)
    3144:	00c00044 	movi	r3,1
    3148:	100b883a 	mov	r5,r2
    314c:	1986983a 	sll	r3,r3,r6
    3150:	11800115 	stw	r6,4(r2)
    3154:	10c00215 	stw	r3,8(r2)
    3158:	00068380 	call	6838 <_Bfree>
    315c:	e0001015 	stw	zero,64(fp)
    3160:	88002e16 	blt	r17,zero,321c <_dtoa_r+0x128>
    3164:	80000015 	stw	zero,0(r16)
    3168:	889ffc2c 	andhi	r2,r17,32752
    316c:	00dffc34 	movhi	r3,32752
    3170:	10c01c26 	beq	r2,r3,31e4 <_dtoa_r+0xf0>
    3174:	000d883a 	mov	r6,zero
    3178:	000f883a 	mov	r7,zero
    317c:	9009883a 	mov	r4,r18
    3180:	980b883a 	mov	r5,r19
    3184:	000bd440 	call	bd44 <__eqdf2>
    3188:	10002b1e 	bne	r2,zero,3238 <_dtoa_r+0x144>
    318c:	d9c02317 	ldw	r7,140(sp)
    3190:	00800044 	movi	r2,1
    3194:	38800015 	stw	r2,0(r7)
    3198:	d8802517 	ldw	r2,148(sp)
    319c:	10019e26 	beq	r2,zero,3818 <_dtoa_r+0x724>
    31a0:	d8c02517 	ldw	r3,148(sp)
    31a4:	00800074 	movhi	r2,1
    31a8:	10829844 	addi	r2,r2,2657
    31ac:	18800015 	stw	r2,0(r3)
    31b0:	10bfffc4 	addi	r2,r2,-1
    31b4:	dfc02117 	ldw	ra,132(sp)
    31b8:	df002017 	ldw	fp,128(sp)
    31bc:	ddc01f17 	ldw	r23,124(sp)
    31c0:	dd801e17 	ldw	r22,120(sp)
    31c4:	dd401d17 	ldw	r21,116(sp)
    31c8:	dd001c17 	ldw	r20,112(sp)
    31cc:	dcc01b17 	ldw	r19,108(sp)
    31d0:	dc801a17 	ldw	r18,104(sp)
    31d4:	dc401917 	ldw	r17,100(sp)
    31d8:	dc001817 	ldw	r16,96(sp)
    31dc:	dec02204 	addi	sp,sp,136
    31e0:	f800283a 	ret
    31e4:	d8c02317 	ldw	r3,140(sp)
    31e8:	0089c3c4 	movi	r2,9999
    31ec:	18800015 	stw	r2,0(r3)
    31f0:	90017726 	beq	r18,zero,37d0 <_dtoa_r+0x6dc>
    31f4:	00800074 	movhi	r2,1
    31f8:	1082a404 	addi	r2,r2,2704
    31fc:	d9002517 	ldw	r4,148(sp)
    3200:	203fec26 	beq	r4,zero,31b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031b4>
    3204:	10c000c7 	ldb	r3,3(r2)
    3208:	1801781e 	bne	r3,zero,37ec <_dtoa_r+0x6f8>
    320c:	10c000c4 	addi	r3,r2,3
    3210:	d9802517 	ldw	r6,148(sp)
    3214:	30c00015 	stw	r3,0(r6)
    3218:	003fe606 	br	31b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031b4>
    321c:	04e00034 	movhi	r19,32768
    3220:	9cffffc4 	addi	r19,r19,-1
    3224:	00800044 	movi	r2,1
    3228:	8ce6703a 	and	r19,r17,r19
    322c:	80800015 	stw	r2,0(r16)
    3230:	9823883a 	mov	r17,r19
    3234:	003fcc06 	br	3168 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003168>
    3238:	d8800204 	addi	r2,sp,8
    323c:	d8800015 	stw	r2,0(sp)
    3240:	d9c00104 	addi	r7,sp,4
    3244:	900b883a 	mov	r5,r18
    3248:	980d883a 	mov	r6,r19
    324c:	e009883a 	mov	r4,fp
    3250:	8820d53a 	srli	r16,r17,20
    3254:	00074240 	call	7424 <__d2b>
    3258:	d8800915 	stw	r2,36(sp)
    325c:	8001651e 	bne	r16,zero,37f4 <_dtoa_r+0x700>
    3260:	dd800217 	ldw	r22,8(sp)
    3264:	dc000117 	ldw	r16,4(sp)
    3268:	00800804 	movi	r2,32
    326c:	b421883a 	add	r16,r22,r16
    3270:	80c10c84 	addi	r3,r16,1074
    3274:	10c2d10e 	bge	r2,r3,3dbc <_dtoa_r+0xcc8>
    3278:	00801004 	movi	r2,64
    327c:	81010484 	addi	r4,r16,1042
    3280:	10c7c83a 	sub	r3,r2,r3
    3284:	9108d83a 	srl	r4,r18,r4
    3288:	88e2983a 	sll	r17,r17,r3
    328c:	2448b03a 	or	r4,r4,r17
    3290:	000d10c0 	call	d10c <__floatunsidf>
    3294:	017f8434 	movhi	r5,65040
    3298:	01800044 	movi	r6,1
    329c:	1009883a 	mov	r4,r2
    32a0:	194b883a 	add	r5,r3,r5
    32a4:	843fffc4 	addi	r16,r16,-1
    32a8:	d9801115 	stw	r6,68(sp)
    32ac:	000d883a 	mov	r6,zero
    32b0:	01cffe34 	movhi	r7,16376
    32b4:	000c6b40 	call	c6b4 <__subdf3>
    32b8:	0198dbf4 	movhi	r6,25455
    32bc:	01cff4f4 	movhi	r7,16339
    32c0:	3190d844 	addi	r6,r6,17249
    32c4:	39e1e9c4 	addi	r7,r7,-30809
    32c8:	1009883a 	mov	r4,r2
    32cc:	180b883a 	mov	r5,r3
    32d0:	000bf9c0 	call	bf9c <__muldf3>
    32d4:	01a2d874 	movhi	r6,35681
    32d8:	01cff1f4 	movhi	r7,16327
    32dc:	31b22cc4 	addi	r6,r6,-14157
    32e0:	39e28a04 	addi	r7,r7,-30168
    32e4:	180b883a 	mov	r5,r3
    32e8:	1009883a 	mov	r4,r2
    32ec:	000abb00 	call	abb0 <__adddf3>
    32f0:	8009883a 	mov	r4,r16
    32f4:	1029883a 	mov	r20,r2
    32f8:	1823883a 	mov	r17,r3
    32fc:	000d0300 	call	d030 <__floatsidf>
    3300:	019427f4 	movhi	r6,20639
    3304:	01cff4f4 	movhi	r7,16339
    3308:	319e7ec4 	addi	r6,r6,31227
    330c:	39d104c4 	addi	r7,r7,17427
    3310:	1009883a 	mov	r4,r2
    3314:	180b883a 	mov	r5,r3
    3318:	000bf9c0 	call	bf9c <__muldf3>
    331c:	100d883a 	mov	r6,r2
    3320:	180f883a 	mov	r7,r3
    3324:	a009883a 	mov	r4,r20
    3328:	880b883a 	mov	r5,r17
    332c:	000abb00 	call	abb0 <__adddf3>
    3330:	1009883a 	mov	r4,r2
    3334:	180b883a 	mov	r5,r3
    3338:	1029883a 	mov	r20,r2
    333c:	1823883a 	mov	r17,r3
    3340:	000cfb00 	call	cfb0 <__fixdfsi>
    3344:	000d883a 	mov	r6,zero
    3348:	000f883a 	mov	r7,zero
    334c:	a009883a 	mov	r4,r20
    3350:	880b883a 	mov	r5,r17
    3354:	d8800515 	stw	r2,20(sp)
    3358:	000bea80 	call	bea8 <__ledf2>
    335c:	10028716 	blt	r2,zero,3d7c <_dtoa_r+0xc88>
    3360:	d8c00517 	ldw	r3,20(sp)
    3364:	00800584 	movi	r2,22
    3368:	10c27536 	bltu	r2,r3,3d40 <_dtoa_r+0xc4c>
    336c:	180490fa 	slli	r2,r3,3
    3370:	00c00074 	movhi	r3,1
    3374:	18c2c004 	addi	r3,r3,2816
    3378:	1885883a 	add	r2,r3,r2
    337c:	11000017 	ldw	r4,0(r2)
    3380:	11400117 	ldw	r5,4(r2)
    3384:	900d883a 	mov	r6,r18
    3388:	980f883a 	mov	r7,r19
    338c:	000bdcc0 	call	bdcc <__gedf2>
    3390:	00828d0e 	bge	zero,r2,3dc8 <_dtoa_r+0xcd4>
    3394:	d9000517 	ldw	r4,20(sp)
    3398:	d8000e15 	stw	zero,56(sp)
    339c:	213fffc4 	addi	r4,r4,-1
    33a0:	d9000515 	stw	r4,20(sp)
    33a4:	b42dc83a 	sub	r22,r22,r16
    33a8:	b5bfffc4 	addi	r22,r22,-1
    33ac:	b0026f16 	blt	r22,zero,3d6c <_dtoa_r+0xc78>
    33b0:	d8000815 	stw	zero,32(sp)
    33b4:	d9c00517 	ldw	r7,20(sp)
    33b8:	38026416 	blt	r7,zero,3d4c <_dtoa_r+0xc58>
    33bc:	b1ed883a 	add	r22,r22,r7
    33c0:	d9c00d15 	stw	r7,52(sp)
    33c4:	d8000a15 	stw	zero,40(sp)
    33c8:	d9800317 	ldw	r6,12(sp)
    33cc:	00800244 	movi	r2,9
    33d0:	11811436 	bltu	r2,r6,3824 <_dtoa_r+0x730>
    33d4:	00800144 	movi	r2,5
    33d8:	1184e10e 	bge	r2,r6,4760 <_dtoa_r+0x166c>
    33dc:	31bfff04 	addi	r6,r6,-4
    33e0:	d9800315 	stw	r6,12(sp)
    33e4:	0023883a 	mov	r17,zero
    33e8:	d9800317 	ldw	r6,12(sp)
    33ec:	008000c4 	movi	r2,3
    33f0:	30836726 	beq	r6,r2,4190 <_dtoa_r+0x109c>
    33f4:	1183410e 	bge	r2,r6,40fc <_dtoa_r+0x1008>
    33f8:	d9c00317 	ldw	r7,12(sp)
    33fc:	00800104 	movi	r2,4
    3400:	38827c26 	beq	r7,r2,3df4 <_dtoa_r+0xd00>
    3404:	00800144 	movi	r2,5
    3408:	3884c41e 	bne	r7,r2,471c <_dtoa_r+0x1628>
    340c:	00800044 	movi	r2,1
    3410:	d8800b15 	stw	r2,44(sp)
    3414:	d8c00517 	ldw	r3,20(sp)
    3418:	d9002217 	ldw	r4,136(sp)
    341c:	1907883a 	add	r3,r3,r4
    3420:	19800044 	addi	r6,r3,1
    3424:	d8c00c15 	stw	r3,48(sp)
    3428:	d9800615 	stw	r6,24(sp)
    342c:	0183a40e 	bge	zero,r6,42c0 <_dtoa_r+0x11cc>
    3430:	d9800617 	ldw	r6,24(sp)
    3434:	3021883a 	mov	r16,r6
    3438:	e0001115 	stw	zero,68(fp)
    343c:	008005c4 	movi	r2,23
    3440:	1184c92e 	bgeu	r2,r6,4768 <_dtoa_r+0x1674>
    3444:	00c00044 	movi	r3,1
    3448:	00800104 	movi	r2,4
    344c:	1085883a 	add	r2,r2,r2
    3450:	11000504 	addi	r4,r2,20
    3454:	180b883a 	mov	r5,r3
    3458:	18c00044 	addi	r3,r3,1
    345c:	313ffb2e 	bgeu	r6,r4,344c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000344c>
    3460:	e1401115 	stw	r5,68(fp)
    3464:	e009883a 	mov	r4,fp
    3468:	00067900 	call	6790 <_Balloc>
    346c:	d8800715 	stw	r2,28(sp)
    3470:	e0801015 	stw	r2,64(fp)
    3474:	00800384 	movi	r2,14
    3478:	1400f736 	bltu	r2,r16,3858 <_dtoa_r+0x764>
    347c:	8800f626 	beq	r17,zero,3858 <_dtoa_r+0x764>
    3480:	d9c00517 	ldw	r7,20(sp)
    3484:	01c39a0e 	bge	zero,r7,42f0 <_dtoa_r+0x11fc>
    3488:	388003cc 	andi	r2,r7,15
    348c:	100490fa 	slli	r2,r2,3
    3490:	382bd13a 	srai	r21,r7,4
    3494:	00c00074 	movhi	r3,1
    3498:	18c2c004 	addi	r3,r3,2816
    349c:	1885883a 	add	r2,r3,r2
    34a0:	a8c0040c 	andi	r3,r21,16
    34a4:	12400017 	ldw	r9,0(r2)
    34a8:	12000117 	ldw	r8,4(r2)
    34ac:	18037926 	beq	r3,zero,4294 <_dtoa_r+0x11a0>
    34b0:	00800074 	movhi	r2,1
    34b4:	1082b604 	addi	r2,r2,2776
    34b8:	11800817 	ldw	r6,32(r2)
    34bc:	11c00917 	ldw	r7,36(r2)
    34c0:	9009883a 	mov	r4,r18
    34c4:	980b883a 	mov	r5,r19
    34c8:	da001715 	stw	r8,92(sp)
    34cc:	da401615 	stw	r9,88(sp)
    34d0:	000b45c0 	call	b45c <__divdf3>
    34d4:	da001717 	ldw	r8,92(sp)
    34d8:	da401617 	ldw	r9,88(sp)
    34dc:	ad4003cc 	andi	r21,r21,15
    34e0:	040000c4 	movi	r16,3
    34e4:	1023883a 	mov	r17,r2
    34e8:	1829883a 	mov	r20,r3
    34ec:	a8001126 	beq	r21,zero,3534 <_dtoa_r+0x440>
    34f0:	05c00074 	movhi	r23,1
    34f4:	bdc2b604 	addi	r23,r23,2776
    34f8:	4805883a 	mov	r2,r9
    34fc:	4007883a 	mov	r3,r8
    3500:	a980004c 	andi	r6,r21,1
    3504:	1009883a 	mov	r4,r2
    3508:	a82bd07a 	srai	r21,r21,1
    350c:	180b883a 	mov	r5,r3
    3510:	30000426 	beq	r6,zero,3524 <_dtoa_r+0x430>
    3514:	b9800017 	ldw	r6,0(r23)
    3518:	b9c00117 	ldw	r7,4(r23)
    351c:	84000044 	addi	r16,r16,1
    3520:	000bf9c0 	call	bf9c <__muldf3>
    3524:	bdc00204 	addi	r23,r23,8
    3528:	a83ff51e 	bne	r21,zero,3500 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003500>
    352c:	1013883a 	mov	r9,r2
    3530:	1811883a 	mov	r8,r3
    3534:	480d883a 	mov	r6,r9
    3538:	400f883a 	mov	r7,r8
    353c:	8809883a 	mov	r4,r17
    3540:	a00b883a 	mov	r5,r20
    3544:	000b45c0 	call	b45c <__divdf3>
    3548:	d8800f15 	stw	r2,60(sp)
    354c:	d8c01015 	stw	r3,64(sp)
    3550:	d8c00e17 	ldw	r3,56(sp)
    3554:	18000626 	beq	r3,zero,3570 <_dtoa_r+0x47c>
    3558:	d9000f17 	ldw	r4,60(sp)
    355c:	d9401017 	ldw	r5,64(sp)
    3560:	000d883a 	mov	r6,zero
    3564:	01cffc34 	movhi	r7,16368
    3568:	000bea80 	call	bea8 <__ledf2>
    356c:	10040b16 	blt	r2,zero,459c <_dtoa_r+0x14a8>
    3570:	8009883a 	mov	r4,r16
    3574:	000d0300 	call	d030 <__floatsidf>
    3578:	d9800f17 	ldw	r6,60(sp)
    357c:	d9c01017 	ldw	r7,64(sp)
    3580:	1009883a 	mov	r4,r2
    3584:	180b883a 	mov	r5,r3
    3588:	000bf9c0 	call	bf9c <__muldf3>
    358c:	000d883a 	mov	r6,zero
    3590:	01d00734 	movhi	r7,16412
    3594:	1009883a 	mov	r4,r2
    3598:	180b883a 	mov	r5,r3
    359c:	000abb00 	call	abb0 <__adddf3>
    35a0:	1021883a 	mov	r16,r2
    35a4:	d8800617 	ldw	r2,24(sp)
    35a8:	047f3034 	movhi	r17,64704
    35ac:	1c63883a 	add	r17,r3,r17
    35b0:	10031826 	beq	r2,zero,4214 <_dtoa_r+0x1120>
    35b4:	d8c00517 	ldw	r3,20(sp)
    35b8:	db000617 	ldw	r12,24(sp)
    35bc:	d8c01315 	stw	r3,76(sp)
    35c0:	d9000b17 	ldw	r4,44(sp)
    35c4:	20038f26 	beq	r4,zero,4404 <_dtoa_r+0x1310>
    35c8:	60bfffc4 	addi	r2,r12,-1
    35cc:	100490fa 	slli	r2,r2,3
    35d0:	00c00074 	movhi	r3,1
    35d4:	18c2c004 	addi	r3,r3,2816
    35d8:	1885883a 	add	r2,r3,r2
    35dc:	11800017 	ldw	r6,0(r2)
    35e0:	11c00117 	ldw	r7,4(r2)
    35e4:	d8800717 	ldw	r2,28(sp)
    35e8:	0009883a 	mov	r4,zero
    35ec:	014ff834 	movhi	r5,16352
    35f0:	db001615 	stw	r12,88(sp)
    35f4:	15c00044 	addi	r23,r2,1
    35f8:	000b45c0 	call	b45c <__divdf3>
    35fc:	800d883a 	mov	r6,r16
    3600:	880f883a 	mov	r7,r17
    3604:	1009883a 	mov	r4,r2
    3608:	180b883a 	mov	r5,r3
    360c:	000c6b40 	call	c6b4 <__subdf3>
    3610:	d9401017 	ldw	r5,64(sp)
    3614:	d9000f17 	ldw	r4,60(sp)
    3618:	102b883a 	mov	r21,r2
    361c:	d8c01215 	stw	r3,72(sp)
    3620:	000cfb00 	call	cfb0 <__fixdfsi>
    3624:	1009883a 	mov	r4,r2
    3628:	1029883a 	mov	r20,r2
    362c:	000d0300 	call	d030 <__floatsidf>
    3630:	d9000f17 	ldw	r4,60(sp)
    3634:	d9401017 	ldw	r5,64(sp)
    3638:	100d883a 	mov	r6,r2
    363c:	180f883a 	mov	r7,r3
    3640:	000c6b40 	call	c6b4 <__subdf3>
    3644:	1823883a 	mov	r17,r3
    3648:	d8c00717 	ldw	r3,28(sp)
    364c:	d9401217 	ldw	r5,72(sp)
    3650:	a2000c04 	addi	r8,r20,48
    3654:	1021883a 	mov	r16,r2
    3658:	1a000005 	stb	r8,0(r3)
    365c:	800d883a 	mov	r6,r16
    3660:	880f883a 	mov	r7,r17
    3664:	a809883a 	mov	r4,r21
    3668:	4029883a 	mov	r20,r8
    366c:	000bdcc0 	call	bdcc <__gedf2>
    3670:	00841d16 	blt	zero,r2,46e8 <_dtoa_r+0x15f4>
    3674:	800d883a 	mov	r6,r16
    3678:	880f883a 	mov	r7,r17
    367c:	0009883a 	mov	r4,zero
    3680:	014ffc34 	movhi	r5,16368
    3684:	000c6b40 	call	c6b4 <__subdf3>
    3688:	d9401217 	ldw	r5,72(sp)
    368c:	100d883a 	mov	r6,r2
    3690:	180f883a 	mov	r7,r3
    3694:	a809883a 	mov	r4,r21
    3698:	000bdcc0 	call	bdcc <__gedf2>
    369c:	db001617 	ldw	r12,88(sp)
    36a0:	00840e16 	blt	zero,r2,46dc <_dtoa_r+0x15e8>
    36a4:	00800044 	movi	r2,1
    36a8:	13006b0e 	bge	r2,r12,3858 <_dtoa_r+0x764>
    36ac:	d9000717 	ldw	r4,28(sp)
    36b0:	dd800f15 	stw	r22,60(sp)
    36b4:	dcc01015 	stw	r19,64(sp)
    36b8:	2319883a 	add	r12,r4,r12
    36bc:	dcc01217 	ldw	r19,72(sp)
    36c0:	602d883a 	mov	r22,r12
    36c4:	dc801215 	stw	r18,72(sp)
    36c8:	b825883a 	mov	r18,r23
    36cc:	00000906 	br	36f4 <_dtoa_r+0x600>
    36d0:	000c6b40 	call	c6b4 <__subdf3>
    36d4:	a80d883a 	mov	r6,r21
    36d8:	980f883a 	mov	r7,r19
    36dc:	1009883a 	mov	r4,r2
    36e0:	180b883a 	mov	r5,r3
    36e4:	000bea80 	call	bea8 <__ledf2>
    36e8:	1003e816 	blt	r2,zero,468c <_dtoa_r+0x1598>
    36ec:	b825883a 	mov	r18,r23
    36f0:	bd83e926 	beq	r23,r22,4698 <_dtoa_r+0x15a4>
    36f4:	a809883a 	mov	r4,r21
    36f8:	980b883a 	mov	r5,r19
    36fc:	000d883a 	mov	r6,zero
    3700:	01d00934 	movhi	r7,16420
    3704:	000bf9c0 	call	bf9c <__muldf3>
    3708:	000d883a 	mov	r6,zero
    370c:	01d00934 	movhi	r7,16420
    3710:	8009883a 	mov	r4,r16
    3714:	880b883a 	mov	r5,r17
    3718:	102b883a 	mov	r21,r2
    371c:	1827883a 	mov	r19,r3
    3720:	000bf9c0 	call	bf9c <__muldf3>
    3724:	180b883a 	mov	r5,r3
    3728:	1009883a 	mov	r4,r2
    372c:	1821883a 	mov	r16,r3
    3730:	1023883a 	mov	r17,r2
    3734:	000cfb00 	call	cfb0 <__fixdfsi>
    3738:	1009883a 	mov	r4,r2
    373c:	1029883a 	mov	r20,r2
    3740:	000d0300 	call	d030 <__floatsidf>
    3744:	8809883a 	mov	r4,r17
    3748:	800b883a 	mov	r5,r16
    374c:	100d883a 	mov	r6,r2
    3750:	180f883a 	mov	r7,r3
    3754:	000c6b40 	call	c6b4 <__subdf3>
    3758:	a5000c04 	addi	r20,r20,48
    375c:	a80d883a 	mov	r6,r21
    3760:	980f883a 	mov	r7,r19
    3764:	1009883a 	mov	r4,r2
    3768:	180b883a 	mov	r5,r3
    376c:	95000005 	stb	r20,0(r18)
    3770:	1021883a 	mov	r16,r2
    3774:	1823883a 	mov	r17,r3
    3778:	000bea80 	call	bea8 <__ledf2>
    377c:	bdc00044 	addi	r23,r23,1
    3780:	800d883a 	mov	r6,r16
    3784:	880f883a 	mov	r7,r17
    3788:	0009883a 	mov	r4,zero
    378c:	014ffc34 	movhi	r5,16368
    3790:	103fcf0e 	bge	r2,zero,36d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00036d0>
    3794:	d8c01317 	ldw	r3,76(sp)
    3798:	d8c00515 	stw	r3,20(sp)
    379c:	d9400917 	ldw	r5,36(sp)
    37a0:	e009883a 	mov	r4,fp
    37a4:	00068380 	call	6838 <_Bfree>
    37a8:	d9000517 	ldw	r4,20(sp)
    37ac:	d9802317 	ldw	r6,140(sp)
    37b0:	d9c02517 	ldw	r7,148(sp)
    37b4:	b8000005 	stb	zero,0(r23)
    37b8:	20800044 	addi	r2,r4,1
    37bc:	30800015 	stw	r2,0(r6)
    37c0:	3802aa26 	beq	r7,zero,426c <_dtoa_r+0x1178>
    37c4:	3dc00015 	stw	r23,0(r7)
    37c8:	d8800717 	ldw	r2,28(sp)
    37cc:	003e7906 	br	31b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031b4>
    37d0:	00800434 	movhi	r2,16
    37d4:	10bfffc4 	addi	r2,r2,-1
    37d8:	88a2703a 	and	r17,r17,r2
    37dc:	883e851e 	bne	r17,zero,31f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031f4>
    37e0:	00800074 	movhi	r2,1
    37e4:	1082a104 	addi	r2,r2,2692
    37e8:	003e8406 	br	31fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031fc>
    37ec:	10c00204 	addi	r3,r2,8
    37f0:	003e8706 	br	3210 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003210>
    37f4:	01400434 	movhi	r5,16
    37f8:	297fffc4 	addi	r5,r5,-1
    37fc:	994a703a 	and	r5,r19,r5
    3800:	9009883a 	mov	r4,r18
    3804:	843f0044 	addi	r16,r16,-1023
    3808:	294ffc34 	orhi	r5,r5,16368
    380c:	dd800217 	ldw	r22,8(sp)
    3810:	d8001115 	stw	zero,68(sp)
    3814:	003ea506 	br	32ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00032ac>
    3818:	00800074 	movhi	r2,1
    381c:	10829804 	addi	r2,r2,2656
    3820:	003e6406 	br	31b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031b4>
    3824:	e0001115 	stw	zero,68(fp)
    3828:	000b883a 	mov	r5,zero
    382c:	e009883a 	mov	r4,fp
    3830:	00067900 	call	6790 <_Balloc>
    3834:	01bfffc4 	movi	r6,-1
    3838:	01c00044 	movi	r7,1
    383c:	d8800715 	stw	r2,28(sp)
    3840:	d9800c15 	stw	r6,48(sp)
    3844:	e0801015 	stw	r2,64(fp)
    3848:	d8000315 	stw	zero,12(sp)
    384c:	d9c00b15 	stw	r7,44(sp)
    3850:	d9800615 	stw	r6,24(sp)
    3854:	d8002215 	stw	zero,136(sp)
    3858:	d8800117 	ldw	r2,4(sp)
    385c:	10008916 	blt	r2,zero,3a84 <_dtoa_r+0x990>
    3860:	d9000517 	ldw	r4,20(sp)
    3864:	00c00384 	movi	r3,14
    3868:	19008616 	blt	r3,r4,3a84 <_dtoa_r+0x990>
    386c:	200490fa 	slli	r2,r4,3
    3870:	00c00074 	movhi	r3,1
    3874:	d9802217 	ldw	r6,136(sp)
    3878:	18c2c004 	addi	r3,r3,2816
    387c:	1885883a 	add	r2,r3,r2
    3880:	14000017 	ldw	r16,0(r2)
    3884:	14400117 	ldw	r17,4(r2)
    3888:	30016316 	blt	r6,zero,3e18 <_dtoa_r+0xd24>
    388c:	800d883a 	mov	r6,r16
    3890:	880f883a 	mov	r7,r17
    3894:	9009883a 	mov	r4,r18
    3898:	980b883a 	mov	r5,r19
    389c:	000b45c0 	call	b45c <__divdf3>
    38a0:	180b883a 	mov	r5,r3
    38a4:	1009883a 	mov	r4,r2
    38a8:	000cfb00 	call	cfb0 <__fixdfsi>
    38ac:	1009883a 	mov	r4,r2
    38b0:	102b883a 	mov	r21,r2
    38b4:	000d0300 	call	d030 <__floatsidf>
    38b8:	800d883a 	mov	r6,r16
    38bc:	880f883a 	mov	r7,r17
    38c0:	1009883a 	mov	r4,r2
    38c4:	180b883a 	mov	r5,r3
    38c8:	000bf9c0 	call	bf9c <__muldf3>
    38cc:	100d883a 	mov	r6,r2
    38d0:	180f883a 	mov	r7,r3
    38d4:	9009883a 	mov	r4,r18
    38d8:	980b883a 	mov	r5,r19
    38dc:	000c6b40 	call	c6b4 <__subdf3>
    38e0:	d9c00717 	ldw	r7,28(sp)
    38e4:	1009883a 	mov	r4,r2
    38e8:	a8800c04 	addi	r2,r21,48
    38ec:	38800005 	stb	r2,0(r7)
    38f0:	3dc00044 	addi	r23,r7,1
    38f4:	d9c00617 	ldw	r7,24(sp)
    38f8:	01800044 	movi	r6,1
    38fc:	180b883a 	mov	r5,r3
    3900:	2005883a 	mov	r2,r4
    3904:	39803826 	beq	r7,r6,39e8 <_dtoa_r+0x8f4>
    3908:	000d883a 	mov	r6,zero
    390c:	01d00934 	movhi	r7,16420
    3910:	000bf9c0 	call	bf9c <__muldf3>
    3914:	000d883a 	mov	r6,zero
    3918:	000f883a 	mov	r7,zero
    391c:	1009883a 	mov	r4,r2
    3920:	180b883a 	mov	r5,r3
    3924:	1025883a 	mov	r18,r2
    3928:	1827883a 	mov	r19,r3
    392c:	000bd440 	call	bd44 <__eqdf2>
    3930:	103f9a26 	beq	r2,zero,379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3934:	d9c00617 	ldw	r7,24(sp)
    3938:	d8c00717 	ldw	r3,28(sp)
    393c:	b829883a 	mov	r20,r23
    3940:	38bfffc4 	addi	r2,r7,-1
    3944:	18ad883a 	add	r22,r3,r2
    3948:	00000a06 	br	3974 <_dtoa_r+0x880>
    394c:	000bf9c0 	call	bf9c <__muldf3>
    3950:	000d883a 	mov	r6,zero
    3954:	000f883a 	mov	r7,zero
    3958:	1009883a 	mov	r4,r2
    395c:	180b883a 	mov	r5,r3
    3960:	1025883a 	mov	r18,r2
    3964:	1827883a 	mov	r19,r3
    3968:	b829883a 	mov	r20,r23
    396c:	000bd440 	call	bd44 <__eqdf2>
    3970:	103f8a26 	beq	r2,zero,379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3974:	800d883a 	mov	r6,r16
    3978:	880f883a 	mov	r7,r17
    397c:	9009883a 	mov	r4,r18
    3980:	980b883a 	mov	r5,r19
    3984:	000b45c0 	call	b45c <__divdf3>
    3988:	180b883a 	mov	r5,r3
    398c:	1009883a 	mov	r4,r2
    3990:	000cfb00 	call	cfb0 <__fixdfsi>
    3994:	1009883a 	mov	r4,r2
    3998:	102b883a 	mov	r21,r2
    399c:	000d0300 	call	d030 <__floatsidf>
    39a0:	800d883a 	mov	r6,r16
    39a4:	880f883a 	mov	r7,r17
    39a8:	1009883a 	mov	r4,r2
    39ac:	180b883a 	mov	r5,r3
    39b0:	000bf9c0 	call	bf9c <__muldf3>
    39b4:	100d883a 	mov	r6,r2
    39b8:	180f883a 	mov	r7,r3
    39bc:	9009883a 	mov	r4,r18
    39c0:	980b883a 	mov	r5,r19
    39c4:	000c6b40 	call	c6b4 <__subdf3>
    39c8:	aa000c04 	addi	r8,r21,48
    39cc:	a2000005 	stb	r8,0(r20)
    39d0:	000d883a 	mov	r6,zero
    39d4:	01d00934 	movhi	r7,16420
    39d8:	1009883a 	mov	r4,r2
    39dc:	180b883a 	mov	r5,r3
    39e0:	a5c00044 	addi	r23,r20,1
    39e4:	b53fd91e 	bne	r22,r20,394c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000394c>
    39e8:	100d883a 	mov	r6,r2
    39ec:	180f883a 	mov	r7,r3
    39f0:	1009883a 	mov	r4,r2
    39f4:	180b883a 	mov	r5,r3
    39f8:	000abb00 	call	abb0 <__adddf3>
    39fc:	100d883a 	mov	r6,r2
    3a00:	180f883a 	mov	r7,r3
    3a04:	8009883a 	mov	r4,r16
    3a08:	880b883a 	mov	r5,r17
    3a0c:	1027883a 	mov	r19,r2
    3a10:	1825883a 	mov	r18,r3
    3a14:	000bea80 	call	bea8 <__ledf2>
    3a18:	10000816 	blt	r2,zero,3a3c <_dtoa_r+0x948>
    3a1c:	980d883a 	mov	r6,r19
    3a20:	900f883a 	mov	r7,r18
    3a24:	8009883a 	mov	r4,r16
    3a28:	880b883a 	mov	r5,r17
    3a2c:	000bd440 	call	bd44 <__eqdf2>
    3a30:	103f5a1e 	bne	r2,zero,379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3a34:	ad40004c 	andi	r21,r21,1
    3a38:	a83f5826 	beq	r21,zero,379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3a3c:	bd3fffc3 	ldbu	r20,-1(r23)
    3a40:	b8bfffc4 	addi	r2,r23,-1
    3a44:	1007883a 	mov	r3,r2
    3a48:	01400e44 	movi	r5,57
    3a4c:	d9800717 	ldw	r6,28(sp)
    3a50:	00000506 	br	3a68 <_dtoa_r+0x974>
    3a54:	18ffffc4 	addi	r3,r3,-1
    3a58:	11824726 	beq	r2,r6,4378 <_dtoa_r+0x1284>
    3a5c:	1d000003 	ldbu	r20,0(r3)
    3a60:	102f883a 	mov	r23,r2
    3a64:	10bfffc4 	addi	r2,r2,-1
    3a68:	a1003fcc 	andi	r4,r20,255
    3a6c:	2100201c 	xori	r4,r4,128
    3a70:	213fe004 	addi	r4,r4,-128
    3a74:	217ff726 	beq	r4,r5,3a54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a54>
    3a78:	a2000044 	addi	r8,r20,1
    3a7c:	12000005 	stb	r8,0(r2)
    3a80:	003f4606 	br	379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3a84:	d9000b17 	ldw	r4,44(sp)
    3a88:	2000c826 	beq	r4,zero,3dac <_dtoa_r+0xcb8>
    3a8c:	d9800317 	ldw	r6,12(sp)
    3a90:	00c00044 	movi	r3,1
    3a94:	1980f90e 	bge	r3,r6,3e7c <_dtoa_r+0xd88>
    3a98:	d8800617 	ldw	r2,24(sp)
    3a9c:	d8c00a17 	ldw	r3,40(sp)
    3aa0:	157fffc4 	addi	r21,r2,-1
    3aa4:	1d41f316 	blt	r3,r21,4274 <_dtoa_r+0x1180>
    3aa8:	1d6bc83a 	sub	r21,r3,r21
    3aac:	d9c00617 	ldw	r7,24(sp)
    3ab0:	3802aa16 	blt	r7,zero,455c <_dtoa_r+0x1468>
    3ab4:	dd000817 	ldw	r20,32(sp)
    3ab8:	d8800617 	ldw	r2,24(sp)
    3abc:	d8c00817 	ldw	r3,32(sp)
    3ac0:	01400044 	movi	r5,1
    3ac4:	e009883a 	mov	r4,fp
    3ac8:	1887883a 	add	r3,r3,r2
    3acc:	d8c00815 	stw	r3,32(sp)
    3ad0:	b0ad883a 	add	r22,r22,r2
    3ad4:	0006b9c0 	call	6b9c <__i2b>
    3ad8:	1023883a 	mov	r17,r2
    3adc:	a0000826 	beq	r20,zero,3b00 <_dtoa_r+0xa0c>
    3ae0:	0580070e 	bge	zero,r22,3b00 <_dtoa_r+0xa0c>
    3ae4:	a005883a 	mov	r2,r20
    3ae8:	b500b916 	blt	r22,r20,3dd0 <_dtoa_r+0xcdc>
    3aec:	d9000817 	ldw	r4,32(sp)
    3af0:	a0a9c83a 	sub	r20,r20,r2
    3af4:	b0adc83a 	sub	r22,r22,r2
    3af8:	2089c83a 	sub	r4,r4,r2
    3afc:	d9000815 	stw	r4,32(sp)
    3b00:	d9800a17 	ldw	r6,40(sp)
    3b04:	0181810e 	bge	zero,r6,410c <_dtoa_r+0x1018>
    3b08:	d9c00b17 	ldw	r7,44(sp)
    3b0c:	3800b326 	beq	r7,zero,3ddc <_dtoa_r+0xce8>
    3b10:	a800b226 	beq	r21,zero,3ddc <_dtoa_r+0xce8>
    3b14:	880b883a 	mov	r5,r17
    3b18:	a80d883a 	mov	r6,r21
    3b1c:	e009883a 	mov	r4,fp
    3b20:	0006dd00 	call	6dd0 <__pow5mult>
    3b24:	d9800917 	ldw	r6,36(sp)
    3b28:	100b883a 	mov	r5,r2
    3b2c:	e009883a 	mov	r4,fp
    3b30:	1023883a 	mov	r17,r2
    3b34:	0006bd80 	call	6bd8 <__multiply>
    3b38:	1021883a 	mov	r16,r2
    3b3c:	d8800a17 	ldw	r2,40(sp)
    3b40:	d9400917 	ldw	r5,36(sp)
    3b44:	e009883a 	mov	r4,fp
    3b48:	1545c83a 	sub	r2,r2,r21
    3b4c:	d8800a15 	stw	r2,40(sp)
    3b50:	00068380 	call	6838 <_Bfree>
    3b54:	d8c00a17 	ldw	r3,40(sp)
    3b58:	18009f1e 	bne	r3,zero,3dd8 <_dtoa_r+0xce4>
    3b5c:	05c00044 	movi	r23,1
    3b60:	e009883a 	mov	r4,fp
    3b64:	b80b883a 	mov	r5,r23
    3b68:	0006b9c0 	call	6b9c <__i2b>
    3b6c:	d9000d17 	ldw	r4,52(sp)
    3b70:	102b883a 	mov	r21,r2
    3b74:	2000ce26 	beq	r4,zero,3eb0 <_dtoa_r+0xdbc>
    3b78:	200d883a 	mov	r6,r4
    3b7c:	100b883a 	mov	r5,r2
    3b80:	e009883a 	mov	r4,fp
    3b84:	0006dd00 	call	6dd0 <__pow5mult>
    3b88:	d9800317 	ldw	r6,12(sp)
    3b8c:	102b883a 	mov	r21,r2
    3b90:	b981810e 	bge	r23,r6,4198 <_dtoa_r+0x10a4>
    3b94:	0027883a 	mov	r19,zero
    3b98:	a8800417 	ldw	r2,16(r21)
    3b9c:	05c00804 	movi	r23,32
    3ba0:	10800104 	addi	r2,r2,4
    3ba4:	1085883a 	add	r2,r2,r2
    3ba8:	1085883a 	add	r2,r2,r2
    3bac:	a885883a 	add	r2,r21,r2
    3bb0:	11000017 	ldw	r4,0(r2)
    3bb4:	0006a840 	call	6a84 <__hi0bits>
    3bb8:	b885c83a 	sub	r2,r23,r2
    3bbc:	1585883a 	add	r2,r2,r22
    3bc0:	108007cc 	andi	r2,r2,31
    3bc4:	1000b326 	beq	r2,zero,3e94 <_dtoa_r+0xda0>
    3bc8:	00c00804 	movi	r3,32
    3bcc:	1887c83a 	sub	r3,r3,r2
    3bd0:	01000104 	movi	r4,4
    3bd4:	20c2cd0e 	bge	r4,r3,470c <_dtoa_r+0x1618>
    3bd8:	00c00704 	movi	r3,28
    3bdc:	1885c83a 	sub	r2,r3,r2
    3be0:	d8c00817 	ldw	r3,32(sp)
    3be4:	a0a9883a 	add	r20,r20,r2
    3be8:	b0ad883a 	add	r22,r22,r2
    3bec:	1887883a 	add	r3,r3,r2
    3bf0:	d8c00815 	stw	r3,32(sp)
    3bf4:	d9800817 	ldw	r6,32(sp)
    3bf8:	0180040e 	bge	zero,r6,3c0c <_dtoa_r+0xb18>
    3bfc:	800b883a 	mov	r5,r16
    3c00:	e009883a 	mov	r4,fp
    3c04:	0006f100 	call	6f10 <__lshift>
    3c08:	1021883a 	mov	r16,r2
    3c0c:	0580050e 	bge	zero,r22,3c24 <_dtoa_r+0xb30>
    3c10:	a80b883a 	mov	r5,r21
    3c14:	b00d883a 	mov	r6,r22
    3c18:	e009883a 	mov	r4,fp
    3c1c:	0006f100 	call	6f10 <__lshift>
    3c20:	102b883a 	mov	r21,r2
    3c24:	d9c00e17 	ldw	r7,56(sp)
    3c28:	3801211e 	bne	r7,zero,40b0 <_dtoa_r+0xfbc>
    3c2c:	d9800617 	ldw	r6,24(sp)
    3c30:	0181380e 	bge	zero,r6,4114 <_dtoa_r+0x1020>
    3c34:	d8c00b17 	ldw	r3,44(sp)
    3c38:	1800ab1e 	bne	r3,zero,3ee8 <_dtoa_r+0xdf4>
    3c3c:	dc800717 	ldw	r18,28(sp)
    3c40:	dcc00617 	ldw	r19,24(sp)
    3c44:	9029883a 	mov	r20,r18
    3c48:	00000206 	br	3c54 <_dtoa_r+0xb60>
    3c4c:	00068600 	call	6860 <__multadd>
    3c50:	1021883a 	mov	r16,r2
    3c54:	a80b883a 	mov	r5,r21
    3c58:	8009883a 	mov	r4,r16
    3c5c:	0002ef40 	call	2ef4 <quorem>
    3c60:	10800c04 	addi	r2,r2,48
    3c64:	90800005 	stb	r2,0(r18)
    3c68:	94800044 	addi	r18,r18,1
    3c6c:	9507c83a 	sub	r3,r18,r20
    3c70:	000f883a 	mov	r7,zero
    3c74:	01800284 	movi	r6,10
    3c78:	800b883a 	mov	r5,r16
    3c7c:	e009883a 	mov	r4,fp
    3c80:	1cfff216 	blt	r3,r19,3c4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c4c>
    3c84:	1011883a 	mov	r8,r2
    3c88:	d8800617 	ldw	r2,24(sp)
    3c8c:	0082370e 	bge	zero,r2,456c <_dtoa_r+0x1478>
    3c90:	d9000717 	ldw	r4,28(sp)
    3c94:	0025883a 	mov	r18,zero
    3c98:	20af883a 	add	r23,r4,r2
    3c9c:	01800044 	movi	r6,1
    3ca0:	800b883a 	mov	r5,r16
    3ca4:	e009883a 	mov	r4,fp
    3ca8:	da001715 	stw	r8,92(sp)
    3cac:	0006f100 	call	6f10 <__lshift>
    3cb0:	a80b883a 	mov	r5,r21
    3cb4:	1009883a 	mov	r4,r2
    3cb8:	d8800915 	stw	r2,36(sp)
    3cbc:	00070580 	call	7058 <__mcmp>
    3cc0:	da001717 	ldw	r8,92(sp)
    3cc4:	0081800e 	bge	zero,r2,42c8 <_dtoa_r+0x11d4>
    3cc8:	b93fffc3 	ldbu	r4,-1(r23)
    3ccc:	b8bfffc4 	addi	r2,r23,-1
    3cd0:	1007883a 	mov	r3,r2
    3cd4:	01800e44 	movi	r6,57
    3cd8:	d9c00717 	ldw	r7,28(sp)
    3cdc:	00000506 	br	3cf4 <_dtoa_r+0xc00>
    3ce0:	18ffffc4 	addi	r3,r3,-1
    3ce4:	11c12326 	beq	r2,r7,4174 <_dtoa_r+0x1080>
    3ce8:	19000003 	ldbu	r4,0(r3)
    3cec:	102f883a 	mov	r23,r2
    3cf0:	10bfffc4 	addi	r2,r2,-1
    3cf4:	21403fcc 	andi	r5,r4,255
    3cf8:	2940201c 	xori	r5,r5,128
    3cfc:	297fe004 	addi	r5,r5,-128
    3d00:	29bff726 	beq	r5,r6,3ce0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003ce0>
    3d04:	21000044 	addi	r4,r4,1
    3d08:	11000005 	stb	r4,0(r2)
    3d0c:	a80b883a 	mov	r5,r21
    3d10:	e009883a 	mov	r4,fp
    3d14:	00068380 	call	6838 <_Bfree>
    3d18:	883ea026 	beq	r17,zero,379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3d1c:	90000426 	beq	r18,zero,3d30 <_dtoa_r+0xc3c>
    3d20:	94400326 	beq	r18,r17,3d30 <_dtoa_r+0xc3c>
    3d24:	900b883a 	mov	r5,r18
    3d28:	e009883a 	mov	r4,fp
    3d2c:	00068380 	call	6838 <_Bfree>
    3d30:	880b883a 	mov	r5,r17
    3d34:	e009883a 	mov	r4,fp
    3d38:	00068380 	call	6838 <_Bfree>
    3d3c:	003e9706 	br	379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3d40:	01800044 	movi	r6,1
    3d44:	d9800e15 	stw	r6,56(sp)
    3d48:	003d9606 	br	33a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00033a4>
    3d4c:	d8800817 	ldw	r2,32(sp)
    3d50:	d8c00517 	ldw	r3,20(sp)
    3d54:	d8000d15 	stw	zero,52(sp)
    3d58:	10c5c83a 	sub	r2,r2,r3
    3d5c:	00c9c83a 	sub	r4,zero,r3
    3d60:	d8800815 	stw	r2,32(sp)
    3d64:	d9000a15 	stw	r4,40(sp)
    3d68:	003d9706 	br	33c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00033c8>
    3d6c:	05adc83a 	sub	r22,zero,r22
    3d70:	dd800815 	stw	r22,32(sp)
    3d74:	002d883a 	mov	r22,zero
    3d78:	003d8e06 	br	33b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00033b4>
    3d7c:	d9000517 	ldw	r4,20(sp)
    3d80:	000d0300 	call	d030 <__floatsidf>
    3d84:	100d883a 	mov	r6,r2
    3d88:	180f883a 	mov	r7,r3
    3d8c:	a009883a 	mov	r4,r20
    3d90:	880b883a 	mov	r5,r17
    3d94:	000bd440 	call	bd44 <__eqdf2>
    3d98:	103d7126 	beq	r2,zero,3360 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003360>
    3d9c:	d9c00517 	ldw	r7,20(sp)
    3da0:	39ffffc4 	addi	r7,r7,-1
    3da4:	d9c00515 	stw	r7,20(sp)
    3da8:	003d6d06 	br	3360 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003360>
    3dac:	dd400a17 	ldw	r21,40(sp)
    3db0:	dd000817 	ldw	r20,32(sp)
    3db4:	0023883a 	mov	r17,zero
    3db8:	003f4806 	br	3adc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003adc>
    3dbc:	10e3c83a 	sub	r17,r2,r3
    3dc0:	9448983a 	sll	r4,r18,r17
    3dc4:	003d3206 	br	3290 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003290>
    3dc8:	d8000e15 	stw	zero,56(sp)
    3dcc:	003d7506 	br	33a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00033a4>
    3dd0:	b005883a 	mov	r2,r22
    3dd4:	003f4506 	br	3aec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003aec>
    3dd8:	dc000915 	stw	r16,36(sp)
    3ddc:	d9800a17 	ldw	r6,40(sp)
    3de0:	d9400917 	ldw	r5,36(sp)
    3de4:	e009883a 	mov	r4,fp
    3de8:	0006dd00 	call	6dd0 <__pow5mult>
    3dec:	1021883a 	mov	r16,r2
    3df0:	003f5a06 	br	3b5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b5c>
    3df4:	01c00044 	movi	r7,1
    3df8:	d9c00b15 	stw	r7,44(sp)
    3dfc:	d8802217 	ldw	r2,136(sp)
    3e00:	0081280e 	bge	zero,r2,42a4 <_dtoa_r+0x11b0>
    3e04:	100d883a 	mov	r6,r2
    3e08:	1021883a 	mov	r16,r2
    3e0c:	d8800c15 	stw	r2,48(sp)
    3e10:	d8800615 	stw	r2,24(sp)
    3e14:	003d8806 	br	3438 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003438>
    3e18:	d8800617 	ldw	r2,24(sp)
    3e1c:	00be9b16 	blt	zero,r2,388c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000388c>
    3e20:	10010f1e 	bne	r2,zero,4260 <_dtoa_r+0x116c>
    3e24:	880b883a 	mov	r5,r17
    3e28:	000d883a 	mov	r6,zero
    3e2c:	01d00534 	movhi	r7,16404
    3e30:	8009883a 	mov	r4,r16
    3e34:	000bf9c0 	call	bf9c <__muldf3>
    3e38:	900d883a 	mov	r6,r18
    3e3c:	980f883a 	mov	r7,r19
    3e40:	1009883a 	mov	r4,r2
    3e44:	180b883a 	mov	r5,r3
    3e48:	000bdcc0 	call	bdcc <__gedf2>
    3e4c:	002b883a 	mov	r21,zero
    3e50:	0023883a 	mov	r17,zero
    3e54:	1000bf16 	blt	r2,zero,4154 <_dtoa_r+0x1060>
    3e58:	d9802217 	ldw	r6,136(sp)
    3e5c:	ddc00717 	ldw	r23,28(sp)
    3e60:	018c303a 	nor	r6,zero,r6
    3e64:	d9800515 	stw	r6,20(sp)
    3e68:	a80b883a 	mov	r5,r21
    3e6c:	e009883a 	mov	r4,fp
    3e70:	00068380 	call	6838 <_Bfree>
    3e74:	883e4926 	beq	r17,zero,379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    3e78:	003fad06 	br	3d30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003d30>
    3e7c:	d9c01117 	ldw	r7,68(sp)
    3e80:	3801bc26 	beq	r7,zero,4574 <_dtoa_r+0x1480>
    3e84:	10810cc4 	addi	r2,r2,1075
    3e88:	dd400a17 	ldw	r21,40(sp)
    3e8c:	dd000817 	ldw	r20,32(sp)
    3e90:	003f0a06 	br	3abc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003abc>
    3e94:	00800704 	movi	r2,28
    3e98:	d9000817 	ldw	r4,32(sp)
    3e9c:	a0a9883a 	add	r20,r20,r2
    3ea0:	b0ad883a 	add	r22,r22,r2
    3ea4:	2089883a 	add	r4,r4,r2
    3ea8:	d9000815 	stw	r4,32(sp)
    3eac:	003f5106 	br	3bf4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003bf4>
    3eb0:	d8c00317 	ldw	r3,12(sp)
    3eb4:	b8c1fc0e 	bge	r23,r3,46a8 <_dtoa_r+0x15b4>
    3eb8:	0027883a 	mov	r19,zero
    3ebc:	b805883a 	mov	r2,r23
    3ec0:	003f3e06 	br	3bbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003bbc>
    3ec4:	880b883a 	mov	r5,r17
    3ec8:	e009883a 	mov	r4,fp
    3ecc:	000f883a 	mov	r7,zero
    3ed0:	01800284 	movi	r6,10
    3ed4:	00068600 	call	6860 <__multadd>
    3ed8:	d9000c17 	ldw	r4,48(sp)
    3edc:	1023883a 	mov	r17,r2
    3ee0:	0102040e 	bge	zero,r4,46f4 <_dtoa_r+0x1600>
    3ee4:	d9000615 	stw	r4,24(sp)
    3ee8:	0500050e 	bge	zero,r20,3f00 <_dtoa_r+0xe0c>
    3eec:	880b883a 	mov	r5,r17
    3ef0:	a00d883a 	mov	r6,r20
    3ef4:	e009883a 	mov	r4,fp
    3ef8:	0006f100 	call	6f10 <__lshift>
    3efc:	1023883a 	mov	r17,r2
    3f00:	9801241e 	bne	r19,zero,4394 <_dtoa_r+0x12a0>
    3f04:	8829883a 	mov	r20,r17
    3f08:	d9000617 	ldw	r4,24(sp)
    3f0c:	dcc00717 	ldw	r19,28(sp)
    3f10:	9480004c 	andi	r18,r18,1
    3f14:	20bfffc4 	addi	r2,r4,-1
    3f18:	9885883a 	add	r2,r19,r2
    3f1c:	d8800415 	stw	r2,16(sp)
    3f20:	dc800615 	stw	r18,24(sp)
    3f24:	a80b883a 	mov	r5,r21
    3f28:	8009883a 	mov	r4,r16
    3f2c:	0002ef40 	call	2ef4 <quorem>
    3f30:	880b883a 	mov	r5,r17
    3f34:	8009883a 	mov	r4,r16
    3f38:	102f883a 	mov	r23,r2
    3f3c:	00070580 	call	7058 <__mcmp>
    3f40:	a80b883a 	mov	r5,r21
    3f44:	a00d883a 	mov	r6,r20
    3f48:	e009883a 	mov	r4,fp
    3f4c:	102d883a 	mov	r22,r2
    3f50:	00070b80 	call	70b8 <__mdiff>
    3f54:	1007883a 	mov	r3,r2
    3f58:	10800317 	ldw	r2,12(r2)
    3f5c:	bc800c04 	addi	r18,r23,48
    3f60:	180b883a 	mov	r5,r3
    3f64:	10004e1e 	bne	r2,zero,40a0 <_dtoa_r+0xfac>
    3f68:	8009883a 	mov	r4,r16
    3f6c:	d8c01615 	stw	r3,88(sp)
    3f70:	00070580 	call	7058 <__mcmp>
    3f74:	d8c01617 	ldw	r3,88(sp)
    3f78:	e009883a 	mov	r4,fp
    3f7c:	d8801615 	stw	r2,88(sp)
    3f80:	180b883a 	mov	r5,r3
    3f84:	00068380 	call	6838 <_Bfree>
    3f88:	d8801617 	ldw	r2,88(sp)
    3f8c:	1000041e 	bne	r2,zero,3fa0 <_dtoa_r+0xeac>
    3f90:	d9800317 	ldw	r6,12(sp)
    3f94:	3000021e 	bne	r6,zero,3fa0 <_dtoa_r+0xeac>
    3f98:	d8c00617 	ldw	r3,24(sp)
    3f9c:	18003726 	beq	r3,zero,407c <_dtoa_r+0xf88>
    3fa0:	b0002016 	blt	r22,zero,4024 <_dtoa_r+0xf30>
    3fa4:	b000041e 	bne	r22,zero,3fb8 <_dtoa_r+0xec4>
    3fa8:	d9000317 	ldw	r4,12(sp)
    3fac:	2000021e 	bne	r4,zero,3fb8 <_dtoa_r+0xec4>
    3fb0:	d8c00617 	ldw	r3,24(sp)
    3fb4:	18001b26 	beq	r3,zero,4024 <_dtoa_r+0xf30>
    3fb8:	00810716 	blt	zero,r2,43d8 <_dtoa_r+0x12e4>
    3fbc:	d8c00417 	ldw	r3,16(sp)
    3fc0:	9d800044 	addi	r22,r19,1
    3fc4:	9c800005 	stb	r18,0(r19)
    3fc8:	b02f883a 	mov	r23,r22
    3fcc:	98c10626 	beq	r19,r3,43e8 <_dtoa_r+0x12f4>
    3fd0:	800b883a 	mov	r5,r16
    3fd4:	000f883a 	mov	r7,zero
    3fd8:	01800284 	movi	r6,10
    3fdc:	e009883a 	mov	r4,fp
    3fe0:	00068600 	call	6860 <__multadd>
    3fe4:	1021883a 	mov	r16,r2
    3fe8:	000f883a 	mov	r7,zero
    3fec:	01800284 	movi	r6,10
    3ff0:	880b883a 	mov	r5,r17
    3ff4:	e009883a 	mov	r4,fp
    3ff8:	8d002526 	beq	r17,r20,4090 <_dtoa_r+0xf9c>
    3ffc:	00068600 	call	6860 <__multadd>
    4000:	a00b883a 	mov	r5,r20
    4004:	000f883a 	mov	r7,zero
    4008:	01800284 	movi	r6,10
    400c:	e009883a 	mov	r4,fp
    4010:	1023883a 	mov	r17,r2
    4014:	00068600 	call	6860 <__multadd>
    4018:	1029883a 	mov	r20,r2
    401c:	b027883a 	mov	r19,r22
    4020:	003fc006 	br	3f24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003f24>
    4024:	9011883a 	mov	r8,r18
    4028:	00800e0e 	bge	zero,r2,4064 <_dtoa_r+0xf70>
    402c:	800b883a 	mov	r5,r16
    4030:	01800044 	movi	r6,1
    4034:	e009883a 	mov	r4,fp
    4038:	da001715 	stw	r8,92(sp)
    403c:	0006f100 	call	6f10 <__lshift>
    4040:	a80b883a 	mov	r5,r21
    4044:	1009883a 	mov	r4,r2
    4048:	1021883a 	mov	r16,r2
    404c:	00070580 	call	7058 <__mcmp>
    4050:	da001717 	ldw	r8,92(sp)
    4054:	0081960e 	bge	zero,r2,46b0 <_dtoa_r+0x15bc>
    4058:	00800e44 	movi	r2,57
    405c:	40817026 	beq	r8,r2,4620 <_dtoa_r+0x152c>
    4060:	ba000c44 	addi	r8,r23,49
    4064:	8825883a 	mov	r18,r17
    4068:	9dc00044 	addi	r23,r19,1
    406c:	9a000005 	stb	r8,0(r19)
    4070:	a023883a 	mov	r17,r20
    4074:	dc000915 	stw	r16,36(sp)
    4078:	003f2406 	br	3d0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003d0c>
    407c:	00800e44 	movi	r2,57
    4080:	9011883a 	mov	r8,r18
    4084:	90816626 	beq	r18,r2,4620 <_dtoa_r+0x152c>
    4088:	05bff516 	blt	zero,r22,4060 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004060>
    408c:	003ff506 	br	4064 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004064>
    4090:	00068600 	call	6860 <__multadd>
    4094:	1023883a 	mov	r17,r2
    4098:	1029883a 	mov	r20,r2
    409c:	003fdf06 	br	401c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000401c>
    40a0:	e009883a 	mov	r4,fp
    40a4:	00068380 	call	6838 <_Bfree>
    40a8:	00800044 	movi	r2,1
    40ac:	003fbc06 	br	3fa0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003fa0>
    40b0:	a80b883a 	mov	r5,r21
    40b4:	8009883a 	mov	r4,r16
    40b8:	00070580 	call	7058 <__mcmp>
    40bc:	103edb0e 	bge	r2,zero,3c2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c2c>
    40c0:	800b883a 	mov	r5,r16
    40c4:	000f883a 	mov	r7,zero
    40c8:	01800284 	movi	r6,10
    40cc:	e009883a 	mov	r4,fp
    40d0:	00068600 	call	6860 <__multadd>
    40d4:	1021883a 	mov	r16,r2
    40d8:	d8800517 	ldw	r2,20(sp)
    40dc:	d8c00b17 	ldw	r3,44(sp)
    40e0:	10bfffc4 	addi	r2,r2,-1
    40e4:	d8800515 	stw	r2,20(sp)
    40e8:	183f761e 	bne	r3,zero,3ec4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003ec4>
    40ec:	d9000c17 	ldw	r4,48(sp)
    40f0:	0101730e 	bge	zero,r4,46c0 <_dtoa_r+0x15cc>
    40f4:	d9000615 	stw	r4,24(sp)
    40f8:	003ed006 	br	3c3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c3c>
    40fc:	00800084 	movi	r2,2
    4100:	3081861e 	bne	r6,r2,471c <_dtoa_r+0x1628>
    4104:	d8000b15 	stw	zero,44(sp)
    4108:	003f3c06 	br	3dfc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003dfc>
    410c:	dc000917 	ldw	r16,36(sp)
    4110:	003e9206 	br	3b5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b5c>
    4114:	d9c00317 	ldw	r7,12(sp)
    4118:	00800084 	movi	r2,2
    411c:	11fec50e 	bge	r2,r7,3c34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c34>
    4120:	d9000617 	ldw	r4,24(sp)
    4124:	20013c1e 	bne	r4,zero,4618 <_dtoa_r+0x1524>
    4128:	a80b883a 	mov	r5,r21
    412c:	000f883a 	mov	r7,zero
    4130:	01800144 	movi	r6,5
    4134:	e009883a 	mov	r4,fp
    4138:	00068600 	call	6860 <__multadd>
    413c:	100b883a 	mov	r5,r2
    4140:	8009883a 	mov	r4,r16
    4144:	102b883a 	mov	r21,r2
    4148:	00070580 	call	7058 <__mcmp>
    414c:	dc000915 	stw	r16,36(sp)
    4150:	00bf410e 	bge	zero,r2,3e58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003e58>
    4154:	d9c00717 	ldw	r7,28(sp)
    4158:	00800c44 	movi	r2,49
    415c:	38800005 	stb	r2,0(r7)
    4160:	d8800517 	ldw	r2,20(sp)
    4164:	3dc00044 	addi	r23,r7,1
    4168:	10800044 	addi	r2,r2,1
    416c:	d8800515 	stw	r2,20(sp)
    4170:	003f3d06 	br	3e68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003e68>
    4174:	d9800517 	ldw	r6,20(sp)
    4178:	d9c00717 	ldw	r7,28(sp)
    417c:	00800c44 	movi	r2,49
    4180:	31800044 	addi	r6,r6,1
    4184:	d9800515 	stw	r6,20(sp)
    4188:	38800005 	stb	r2,0(r7)
    418c:	003edf06 	br	3d0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003d0c>
    4190:	d8000b15 	stw	zero,44(sp)
    4194:	003c9f06 	br	3414 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003414>
    4198:	903e7e1e 	bne	r18,zero,3b94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b94>
    419c:	00800434 	movhi	r2,16
    41a0:	10bfffc4 	addi	r2,r2,-1
    41a4:	9884703a 	and	r2,r19,r2
    41a8:	1000ea1e 	bne	r2,zero,4554 <_dtoa_r+0x1460>
    41ac:	9cdffc2c 	andhi	r19,r19,32752
    41b0:	9800e826 	beq	r19,zero,4554 <_dtoa_r+0x1460>
    41b4:	d9c00817 	ldw	r7,32(sp)
    41b8:	b5800044 	addi	r22,r22,1
    41bc:	04c00044 	movi	r19,1
    41c0:	39c00044 	addi	r7,r7,1
    41c4:	d9c00815 	stw	r7,32(sp)
    41c8:	d8800d17 	ldw	r2,52(sp)
    41cc:	103e721e 	bne	r2,zero,3b98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003b98>
    41d0:	00800044 	movi	r2,1
    41d4:	003e7906 	br	3bbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003bbc>
    41d8:	8009883a 	mov	r4,r16
    41dc:	000d0300 	call	d030 <__floatsidf>
    41e0:	d9800f17 	ldw	r6,60(sp)
    41e4:	d9c01017 	ldw	r7,64(sp)
    41e8:	1009883a 	mov	r4,r2
    41ec:	180b883a 	mov	r5,r3
    41f0:	000bf9c0 	call	bf9c <__muldf3>
    41f4:	000d883a 	mov	r6,zero
    41f8:	01d00734 	movhi	r7,16412
    41fc:	1009883a 	mov	r4,r2
    4200:	180b883a 	mov	r5,r3
    4204:	000abb00 	call	abb0 <__adddf3>
    4208:	047f3034 	movhi	r17,64704
    420c:	1021883a 	mov	r16,r2
    4210:	1c63883a 	add	r17,r3,r17
    4214:	d9000f17 	ldw	r4,60(sp)
    4218:	d9401017 	ldw	r5,64(sp)
    421c:	000d883a 	mov	r6,zero
    4220:	01d00534 	movhi	r7,16404
    4224:	000c6b40 	call	c6b4 <__subdf3>
    4228:	800d883a 	mov	r6,r16
    422c:	880f883a 	mov	r7,r17
    4230:	1009883a 	mov	r4,r2
    4234:	180b883a 	mov	r5,r3
    4238:	102b883a 	mov	r21,r2
    423c:	1829883a 	mov	r20,r3
    4240:	000bdcc0 	call	bdcc <__gedf2>
    4244:	00806c16 	blt	zero,r2,43f8 <_dtoa_r+0x1304>
    4248:	89e0003c 	xorhi	r7,r17,32768
    424c:	800d883a 	mov	r6,r16
    4250:	a809883a 	mov	r4,r21
    4254:	a00b883a 	mov	r5,r20
    4258:	000bea80 	call	bea8 <__ledf2>
    425c:	103d7e0e 	bge	r2,zero,3858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003858>
    4260:	002b883a 	mov	r21,zero
    4264:	0023883a 	mov	r17,zero
    4268:	003efb06 	br	3e58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003e58>
    426c:	d8800717 	ldw	r2,28(sp)
    4270:	003bd006 	br	31b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00031b4>
    4274:	d9000a17 	ldw	r4,40(sp)
    4278:	d9800d17 	ldw	r6,52(sp)
    427c:	dd400a15 	stw	r21,40(sp)
    4280:	a905c83a 	sub	r2,r21,r4
    4284:	308d883a 	add	r6,r6,r2
    4288:	d9800d15 	stw	r6,52(sp)
    428c:	002b883a 	mov	r21,zero
    4290:	003e0606 	br	3aac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003aac>
    4294:	9023883a 	mov	r17,r18
    4298:	9829883a 	mov	r20,r19
    429c:	04000084 	movi	r16,2
    42a0:	003c9206 	br	34ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00034ec>
    42a4:	04000044 	movi	r16,1
    42a8:	dc000c15 	stw	r16,48(sp)
    42ac:	dc000615 	stw	r16,24(sp)
    42b0:	dc002215 	stw	r16,136(sp)
    42b4:	e0001115 	stw	zero,68(fp)
    42b8:	000b883a 	mov	r5,zero
    42bc:	003c6906 	br	3464 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003464>
    42c0:	3021883a 	mov	r16,r6
    42c4:	003ffb06 	br	42b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00042b4>
    42c8:	1000021e 	bne	r2,zero,42d4 <_dtoa_r+0x11e0>
    42cc:	4200004c 	andi	r8,r8,1
    42d0:	403e7d1e 	bne	r8,zero,3cc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003cc8>
    42d4:	01000c04 	movi	r4,48
    42d8:	00000106 	br	42e0 <_dtoa_r+0x11ec>
    42dc:	102f883a 	mov	r23,r2
    42e0:	b8bfffc4 	addi	r2,r23,-1
    42e4:	10c00007 	ldb	r3,0(r2)
    42e8:	193ffc26 	beq	r3,r4,42dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00042dc>
    42ec:	003e8706 	br	3d0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003d0c>
    42f0:	d8800517 	ldw	r2,20(sp)
    42f4:	00a3c83a 	sub	r17,zero,r2
    42f8:	8800a426 	beq	r17,zero,458c <_dtoa_r+0x1498>
    42fc:	888003cc 	andi	r2,r17,15
    4300:	100490fa 	slli	r2,r2,3
    4304:	00c00074 	movhi	r3,1
    4308:	18c2c004 	addi	r3,r3,2816
    430c:	1885883a 	add	r2,r3,r2
    4310:	11800017 	ldw	r6,0(r2)
    4314:	11c00117 	ldw	r7,4(r2)
    4318:	9009883a 	mov	r4,r18
    431c:	980b883a 	mov	r5,r19
    4320:	8823d13a 	srai	r17,r17,4
    4324:	000bf9c0 	call	bf9c <__muldf3>
    4328:	d8800f15 	stw	r2,60(sp)
    432c:	d8c01015 	stw	r3,64(sp)
    4330:	8800e826 	beq	r17,zero,46d4 <_dtoa_r+0x15e0>
    4334:	05000074 	movhi	r20,1
    4338:	a502b604 	addi	r20,r20,2776
    433c:	04000084 	movi	r16,2
    4340:	8980004c 	andi	r6,r17,1
    4344:	1009883a 	mov	r4,r2
    4348:	8823d07a 	srai	r17,r17,1
    434c:	180b883a 	mov	r5,r3
    4350:	30000426 	beq	r6,zero,4364 <_dtoa_r+0x1270>
    4354:	a1800017 	ldw	r6,0(r20)
    4358:	a1c00117 	ldw	r7,4(r20)
    435c:	84000044 	addi	r16,r16,1
    4360:	000bf9c0 	call	bf9c <__muldf3>
    4364:	a5000204 	addi	r20,r20,8
    4368:	883ff51e 	bne	r17,zero,4340 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004340>
    436c:	d8800f15 	stw	r2,60(sp)
    4370:	d8c01015 	stw	r3,64(sp)
    4374:	003c7606 	br	3550 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003550>
    4378:	00c00c04 	movi	r3,48
    437c:	10c00005 	stb	r3,0(r2)
    4380:	d8c00517 	ldw	r3,20(sp)
    4384:	bd3fffc3 	ldbu	r20,-1(r23)
    4388:	18c00044 	addi	r3,r3,1
    438c:	d8c00515 	stw	r3,20(sp)
    4390:	003db906 	br	3a78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a78>
    4394:	89400117 	ldw	r5,4(r17)
    4398:	e009883a 	mov	r4,fp
    439c:	00067900 	call	6790 <_Balloc>
    43a0:	89800417 	ldw	r6,16(r17)
    43a4:	89400304 	addi	r5,r17,12
    43a8:	11000304 	addi	r4,r2,12
    43ac:	31800084 	addi	r6,r6,2
    43b0:	318d883a 	add	r6,r6,r6
    43b4:	318d883a 	add	r6,r6,r6
    43b8:	1027883a 	mov	r19,r2
    43bc:	00063c40 	call	63c4 <memcpy>
    43c0:	01800044 	movi	r6,1
    43c4:	980b883a 	mov	r5,r19
    43c8:	e009883a 	mov	r4,fp
    43cc:	0006f100 	call	6f10 <__lshift>
    43d0:	1029883a 	mov	r20,r2
    43d4:	003ecc06 	br	3f08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003f08>
    43d8:	00800e44 	movi	r2,57
    43dc:	90809026 	beq	r18,r2,4620 <_dtoa_r+0x152c>
    43e0:	92000044 	addi	r8,r18,1
    43e4:	003f1f06 	br	4064 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004064>
    43e8:	9011883a 	mov	r8,r18
    43ec:	8825883a 	mov	r18,r17
    43f0:	a023883a 	mov	r17,r20
    43f4:	003e2906 	br	3c9c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c9c>
    43f8:	002b883a 	mov	r21,zero
    43fc:	0023883a 	mov	r17,zero
    4400:	003f5406 	br	4154 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004154>
    4404:	61bfffc4 	addi	r6,r12,-1
    4408:	300490fa 	slli	r2,r6,3
    440c:	00c00074 	movhi	r3,1
    4410:	18c2c004 	addi	r3,r3,2816
    4414:	1885883a 	add	r2,r3,r2
    4418:	11000017 	ldw	r4,0(r2)
    441c:	11400117 	ldw	r5,4(r2)
    4420:	d8800717 	ldw	r2,28(sp)
    4424:	880f883a 	mov	r7,r17
    4428:	d9801215 	stw	r6,72(sp)
    442c:	800d883a 	mov	r6,r16
    4430:	db001615 	stw	r12,88(sp)
    4434:	15c00044 	addi	r23,r2,1
    4438:	000bf9c0 	call	bf9c <__muldf3>
    443c:	d9401017 	ldw	r5,64(sp)
    4440:	d9000f17 	ldw	r4,60(sp)
    4444:	d8c01515 	stw	r3,84(sp)
    4448:	d8801415 	stw	r2,80(sp)
    444c:	000cfb00 	call	cfb0 <__fixdfsi>
    4450:	1009883a 	mov	r4,r2
    4454:	1021883a 	mov	r16,r2
    4458:	000d0300 	call	d030 <__floatsidf>
    445c:	d9000f17 	ldw	r4,60(sp)
    4460:	d9401017 	ldw	r5,64(sp)
    4464:	100d883a 	mov	r6,r2
    4468:	180f883a 	mov	r7,r3
    446c:	000c6b40 	call	c6b4 <__subdf3>
    4470:	1829883a 	mov	r20,r3
    4474:	d8c00717 	ldw	r3,28(sp)
    4478:	84000c04 	addi	r16,r16,48
    447c:	1023883a 	mov	r17,r2
    4480:	1c000005 	stb	r16,0(r3)
    4484:	db001617 	ldw	r12,88(sp)
    4488:	00800044 	movi	r2,1
    448c:	60802226 	beq	r12,r2,4518 <_dtoa_r+0x1424>
    4490:	d9c00717 	ldw	r7,28(sp)
    4494:	8805883a 	mov	r2,r17
    4498:	b82b883a 	mov	r21,r23
    449c:	3b19883a 	add	r12,r7,r12
    44a0:	6023883a 	mov	r17,r12
    44a4:	a007883a 	mov	r3,r20
    44a8:	dc800f15 	stw	r18,60(sp)
    44ac:	000d883a 	mov	r6,zero
    44b0:	01d00934 	movhi	r7,16420
    44b4:	1009883a 	mov	r4,r2
    44b8:	180b883a 	mov	r5,r3
    44bc:	000bf9c0 	call	bf9c <__muldf3>
    44c0:	180b883a 	mov	r5,r3
    44c4:	1009883a 	mov	r4,r2
    44c8:	1829883a 	mov	r20,r3
    44cc:	1025883a 	mov	r18,r2
    44d0:	000cfb00 	call	cfb0 <__fixdfsi>
    44d4:	1009883a 	mov	r4,r2
    44d8:	1021883a 	mov	r16,r2
    44dc:	000d0300 	call	d030 <__floatsidf>
    44e0:	100d883a 	mov	r6,r2
    44e4:	180f883a 	mov	r7,r3
    44e8:	9009883a 	mov	r4,r18
    44ec:	a00b883a 	mov	r5,r20
    44f0:	84000c04 	addi	r16,r16,48
    44f4:	000c6b40 	call	c6b4 <__subdf3>
    44f8:	ad400044 	addi	r21,r21,1
    44fc:	ac3fffc5 	stb	r16,-1(r21)
    4500:	ac7fea1e 	bne	r21,r17,44ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00044ac>
    4504:	1023883a 	mov	r17,r2
    4508:	d8801217 	ldw	r2,72(sp)
    450c:	dc800f17 	ldw	r18,60(sp)
    4510:	1829883a 	mov	r20,r3
    4514:	b8af883a 	add	r23,r23,r2
    4518:	d9001417 	ldw	r4,80(sp)
    451c:	d9401517 	ldw	r5,84(sp)
    4520:	000d883a 	mov	r6,zero
    4524:	01cff834 	movhi	r7,16352
    4528:	000abb00 	call	abb0 <__adddf3>
    452c:	880d883a 	mov	r6,r17
    4530:	a00f883a 	mov	r7,r20
    4534:	1009883a 	mov	r4,r2
    4538:	180b883a 	mov	r5,r3
    453c:	000bea80 	call	bea8 <__ledf2>
    4540:	10003e0e 	bge	r2,zero,463c <_dtoa_r+0x1548>
    4544:	d9001317 	ldw	r4,76(sp)
    4548:	bd3fffc3 	ldbu	r20,-1(r23)
    454c:	d9000515 	stw	r4,20(sp)
    4550:	003d3b06 	br	3a40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a40>
    4554:	0027883a 	mov	r19,zero
    4558:	003f1b06 	br	41c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00041c8>
    455c:	d8800817 	ldw	r2,32(sp)
    4560:	11e9c83a 	sub	r20,r2,r7
    4564:	0005883a 	mov	r2,zero
    4568:	003d5406 	br	3abc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003abc>
    456c:	00800044 	movi	r2,1
    4570:	003dc706 	br	3c90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003c90>
    4574:	d8c00217 	ldw	r3,8(sp)
    4578:	00800d84 	movi	r2,54
    457c:	dd400a17 	ldw	r21,40(sp)
    4580:	10c5c83a 	sub	r2,r2,r3
    4584:	dd000817 	ldw	r20,32(sp)
    4588:	003d4c06 	br	3abc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003abc>
    458c:	dc800f15 	stw	r18,60(sp)
    4590:	dcc01015 	stw	r19,64(sp)
    4594:	04000084 	movi	r16,2
    4598:	003bed06 	br	3550 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003550>
    459c:	d9000617 	ldw	r4,24(sp)
    45a0:	203f0d26 	beq	r4,zero,41d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00041d8>
    45a4:	d9800c17 	ldw	r6,48(sp)
    45a8:	01bcab0e 	bge	zero,r6,3858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003858>
    45ac:	d9401017 	ldw	r5,64(sp)
    45b0:	d9000f17 	ldw	r4,60(sp)
    45b4:	000d883a 	mov	r6,zero
    45b8:	01d00934 	movhi	r7,16420
    45bc:	000bf9c0 	call	bf9c <__muldf3>
    45c0:	81000044 	addi	r4,r16,1
    45c4:	d8800f15 	stw	r2,60(sp)
    45c8:	d8c01015 	stw	r3,64(sp)
    45cc:	000d0300 	call	d030 <__floatsidf>
    45d0:	d9800f17 	ldw	r6,60(sp)
    45d4:	d9c01017 	ldw	r7,64(sp)
    45d8:	1009883a 	mov	r4,r2
    45dc:	180b883a 	mov	r5,r3
    45e0:	000bf9c0 	call	bf9c <__muldf3>
    45e4:	01d00734 	movhi	r7,16412
    45e8:	000d883a 	mov	r6,zero
    45ec:	1009883a 	mov	r4,r2
    45f0:	180b883a 	mov	r5,r3
    45f4:	000abb00 	call	abb0 <__adddf3>
    45f8:	d9c00517 	ldw	r7,20(sp)
    45fc:	047f3034 	movhi	r17,64704
    4600:	1021883a 	mov	r16,r2
    4604:	39ffffc4 	addi	r7,r7,-1
    4608:	d9c01315 	stw	r7,76(sp)
    460c:	1c63883a 	add	r17,r3,r17
    4610:	db000c17 	ldw	r12,48(sp)
    4614:	003bea06 	br	35c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00035c0>
    4618:	dc000915 	stw	r16,36(sp)
    461c:	003e0e06 	br	3e58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003e58>
    4620:	01000e44 	movi	r4,57
    4624:	8825883a 	mov	r18,r17
    4628:	9dc00044 	addi	r23,r19,1
    462c:	99000005 	stb	r4,0(r19)
    4630:	a023883a 	mov	r17,r20
    4634:	dc000915 	stw	r16,36(sp)
    4638:	003da406 	br	3ccc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003ccc>
    463c:	d9801417 	ldw	r6,80(sp)
    4640:	d9c01517 	ldw	r7,84(sp)
    4644:	0009883a 	mov	r4,zero
    4648:	014ff834 	movhi	r5,16352
    464c:	000c6b40 	call	c6b4 <__subdf3>
    4650:	880d883a 	mov	r6,r17
    4654:	a00f883a 	mov	r7,r20
    4658:	1009883a 	mov	r4,r2
    465c:	180b883a 	mov	r5,r3
    4660:	000bdcc0 	call	bdcc <__gedf2>
    4664:	00bc7c0e 	bge	zero,r2,3858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003858>
    4668:	01000c04 	movi	r4,48
    466c:	00000106 	br	4674 <_dtoa_r+0x1580>
    4670:	102f883a 	mov	r23,r2
    4674:	b8bfffc4 	addi	r2,r23,-1
    4678:	10c00007 	ldb	r3,0(r2)
    467c:	193ffc26 	beq	r3,r4,4670 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004670>
    4680:	d9801317 	ldw	r6,76(sp)
    4684:	d9800515 	stw	r6,20(sp)
    4688:	003c4406 	br	379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    468c:	d9801317 	ldw	r6,76(sp)
    4690:	d9800515 	stw	r6,20(sp)
    4694:	003cea06 	br	3a40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a40>
    4698:	dd800f17 	ldw	r22,60(sp)
    469c:	dcc01017 	ldw	r19,64(sp)
    46a0:	dc801217 	ldw	r18,72(sp)
    46a4:	003c6c06 	br	3858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003858>
    46a8:	903e031e 	bne	r18,zero,3eb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003eb8>
    46ac:	003ebb06 	br	419c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000419c>
    46b0:	103e6c1e 	bne	r2,zero,4064 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004064>
    46b4:	4080004c 	andi	r2,r8,1
    46b8:	103e6a26 	beq	r2,zero,4064 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004064>
    46bc:	003e6606 	br	4058 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004058>
    46c0:	d8c00317 	ldw	r3,12(sp)
    46c4:	00800084 	movi	r2,2
    46c8:	10c02916 	blt	r2,r3,4770 <_dtoa_r+0x167c>
    46cc:	d9000c17 	ldw	r4,48(sp)
    46d0:	003e8806 	br	40f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00040f4>
    46d4:	04000084 	movi	r16,2
    46d8:	003b9d06 	br	3550 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003550>
    46dc:	d9001317 	ldw	r4,76(sp)
    46e0:	d9000515 	stw	r4,20(sp)
    46e4:	003cd606 	br	3a40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003a40>
    46e8:	d8801317 	ldw	r2,76(sp)
    46ec:	d8800515 	stw	r2,20(sp)
    46f0:	003c2a06 	br	379c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000379c>
    46f4:	d9800317 	ldw	r6,12(sp)
    46f8:	00800084 	movi	r2,2
    46fc:	11801516 	blt	r2,r6,4754 <_dtoa_r+0x1660>
    4700:	d9c00c17 	ldw	r7,48(sp)
    4704:	d9c00615 	stw	r7,24(sp)
    4708:	003df706 	br	3ee8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003ee8>
    470c:	193d3926 	beq	r3,r4,3bf4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003bf4>
    4710:	00c00f04 	movi	r3,60
    4714:	1885c83a 	sub	r2,r3,r2
    4718:	003ddf06 	br	3e98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003e98>
    471c:	e009883a 	mov	r4,fp
    4720:	e0001115 	stw	zero,68(fp)
    4724:	000b883a 	mov	r5,zero
    4728:	00067900 	call	6790 <_Balloc>
    472c:	d8800715 	stw	r2,28(sp)
    4730:	d8c00717 	ldw	r3,28(sp)
    4734:	00bfffc4 	movi	r2,-1
    4738:	01000044 	movi	r4,1
    473c:	d8800c15 	stw	r2,48(sp)
    4740:	e0c01015 	stw	r3,64(fp)
    4744:	d9000b15 	stw	r4,44(sp)
    4748:	d8800615 	stw	r2,24(sp)
    474c:	d8002215 	stw	zero,136(sp)
    4750:	003c4106 	br	3858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003858>
    4754:	d8c00c17 	ldw	r3,48(sp)
    4758:	d8c00615 	stw	r3,24(sp)
    475c:	003e7006 	br	4120 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004120>
    4760:	04400044 	movi	r17,1
    4764:	003b2006 	br	33e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00033e8>
    4768:	000b883a 	mov	r5,zero
    476c:	003b3d06 	br	3464 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0003464>
    4770:	d8800c17 	ldw	r2,48(sp)
    4774:	d8800615 	stw	r2,24(sp)
    4778:	003e6906 	br	4120 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004120>

0000477c <__sflush_r>:
    477c:	2880030b 	ldhu	r2,12(r5)
    4780:	defffb04 	addi	sp,sp,-20
    4784:	dcc00315 	stw	r19,12(sp)
    4788:	dc400115 	stw	r17,4(sp)
    478c:	dfc00415 	stw	ra,16(sp)
    4790:	dc800215 	stw	r18,8(sp)
    4794:	dc000015 	stw	r16,0(sp)
    4798:	10c0020c 	andi	r3,r2,8
    479c:	2823883a 	mov	r17,r5
    47a0:	2027883a 	mov	r19,r4
    47a4:	1800311e 	bne	r3,zero,486c <__sflush_r+0xf0>
    47a8:	28c00117 	ldw	r3,4(r5)
    47ac:	10820014 	ori	r2,r2,2048
    47b0:	2880030d 	sth	r2,12(r5)
    47b4:	00c04b0e 	bge	zero,r3,48e4 <__sflush_r+0x168>
    47b8:	8a000a17 	ldw	r8,40(r17)
    47bc:	40002326 	beq	r8,zero,484c <__sflush_r+0xd0>
    47c0:	9c000017 	ldw	r16,0(r19)
    47c4:	10c4000c 	andi	r3,r2,4096
    47c8:	98000015 	stw	zero,0(r19)
    47cc:	18004826 	beq	r3,zero,48f0 <__sflush_r+0x174>
    47d0:	89801417 	ldw	r6,80(r17)
    47d4:	10c0010c 	andi	r3,r2,4
    47d8:	18000626 	beq	r3,zero,47f4 <__sflush_r+0x78>
    47dc:	88c00117 	ldw	r3,4(r17)
    47e0:	88800c17 	ldw	r2,48(r17)
    47e4:	30cdc83a 	sub	r6,r6,r3
    47e8:	10000226 	beq	r2,zero,47f4 <__sflush_r+0x78>
    47ec:	88800f17 	ldw	r2,60(r17)
    47f0:	308dc83a 	sub	r6,r6,r2
    47f4:	89400717 	ldw	r5,28(r17)
    47f8:	000f883a 	mov	r7,zero
    47fc:	9809883a 	mov	r4,r19
    4800:	403ee83a 	callr	r8
    4804:	00ffffc4 	movi	r3,-1
    4808:	10c04426 	beq	r2,r3,491c <__sflush_r+0x1a0>
    480c:	88c0030b 	ldhu	r3,12(r17)
    4810:	89000417 	ldw	r4,16(r17)
    4814:	88000115 	stw	zero,4(r17)
    4818:	197dffcc 	andi	r5,r3,63487
    481c:	8940030d 	sth	r5,12(r17)
    4820:	89000015 	stw	r4,0(r17)
    4824:	18c4000c 	andi	r3,r3,4096
    4828:	18002c1e 	bne	r3,zero,48dc <__sflush_r+0x160>
    482c:	89400c17 	ldw	r5,48(r17)
    4830:	9c000015 	stw	r16,0(r19)
    4834:	28000526 	beq	r5,zero,484c <__sflush_r+0xd0>
    4838:	88801004 	addi	r2,r17,64
    483c:	28800226 	beq	r5,r2,4848 <__sflush_r+0xcc>
    4840:	9809883a 	mov	r4,r19
    4844:	0004ee80 	call	4ee8 <_free_r>
    4848:	88000c15 	stw	zero,48(r17)
    484c:	0005883a 	mov	r2,zero
    4850:	dfc00417 	ldw	ra,16(sp)
    4854:	dcc00317 	ldw	r19,12(sp)
    4858:	dc800217 	ldw	r18,8(sp)
    485c:	dc400117 	ldw	r17,4(sp)
    4860:	dc000017 	ldw	r16,0(sp)
    4864:	dec00504 	addi	sp,sp,20
    4868:	f800283a 	ret
    486c:	2c800417 	ldw	r18,16(r5)
    4870:	903ff626 	beq	r18,zero,484c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000484c>
    4874:	2c000017 	ldw	r16,0(r5)
    4878:	108000cc 	andi	r2,r2,3
    487c:	2c800015 	stw	r18,0(r5)
    4880:	84a1c83a 	sub	r16,r16,r18
    4884:	1000131e 	bne	r2,zero,48d4 <__sflush_r+0x158>
    4888:	28800517 	ldw	r2,20(r5)
    488c:	88800215 	stw	r2,8(r17)
    4890:	04000316 	blt	zero,r16,48a0 <__sflush_r+0x124>
    4894:	003fed06 	br	484c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000484c>
    4898:	90a5883a 	add	r18,r18,r2
    489c:	043feb0e 	bge	zero,r16,484c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000484c>
    48a0:	88800917 	ldw	r2,36(r17)
    48a4:	89400717 	ldw	r5,28(r17)
    48a8:	800f883a 	mov	r7,r16
    48ac:	900d883a 	mov	r6,r18
    48b0:	9809883a 	mov	r4,r19
    48b4:	103ee83a 	callr	r2
    48b8:	80a1c83a 	sub	r16,r16,r2
    48bc:	00bff616 	blt	zero,r2,4898 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004898>
    48c0:	88c0030b 	ldhu	r3,12(r17)
    48c4:	00bfffc4 	movi	r2,-1
    48c8:	18c01014 	ori	r3,r3,64
    48cc:	88c0030d 	sth	r3,12(r17)
    48d0:	003fdf06 	br	4850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004850>
    48d4:	0005883a 	mov	r2,zero
    48d8:	003fec06 	br	488c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000488c>
    48dc:	88801415 	stw	r2,80(r17)
    48e0:	003fd206 	br	482c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000482c>
    48e4:	28c00f17 	ldw	r3,60(r5)
    48e8:	00ffb316 	blt	zero,r3,47b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00047b8>
    48ec:	003fd706 	br	484c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000484c>
    48f0:	89400717 	ldw	r5,28(r17)
    48f4:	000d883a 	mov	r6,zero
    48f8:	01c00044 	movi	r7,1
    48fc:	9809883a 	mov	r4,r19
    4900:	403ee83a 	callr	r8
    4904:	100d883a 	mov	r6,r2
    4908:	00bfffc4 	movi	r2,-1
    490c:	30801426 	beq	r6,r2,4960 <__sflush_r+0x1e4>
    4910:	8880030b 	ldhu	r2,12(r17)
    4914:	8a000a17 	ldw	r8,40(r17)
    4918:	003fae06 	br	47d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00047d4>
    491c:	98c00017 	ldw	r3,0(r19)
    4920:	183fba26 	beq	r3,zero,480c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000480c>
    4924:	01000744 	movi	r4,29
    4928:	19000626 	beq	r3,r4,4944 <__sflush_r+0x1c8>
    492c:	01000584 	movi	r4,22
    4930:	19000426 	beq	r3,r4,4944 <__sflush_r+0x1c8>
    4934:	88c0030b 	ldhu	r3,12(r17)
    4938:	18c01014 	ori	r3,r3,64
    493c:	88c0030d 	sth	r3,12(r17)
    4940:	003fc306 	br	4850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004850>
    4944:	8880030b 	ldhu	r2,12(r17)
    4948:	88c00417 	ldw	r3,16(r17)
    494c:	88000115 	stw	zero,4(r17)
    4950:	10bdffcc 	andi	r2,r2,63487
    4954:	8880030d 	sth	r2,12(r17)
    4958:	88c00015 	stw	r3,0(r17)
    495c:	003fb306 	br	482c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000482c>
    4960:	98800017 	ldw	r2,0(r19)
    4964:	103fea26 	beq	r2,zero,4910 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004910>
    4968:	00c00744 	movi	r3,29
    496c:	10c00226 	beq	r2,r3,4978 <__sflush_r+0x1fc>
    4970:	00c00584 	movi	r3,22
    4974:	10c0031e 	bne	r2,r3,4984 <__sflush_r+0x208>
    4978:	9c000015 	stw	r16,0(r19)
    497c:	0005883a 	mov	r2,zero
    4980:	003fb306 	br	4850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004850>
    4984:	88c0030b 	ldhu	r3,12(r17)
    4988:	3005883a 	mov	r2,r6
    498c:	18c01014 	ori	r3,r3,64
    4990:	88c0030d 	sth	r3,12(r17)
    4994:	003fae06 	br	4850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004850>

00004998 <_fflush_r>:
    4998:	defffd04 	addi	sp,sp,-12
    499c:	dc000115 	stw	r16,4(sp)
    49a0:	dfc00215 	stw	ra,8(sp)
    49a4:	2021883a 	mov	r16,r4
    49a8:	20000226 	beq	r4,zero,49b4 <_fflush_r+0x1c>
    49ac:	20800e17 	ldw	r2,56(r4)
    49b0:	10000c26 	beq	r2,zero,49e4 <_fflush_r+0x4c>
    49b4:	2880030f 	ldh	r2,12(r5)
    49b8:	1000051e 	bne	r2,zero,49d0 <_fflush_r+0x38>
    49bc:	0005883a 	mov	r2,zero
    49c0:	dfc00217 	ldw	ra,8(sp)
    49c4:	dc000117 	ldw	r16,4(sp)
    49c8:	dec00304 	addi	sp,sp,12
    49cc:	f800283a 	ret
    49d0:	8009883a 	mov	r4,r16
    49d4:	dfc00217 	ldw	ra,8(sp)
    49d8:	dc000117 	ldw	r16,4(sp)
    49dc:	dec00304 	addi	sp,sp,12
    49e0:	000477c1 	jmpi	477c <__sflush_r>
    49e4:	d9400015 	stw	r5,0(sp)
    49e8:	0004d740 	call	4d74 <__sinit>
    49ec:	d9400017 	ldw	r5,0(sp)
    49f0:	003ff006 	br	49b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00049b4>

000049f4 <fflush>:
    49f4:	20000526 	beq	r4,zero,4a0c <fflush+0x18>
    49f8:	00800074 	movhi	r2,1
    49fc:	108ab804 	addi	r2,r2,10976
    4a00:	200b883a 	mov	r5,r4
    4a04:	11000017 	ldw	r4,0(r2)
    4a08:	00049981 	jmpi	4998 <_fflush_r>
    4a0c:	00800074 	movhi	r2,1
    4a10:	108ab704 	addi	r2,r2,10972
    4a14:	11000017 	ldw	r4,0(r2)
    4a18:	01400034 	movhi	r5,0
    4a1c:	29526604 	addi	r5,r5,18840
    4a20:	00057781 	jmpi	5778 <_fwalk_reent>

00004a24 <__fp_unlock>:
    4a24:	0005883a 	mov	r2,zero
    4a28:	f800283a 	ret

00004a2c <_cleanup_r>:
    4a2c:	01400074 	movhi	r5,1
    4a30:	2965e404 	addi	r5,r5,-26736
    4a34:	00057781 	jmpi	5778 <_fwalk_reent>

00004a38 <__sinit.part.1>:
    4a38:	defff704 	addi	sp,sp,-36
    4a3c:	00c00034 	movhi	r3,0
    4a40:	dfc00815 	stw	ra,32(sp)
    4a44:	ddc00715 	stw	r23,28(sp)
    4a48:	dd800615 	stw	r22,24(sp)
    4a4c:	dd400515 	stw	r21,20(sp)
    4a50:	dd000415 	stw	r20,16(sp)
    4a54:	dcc00315 	stw	r19,12(sp)
    4a58:	dc800215 	stw	r18,8(sp)
    4a5c:	dc400115 	stw	r17,4(sp)
    4a60:	dc000015 	stw	r16,0(sp)
    4a64:	18d28b04 	addi	r3,r3,18988
    4a68:	24000117 	ldw	r16,4(r4)
    4a6c:	20c00f15 	stw	r3,60(r4)
    4a70:	2080bb04 	addi	r2,r4,748
    4a74:	00c000c4 	movi	r3,3
    4a78:	20c0b915 	stw	r3,740(r4)
    4a7c:	2080ba15 	stw	r2,744(r4)
    4a80:	2000b815 	stw	zero,736(r4)
    4a84:	05c00204 	movi	r23,8
    4a88:	00800104 	movi	r2,4
    4a8c:	2025883a 	mov	r18,r4
    4a90:	b80d883a 	mov	r6,r23
    4a94:	81001704 	addi	r4,r16,92
    4a98:	000b883a 	mov	r5,zero
    4a9c:	80000015 	stw	zero,0(r16)
    4aa0:	80000115 	stw	zero,4(r16)
    4aa4:	80000215 	stw	zero,8(r16)
    4aa8:	8080030d 	sth	r2,12(r16)
    4aac:	80001915 	stw	zero,100(r16)
    4ab0:	8000038d 	sth	zero,14(r16)
    4ab4:	80000415 	stw	zero,16(r16)
    4ab8:	80000515 	stw	zero,20(r16)
    4abc:	80000615 	stw	zero,24(r16)
    4ac0:	00066680 	call	6668 <memset>
    4ac4:	05800034 	movhi	r22,0
    4ac8:	94400217 	ldw	r17,8(r18)
    4acc:	05400034 	movhi	r21,0
    4ad0:	05000034 	movhi	r20,0
    4ad4:	04c00034 	movhi	r19,0
    4ad8:	b59f6e04 	addi	r22,r22,32184
    4adc:	ad5f8504 	addi	r21,r21,32276
    4ae0:	a51fa404 	addi	r20,r20,32400
    4ae4:	9cdfbb04 	addi	r19,r19,32492
    4ae8:	85800815 	stw	r22,32(r16)
    4aec:	85400915 	stw	r21,36(r16)
    4af0:	85000a15 	stw	r20,40(r16)
    4af4:	84c00b15 	stw	r19,44(r16)
    4af8:	84000715 	stw	r16,28(r16)
    4afc:	00800284 	movi	r2,10
    4b00:	8880030d 	sth	r2,12(r17)
    4b04:	00800044 	movi	r2,1
    4b08:	b80d883a 	mov	r6,r23
    4b0c:	89001704 	addi	r4,r17,92
    4b10:	000b883a 	mov	r5,zero
    4b14:	88000015 	stw	zero,0(r17)
    4b18:	88000115 	stw	zero,4(r17)
    4b1c:	88000215 	stw	zero,8(r17)
    4b20:	88001915 	stw	zero,100(r17)
    4b24:	8880038d 	sth	r2,14(r17)
    4b28:	88000415 	stw	zero,16(r17)
    4b2c:	88000515 	stw	zero,20(r17)
    4b30:	88000615 	stw	zero,24(r17)
    4b34:	00066680 	call	6668 <memset>
    4b38:	94000317 	ldw	r16,12(r18)
    4b3c:	00800484 	movi	r2,18
    4b40:	8c400715 	stw	r17,28(r17)
    4b44:	8d800815 	stw	r22,32(r17)
    4b48:	8d400915 	stw	r21,36(r17)
    4b4c:	8d000a15 	stw	r20,40(r17)
    4b50:	8cc00b15 	stw	r19,44(r17)
    4b54:	8080030d 	sth	r2,12(r16)
    4b58:	00800084 	movi	r2,2
    4b5c:	80000015 	stw	zero,0(r16)
    4b60:	80000115 	stw	zero,4(r16)
    4b64:	80000215 	stw	zero,8(r16)
    4b68:	80001915 	stw	zero,100(r16)
    4b6c:	8080038d 	sth	r2,14(r16)
    4b70:	80000415 	stw	zero,16(r16)
    4b74:	80000515 	stw	zero,20(r16)
    4b78:	80000615 	stw	zero,24(r16)
    4b7c:	b80d883a 	mov	r6,r23
    4b80:	000b883a 	mov	r5,zero
    4b84:	81001704 	addi	r4,r16,92
    4b88:	00066680 	call	6668 <memset>
    4b8c:	00800044 	movi	r2,1
    4b90:	84000715 	stw	r16,28(r16)
    4b94:	85800815 	stw	r22,32(r16)
    4b98:	85400915 	stw	r21,36(r16)
    4b9c:	85000a15 	stw	r20,40(r16)
    4ba0:	84c00b15 	stw	r19,44(r16)
    4ba4:	90800e15 	stw	r2,56(r18)
    4ba8:	dfc00817 	ldw	ra,32(sp)
    4bac:	ddc00717 	ldw	r23,28(sp)
    4bb0:	dd800617 	ldw	r22,24(sp)
    4bb4:	dd400517 	ldw	r21,20(sp)
    4bb8:	dd000417 	ldw	r20,16(sp)
    4bbc:	dcc00317 	ldw	r19,12(sp)
    4bc0:	dc800217 	ldw	r18,8(sp)
    4bc4:	dc400117 	ldw	r17,4(sp)
    4bc8:	dc000017 	ldw	r16,0(sp)
    4bcc:	dec00904 	addi	sp,sp,36
    4bd0:	f800283a 	ret

00004bd4 <__fp_lock>:
    4bd4:	0005883a 	mov	r2,zero
    4bd8:	f800283a 	ret

00004bdc <__sfmoreglue>:
    4bdc:	defffc04 	addi	sp,sp,-16
    4be0:	dc400115 	stw	r17,4(sp)
    4be4:	2c7fffc4 	addi	r17,r5,-1
    4be8:	8c401a24 	muli	r17,r17,104
    4bec:	dc800215 	stw	r18,8(sp)
    4bf0:	2825883a 	mov	r18,r5
    4bf4:	89401d04 	addi	r5,r17,116
    4bf8:	dc000015 	stw	r16,0(sp)
    4bfc:	dfc00315 	stw	ra,12(sp)
    4c00:	0005ad40 	call	5ad4 <_malloc_r>
    4c04:	1021883a 	mov	r16,r2
    4c08:	10000726 	beq	r2,zero,4c28 <__sfmoreglue+0x4c>
    4c0c:	11000304 	addi	r4,r2,12
    4c10:	10000015 	stw	zero,0(r2)
    4c14:	14800115 	stw	r18,4(r2)
    4c18:	11000215 	stw	r4,8(r2)
    4c1c:	89801a04 	addi	r6,r17,104
    4c20:	000b883a 	mov	r5,zero
    4c24:	00066680 	call	6668 <memset>
    4c28:	8005883a 	mov	r2,r16
    4c2c:	dfc00317 	ldw	ra,12(sp)
    4c30:	dc800217 	ldw	r18,8(sp)
    4c34:	dc400117 	ldw	r17,4(sp)
    4c38:	dc000017 	ldw	r16,0(sp)
    4c3c:	dec00404 	addi	sp,sp,16
    4c40:	f800283a 	ret

00004c44 <__sfp>:
    4c44:	defffb04 	addi	sp,sp,-20
    4c48:	dc000015 	stw	r16,0(sp)
    4c4c:	04000074 	movhi	r16,1
    4c50:	840ab704 	addi	r16,r16,10972
    4c54:	dcc00315 	stw	r19,12(sp)
    4c58:	2027883a 	mov	r19,r4
    4c5c:	81000017 	ldw	r4,0(r16)
    4c60:	dfc00415 	stw	ra,16(sp)
    4c64:	dc800215 	stw	r18,8(sp)
    4c68:	20800e17 	ldw	r2,56(r4)
    4c6c:	dc400115 	stw	r17,4(sp)
    4c70:	1000021e 	bne	r2,zero,4c7c <__sfp+0x38>
    4c74:	0004a380 	call	4a38 <__sinit.part.1>
    4c78:	81000017 	ldw	r4,0(r16)
    4c7c:	2480b804 	addi	r18,r4,736
    4c80:	047fffc4 	movi	r17,-1
    4c84:	91000117 	ldw	r4,4(r18)
    4c88:	94000217 	ldw	r16,8(r18)
    4c8c:	213fffc4 	addi	r4,r4,-1
    4c90:	20000a16 	blt	r4,zero,4cbc <__sfp+0x78>
    4c94:	8080030f 	ldh	r2,12(r16)
    4c98:	10000c26 	beq	r2,zero,4ccc <__sfp+0x88>
    4c9c:	80c01d04 	addi	r3,r16,116
    4ca0:	00000206 	br	4cac <__sfp+0x68>
    4ca4:	18bfe60f 	ldh	r2,-104(r3)
    4ca8:	10000826 	beq	r2,zero,4ccc <__sfp+0x88>
    4cac:	213fffc4 	addi	r4,r4,-1
    4cb0:	1c3ffd04 	addi	r16,r3,-12
    4cb4:	18c01a04 	addi	r3,r3,104
    4cb8:	247ffa1e 	bne	r4,r17,4ca4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004ca4>
    4cbc:	90800017 	ldw	r2,0(r18)
    4cc0:	10001d26 	beq	r2,zero,4d38 <__sfp+0xf4>
    4cc4:	1025883a 	mov	r18,r2
    4cc8:	003fee06 	br	4c84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004c84>
    4ccc:	00bfffc4 	movi	r2,-1
    4cd0:	8080038d 	sth	r2,14(r16)
    4cd4:	00800044 	movi	r2,1
    4cd8:	8080030d 	sth	r2,12(r16)
    4cdc:	80001915 	stw	zero,100(r16)
    4ce0:	80000015 	stw	zero,0(r16)
    4ce4:	80000215 	stw	zero,8(r16)
    4ce8:	80000115 	stw	zero,4(r16)
    4cec:	80000415 	stw	zero,16(r16)
    4cf0:	80000515 	stw	zero,20(r16)
    4cf4:	80000615 	stw	zero,24(r16)
    4cf8:	01800204 	movi	r6,8
    4cfc:	000b883a 	mov	r5,zero
    4d00:	81001704 	addi	r4,r16,92
    4d04:	00066680 	call	6668 <memset>
    4d08:	8005883a 	mov	r2,r16
    4d0c:	80000c15 	stw	zero,48(r16)
    4d10:	80000d15 	stw	zero,52(r16)
    4d14:	80001115 	stw	zero,68(r16)
    4d18:	80001215 	stw	zero,72(r16)
    4d1c:	dfc00417 	ldw	ra,16(sp)
    4d20:	dcc00317 	ldw	r19,12(sp)
    4d24:	dc800217 	ldw	r18,8(sp)
    4d28:	dc400117 	ldw	r17,4(sp)
    4d2c:	dc000017 	ldw	r16,0(sp)
    4d30:	dec00504 	addi	sp,sp,20
    4d34:	f800283a 	ret
    4d38:	01400104 	movi	r5,4
    4d3c:	9809883a 	mov	r4,r19
    4d40:	0004bdc0 	call	4bdc <__sfmoreglue>
    4d44:	90800015 	stw	r2,0(r18)
    4d48:	103fde1e 	bne	r2,zero,4cc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004cc4>
    4d4c:	00800304 	movi	r2,12
    4d50:	98800015 	stw	r2,0(r19)
    4d54:	0005883a 	mov	r2,zero
    4d58:	003ff006 	br	4d1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004d1c>

00004d5c <_cleanup>:
    4d5c:	00800074 	movhi	r2,1
    4d60:	108ab704 	addi	r2,r2,10972
    4d64:	11000017 	ldw	r4,0(r2)
    4d68:	01400074 	movhi	r5,1
    4d6c:	2965e404 	addi	r5,r5,-26736
    4d70:	00057781 	jmpi	5778 <_fwalk_reent>

00004d74 <__sinit>:
    4d74:	20800e17 	ldw	r2,56(r4)
    4d78:	10000126 	beq	r2,zero,4d80 <__sinit+0xc>
    4d7c:	f800283a 	ret
    4d80:	0004a381 	jmpi	4a38 <__sinit.part.1>

00004d84 <__sfp_lock_acquire>:
    4d84:	f800283a 	ret

00004d88 <__sfp_lock_release>:
    4d88:	f800283a 	ret

00004d8c <__sinit_lock_acquire>:
    4d8c:	f800283a 	ret

00004d90 <__sinit_lock_release>:
    4d90:	f800283a 	ret

00004d94 <__fp_lock_all>:
    4d94:	00800074 	movhi	r2,1
    4d98:	108ab804 	addi	r2,r2,10976
    4d9c:	11000017 	ldw	r4,0(r2)
    4da0:	01400034 	movhi	r5,0
    4da4:	2952f504 	addi	r5,r5,19412
    4da8:	00056b41 	jmpi	56b4 <_fwalk>

00004dac <__fp_unlock_all>:
    4dac:	00800074 	movhi	r2,1
    4db0:	108ab804 	addi	r2,r2,10976
    4db4:	11000017 	ldw	r4,0(r2)
    4db8:	01400034 	movhi	r5,0
    4dbc:	29528904 	addi	r5,r5,18980
    4dc0:	00056b41 	jmpi	56b4 <_fwalk>

00004dc4 <_malloc_trim_r>:
    4dc4:	defffb04 	addi	sp,sp,-20
    4dc8:	dcc00315 	stw	r19,12(sp)
    4dcc:	04c00074 	movhi	r19,1
    4dd0:	dc800215 	stw	r18,8(sp)
    4dd4:	dc400115 	stw	r17,4(sp)
    4dd8:	dc000015 	stw	r16,0(sp)
    4ddc:	dfc00415 	stw	ra,16(sp)
    4de0:	2821883a 	mov	r16,r5
    4de4:	9cc4a604 	addi	r19,r19,4760
    4de8:	2025883a 	mov	r18,r4
    4dec:	000d7940 	call	d794 <__malloc_lock>
    4df0:	98800217 	ldw	r2,8(r19)
    4df4:	14400117 	ldw	r17,4(r2)
    4df8:	00bfff04 	movi	r2,-4
    4dfc:	88a2703a 	and	r17,r17,r2
    4e00:	8c21c83a 	sub	r16,r17,r16
    4e04:	8403fbc4 	addi	r16,r16,4079
    4e08:	8020d33a 	srli	r16,r16,12
    4e0c:	0083ffc4 	movi	r2,4095
    4e10:	843fffc4 	addi	r16,r16,-1
    4e14:	8020933a 	slli	r16,r16,12
    4e18:	1400060e 	bge	r2,r16,4e34 <_malloc_trim_r+0x70>
    4e1c:	000b883a 	mov	r5,zero
    4e20:	9009883a 	mov	r4,r18
    4e24:	0007d640 	call	7d64 <_sbrk_r>
    4e28:	98c00217 	ldw	r3,8(r19)
    4e2c:	1c47883a 	add	r3,r3,r17
    4e30:	10c00a26 	beq	r2,r3,4e5c <_malloc_trim_r+0x98>
    4e34:	9009883a 	mov	r4,r18
    4e38:	000d7b80 	call	d7b8 <__malloc_unlock>
    4e3c:	0005883a 	mov	r2,zero
    4e40:	dfc00417 	ldw	ra,16(sp)
    4e44:	dcc00317 	ldw	r19,12(sp)
    4e48:	dc800217 	ldw	r18,8(sp)
    4e4c:	dc400117 	ldw	r17,4(sp)
    4e50:	dc000017 	ldw	r16,0(sp)
    4e54:	dec00504 	addi	sp,sp,20
    4e58:	f800283a 	ret
    4e5c:	040bc83a 	sub	r5,zero,r16
    4e60:	9009883a 	mov	r4,r18
    4e64:	0007d640 	call	7d64 <_sbrk_r>
    4e68:	00ffffc4 	movi	r3,-1
    4e6c:	10c00d26 	beq	r2,r3,4ea4 <_malloc_trim_r+0xe0>
    4e70:	00c00074 	movhi	r3,1
    4e74:	18d21d04 	addi	r3,r3,18548
    4e78:	18800017 	ldw	r2,0(r3)
    4e7c:	99000217 	ldw	r4,8(r19)
    4e80:	8c23c83a 	sub	r17,r17,r16
    4e84:	8c400054 	ori	r17,r17,1
    4e88:	1421c83a 	sub	r16,r2,r16
    4e8c:	24400115 	stw	r17,4(r4)
    4e90:	9009883a 	mov	r4,r18
    4e94:	1c000015 	stw	r16,0(r3)
    4e98:	000d7b80 	call	d7b8 <__malloc_unlock>
    4e9c:	00800044 	movi	r2,1
    4ea0:	003fe706 	br	4e40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004e40>
    4ea4:	000b883a 	mov	r5,zero
    4ea8:	9009883a 	mov	r4,r18
    4eac:	0007d640 	call	7d64 <_sbrk_r>
    4eb0:	99000217 	ldw	r4,8(r19)
    4eb4:	014003c4 	movi	r5,15
    4eb8:	1107c83a 	sub	r3,r2,r4
    4ebc:	28ffdd0e 	bge	r5,r3,4e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004e34>
    4ec0:	01400074 	movhi	r5,1
    4ec4:	294aba04 	addi	r5,r5,10984
    4ec8:	29400017 	ldw	r5,0(r5)
    4ecc:	18c00054 	ori	r3,r3,1
    4ed0:	20c00115 	stw	r3,4(r4)
    4ed4:	00c00074 	movhi	r3,1
    4ed8:	1145c83a 	sub	r2,r2,r5
    4edc:	18d21d04 	addi	r3,r3,18548
    4ee0:	18800015 	stw	r2,0(r3)
    4ee4:	003fd306 	br	4e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004e34>

00004ee8 <_free_r>:
    4ee8:	28004126 	beq	r5,zero,4ff0 <_free_r+0x108>
    4eec:	defffd04 	addi	sp,sp,-12
    4ef0:	dc400115 	stw	r17,4(sp)
    4ef4:	dc000015 	stw	r16,0(sp)
    4ef8:	2023883a 	mov	r17,r4
    4efc:	2821883a 	mov	r16,r5
    4f00:	dfc00215 	stw	ra,8(sp)
    4f04:	000d7940 	call	d794 <__malloc_lock>
    4f08:	81ffff17 	ldw	r7,-4(r16)
    4f0c:	00bfff84 	movi	r2,-2
    4f10:	01000074 	movhi	r4,1
    4f14:	81bffe04 	addi	r6,r16,-8
    4f18:	3884703a 	and	r2,r7,r2
    4f1c:	2104a604 	addi	r4,r4,4760
    4f20:	308b883a 	add	r5,r6,r2
    4f24:	2a400117 	ldw	r9,4(r5)
    4f28:	22000217 	ldw	r8,8(r4)
    4f2c:	00ffff04 	movi	r3,-4
    4f30:	48c6703a 	and	r3,r9,r3
    4f34:	2a005726 	beq	r5,r8,5094 <_free_r+0x1ac>
    4f38:	28c00115 	stw	r3,4(r5)
    4f3c:	39c0004c 	andi	r7,r7,1
    4f40:	3800091e 	bne	r7,zero,4f68 <_free_r+0x80>
    4f44:	823ffe17 	ldw	r8,-8(r16)
    4f48:	22400204 	addi	r9,r4,8
    4f4c:	320dc83a 	sub	r6,r6,r8
    4f50:	31c00217 	ldw	r7,8(r6)
    4f54:	1205883a 	add	r2,r2,r8
    4f58:	3a406526 	beq	r7,r9,50f0 <_free_r+0x208>
    4f5c:	32000317 	ldw	r8,12(r6)
    4f60:	3a000315 	stw	r8,12(r7)
    4f64:	41c00215 	stw	r7,8(r8)
    4f68:	28cf883a 	add	r7,r5,r3
    4f6c:	39c00117 	ldw	r7,4(r7)
    4f70:	39c0004c 	andi	r7,r7,1
    4f74:	38003a26 	beq	r7,zero,5060 <_free_r+0x178>
    4f78:	10c00054 	ori	r3,r2,1
    4f7c:	30c00115 	stw	r3,4(r6)
    4f80:	3087883a 	add	r3,r6,r2
    4f84:	18800015 	stw	r2,0(r3)
    4f88:	00c07fc4 	movi	r3,511
    4f8c:	18801936 	bltu	r3,r2,4ff4 <_free_r+0x10c>
    4f90:	1004d0fa 	srli	r2,r2,3
    4f94:	01c00044 	movi	r7,1
    4f98:	21400117 	ldw	r5,4(r4)
    4f9c:	10c00044 	addi	r3,r2,1
    4fa0:	18c7883a 	add	r3,r3,r3
    4fa4:	1005d0ba 	srai	r2,r2,2
    4fa8:	18c7883a 	add	r3,r3,r3
    4fac:	18c7883a 	add	r3,r3,r3
    4fb0:	1907883a 	add	r3,r3,r4
    4fb4:	3884983a 	sll	r2,r7,r2
    4fb8:	19c00017 	ldw	r7,0(r3)
    4fbc:	1a3ffe04 	addi	r8,r3,-8
    4fc0:	1144b03a 	or	r2,r2,r5
    4fc4:	32000315 	stw	r8,12(r6)
    4fc8:	31c00215 	stw	r7,8(r6)
    4fcc:	20800115 	stw	r2,4(r4)
    4fd0:	19800015 	stw	r6,0(r3)
    4fd4:	39800315 	stw	r6,12(r7)
    4fd8:	8809883a 	mov	r4,r17
    4fdc:	dfc00217 	ldw	ra,8(sp)
    4fe0:	dc400117 	ldw	r17,4(sp)
    4fe4:	dc000017 	ldw	r16,0(sp)
    4fe8:	dec00304 	addi	sp,sp,12
    4fec:	000d7b81 	jmpi	d7b8 <__malloc_unlock>
    4ff0:	f800283a 	ret
    4ff4:	100ad27a 	srli	r5,r2,9
    4ff8:	00c00104 	movi	r3,4
    4ffc:	19404a36 	bltu	r3,r5,5128 <_free_r+0x240>
    5000:	100ad1ba 	srli	r5,r2,6
    5004:	28c00e44 	addi	r3,r5,57
    5008:	18c7883a 	add	r3,r3,r3
    500c:	29400e04 	addi	r5,r5,56
    5010:	18c7883a 	add	r3,r3,r3
    5014:	18c7883a 	add	r3,r3,r3
    5018:	1909883a 	add	r4,r3,r4
    501c:	20c00017 	ldw	r3,0(r4)
    5020:	01c00074 	movhi	r7,1
    5024:	213ffe04 	addi	r4,r4,-8
    5028:	39c4a604 	addi	r7,r7,4760
    502c:	20c04426 	beq	r4,r3,5140 <_free_r+0x258>
    5030:	01ffff04 	movi	r7,-4
    5034:	19400117 	ldw	r5,4(r3)
    5038:	29ca703a 	and	r5,r5,r7
    503c:	1140022e 	bgeu	r2,r5,5048 <_free_r+0x160>
    5040:	18c00217 	ldw	r3,8(r3)
    5044:	20fffb1e 	bne	r4,r3,5034 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005034>
    5048:	19000317 	ldw	r4,12(r3)
    504c:	31000315 	stw	r4,12(r6)
    5050:	30c00215 	stw	r3,8(r6)
    5054:	21800215 	stw	r6,8(r4)
    5058:	19800315 	stw	r6,12(r3)
    505c:	003fde06 	br	4fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004fd8>
    5060:	29c00217 	ldw	r7,8(r5)
    5064:	10c5883a 	add	r2,r2,r3
    5068:	00c00074 	movhi	r3,1
    506c:	18c4a804 	addi	r3,r3,4768
    5070:	38c03b26 	beq	r7,r3,5160 <_free_r+0x278>
    5074:	2a000317 	ldw	r8,12(r5)
    5078:	11400054 	ori	r5,r2,1
    507c:	3087883a 	add	r3,r6,r2
    5080:	3a000315 	stw	r8,12(r7)
    5084:	41c00215 	stw	r7,8(r8)
    5088:	31400115 	stw	r5,4(r6)
    508c:	18800015 	stw	r2,0(r3)
    5090:	003fbd06 	br	4f88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004f88>
    5094:	39c0004c 	andi	r7,r7,1
    5098:	10c5883a 	add	r2,r2,r3
    509c:	3800071e 	bne	r7,zero,50bc <_free_r+0x1d4>
    50a0:	81fffe17 	ldw	r7,-8(r16)
    50a4:	31cdc83a 	sub	r6,r6,r7
    50a8:	30c00317 	ldw	r3,12(r6)
    50ac:	31400217 	ldw	r5,8(r6)
    50b0:	11c5883a 	add	r2,r2,r7
    50b4:	28c00315 	stw	r3,12(r5)
    50b8:	19400215 	stw	r5,8(r3)
    50bc:	10c00054 	ori	r3,r2,1
    50c0:	30c00115 	stw	r3,4(r6)
    50c4:	00c00074 	movhi	r3,1
    50c8:	18cabb04 	addi	r3,r3,10988
    50cc:	18c00017 	ldw	r3,0(r3)
    50d0:	21800215 	stw	r6,8(r4)
    50d4:	10ffc036 	bltu	r2,r3,4fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004fd8>
    50d8:	00800074 	movhi	r2,1
    50dc:	10921404 	addi	r2,r2,18512
    50e0:	11400017 	ldw	r5,0(r2)
    50e4:	8809883a 	mov	r4,r17
    50e8:	0004dc40 	call	4dc4 <_malloc_trim_r>
    50ec:	003fba06 	br	4fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004fd8>
    50f0:	28c9883a 	add	r4,r5,r3
    50f4:	21000117 	ldw	r4,4(r4)
    50f8:	2100004c 	andi	r4,r4,1
    50fc:	2000391e 	bne	r4,zero,51e4 <_free_r+0x2fc>
    5100:	29c00217 	ldw	r7,8(r5)
    5104:	29000317 	ldw	r4,12(r5)
    5108:	1885883a 	add	r2,r3,r2
    510c:	10c00054 	ori	r3,r2,1
    5110:	39000315 	stw	r4,12(r7)
    5114:	21c00215 	stw	r7,8(r4)
    5118:	30c00115 	stw	r3,4(r6)
    511c:	308d883a 	add	r6,r6,r2
    5120:	30800015 	stw	r2,0(r6)
    5124:	003fac06 	br	4fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004fd8>
    5128:	00c00504 	movi	r3,20
    512c:	19401536 	bltu	r3,r5,5184 <_free_r+0x29c>
    5130:	28c01704 	addi	r3,r5,92
    5134:	18c7883a 	add	r3,r3,r3
    5138:	294016c4 	addi	r5,r5,91
    513c:	003fb406 	br	5010 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005010>
    5140:	280bd0ba 	srai	r5,r5,2
    5144:	00c00044 	movi	r3,1
    5148:	38800117 	ldw	r2,4(r7)
    514c:	194a983a 	sll	r5,r3,r5
    5150:	2007883a 	mov	r3,r4
    5154:	2884b03a 	or	r2,r5,r2
    5158:	38800115 	stw	r2,4(r7)
    515c:	003fbb06 	br	504c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000504c>
    5160:	21800515 	stw	r6,20(r4)
    5164:	21800415 	stw	r6,16(r4)
    5168:	10c00054 	ori	r3,r2,1
    516c:	31c00315 	stw	r7,12(r6)
    5170:	31c00215 	stw	r7,8(r6)
    5174:	30c00115 	stw	r3,4(r6)
    5178:	308d883a 	add	r6,r6,r2
    517c:	30800015 	stw	r2,0(r6)
    5180:	003f9506 	br	4fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004fd8>
    5184:	00c01504 	movi	r3,84
    5188:	19400536 	bltu	r3,r5,51a0 <_free_r+0x2b8>
    518c:	100ad33a 	srli	r5,r2,12
    5190:	28c01bc4 	addi	r3,r5,111
    5194:	18c7883a 	add	r3,r3,r3
    5198:	29401b84 	addi	r5,r5,110
    519c:	003f9c06 	br	5010 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005010>
    51a0:	00c05504 	movi	r3,340
    51a4:	19400536 	bltu	r3,r5,51bc <_free_r+0x2d4>
    51a8:	100ad3fa 	srli	r5,r2,15
    51ac:	28c01e04 	addi	r3,r5,120
    51b0:	18c7883a 	add	r3,r3,r3
    51b4:	29401dc4 	addi	r5,r5,119
    51b8:	003f9506 	br	5010 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005010>
    51bc:	00c15504 	movi	r3,1364
    51c0:	19400536 	bltu	r3,r5,51d8 <_free_r+0x2f0>
    51c4:	100ad4ba 	srli	r5,r2,18
    51c8:	28c01f44 	addi	r3,r5,125
    51cc:	18c7883a 	add	r3,r3,r3
    51d0:	29401f04 	addi	r5,r5,124
    51d4:	003f8e06 	br	5010 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005010>
    51d8:	00c03f84 	movi	r3,254
    51dc:	01401f84 	movi	r5,126
    51e0:	003f8b06 	br	5010 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005010>
    51e4:	10c00054 	ori	r3,r2,1
    51e8:	30c00115 	stw	r3,4(r6)
    51ec:	308d883a 	add	r6,r6,r2
    51f0:	30800015 	stw	r2,0(r6)
    51f4:	003f7806 	br	4fd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0004fd8>

000051f8 <__sfvwrite_r>:
    51f8:	30800217 	ldw	r2,8(r6)
    51fc:	10006726 	beq	r2,zero,539c <__sfvwrite_r+0x1a4>
    5200:	28c0030b 	ldhu	r3,12(r5)
    5204:	defff404 	addi	sp,sp,-48
    5208:	dd400715 	stw	r21,28(sp)
    520c:	dd000615 	stw	r20,24(sp)
    5210:	dc000215 	stw	r16,8(sp)
    5214:	dfc00b15 	stw	ra,44(sp)
    5218:	df000a15 	stw	fp,40(sp)
    521c:	ddc00915 	stw	r23,36(sp)
    5220:	dd800815 	stw	r22,32(sp)
    5224:	dcc00515 	stw	r19,20(sp)
    5228:	dc800415 	stw	r18,16(sp)
    522c:	dc400315 	stw	r17,12(sp)
    5230:	1880020c 	andi	r2,r3,8
    5234:	2821883a 	mov	r16,r5
    5238:	202b883a 	mov	r21,r4
    523c:	3029883a 	mov	r20,r6
    5240:	10002726 	beq	r2,zero,52e0 <__sfvwrite_r+0xe8>
    5244:	28800417 	ldw	r2,16(r5)
    5248:	10002526 	beq	r2,zero,52e0 <__sfvwrite_r+0xe8>
    524c:	1880008c 	andi	r2,r3,2
    5250:	a4400017 	ldw	r17,0(r20)
    5254:	10002a26 	beq	r2,zero,5300 <__sfvwrite_r+0x108>
    5258:	05a00034 	movhi	r22,32768
    525c:	0027883a 	mov	r19,zero
    5260:	0025883a 	mov	r18,zero
    5264:	b5bf0004 	addi	r22,r22,-1024
    5268:	980d883a 	mov	r6,r19
    526c:	a809883a 	mov	r4,r21
    5270:	90004626 	beq	r18,zero,538c <__sfvwrite_r+0x194>
    5274:	900f883a 	mov	r7,r18
    5278:	b480022e 	bgeu	r22,r18,5284 <__sfvwrite_r+0x8c>
    527c:	01e00034 	movhi	r7,32768
    5280:	39ff0004 	addi	r7,r7,-1024
    5284:	80800917 	ldw	r2,36(r16)
    5288:	81400717 	ldw	r5,28(r16)
    528c:	103ee83a 	callr	r2
    5290:	0080570e 	bge	zero,r2,53f0 <__sfvwrite_r+0x1f8>
    5294:	a0c00217 	ldw	r3,8(r20)
    5298:	98a7883a 	add	r19,r19,r2
    529c:	90a5c83a 	sub	r18,r18,r2
    52a0:	1885c83a 	sub	r2,r3,r2
    52a4:	a0800215 	stw	r2,8(r20)
    52a8:	103fef1e 	bne	r2,zero,5268 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005268>
    52ac:	0005883a 	mov	r2,zero
    52b0:	dfc00b17 	ldw	ra,44(sp)
    52b4:	df000a17 	ldw	fp,40(sp)
    52b8:	ddc00917 	ldw	r23,36(sp)
    52bc:	dd800817 	ldw	r22,32(sp)
    52c0:	dd400717 	ldw	r21,28(sp)
    52c4:	dd000617 	ldw	r20,24(sp)
    52c8:	dcc00517 	ldw	r19,20(sp)
    52cc:	dc800417 	ldw	r18,16(sp)
    52d0:	dc400317 	ldw	r17,12(sp)
    52d4:	dc000217 	ldw	r16,8(sp)
    52d8:	dec00c04 	addi	sp,sp,48
    52dc:	f800283a 	ret
    52e0:	800b883a 	mov	r5,r16
    52e4:	a809883a 	mov	r4,r21
    52e8:	0002da00 	call	2da0 <__swsetup_r>
    52ec:	1000eb1e 	bne	r2,zero,569c <__sfvwrite_r+0x4a4>
    52f0:	80c0030b 	ldhu	r3,12(r16)
    52f4:	a4400017 	ldw	r17,0(r20)
    52f8:	1880008c 	andi	r2,r3,2
    52fc:	103fd61e 	bne	r2,zero,5258 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005258>
    5300:	1880004c 	andi	r2,r3,1
    5304:	10003f1e 	bne	r2,zero,5404 <__sfvwrite_r+0x20c>
    5308:	0039883a 	mov	fp,zero
    530c:	0025883a 	mov	r18,zero
    5310:	90001a26 	beq	r18,zero,537c <__sfvwrite_r+0x184>
    5314:	1880800c 	andi	r2,r3,512
    5318:	84c00217 	ldw	r19,8(r16)
    531c:	10002126 	beq	r2,zero,53a4 <__sfvwrite_r+0x1ac>
    5320:	982f883a 	mov	r23,r19
    5324:	94c09336 	bltu	r18,r19,5574 <__sfvwrite_r+0x37c>
    5328:	1881200c 	andi	r2,r3,1152
    532c:	10009e1e 	bne	r2,zero,55a8 <__sfvwrite_r+0x3b0>
    5330:	81000017 	ldw	r4,0(r16)
    5334:	b80d883a 	mov	r6,r23
    5338:	e00b883a 	mov	r5,fp
    533c:	000650c0 	call	650c <memmove>
    5340:	80c00217 	ldw	r3,8(r16)
    5344:	81000017 	ldw	r4,0(r16)
    5348:	9005883a 	mov	r2,r18
    534c:	1ce7c83a 	sub	r19,r3,r19
    5350:	25cf883a 	add	r7,r4,r23
    5354:	84c00215 	stw	r19,8(r16)
    5358:	81c00015 	stw	r7,0(r16)
    535c:	a0c00217 	ldw	r3,8(r20)
    5360:	e0b9883a 	add	fp,fp,r2
    5364:	90a5c83a 	sub	r18,r18,r2
    5368:	18a7c83a 	sub	r19,r3,r2
    536c:	a4c00215 	stw	r19,8(r20)
    5370:	983fce26 	beq	r19,zero,52ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052ac>
    5374:	80c0030b 	ldhu	r3,12(r16)
    5378:	903fe61e 	bne	r18,zero,5314 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005314>
    537c:	8f000017 	ldw	fp,0(r17)
    5380:	8c800117 	ldw	r18,4(r17)
    5384:	8c400204 	addi	r17,r17,8
    5388:	003fe106 	br	5310 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005310>
    538c:	8cc00017 	ldw	r19,0(r17)
    5390:	8c800117 	ldw	r18,4(r17)
    5394:	8c400204 	addi	r17,r17,8
    5398:	003fb306 	br	5268 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005268>
    539c:	0005883a 	mov	r2,zero
    53a0:	f800283a 	ret
    53a4:	81000017 	ldw	r4,0(r16)
    53a8:	80800417 	ldw	r2,16(r16)
    53ac:	11005736 	bltu	r2,r4,550c <__sfvwrite_r+0x314>
    53b0:	85c00517 	ldw	r23,20(r16)
    53b4:	95c05536 	bltu	r18,r23,550c <__sfvwrite_r+0x314>
    53b8:	00a00034 	movhi	r2,32768
    53bc:	10bfffc4 	addi	r2,r2,-1
    53c0:	9009883a 	mov	r4,r18
    53c4:	1480012e 	bgeu	r2,r18,53cc <__sfvwrite_r+0x1d4>
    53c8:	1009883a 	mov	r4,r2
    53cc:	b80b883a 	mov	r5,r23
    53d0:	000a9fc0 	call	a9fc <__divsi3>
    53d4:	15cf383a 	mul	r7,r2,r23
    53d8:	81400717 	ldw	r5,28(r16)
    53dc:	80800917 	ldw	r2,36(r16)
    53e0:	e00d883a 	mov	r6,fp
    53e4:	a809883a 	mov	r4,r21
    53e8:	103ee83a 	callr	r2
    53ec:	00bfdb16 	blt	zero,r2,535c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000535c>
    53f0:	8080030b 	ldhu	r2,12(r16)
    53f4:	10801014 	ori	r2,r2,64
    53f8:	8080030d 	sth	r2,12(r16)
    53fc:	00bfffc4 	movi	r2,-1
    5400:	003fab06 	br	52b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052b0>
    5404:	0027883a 	mov	r19,zero
    5408:	0011883a 	mov	r8,zero
    540c:	0039883a 	mov	fp,zero
    5410:	0025883a 	mov	r18,zero
    5414:	90001f26 	beq	r18,zero,5494 <__sfvwrite_r+0x29c>
    5418:	40005a26 	beq	r8,zero,5584 <__sfvwrite_r+0x38c>
    541c:	982d883a 	mov	r22,r19
    5420:	94c0012e 	bgeu	r18,r19,5428 <__sfvwrite_r+0x230>
    5424:	902d883a 	mov	r22,r18
    5428:	81000017 	ldw	r4,0(r16)
    542c:	80800417 	ldw	r2,16(r16)
    5430:	b02f883a 	mov	r23,r22
    5434:	81c00517 	ldw	r7,20(r16)
    5438:	1100032e 	bgeu	r2,r4,5448 <__sfvwrite_r+0x250>
    543c:	80c00217 	ldw	r3,8(r16)
    5440:	38c7883a 	add	r3,r7,r3
    5444:	1d801816 	blt	r3,r22,54a8 <__sfvwrite_r+0x2b0>
    5448:	b1c03e16 	blt	r22,r7,5544 <__sfvwrite_r+0x34c>
    544c:	80800917 	ldw	r2,36(r16)
    5450:	81400717 	ldw	r5,28(r16)
    5454:	e00d883a 	mov	r6,fp
    5458:	da000115 	stw	r8,4(sp)
    545c:	a809883a 	mov	r4,r21
    5460:	103ee83a 	callr	r2
    5464:	102f883a 	mov	r23,r2
    5468:	da000117 	ldw	r8,4(sp)
    546c:	00bfe00e 	bge	zero,r2,53f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053f0>
    5470:	9de7c83a 	sub	r19,r19,r23
    5474:	98001f26 	beq	r19,zero,54f4 <__sfvwrite_r+0x2fc>
    5478:	a0800217 	ldw	r2,8(r20)
    547c:	e5f9883a 	add	fp,fp,r23
    5480:	95e5c83a 	sub	r18,r18,r23
    5484:	15efc83a 	sub	r23,r2,r23
    5488:	a5c00215 	stw	r23,8(r20)
    548c:	b83f8726 	beq	r23,zero,52ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052ac>
    5490:	903fe11e 	bne	r18,zero,5418 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005418>
    5494:	8f000017 	ldw	fp,0(r17)
    5498:	8c800117 	ldw	r18,4(r17)
    549c:	0011883a 	mov	r8,zero
    54a0:	8c400204 	addi	r17,r17,8
    54a4:	003fdb06 	br	5414 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005414>
    54a8:	180d883a 	mov	r6,r3
    54ac:	e00b883a 	mov	r5,fp
    54b0:	da000115 	stw	r8,4(sp)
    54b4:	d8c00015 	stw	r3,0(sp)
    54b8:	000650c0 	call	650c <memmove>
    54bc:	d8c00017 	ldw	r3,0(sp)
    54c0:	80800017 	ldw	r2,0(r16)
    54c4:	800b883a 	mov	r5,r16
    54c8:	a809883a 	mov	r4,r21
    54cc:	10c5883a 	add	r2,r2,r3
    54d0:	80800015 	stw	r2,0(r16)
    54d4:	d8c00015 	stw	r3,0(sp)
    54d8:	00049980 	call	4998 <_fflush_r>
    54dc:	d8c00017 	ldw	r3,0(sp)
    54e0:	da000117 	ldw	r8,4(sp)
    54e4:	103fc21e 	bne	r2,zero,53f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053f0>
    54e8:	182f883a 	mov	r23,r3
    54ec:	9de7c83a 	sub	r19,r19,r23
    54f0:	983fe11e 	bne	r19,zero,5478 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005478>
    54f4:	800b883a 	mov	r5,r16
    54f8:	a809883a 	mov	r4,r21
    54fc:	00049980 	call	4998 <_fflush_r>
    5500:	103fbb1e 	bne	r2,zero,53f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053f0>
    5504:	0011883a 	mov	r8,zero
    5508:	003fdb06 	br	5478 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005478>
    550c:	94c0012e 	bgeu	r18,r19,5514 <__sfvwrite_r+0x31c>
    5510:	9027883a 	mov	r19,r18
    5514:	980d883a 	mov	r6,r19
    5518:	e00b883a 	mov	r5,fp
    551c:	000650c0 	call	650c <memmove>
    5520:	80800217 	ldw	r2,8(r16)
    5524:	80c00017 	ldw	r3,0(r16)
    5528:	14c5c83a 	sub	r2,r2,r19
    552c:	1cc7883a 	add	r3,r3,r19
    5530:	80800215 	stw	r2,8(r16)
    5534:	80c00015 	stw	r3,0(r16)
    5538:	10004326 	beq	r2,zero,5648 <__sfvwrite_r+0x450>
    553c:	9805883a 	mov	r2,r19
    5540:	003f8606 	br	535c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000535c>
    5544:	b00d883a 	mov	r6,r22
    5548:	e00b883a 	mov	r5,fp
    554c:	da000115 	stw	r8,4(sp)
    5550:	000650c0 	call	650c <memmove>
    5554:	80800217 	ldw	r2,8(r16)
    5558:	80c00017 	ldw	r3,0(r16)
    555c:	da000117 	ldw	r8,4(sp)
    5560:	1585c83a 	sub	r2,r2,r22
    5564:	1dad883a 	add	r22,r3,r22
    5568:	80800215 	stw	r2,8(r16)
    556c:	85800015 	stw	r22,0(r16)
    5570:	003fbf06 	br	5470 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005470>
    5574:	81000017 	ldw	r4,0(r16)
    5578:	9027883a 	mov	r19,r18
    557c:	902f883a 	mov	r23,r18
    5580:	003f6c06 	br	5334 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005334>
    5584:	900d883a 	mov	r6,r18
    5588:	01400284 	movi	r5,10
    558c:	e009883a 	mov	r4,fp
    5590:	00062e00 	call	62e0 <memchr>
    5594:	10003e26 	beq	r2,zero,5690 <__sfvwrite_r+0x498>
    5598:	10800044 	addi	r2,r2,1
    559c:	1727c83a 	sub	r19,r2,fp
    55a0:	02000044 	movi	r8,1
    55a4:	003f9d06 	br	541c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000541c>
    55a8:	80800517 	ldw	r2,20(r16)
    55ac:	81400417 	ldw	r5,16(r16)
    55b0:	81c00017 	ldw	r7,0(r16)
    55b4:	10a7883a 	add	r19,r2,r2
    55b8:	9885883a 	add	r2,r19,r2
    55bc:	1026d7fa 	srli	r19,r2,31
    55c0:	396dc83a 	sub	r22,r7,r5
    55c4:	b1000044 	addi	r4,r22,1
    55c8:	9885883a 	add	r2,r19,r2
    55cc:	1027d07a 	srai	r19,r2,1
    55d0:	2485883a 	add	r2,r4,r18
    55d4:	980d883a 	mov	r6,r19
    55d8:	9880022e 	bgeu	r19,r2,55e4 <__sfvwrite_r+0x3ec>
    55dc:	1027883a 	mov	r19,r2
    55e0:	100d883a 	mov	r6,r2
    55e4:	18c1000c 	andi	r3,r3,1024
    55e8:	18001c26 	beq	r3,zero,565c <__sfvwrite_r+0x464>
    55ec:	300b883a 	mov	r5,r6
    55f0:	a809883a 	mov	r4,r21
    55f4:	0005ad40 	call	5ad4 <_malloc_r>
    55f8:	102f883a 	mov	r23,r2
    55fc:	10002926 	beq	r2,zero,56a4 <__sfvwrite_r+0x4ac>
    5600:	81400417 	ldw	r5,16(r16)
    5604:	b00d883a 	mov	r6,r22
    5608:	1009883a 	mov	r4,r2
    560c:	00063c40 	call	63c4 <memcpy>
    5610:	8080030b 	ldhu	r2,12(r16)
    5614:	00fedfc4 	movi	r3,-1153
    5618:	10c4703a 	and	r2,r2,r3
    561c:	10802014 	ori	r2,r2,128
    5620:	8080030d 	sth	r2,12(r16)
    5624:	bd89883a 	add	r4,r23,r22
    5628:	9d8fc83a 	sub	r7,r19,r22
    562c:	85c00415 	stw	r23,16(r16)
    5630:	84c00515 	stw	r19,20(r16)
    5634:	81000015 	stw	r4,0(r16)
    5638:	9027883a 	mov	r19,r18
    563c:	81c00215 	stw	r7,8(r16)
    5640:	902f883a 	mov	r23,r18
    5644:	003f3b06 	br	5334 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005334>
    5648:	800b883a 	mov	r5,r16
    564c:	a809883a 	mov	r4,r21
    5650:	00049980 	call	4998 <_fflush_r>
    5654:	103fb926 	beq	r2,zero,553c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000553c>
    5658:	003f6506 	br	53f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053f0>
    565c:	a809883a 	mov	r4,r21
    5660:	000778c0 	call	778c <_realloc_r>
    5664:	102f883a 	mov	r23,r2
    5668:	103fee1e 	bne	r2,zero,5624 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005624>
    566c:	81400417 	ldw	r5,16(r16)
    5670:	a809883a 	mov	r4,r21
    5674:	0004ee80 	call	4ee8 <_free_r>
    5678:	8080030b 	ldhu	r2,12(r16)
    567c:	00ffdfc4 	movi	r3,-129
    5680:	1884703a 	and	r2,r3,r2
    5684:	00c00304 	movi	r3,12
    5688:	a8c00015 	stw	r3,0(r21)
    568c:	003f5906 	br	53f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053f4>
    5690:	94c00044 	addi	r19,r18,1
    5694:	02000044 	movi	r8,1
    5698:	003f6006 	br	541c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000541c>
    569c:	00bfffc4 	movi	r2,-1
    56a0:	003f0306 	br	52b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00052b0>
    56a4:	00800304 	movi	r2,12
    56a8:	a8800015 	stw	r2,0(r21)
    56ac:	8080030b 	ldhu	r2,12(r16)
    56b0:	003f5006 	br	53f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00053f4>

000056b4 <_fwalk>:
    56b4:	defff704 	addi	sp,sp,-36
    56b8:	dd000415 	stw	r20,16(sp)
    56bc:	dfc00815 	stw	ra,32(sp)
    56c0:	ddc00715 	stw	r23,28(sp)
    56c4:	dd800615 	stw	r22,24(sp)
    56c8:	dd400515 	stw	r21,20(sp)
    56cc:	dcc00315 	stw	r19,12(sp)
    56d0:	dc800215 	stw	r18,8(sp)
    56d4:	dc400115 	stw	r17,4(sp)
    56d8:	dc000015 	stw	r16,0(sp)
    56dc:	2500b804 	addi	r20,r4,736
    56e0:	a0002326 	beq	r20,zero,5770 <_fwalk+0xbc>
    56e4:	282b883a 	mov	r21,r5
    56e8:	002f883a 	mov	r23,zero
    56ec:	05800044 	movi	r22,1
    56f0:	04ffffc4 	movi	r19,-1
    56f4:	a4400117 	ldw	r17,4(r20)
    56f8:	a4800217 	ldw	r18,8(r20)
    56fc:	8c7fffc4 	addi	r17,r17,-1
    5700:	88000d16 	blt	r17,zero,5738 <_fwalk+0x84>
    5704:	94000304 	addi	r16,r18,12
    5708:	94800384 	addi	r18,r18,14
    570c:	8080000b 	ldhu	r2,0(r16)
    5710:	8c7fffc4 	addi	r17,r17,-1
    5714:	813ffd04 	addi	r4,r16,-12
    5718:	b080042e 	bgeu	r22,r2,572c <_fwalk+0x78>
    571c:	9080000f 	ldh	r2,0(r18)
    5720:	14c00226 	beq	r2,r19,572c <_fwalk+0x78>
    5724:	a83ee83a 	callr	r21
    5728:	b8aeb03a 	or	r23,r23,r2
    572c:	84001a04 	addi	r16,r16,104
    5730:	94801a04 	addi	r18,r18,104
    5734:	8cfff51e 	bne	r17,r19,570c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000570c>
    5738:	a5000017 	ldw	r20,0(r20)
    573c:	a03fed1e 	bne	r20,zero,56f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00056f4>
    5740:	b805883a 	mov	r2,r23
    5744:	dfc00817 	ldw	ra,32(sp)
    5748:	ddc00717 	ldw	r23,28(sp)
    574c:	dd800617 	ldw	r22,24(sp)
    5750:	dd400517 	ldw	r21,20(sp)
    5754:	dd000417 	ldw	r20,16(sp)
    5758:	dcc00317 	ldw	r19,12(sp)
    575c:	dc800217 	ldw	r18,8(sp)
    5760:	dc400117 	ldw	r17,4(sp)
    5764:	dc000017 	ldw	r16,0(sp)
    5768:	dec00904 	addi	sp,sp,36
    576c:	f800283a 	ret
    5770:	002f883a 	mov	r23,zero
    5774:	003ff206 	br	5740 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005740>

00005778 <_fwalk_reent>:
    5778:	defff704 	addi	sp,sp,-36
    577c:	dd000415 	stw	r20,16(sp)
    5780:	dfc00815 	stw	ra,32(sp)
    5784:	ddc00715 	stw	r23,28(sp)
    5788:	dd800615 	stw	r22,24(sp)
    578c:	dd400515 	stw	r21,20(sp)
    5790:	dcc00315 	stw	r19,12(sp)
    5794:	dc800215 	stw	r18,8(sp)
    5798:	dc400115 	stw	r17,4(sp)
    579c:	dc000015 	stw	r16,0(sp)
    57a0:	2500b804 	addi	r20,r4,736
    57a4:	a0002326 	beq	r20,zero,5834 <_fwalk_reent+0xbc>
    57a8:	282b883a 	mov	r21,r5
    57ac:	2027883a 	mov	r19,r4
    57b0:	002f883a 	mov	r23,zero
    57b4:	05800044 	movi	r22,1
    57b8:	04bfffc4 	movi	r18,-1
    57bc:	a4400117 	ldw	r17,4(r20)
    57c0:	a4000217 	ldw	r16,8(r20)
    57c4:	8c7fffc4 	addi	r17,r17,-1
    57c8:	88000c16 	blt	r17,zero,57fc <_fwalk_reent+0x84>
    57cc:	84000304 	addi	r16,r16,12
    57d0:	8080000b 	ldhu	r2,0(r16)
    57d4:	8c7fffc4 	addi	r17,r17,-1
    57d8:	817ffd04 	addi	r5,r16,-12
    57dc:	b080052e 	bgeu	r22,r2,57f4 <_fwalk_reent+0x7c>
    57e0:	8080008f 	ldh	r2,2(r16)
    57e4:	9809883a 	mov	r4,r19
    57e8:	14800226 	beq	r2,r18,57f4 <_fwalk_reent+0x7c>
    57ec:	a83ee83a 	callr	r21
    57f0:	b8aeb03a 	or	r23,r23,r2
    57f4:	84001a04 	addi	r16,r16,104
    57f8:	8cbff51e 	bne	r17,r18,57d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00057d0>
    57fc:	a5000017 	ldw	r20,0(r20)
    5800:	a03fee1e 	bne	r20,zero,57bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00057bc>
    5804:	b805883a 	mov	r2,r23
    5808:	dfc00817 	ldw	ra,32(sp)
    580c:	ddc00717 	ldw	r23,28(sp)
    5810:	dd800617 	ldw	r22,24(sp)
    5814:	dd400517 	ldw	r21,20(sp)
    5818:	dd000417 	ldw	r20,16(sp)
    581c:	dcc00317 	ldw	r19,12(sp)
    5820:	dc800217 	ldw	r18,8(sp)
    5824:	dc400117 	ldw	r17,4(sp)
    5828:	dc000017 	ldw	r16,0(sp)
    582c:	dec00904 	addi	sp,sp,36
    5830:	f800283a 	ret
    5834:	002f883a 	mov	r23,zero
    5838:	003ff206 	br	5804 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005804>

0000583c <_setlocale_r>:
    583c:	30001b26 	beq	r6,zero,58ac <_setlocale_r+0x70>
    5840:	01400074 	movhi	r5,1
    5844:	defffe04 	addi	sp,sp,-8
    5848:	2942a604 	addi	r5,r5,2712
    584c:	3009883a 	mov	r4,r6
    5850:	dc000015 	stw	r16,0(sp)
    5854:	dfc00115 	stw	ra,4(sp)
    5858:	3021883a 	mov	r16,r6
    585c:	0007ef40 	call	7ef4 <strcmp>
    5860:	1000061e 	bne	r2,zero,587c <_setlocale_r+0x40>
    5864:	00800074 	movhi	r2,1
    5868:	1082a504 	addi	r2,r2,2708
    586c:	dfc00117 	ldw	ra,4(sp)
    5870:	dc000017 	ldw	r16,0(sp)
    5874:	dec00204 	addi	sp,sp,8
    5878:	f800283a 	ret
    587c:	01400074 	movhi	r5,1
    5880:	2942a504 	addi	r5,r5,2708
    5884:	8009883a 	mov	r4,r16
    5888:	0007ef40 	call	7ef4 <strcmp>
    588c:	103ff526 	beq	r2,zero,5864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005864>
    5890:	01400074 	movhi	r5,1
    5894:	29429004 	addi	r5,r5,2624
    5898:	8009883a 	mov	r4,r16
    589c:	0007ef40 	call	7ef4 <strcmp>
    58a0:	103ff026 	beq	r2,zero,5864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005864>
    58a4:	0005883a 	mov	r2,zero
    58a8:	003ff006 	br	586c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000586c>
    58ac:	00800074 	movhi	r2,1
    58b0:	1082a504 	addi	r2,r2,2708
    58b4:	f800283a 	ret

000058b8 <__locale_charset>:
    58b8:	00800074 	movhi	r2,1
    58bc:	10849004 	addi	r2,r2,4672
    58c0:	f800283a 	ret

000058c4 <__locale_mb_cur_max>:
    58c4:	00800074 	movhi	r2,1
    58c8:	108ab904 	addi	r2,r2,10980
    58cc:	10800017 	ldw	r2,0(r2)
    58d0:	f800283a 	ret

000058d4 <__locale_msgcharset>:
    58d4:	00800074 	movhi	r2,1
    58d8:	10848804 	addi	r2,r2,4640
    58dc:	f800283a 	ret

000058e0 <__locale_cjk_lang>:
    58e0:	0005883a 	mov	r2,zero
    58e4:	f800283a 	ret

000058e8 <_localeconv_r>:
    58e8:	00800074 	movhi	r2,1
    58ec:	10849804 	addi	r2,r2,4704
    58f0:	f800283a 	ret

000058f4 <setlocale>:
    58f4:	00800074 	movhi	r2,1
    58f8:	108ab804 	addi	r2,r2,10976
    58fc:	280d883a 	mov	r6,r5
    5900:	200b883a 	mov	r5,r4
    5904:	11000017 	ldw	r4,0(r2)
    5908:	000583c1 	jmpi	583c <_setlocale_r>

0000590c <localeconv>:
    590c:	00800074 	movhi	r2,1
    5910:	10849804 	addi	r2,r2,4704
    5914:	f800283a 	ret

00005918 <__smakebuf_r>:
    5918:	2880030b 	ldhu	r2,12(r5)
    591c:	10c0008c 	andi	r3,r2,2
    5920:	1800411e 	bne	r3,zero,5a28 <__smakebuf_r+0x110>
    5924:	deffec04 	addi	sp,sp,-80
    5928:	dc000f15 	stw	r16,60(sp)
    592c:	2821883a 	mov	r16,r5
    5930:	2940038f 	ldh	r5,14(r5)
    5934:	dc401015 	stw	r17,64(sp)
    5938:	dfc01315 	stw	ra,76(sp)
    593c:	dcc01215 	stw	r19,72(sp)
    5940:	dc801115 	stw	r18,68(sp)
    5944:	2023883a 	mov	r17,r4
    5948:	28001c16 	blt	r5,zero,59bc <__smakebuf_r+0xa4>
    594c:	d80d883a 	mov	r6,sp
    5950:	0009a9c0 	call	9a9c <_fstat_r>
    5954:	10001816 	blt	r2,zero,59b8 <__smakebuf_r+0xa0>
    5958:	d8800117 	ldw	r2,4(sp)
    595c:	00e00014 	movui	r3,32768
    5960:	10bc000c 	andi	r2,r2,61440
    5964:	14c80020 	cmpeqi	r19,r2,8192
    5968:	10c03726 	beq	r2,r3,5a48 <__smakebuf_r+0x130>
    596c:	80c0030b 	ldhu	r3,12(r16)
    5970:	18c20014 	ori	r3,r3,2048
    5974:	80c0030d 	sth	r3,12(r16)
    5978:	00c80004 	movi	r3,8192
    597c:	10c0521e 	bne	r2,r3,5ac8 <__smakebuf_r+0x1b0>
    5980:	8140038f 	ldh	r5,14(r16)
    5984:	8809883a 	mov	r4,r17
    5988:	0009af80 	call	9af8 <_isatty_r>
    598c:	10004c26 	beq	r2,zero,5ac0 <__smakebuf_r+0x1a8>
    5990:	8080030b 	ldhu	r2,12(r16)
    5994:	80c010c4 	addi	r3,r16,67
    5998:	80c00015 	stw	r3,0(r16)
    599c:	10800054 	ori	r2,r2,1
    59a0:	8080030d 	sth	r2,12(r16)
    59a4:	00800044 	movi	r2,1
    59a8:	80c00415 	stw	r3,16(r16)
    59ac:	80800515 	stw	r2,20(r16)
    59b0:	04810004 	movi	r18,1024
    59b4:	00000706 	br	59d4 <__smakebuf_r+0xbc>
    59b8:	8080030b 	ldhu	r2,12(r16)
    59bc:	10c0200c 	andi	r3,r2,128
    59c0:	18001f1e 	bne	r3,zero,5a40 <__smakebuf_r+0x128>
    59c4:	04810004 	movi	r18,1024
    59c8:	10820014 	ori	r2,r2,2048
    59cc:	8080030d 	sth	r2,12(r16)
    59d0:	0027883a 	mov	r19,zero
    59d4:	900b883a 	mov	r5,r18
    59d8:	8809883a 	mov	r4,r17
    59dc:	0005ad40 	call	5ad4 <_malloc_r>
    59e0:	10002c26 	beq	r2,zero,5a94 <__smakebuf_r+0x17c>
    59e4:	80c0030b 	ldhu	r3,12(r16)
    59e8:	01000034 	movhi	r4,0
    59ec:	21128b04 	addi	r4,r4,18988
    59f0:	89000f15 	stw	r4,60(r17)
    59f4:	18c02014 	ori	r3,r3,128
    59f8:	80c0030d 	sth	r3,12(r16)
    59fc:	80800015 	stw	r2,0(r16)
    5a00:	80800415 	stw	r2,16(r16)
    5a04:	84800515 	stw	r18,20(r16)
    5a08:	98001a1e 	bne	r19,zero,5a74 <__smakebuf_r+0x15c>
    5a0c:	dfc01317 	ldw	ra,76(sp)
    5a10:	dcc01217 	ldw	r19,72(sp)
    5a14:	dc801117 	ldw	r18,68(sp)
    5a18:	dc401017 	ldw	r17,64(sp)
    5a1c:	dc000f17 	ldw	r16,60(sp)
    5a20:	dec01404 	addi	sp,sp,80
    5a24:	f800283a 	ret
    5a28:	288010c4 	addi	r2,r5,67
    5a2c:	28800015 	stw	r2,0(r5)
    5a30:	28800415 	stw	r2,16(r5)
    5a34:	00800044 	movi	r2,1
    5a38:	28800515 	stw	r2,20(r5)
    5a3c:	f800283a 	ret
    5a40:	04801004 	movi	r18,64
    5a44:	003fe006 	br	59c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00059c8>
    5a48:	81000a17 	ldw	r4,40(r16)
    5a4c:	00c00034 	movhi	r3,0
    5a50:	18dfa404 	addi	r3,r3,32400
    5a54:	20ffc51e 	bne	r4,r3,596c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000596c>
    5a58:	8080030b 	ldhu	r2,12(r16)
    5a5c:	04810004 	movi	r18,1024
    5a60:	84801315 	stw	r18,76(r16)
    5a64:	1484b03a 	or	r2,r2,r18
    5a68:	8080030d 	sth	r2,12(r16)
    5a6c:	0027883a 	mov	r19,zero
    5a70:	003fd806 	br	59d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00059d4>
    5a74:	8140038f 	ldh	r5,14(r16)
    5a78:	8809883a 	mov	r4,r17
    5a7c:	0009af80 	call	9af8 <_isatty_r>
    5a80:	103fe226 	beq	r2,zero,5a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a0c>
    5a84:	8080030b 	ldhu	r2,12(r16)
    5a88:	10800054 	ori	r2,r2,1
    5a8c:	8080030d 	sth	r2,12(r16)
    5a90:	003fde06 	br	5a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a0c>
    5a94:	8080030b 	ldhu	r2,12(r16)
    5a98:	10c0800c 	andi	r3,r2,512
    5a9c:	183fdb1e 	bne	r3,zero,5a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a0c>
    5aa0:	10800094 	ori	r2,r2,2
    5aa4:	80c010c4 	addi	r3,r16,67
    5aa8:	8080030d 	sth	r2,12(r16)
    5aac:	00800044 	movi	r2,1
    5ab0:	80c00015 	stw	r3,0(r16)
    5ab4:	80c00415 	stw	r3,16(r16)
    5ab8:	80800515 	stw	r2,20(r16)
    5abc:	003fd306 	br	5a0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005a0c>
    5ac0:	04810004 	movi	r18,1024
    5ac4:	003fc306 	br	59d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00059d4>
    5ac8:	0027883a 	mov	r19,zero
    5acc:	04810004 	movi	r18,1024
    5ad0:	003fc006 	br	59d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00059d4>

00005ad4 <_malloc_r>:
    5ad4:	defff504 	addi	sp,sp,-44
    5ad8:	dc800315 	stw	r18,12(sp)
    5adc:	dfc00a15 	stw	ra,40(sp)
    5ae0:	df000915 	stw	fp,36(sp)
    5ae4:	ddc00815 	stw	r23,32(sp)
    5ae8:	dd800715 	stw	r22,28(sp)
    5aec:	dd400615 	stw	r21,24(sp)
    5af0:	dd000515 	stw	r20,20(sp)
    5af4:	dcc00415 	stw	r19,16(sp)
    5af8:	dc400215 	stw	r17,8(sp)
    5afc:	dc000115 	stw	r16,4(sp)
    5b00:	288002c4 	addi	r2,r5,11
    5b04:	00c00584 	movi	r3,22
    5b08:	2025883a 	mov	r18,r4
    5b0c:	18807f2e 	bgeu	r3,r2,5d0c <_malloc_r+0x238>
    5b10:	047ffe04 	movi	r17,-8
    5b14:	1462703a 	and	r17,r2,r17
    5b18:	8800a316 	blt	r17,zero,5da8 <_malloc_r+0x2d4>
    5b1c:	8940a236 	bltu	r17,r5,5da8 <_malloc_r+0x2d4>
    5b20:	000d7940 	call	d794 <__malloc_lock>
    5b24:	00807dc4 	movi	r2,503
    5b28:	1441e92e 	bgeu	r2,r17,62d0 <_malloc_r+0x7fc>
    5b2c:	8804d27a 	srli	r2,r17,9
    5b30:	1000a126 	beq	r2,zero,5db8 <_malloc_r+0x2e4>
    5b34:	00c00104 	movi	r3,4
    5b38:	18811e36 	bltu	r3,r2,5fb4 <_malloc_r+0x4e0>
    5b3c:	8804d1ba 	srli	r2,r17,6
    5b40:	12000e44 	addi	r8,r2,57
    5b44:	11c00e04 	addi	r7,r2,56
    5b48:	4209883a 	add	r4,r8,r8
    5b4c:	04c00074 	movhi	r19,1
    5b50:	2109883a 	add	r4,r4,r4
    5b54:	9cc4a604 	addi	r19,r19,4760
    5b58:	2109883a 	add	r4,r4,r4
    5b5c:	9909883a 	add	r4,r19,r4
    5b60:	24000117 	ldw	r16,4(r4)
    5b64:	213ffe04 	addi	r4,r4,-8
    5b68:	24009726 	beq	r4,r16,5dc8 <_malloc_r+0x2f4>
    5b6c:	80800117 	ldw	r2,4(r16)
    5b70:	01bfff04 	movi	r6,-4
    5b74:	014003c4 	movi	r5,15
    5b78:	1184703a 	and	r2,r2,r6
    5b7c:	1447c83a 	sub	r3,r2,r17
    5b80:	28c00716 	blt	r5,r3,5ba0 <_malloc_r+0xcc>
    5b84:	1800920e 	bge	r3,zero,5dd0 <_malloc_r+0x2fc>
    5b88:	84000317 	ldw	r16,12(r16)
    5b8c:	24008e26 	beq	r4,r16,5dc8 <_malloc_r+0x2f4>
    5b90:	80800117 	ldw	r2,4(r16)
    5b94:	1184703a 	and	r2,r2,r6
    5b98:	1447c83a 	sub	r3,r2,r17
    5b9c:	28fff90e 	bge	r5,r3,5b84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b84>
    5ba0:	3809883a 	mov	r4,r7
    5ba4:	01800074 	movhi	r6,1
    5ba8:	9c000417 	ldw	r16,16(r19)
    5bac:	3184a604 	addi	r6,r6,4760
    5bb0:	32000204 	addi	r8,r6,8
    5bb4:	82013426 	beq	r16,r8,6088 <_malloc_r+0x5b4>
    5bb8:	80c00117 	ldw	r3,4(r16)
    5bbc:	00bfff04 	movi	r2,-4
    5bc0:	188e703a 	and	r7,r3,r2
    5bc4:	3c45c83a 	sub	r2,r7,r17
    5bc8:	00c003c4 	movi	r3,15
    5bcc:	18811f16 	blt	r3,r2,604c <_malloc_r+0x578>
    5bd0:	32000515 	stw	r8,20(r6)
    5bd4:	32000415 	stw	r8,16(r6)
    5bd8:	10007f0e 	bge	r2,zero,5dd8 <_malloc_r+0x304>
    5bdc:	00807fc4 	movi	r2,511
    5be0:	11c0fd36 	bltu	r2,r7,5fd8 <_malloc_r+0x504>
    5be4:	3806d0fa 	srli	r3,r7,3
    5be8:	01c00044 	movi	r7,1
    5bec:	30800117 	ldw	r2,4(r6)
    5bf0:	19400044 	addi	r5,r3,1
    5bf4:	294b883a 	add	r5,r5,r5
    5bf8:	1807d0ba 	srai	r3,r3,2
    5bfc:	294b883a 	add	r5,r5,r5
    5c00:	294b883a 	add	r5,r5,r5
    5c04:	298b883a 	add	r5,r5,r6
    5c08:	38c6983a 	sll	r3,r7,r3
    5c0c:	29c00017 	ldw	r7,0(r5)
    5c10:	2a7ffe04 	addi	r9,r5,-8
    5c14:	1886b03a 	or	r3,r3,r2
    5c18:	82400315 	stw	r9,12(r16)
    5c1c:	81c00215 	stw	r7,8(r16)
    5c20:	30c00115 	stw	r3,4(r6)
    5c24:	2c000015 	stw	r16,0(r5)
    5c28:	3c000315 	stw	r16,12(r7)
    5c2c:	2005d0ba 	srai	r2,r4,2
    5c30:	01400044 	movi	r5,1
    5c34:	288a983a 	sll	r5,r5,r2
    5c38:	19406f36 	bltu	r3,r5,5df8 <_malloc_r+0x324>
    5c3c:	28c4703a 	and	r2,r5,r3
    5c40:	10000a1e 	bne	r2,zero,5c6c <_malloc_r+0x198>
    5c44:	00bfff04 	movi	r2,-4
    5c48:	294b883a 	add	r5,r5,r5
    5c4c:	2088703a 	and	r4,r4,r2
    5c50:	28c4703a 	and	r2,r5,r3
    5c54:	21000104 	addi	r4,r4,4
    5c58:	1000041e 	bne	r2,zero,5c6c <_malloc_r+0x198>
    5c5c:	294b883a 	add	r5,r5,r5
    5c60:	28c4703a 	and	r2,r5,r3
    5c64:	21000104 	addi	r4,r4,4
    5c68:	103ffc26 	beq	r2,zero,5c5c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c5c>
    5c6c:	02bfff04 	movi	r10,-4
    5c70:	024003c4 	movi	r9,15
    5c74:	21800044 	addi	r6,r4,1
    5c78:	318d883a 	add	r6,r6,r6
    5c7c:	318d883a 	add	r6,r6,r6
    5c80:	318d883a 	add	r6,r6,r6
    5c84:	998d883a 	add	r6,r19,r6
    5c88:	333ffe04 	addi	r12,r6,-8
    5c8c:	2017883a 	mov	r11,r4
    5c90:	31800104 	addi	r6,r6,4
    5c94:	34000017 	ldw	r16,0(r6)
    5c98:	31fffd04 	addi	r7,r6,-12
    5c9c:	81c0041e 	bne	r16,r7,5cb0 <_malloc_r+0x1dc>
    5ca0:	0000fb06 	br	6090 <_malloc_r+0x5bc>
    5ca4:	1801030e 	bge	r3,zero,60b4 <_malloc_r+0x5e0>
    5ca8:	84000317 	ldw	r16,12(r16)
    5cac:	81c0f826 	beq	r16,r7,6090 <_malloc_r+0x5bc>
    5cb0:	80800117 	ldw	r2,4(r16)
    5cb4:	1284703a 	and	r2,r2,r10
    5cb8:	1447c83a 	sub	r3,r2,r17
    5cbc:	48fff90e 	bge	r9,r3,5ca4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ca4>
    5cc0:	80800317 	ldw	r2,12(r16)
    5cc4:	81000217 	ldw	r4,8(r16)
    5cc8:	89400054 	ori	r5,r17,1
    5ccc:	81400115 	stw	r5,4(r16)
    5cd0:	20800315 	stw	r2,12(r4)
    5cd4:	11000215 	stw	r4,8(r2)
    5cd8:	8463883a 	add	r17,r16,r17
    5cdc:	9c400515 	stw	r17,20(r19)
    5ce0:	9c400415 	stw	r17,16(r19)
    5ce4:	18800054 	ori	r2,r3,1
    5ce8:	88800115 	stw	r2,4(r17)
    5cec:	8a000315 	stw	r8,12(r17)
    5cf0:	8a000215 	stw	r8,8(r17)
    5cf4:	88e3883a 	add	r17,r17,r3
    5cf8:	88c00015 	stw	r3,0(r17)
    5cfc:	9009883a 	mov	r4,r18
    5d00:	000d7b80 	call	d7b8 <__malloc_unlock>
    5d04:	80800204 	addi	r2,r16,8
    5d08:	00001b06 	br	5d78 <_malloc_r+0x2a4>
    5d0c:	04400404 	movi	r17,16
    5d10:	89402536 	bltu	r17,r5,5da8 <_malloc_r+0x2d4>
    5d14:	000d7940 	call	d794 <__malloc_lock>
    5d18:	00800184 	movi	r2,6
    5d1c:	01000084 	movi	r4,2
    5d20:	04c00074 	movhi	r19,1
    5d24:	1085883a 	add	r2,r2,r2
    5d28:	9cc4a604 	addi	r19,r19,4760
    5d2c:	1085883a 	add	r2,r2,r2
    5d30:	9885883a 	add	r2,r19,r2
    5d34:	14000117 	ldw	r16,4(r2)
    5d38:	10fffe04 	addi	r3,r2,-8
    5d3c:	80c0d926 	beq	r16,r3,60a4 <_malloc_r+0x5d0>
    5d40:	80c00117 	ldw	r3,4(r16)
    5d44:	81000317 	ldw	r4,12(r16)
    5d48:	00bfff04 	movi	r2,-4
    5d4c:	1884703a 	and	r2,r3,r2
    5d50:	81400217 	ldw	r5,8(r16)
    5d54:	8085883a 	add	r2,r16,r2
    5d58:	10c00117 	ldw	r3,4(r2)
    5d5c:	29000315 	stw	r4,12(r5)
    5d60:	21400215 	stw	r5,8(r4)
    5d64:	18c00054 	ori	r3,r3,1
    5d68:	10c00115 	stw	r3,4(r2)
    5d6c:	9009883a 	mov	r4,r18
    5d70:	000d7b80 	call	d7b8 <__malloc_unlock>
    5d74:	80800204 	addi	r2,r16,8
    5d78:	dfc00a17 	ldw	ra,40(sp)
    5d7c:	df000917 	ldw	fp,36(sp)
    5d80:	ddc00817 	ldw	r23,32(sp)
    5d84:	dd800717 	ldw	r22,28(sp)
    5d88:	dd400617 	ldw	r21,24(sp)
    5d8c:	dd000517 	ldw	r20,20(sp)
    5d90:	dcc00417 	ldw	r19,16(sp)
    5d94:	dc800317 	ldw	r18,12(sp)
    5d98:	dc400217 	ldw	r17,8(sp)
    5d9c:	dc000117 	ldw	r16,4(sp)
    5da0:	dec00b04 	addi	sp,sp,44
    5da4:	f800283a 	ret
    5da8:	00800304 	movi	r2,12
    5dac:	90800015 	stw	r2,0(r18)
    5db0:	0005883a 	mov	r2,zero
    5db4:	003ff006 	br	5d78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d78>
    5db8:	01002004 	movi	r4,128
    5dbc:	02001004 	movi	r8,64
    5dc0:	01c00fc4 	movi	r7,63
    5dc4:	003f6106 	br	5b4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b4c>
    5dc8:	4009883a 	mov	r4,r8
    5dcc:	003f7506 	br	5ba4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ba4>
    5dd0:	81000317 	ldw	r4,12(r16)
    5dd4:	003fde06 	br	5d50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d50>
    5dd8:	81c5883a 	add	r2,r16,r7
    5ddc:	11400117 	ldw	r5,4(r2)
    5de0:	9009883a 	mov	r4,r18
    5de4:	29400054 	ori	r5,r5,1
    5de8:	11400115 	stw	r5,4(r2)
    5dec:	000d7b80 	call	d7b8 <__malloc_unlock>
    5df0:	80800204 	addi	r2,r16,8
    5df4:	003fe006 	br	5d78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d78>
    5df8:	9c000217 	ldw	r16,8(r19)
    5dfc:	00bfff04 	movi	r2,-4
    5e00:	85800117 	ldw	r22,4(r16)
    5e04:	b0ac703a 	and	r22,r22,r2
    5e08:	b4400336 	bltu	r22,r17,5e18 <_malloc_r+0x344>
    5e0c:	b445c83a 	sub	r2,r22,r17
    5e10:	00c003c4 	movi	r3,15
    5e14:	18805d16 	blt	r3,r2,5f8c <_malloc_r+0x4b8>
    5e18:	05c00074 	movhi	r23,1
    5e1c:	00800074 	movhi	r2,1
    5e20:	10921404 	addi	r2,r2,18512
    5e24:	bdcaba04 	addi	r23,r23,10984
    5e28:	15400017 	ldw	r21,0(r2)
    5e2c:	b8c00017 	ldw	r3,0(r23)
    5e30:	00bfffc4 	movi	r2,-1
    5e34:	858d883a 	add	r6,r16,r22
    5e38:	8d6b883a 	add	r21,r17,r21
    5e3c:	1880ea26 	beq	r3,r2,61e8 <_malloc_r+0x714>
    5e40:	ad4403c4 	addi	r21,r21,4111
    5e44:	00bc0004 	movi	r2,-4096
    5e48:	a8aa703a 	and	r21,r21,r2
    5e4c:	a80b883a 	mov	r5,r21
    5e50:	9009883a 	mov	r4,r18
    5e54:	d9800015 	stw	r6,0(sp)
    5e58:	0007d640 	call	7d64 <_sbrk_r>
    5e5c:	1029883a 	mov	r20,r2
    5e60:	00bfffc4 	movi	r2,-1
    5e64:	d9800017 	ldw	r6,0(sp)
    5e68:	a080e826 	beq	r20,r2,620c <_malloc_r+0x738>
    5e6c:	a180a636 	bltu	r20,r6,6108 <_malloc_r+0x634>
    5e70:	07000074 	movhi	fp,1
    5e74:	e7121d04 	addi	fp,fp,18548
    5e78:	e0800017 	ldw	r2,0(fp)
    5e7c:	a887883a 	add	r3,r21,r2
    5e80:	e0c00015 	stw	r3,0(fp)
    5e84:	3500e626 	beq	r6,r20,6220 <_malloc_r+0x74c>
    5e88:	b9000017 	ldw	r4,0(r23)
    5e8c:	00bfffc4 	movi	r2,-1
    5e90:	2080ee26 	beq	r4,r2,624c <_malloc_r+0x778>
    5e94:	a185c83a 	sub	r2,r20,r6
    5e98:	10c5883a 	add	r2,r2,r3
    5e9c:	e0800015 	stw	r2,0(fp)
    5ea0:	a0c001cc 	andi	r3,r20,7
    5ea4:	1800bc26 	beq	r3,zero,6198 <_malloc_r+0x6c4>
    5ea8:	a0e9c83a 	sub	r20,r20,r3
    5eac:	00840204 	movi	r2,4104
    5eb0:	a5000204 	addi	r20,r20,8
    5eb4:	10c7c83a 	sub	r3,r2,r3
    5eb8:	a545883a 	add	r2,r20,r21
    5ebc:	1083ffcc 	andi	r2,r2,4095
    5ec0:	18abc83a 	sub	r21,r3,r2
    5ec4:	a80b883a 	mov	r5,r21
    5ec8:	9009883a 	mov	r4,r18
    5ecc:	0007d640 	call	7d64 <_sbrk_r>
    5ed0:	00ffffc4 	movi	r3,-1
    5ed4:	10c0e126 	beq	r2,r3,625c <_malloc_r+0x788>
    5ed8:	1505c83a 	sub	r2,r2,r20
    5edc:	1545883a 	add	r2,r2,r21
    5ee0:	10800054 	ori	r2,r2,1
    5ee4:	e0c00017 	ldw	r3,0(fp)
    5ee8:	9d000215 	stw	r20,8(r19)
    5eec:	a0800115 	stw	r2,4(r20)
    5ef0:	a8c7883a 	add	r3,r21,r3
    5ef4:	e0c00015 	stw	r3,0(fp)
    5ef8:	84c00e26 	beq	r16,r19,5f34 <_malloc_r+0x460>
    5efc:	018003c4 	movi	r6,15
    5f00:	3580a72e 	bgeu	r6,r22,61a0 <_malloc_r+0x6cc>
    5f04:	81400117 	ldw	r5,4(r16)
    5f08:	013ffe04 	movi	r4,-8
    5f0c:	b0bffd04 	addi	r2,r22,-12
    5f10:	1104703a 	and	r2,r2,r4
    5f14:	2900004c 	andi	r4,r5,1
    5f18:	2088b03a 	or	r4,r4,r2
    5f1c:	81000115 	stw	r4,4(r16)
    5f20:	01400144 	movi	r5,5
    5f24:	8089883a 	add	r4,r16,r2
    5f28:	21400115 	stw	r5,4(r4)
    5f2c:	21400215 	stw	r5,8(r4)
    5f30:	3080cd36 	bltu	r6,r2,6268 <_malloc_r+0x794>
    5f34:	00800074 	movhi	r2,1
    5f38:	10921304 	addi	r2,r2,18508
    5f3c:	11000017 	ldw	r4,0(r2)
    5f40:	20c0012e 	bgeu	r4,r3,5f48 <_malloc_r+0x474>
    5f44:	10c00015 	stw	r3,0(r2)
    5f48:	00800074 	movhi	r2,1
    5f4c:	10921204 	addi	r2,r2,18504
    5f50:	11000017 	ldw	r4,0(r2)
    5f54:	9c000217 	ldw	r16,8(r19)
    5f58:	20c0012e 	bgeu	r4,r3,5f60 <_malloc_r+0x48c>
    5f5c:	10c00015 	stw	r3,0(r2)
    5f60:	80c00117 	ldw	r3,4(r16)
    5f64:	00bfff04 	movi	r2,-4
    5f68:	1886703a 	and	r3,r3,r2
    5f6c:	1c45c83a 	sub	r2,r3,r17
    5f70:	1c400236 	bltu	r3,r17,5f7c <_malloc_r+0x4a8>
    5f74:	00c003c4 	movi	r3,15
    5f78:	18800416 	blt	r3,r2,5f8c <_malloc_r+0x4b8>
    5f7c:	9009883a 	mov	r4,r18
    5f80:	000d7b80 	call	d7b8 <__malloc_unlock>
    5f84:	0005883a 	mov	r2,zero
    5f88:	003f7b06 	br	5d78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d78>
    5f8c:	88c00054 	ori	r3,r17,1
    5f90:	80c00115 	stw	r3,4(r16)
    5f94:	8463883a 	add	r17,r16,r17
    5f98:	10800054 	ori	r2,r2,1
    5f9c:	9c400215 	stw	r17,8(r19)
    5fa0:	88800115 	stw	r2,4(r17)
    5fa4:	9009883a 	mov	r4,r18
    5fa8:	000d7b80 	call	d7b8 <__malloc_unlock>
    5fac:	80800204 	addi	r2,r16,8
    5fb0:	003f7106 	br	5d78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d78>
    5fb4:	00c00504 	movi	r3,20
    5fb8:	18804a2e 	bgeu	r3,r2,60e4 <_malloc_r+0x610>
    5fbc:	00c01504 	movi	r3,84
    5fc0:	18806e36 	bltu	r3,r2,617c <_malloc_r+0x6a8>
    5fc4:	8804d33a 	srli	r2,r17,12
    5fc8:	12001bc4 	addi	r8,r2,111
    5fcc:	11c01b84 	addi	r7,r2,110
    5fd0:	4209883a 	add	r4,r8,r8
    5fd4:	003edd06 	br	5b4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b4c>
    5fd8:	3804d27a 	srli	r2,r7,9
    5fdc:	00c00104 	movi	r3,4
    5fe0:	1880442e 	bgeu	r3,r2,60f4 <_malloc_r+0x620>
    5fe4:	00c00504 	movi	r3,20
    5fe8:	18808136 	bltu	r3,r2,61f0 <_malloc_r+0x71c>
    5fec:	11401704 	addi	r5,r2,92
    5ff0:	10c016c4 	addi	r3,r2,91
    5ff4:	294b883a 	add	r5,r5,r5
    5ff8:	294b883a 	add	r5,r5,r5
    5ffc:	294b883a 	add	r5,r5,r5
    6000:	994b883a 	add	r5,r19,r5
    6004:	28800017 	ldw	r2,0(r5)
    6008:	01800074 	movhi	r6,1
    600c:	297ffe04 	addi	r5,r5,-8
    6010:	3184a604 	addi	r6,r6,4760
    6014:	28806526 	beq	r5,r2,61ac <_malloc_r+0x6d8>
    6018:	01bfff04 	movi	r6,-4
    601c:	10c00117 	ldw	r3,4(r2)
    6020:	1986703a 	and	r3,r3,r6
    6024:	38c0022e 	bgeu	r7,r3,6030 <_malloc_r+0x55c>
    6028:	10800217 	ldw	r2,8(r2)
    602c:	28bffb1e 	bne	r5,r2,601c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000601c>
    6030:	11400317 	ldw	r5,12(r2)
    6034:	98c00117 	ldw	r3,4(r19)
    6038:	81400315 	stw	r5,12(r16)
    603c:	80800215 	stw	r2,8(r16)
    6040:	2c000215 	stw	r16,8(r5)
    6044:	14000315 	stw	r16,12(r2)
    6048:	003ef806 	br	5c2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c2c>
    604c:	88c00054 	ori	r3,r17,1
    6050:	80c00115 	stw	r3,4(r16)
    6054:	8463883a 	add	r17,r16,r17
    6058:	34400515 	stw	r17,20(r6)
    605c:	34400415 	stw	r17,16(r6)
    6060:	10c00054 	ori	r3,r2,1
    6064:	8a000315 	stw	r8,12(r17)
    6068:	8a000215 	stw	r8,8(r17)
    606c:	88c00115 	stw	r3,4(r17)
    6070:	88a3883a 	add	r17,r17,r2
    6074:	88800015 	stw	r2,0(r17)
    6078:	9009883a 	mov	r4,r18
    607c:	000d7b80 	call	d7b8 <__malloc_unlock>
    6080:	80800204 	addi	r2,r16,8
    6084:	003f3c06 	br	5d78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d78>
    6088:	30c00117 	ldw	r3,4(r6)
    608c:	003ee706 	br	5c2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c2c>
    6090:	5ac00044 	addi	r11,r11,1
    6094:	588000cc 	andi	r2,r11,3
    6098:	31800204 	addi	r6,r6,8
    609c:	103efd1e 	bne	r2,zero,5c94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c94>
    60a0:	00002406 	br	6134 <_malloc_r+0x660>
    60a4:	14000317 	ldw	r16,12(r2)
    60a8:	143f251e 	bne	r2,r16,5d40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d40>
    60ac:	21000084 	addi	r4,r4,2
    60b0:	003ebc06 	br	5ba4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ba4>
    60b4:	8085883a 	add	r2,r16,r2
    60b8:	10c00117 	ldw	r3,4(r2)
    60bc:	81000317 	ldw	r4,12(r16)
    60c0:	81400217 	ldw	r5,8(r16)
    60c4:	18c00054 	ori	r3,r3,1
    60c8:	10c00115 	stw	r3,4(r2)
    60cc:	29000315 	stw	r4,12(r5)
    60d0:	21400215 	stw	r5,8(r4)
    60d4:	9009883a 	mov	r4,r18
    60d8:	000d7b80 	call	d7b8 <__malloc_unlock>
    60dc:	80800204 	addi	r2,r16,8
    60e0:	003f2506 	br	5d78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d78>
    60e4:	12001704 	addi	r8,r2,92
    60e8:	11c016c4 	addi	r7,r2,91
    60ec:	4209883a 	add	r4,r8,r8
    60f0:	003e9606 	br	5b4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b4c>
    60f4:	3804d1ba 	srli	r2,r7,6
    60f8:	11400e44 	addi	r5,r2,57
    60fc:	10c00e04 	addi	r3,r2,56
    6100:	294b883a 	add	r5,r5,r5
    6104:	003fbc06 	br	5ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ff8>
    6108:	84ff5926 	beq	r16,r19,5e70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005e70>
    610c:	00800074 	movhi	r2,1
    6110:	1084a604 	addi	r2,r2,4760
    6114:	14000217 	ldw	r16,8(r2)
    6118:	00bfff04 	movi	r2,-4
    611c:	80c00117 	ldw	r3,4(r16)
    6120:	1886703a 	and	r3,r3,r2
    6124:	003f9106 	br	5f6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005f6c>
    6128:	60800217 	ldw	r2,8(r12)
    612c:	213fffc4 	addi	r4,r4,-1
    6130:	1300651e 	bne	r2,r12,62c8 <_malloc_r+0x7f4>
    6134:	208000cc 	andi	r2,r4,3
    6138:	633ffe04 	addi	r12,r12,-8
    613c:	103ffa1e 	bne	r2,zero,6128 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006128>
    6140:	98800117 	ldw	r2,4(r19)
    6144:	0146303a 	nor	r3,zero,r5
    6148:	1884703a 	and	r2,r3,r2
    614c:	98800115 	stw	r2,4(r19)
    6150:	294b883a 	add	r5,r5,r5
    6154:	117f2836 	bltu	r2,r5,5df8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005df8>
    6158:	283f2726 	beq	r5,zero,5df8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005df8>
    615c:	2886703a 	and	r3,r5,r2
    6160:	5809883a 	mov	r4,r11
    6164:	183ec31e 	bne	r3,zero,5c74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c74>
    6168:	294b883a 	add	r5,r5,r5
    616c:	2886703a 	and	r3,r5,r2
    6170:	21000104 	addi	r4,r4,4
    6174:	183ffc26 	beq	r3,zero,6168 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006168>
    6178:	003ebe06 	br	5c74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005c74>
    617c:	00c05504 	movi	r3,340
    6180:	18801236 	bltu	r3,r2,61cc <_malloc_r+0x6f8>
    6184:	8804d3fa 	srli	r2,r17,15
    6188:	12001e04 	addi	r8,r2,120
    618c:	11c01dc4 	addi	r7,r2,119
    6190:	4209883a 	add	r4,r8,r8
    6194:	003e6d06 	br	5b4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b4c>
    6198:	00c40004 	movi	r3,4096
    619c:	003f4606 	br	5eb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005eb8>
    61a0:	00800044 	movi	r2,1
    61a4:	a0800115 	stw	r2,4(r20)
    61a8:	003f7406 	br	5f7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005f7c>
    61ac:	1805d0ba 	srai	r2,r3,2
    61b0:	01c00044 	movi	r7,1
    61b4:	30c00117 	ldw	r3,4(r6)
    61b8:	388e983a 	sll	r7,r7,r2
    61bc:	2805883a 	mov	r2,r5
    61c0:	38c6b03a 	or	r3,r7,r3
    61c4:	30c00115 	stw	r3,4(r6)
    61c8:	003f9b06 	br	6038 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006038>
    61cc:	00c15504 	movi	r3,1364
    61d0:	18801a36 	bltu	r3,r2,623c <_malloc_r+0x768>
    61d4:	8804d4ba 	srli	r2,r17,18
    61d8:	12001f44 	addi	r8,r2,125
    61dc:	11c01f04 	addi	r7,r2,124
    61e0:	4209883a 	add	r4,r8,r8
    61e4:	003e5906 	br	5b4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b4c>
    61e8:	ad400404 	addi	r21,r21,16
    61ec:	003f1706 	br	5e4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005e4c>
    61f0:	00c01504 	movi	r3,84
    61f4:	18802336 	bltu	r3,r2,6284 <_malloc_r+0x7b0>
    61f8:	3804d33a 	srli	r2,r7,12
    61fc:	11401bc4 	addi	r5,r2,111
    6200:	10c01b84 	addi	r3,r2,110
    6204:	294b883a 	add	r5,r5,r5
    6208:	003f7b06 	br	5ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ff8>
    620c:	9c000217 	ldw	r16,8(r19)
    6210:	00bfff04 	movi	r2,-4
    6214:	80c00117 	ldw	r3,4(r16)
    6218:	1886703a 	and	r3,r3,r2
    621c:	003f5306 	br	5f6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005f6c>
    6220:	3083ffcc 	andi	r2,r6,4095
    6224:	103f181e 	bne	r2,zero,5e88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005e88>
    6228:	99000217 	ldw	r4,8(r19)
    622c:	b545883a 	add	r2,r22,r21
    6230:	10800054 	ori	r2,r2,1
    6234:	20800115 	stw	r2,4(r4)
    6238:	003f3e06 	br	5f34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005f34>
    623c:	01003f84 	movi	r4,254
    6240:	02001fc4 	movi	r8,127
    6244:	01c01f84 	movi	r7,126
    6248:	003e4006 	br	5b4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005b4c>
    624c:	00800074 	movhi	r2,1
    6250:	108aba04 	addi	r2,r2,10984
    6254:	15000015 	stw	r20,0(r2)
    6258:	003f1106 	br	5ea0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ea0>
    625c:	00800044 	movi	r2,1
    6260:	002b883a 	mov	r21,zero
    6264:	003f1f06 	br	5ee4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ee4>
    6268:	81400204 	addi	r5,r16,8
    626c:	9009883a 	mov	r4,r18
    6270:	0004ee80 	call	4ee8 <_free_r>
    6274:	00800074 	movhi	r2,1
    6278:	10921d04 	addi	r2,r2,18548
    627c:	10c00017 	ldw	r3,0(r2)
    6280:	003f2c06 	br	5f34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005f34>
    6284:	00c05504 	movi	r3,340
    6288:	18800536 	bltu	r3,r2,62a0 <_malloc_r+0x7cc>
    628c:	3804d3fa 	srli	r2,r7,15
    6290:	11401e04 	addi	r5,r2,120
    6294:	10c01dc4 	addi	r3,r2,119
    6298:	294b883a 	add	r5,r5,r5
    629c:	003f5606 	br	5ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ff8>
    62a0:	00c15504 	movi	r3,1364
    62a4:	18800536 	bltu	r3,r2,62bc <_malloc_r+0x7e8>
    62a8:	3804d4ba 	srli	r2,r7,18
    62ac:	11401f44 	addi	r5,r2,125
    62b0:	10c01f04 	addi	r3,r2,124
    62b4:	294b883a 	add	r5,r5,r5
    62b8:	003f4f06 	br	5ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ff8>
    62bc:	01403f84 	movi	r5,254
    62c0:	00c01f84 	movi	r3,126
    62c4:	003f4c06 	br	5ff8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005ff8>
    62c8:	98800117 	ldw	r2,4(r19)
    62cc:	003fa006 	br	6150 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006150>
    62d0:	8808d0fa 	srli	r4,r17,3
    62d4:	20800044 	addi	r2,r4,1
    62d8:	1085883a 	add	r2,r2,r2
    62dc:	003e9006 	br	5d20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0005d20>

000062e0 <memchr>:
    62e0:	208000cc 	andi	r2,r4,3
    62e4:	280f883a 	mov	r7,r5
    62e8:	10003426 	beq	r2,zero,63bc <memchr+0xdc>
    62ec:	30bfffc4 	addi	r2,r6,-1
    62f0:	30001a26 	beq	r6,zero,635c <memchr+0x7c>
    62f4:	20c00003 	ldbu	r3,0(r4)
    62f8:	29803fcc 	andi	r6,r5,255
    62fc:	30c0051e 	bne	r6,r3,6314 <memchr+0x34>
    6300:	00001806 	br	6364 <memchr+0x84>
    6304:	10001526 	beq	r2,zero,635c <memchr+0x7c>
    6308:	20c00003 	ldbu	r3,0(r4)
    630c:	10bfffc4 	addi	r2,r2,-1
    6310:	30c01426 	beq	r6,r3,6364 <memchr+0x84>
    6314:	21000044 	addi	r4,r4,1
    6318:	20c000cc 	andi	r3,r4,3
    631c:	183ff91e 	bne	r3,zero,6304 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006304>
    6320:	020000c4 	movi	r8,3
    6324:	40801136 	bltu	r8,r2,636c <memchr+0x8c>
    6328:	10000c26 	beq	r2,zero,635c <memchr+0x7c>
    632c:	20c00003 	ldbu	r3,0(r4)
    6330:	29403fcc 	andi	r5,r5,255
    6334:	28c00b26 	beq	r5,r3,6364 <memchr+0x84>
    6338:	20c00044 	addi	r3,r4,1
    633c:	39803fcc 	andi	r6,r7,255
    6340:	2089883a 	add	r4,r4,r2
    6344:	00000306 	br	6354 <memchr+0x74>
    6348:	18c00044 	addi	r3,r3,1
    634c:	197fffc3 	ldbu	r5,-1(r3)
    6350:	31400526 	beq	r6,r5,6368 <memchr+0x88>
    6354:	1805883a 	mov	r2,r3
    6358:	20fffb1e 	bne	r4,r3,6348 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006348>
    635c:	0005883a 	mov	r2,zero
    6360:	f800283a 	ret
    6364:	2005883a 	mov	r2,r4
    6368:	f800283a 	ret
    636c:	28c03fcc 	andi	r3,r5,255
    6370:	1812923a 	slli	r9,r3,8
    6374:	02ffbff4 	movhi	r11,65279
    6378:	02a02074 	movhi	r10,32897
    637c:	48d2b03a 	or	r9,r9,r3
    6380:	4806943a 	slli	r3,r9,16
    6384:	5affbfc4 	addi	r11,r11,-257
    6388:	52a02004 	addi	r10,r10,-32640
    638c:	48d2b03a 	or	r9,r9,r3
    6390:	20c00017 	ldw	r3,0(r4)
    6394:	48c6f03a 	xor	r3,r9,r3
    6398:	1acd883a 	add	r6,r3,r11
    639c:	00c6303a 	nor	r3,zero,r3
    63a0:	30c6703a 	and	r3,r6,r3
    63a4:	1a86703a 	and	r3,r3,r10
    63a8:	183fe01e 	bne	r3,zero,632c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000632c>
    63ac:	10bfff04 	addi	r2,r2,-4
    63b0:	21000104 	addi	r4,r4,4
    63b4:	40bff636 	bltu	r8,r2,6390 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006390>
    63b8:	003fdb06 	br	6328 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006328>
    63bc:	3005883a 	mov	r2,r6
    63c0:	003fd706 	br	6320 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006320>

000063c4 <memcpy>:
    63c4:	defffd04 	addi	sp,sp,-12
    63c8:	dfc00215 	stw	ra,8(sp)
    63cc:	dc400115 	stw	r17,4(sp)
    63d0:	dc000015 	stw	r16,0(sp)
    63d4:	00c003c4 	movi	r3,15
    63d8:	2005883a 	mov	r2,r4
    63dc:	1980452e 	bgeu	r3,r6,64f4 <memcpy+0x130>
    63e0:	2906b03a 	or	r3,r5,r4
    63e4:	18c000cc 	andi	r3,r3,3
    63e8:	1800441e 	bne	r3,zero,64fc <memcpy+0x138>
    63ec:	347ffc04 	addi	r17,r6,-16
    63f0:	8822d13a 	srli	r17,r17,4
    63f4:	28c00104 	addi	r3,r5,4
    63f8:	23400104 	addi	r13,r4,4
    63fc:	8820913a 	slli	r16,r17,4
    6400:	2b000204 	addi	r12,r5,8
    6404:	22c00204 	addi	r11,r4,8
    6408:	84000504 	addi	r16,r16,20
    640c:	2a800304 	addi	r10,r5,12
    6410:	22400304 	addi	r9,r4,12
    6414:	2c21883a 	add	r16,r5,r16
    6418:	2811883a 	mov	r8,r5
    641c:	200f883a 	mov	r7,r4
    6420:	41000017 	ldw	r4,0(r8)
    6424:	1fc00017 	ldw	ra,0(r3)
    6428:	63c00017 	ldw	r15,0(r12)
    642c:	39000015 	stw	r4,0(r7)
    6430:	53800017 	ldw	r14,0(r10)
    6434:	6fc00015 	stw	ra,0(r13)
    6438:	5bc00015 	stw	r15,0(r11)
    643c:	4b800015 	stw	r14,0(r9)
    6440:	18c00404 	addi	r3,r3,16
    6444:	39c00404 	addi	r7,r7,16
    6448:	42000404 	addi	r8,r8,16
    644c:	6b400404 	addi	r13,r13,16
    6450:	63000404 	addi	r12,r12,16
    6454:	5ac00404 	addi	r11,r11,16
    6458:	52800404 	addi	r10,r10,16
    645c:	4a400404 	addi	r9,r9,16
    6460:	1c3fef1e 	bne	r3,r16,6420 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006420>
    6464:	89c00044 	addi	r7,r17,1
    6468:	380e913a 	slli	r7,r7,4
    646c:	310003cc 	andi	r4,r6,15
    6470:	02c000c4 	movi	r11,3
    6474:	11c7883a 	add	r3,r2,r7
    6478:	29cb883a 	add	r5,r5,r7
    647c:	5900212e 	bgeu	r11,r4,6504 <memcpy+0x140>
    6480:	1813883a 	mov	r9,r3
    6484:	2811883a 	mov	r8,r5
    6488:	200f883a 	mov	r7,r4
    648c:	42800017 	ldw	r10,0(r8)
    6490:	4a400104 	addi	r9,r9,4
    6494:	39ffff04 	addi	r7,r7,-4
    6498:	4abfff15 	stw	r10,-4(r9)
    649c:	42000104 	addi	r8,r8,4
    64a0:	59fffa36 	bltu	r11,r7,648c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000648c>
    64a4:	213fff04 	addi	r4,r4,-4
    64a8:	2008d0ba 	srli	r4,r4,2
    64ac:	318000cc 	andi	r6,r6,3
    64b0:	21000044 	addi	r4,r4,1
    64b4:	2109883a 	add	r4,r4,r4
    64b8:	2109883a 	add	r4,r4,r4
    64bc:	1907883a 	add	r3,r3,r4
    64c0:	290b883a 	add	r5,r5,r4
    64c4:	30000626 	beq	r6,zero,64e0 <memcpy+0x11c>
    64c8:	198d883a 	add	r6,r3,r6
    64cc:	29c00003 	ldbu	r7,0(r5)
    64d0:	18c00044 	addi	r3,r3,1
    64d4:	29400044 	addi	r5,r5,1
    64d8:	19ffffc5 	stb	r7,-1(r3)
    64dc:	19bffb1e 	bne	r3,r6,64cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00064cc>
    64e0:	dfc00217 	ldw	ra,8(sp)
    64e4:	dc400117 	ldw	r17,4(sp)
    64e8:	dc000017 	ldw	r16,0(sp)
    64ec:	dec00304 	addi	sp,sp,12
    64f0:	f800283a 	ret
    64f4:	2007883a 	mov	r3,r4
    64f8:	003ff206 	br	64c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00064c4>
    64fc:	2007883a 	mov	r3,r4
    6500:	003ff106 	br	64c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00064c8>
    6504:	200d883a 	mov	r6,r4
    6508:	003fee06 	br	64c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00064c4>

0000650c <memmove>:
    650c:	2005883a 	mov	r2,r4
    6510:	29000b2e 	bgeu	r5,r4,6540 <memmove+0x34>
    6514:	298f883a 	add	r7,r5,r6
    6518:	21c0092e 	bgeu	r4,r7,6540 <memmove+0x34>
    651c:	2187883a 	add	r3,r4,r6
    6520:	198bc83a 	sub	r5,r3,r6
    6524:	30004826 	beq	r6,zero,6648 <memmove+0x13c>
    6528:	39ffffc4 	addi	r7,r7,-1
    652c:	39000003 	ldbu	r4,0(r7)
    6530:	18ffffc4 	addi	r3,r3,-1
    6534:	19000005 	stb	r4,0(r3)
    6538:	28fffb1e 	bne	r5,r3,6528 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006528>
    653c:	f800283a 	ret
    6540:	00c003c4 	movi	r3,15
    6544:	1980412e 	bgeu	r3,r6,664c <memmove+0x140>
    6548:	2886b03a 	or	r3,r5,r2
    654c:	18c000cc 	andi	r3,r3,3
    6550:	1800401e 	bne	r3,zero,6654 <memmove+0x148>
    6554:	33fffc04 	addi	r15,r6,-16
    6558:	781ed13a 	srli	r15,r15,4
    655c:	28c00104 	addi	r3,r5,4
    6560:	13400104 	addi	r13,r2,4
    6564:	781c913a 	slli	r14,r15,4
    6568:	2b000204 	addi	r12,r5,8
    656c:	12c00204 	addi	r11,r2,8
    6570:	73800504 	addi	r14,r14,20
    6574:	2a800304 	addi	r10,r5,12
    6578:	12400304 	addi	r9,r2,12
    657c:	2b9d883a 	add	r14,r5,r14
    6580:	2811883a 	mov	r8,r5
    6584:	100f883a 	mov	r7,r2
    6588:	41000017 	ldw	r4,0(r8)
    658c:	39c00404 	addi	r7,r7,16
    6590:	18c00404 	addi	r3,r3,16
    6594:	393ffc15 	stw	r4,-16(r7)
    6598:	193ffc17 	ldw	r4,-16(r3)
    659c:	6b400404 	addi	r13,r13,16
    65a0:	5ac00404 	addi	r11,r11,16
    65a4:	693ffc15 	stw	r4,-16(r13)
    65a8:	61000017 	ldw	r4,0(r12)
    65ac:	4a400404 	addi	r9,r9,16
    65b0:	42000404 	addi	r8,r8,16
    65b4:	593ffc15 	stw	r4,-16(r11)
    65b8:	51000017 	ldw	r4,0(r10)
    65bc:	63000404 	addi	r12,r12,16
    65c0:	52800404 	addi	r10,r10,16
    65c4:	493ffc15 	stw	r4,-16(r9)
    65c8:	1bbfef1e 	bne	r3,r14,6588 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006588>
    65cc:	79000044 	addi	r4,r15,1
    65d0:	2008913a 	slli	r4,r4,4
    65d4:	328003cc 	andi	r10,r6,15
    65d8:	02c000c4 	movi	r11,3
    65dc:	1107883a 	add	r3,r2,r4
    65e0:	290b883a 	add	r5,r5,r4
    65e4:	5a801e2e 	bgeu	r11,r10,6660 <memmove+0x154>
    65e8:	1813883a 	mov	r9,r3
    65ec:	2811883a 	mov	r8,r5
    65f0:	500f883a 	mov	r7,r10
    65f4:	41000017 	ldw	r4,0(r8)
    65f8:	4a400104 	addi	r9,r9,4
    65fc:	39ffff04 	addi	r7,r7,-4
    6600:	493fff15 	stw	r4,-4(r9)
    6604:	42000104 	addi	r8,r8,4
    6608:	59fffa36 	bltu	r11,r7,65f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00065f4>
    660c:	513fff04 	addi	r4,r10,-4
    6610:	2008d0ba 	srli	r4,r4,2
    6614:	318000cc 	andi	r6,r6,3
    6618:	21000044 	addi	r4,r4,1
    661c:	2109883a 	add	r4,r4,r4
    6620:	2109883a 	add	r4,r4,r4
    6624:	1907883a 	add	r3,r3,r4
    6628:	290b883a 	add	r5,r5,r4
    662c:	30000b26 	beq	r6,zero,665c <memmove+0x150>
    6630:	198d883a 	add	r6,r3,r6
    6634:	29c00003 	ldbu	r7,0(r5)
    6638:	18c00044 	addi	r3,r3,1
    663c:	29400044 	addi	r5,r5,1
    6640:	19ffffc5 	stb	r7,-1(r3)
    6644:	19bffb1e 	bne	r3,r6,6634 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006634>
    6648:	f800283a 	ret
    664c:	1007883a 	mov	r3,r2
    6650:	003ff606 	br	662c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000662c>
    6654:	1007883a 	mov	r3,r2
    6658:	003ff506 	br	6630 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006630>
    665c:	f800283a 	ret
    6660:	500d883a 	mov	r6,r10
    6664:	003ff106 	br	662c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000662c>

00006668 <memset>:
    6668:	20c000cc 	andi	r3,r4,3
    666c:	2005883a 	mov	r2,r4
    6670:	18004426 	beq	r3,zero,6784 <memset+0x11c>
    6674:	31ffffc4 	addi	r7,r6,-1
    6678:	30004026 	beq	r6,zero,677c <memset+0x114>
    667c:	2813883a 	mov	r9,r5
    6680:	200d883a 	mov	r6,r4
    6684:	2007883a 	mov	r3,r4
    6688:	00000406 	br	669c <memset+0x34>
    668c:	3a3fffc4 	addi	r8,r7,-1
    6690:	31800044 	addi	r6,r6,1
    6694:	38003926 	beq	r7,zero,677c <memset+0x114>
    6698:	400f883a 	mov	r7,r8
    669c:	18c00044 	addi	r3,r3,1
    66a0:	32400005 	stb	r9,0(r6)
    66a4:	1a0000cc 	andi	r8,r3,3
    66a8:	403ff81e 	bne	r8,zero,668c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000668c>
    66ac:	010000c4 	movi	r4,3
    66b0:	21c02d2e 	bgeu	r4,r7,6768 <memset+0x100>
    66b4:	29003fcc 	andi	r4,r5,255
    66b8:	200c923a 	slli	r6,r4,8
    66bc:	3108b03a 	or	r4,r6,r4
    66c0:	200c943a 	slli	r6,r4,16
    66c4:	218cb03a 	or	r6,r4,r6
    66c8:	010003c4 	movi	r4,15
    66cc:	21c0182e 	bgeu	r4,r7,6730 <memset+0xc8>
    66d0:	3b3ffc04 	addi	r12,r7,-16
    66d4:	6018d13a 	srli	r12,r12,4
    66d8:	1a000104 	addi	r8,r3,4
    66dc:	1ac00204 	addi	r11,r3,8
    66e0:	6008913a 	slli	r4,r12,4
    66e4:	1a800304 	addi	r10,r3,12
    66e8:	1813883a 	mov	r9,r3
    66ec:	21000504 	addi	r4,r4,20
    66f0:	1909883a 	add	r4,r3,r4
    66f4:	49800015 	stw	r6,0(r9)
    66f8:	41800015 	stw	r6,0(r8)
    66fc:	59800015 	stw	r6,0(r11)
    6700:	51800015 	stw	r6,0(r10)
    6704:	42000404 	addi	r8,r8,16
    6708:	4a400404 	addi	r9,r9,16
    670c:	5ac00404 	addi	r11,r11,16
    6710:	52800404 	addi	r10,r10,16
    6714:	413ff71e 	bne	r8,r4,66f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00066f4>
    6718:	63000044 	addi	r12,r12,1
    671c:	6018913a 	slli	r12,r12,4
    6720:	39c003cc 	andi	r7,r7,15
    6724:	010000c4 	movi	r4,3
    6728:	1b07883a 	add	r3,r3,r12
    672c:	21c00e2e 	bgeu	r4,r7,6768 <memset+0x100>
    6730:	1813883a 	mov	r9,r3
    6734:	3811883a 	mov	r8,r7
    6738:	010000c4 	movi	r4,3
    673c:	49800015 	stw	r6,0(r9)
    6740:	423fff04 	addi	r8,r8,-4
    6744:	4a400104 	addi	r9,r9,4
    6748:	223ffc36 	bltu	r4,r8,673c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000673c>
    674c:	393fff04 	addi	r4,r7,-4
    6750:	2008d0ba 	srli	r4,r4,2
    6754:	39c000cc 	andi	r7,r7,3
    6758:	21000044 	addi	r4,r4,1
    675c:	2109883a 	add	r4,r4,r4
    6760:	2109883a 	add	r4,r4,r4
    6764:	1907883a 	add	r3,r3,r4
    6768:	38000526 	beq	r7,zero,6780 <memset+0x118>
    676c:	19cf883a 	add	r7,r3,r7
    6770:	19400005 	stb	r5,0(r3)
    6774:	18c00044 	addi	r3,r3,1
    6778:	38fffd1e 	bne	r7,r3,6770 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006770>
    677c:	f800283a 	ret
    6780:	f800283a 	ret
    6784:	2007883a 	mov	r3,r4
    6788:	300f883a 	mov	r7,r6
    678c:	003fc706 	br	66ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00066ac>

00006790 <_Balloc>:
    6790:	20801317 	ldw	r2,76(r4)
    6794:	defffc04 	addi	sp,sp,-16
    6798:	dc400115 	stw	r17,4(sp)
    679c:	dc000015 	stw	r16,0(sp)
    67a0:	dfc00315 	stw	ra,12(sp)
    67a4:	dc800215 	stw	r18,8(sp)
    67a8:	2023883a 	mov	r17,r4
    67ac:	2821883a 	mov	r16,r5
    67b0:	10000f26 	beq	r2,zero,67f0 <_Balloc+0x60>
    67b4:	8407883a 	add	r3,r16,r16
    67b8:	18c7883a 	add	r3,r3,r3
    67bc:	10c7883a 	add	r3,r2,r3
    67c0:	18800017 	ldw	r2,0(r3)
    67c4:	10001126 	beq	r2,zero,680c <_Balloc+0x7c>
    67c8:	11000017 	ldw	r4,0(r2)
    67cc:	19000015 	stw	r4,0(r3)
    67d0:	10000415 	stw	zero,16(r2)
    67d4:	10000315 	stw	zero,12(r2)
    67d8:	dfc00317 	ldw	ra,12(sp)
    67dc:	dc800217 	ldw	r18,8(sp)
    67e0:	dc400117 	ldw	r17,4(sp)
    67e4:	dc000017 	ldw	r16,0(sp)
    67e8:	dec00404 	addi	sp,sp,16
    67ec:	f800283a 	ret
    67f0:	01800844 	movi	r6,33
    67f4:	01400104 	movi	r5,4
    67f8:	00096cc0 	call	96cc <_calloc_r>
    67fc:	88801315 	stw	r2,76(r17)
    6800:	103fec1e 	bne	r2,zero,67b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067b4>
    6804:	0005883a 	mov	r2,zero
    6808:	003ff306 	br	67d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067d8>
    680c:	01400044 	movi	r5,1
    6810:	2c24983a 	sll	r18,r5,r16
    6814:	8809883a 	mov	r4,r17
    6818:	91800144 	addi	r6,r18,5
    681c:	318d883a 	add	r6,r6,r6
    6820:	318d883a 	add	r6,r6,r6
    6824:	00096cc0 	call	96cc <_calloc_r>
    6828:	103ff626 	beq	r2,zero,6804 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006804>
    682c:	14000115 	stw	r16,4(r2)
    6830:	14800215 	stw	r18,8(r2)
    6834:	003fe606 	br	67d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00067d0>

00006838 <_Bfree>:
    6838:	28000826 	beq	r5,zero,685c <_Bfree+0x24>
    683c:	28c00117 	ldw	r3,4(r5)
    6840:	20801317 	ldw	r2,76(r4)
    6844:	18c7883a 	add	r3,r3,r3
    6848:	18c7883a 	add	r3,r3,r3
    684c:	10c5883a 	add	r2,r2,r3
    6850:	10c00017 	ldw	r3,0(r2)
    6854:	28c00015 	stw	r3,0(r5)
    6858:	11400015 	stw	r5,0(r2)
    685c:	f800283a 	ret

00006860 <__multadd>:
    6860:	defffa04 	addi	sp,sp,-24
    6864:	dc800315 	stw	r18,12(sp)
    6868:	dc400215 	stw	r17,8(sp)
    686c:	dc000115 	stw	r16,4(sp)
    6870:	2823883a 	mov	r17,r5
    6874:	2c000417 	ldw	r16,16(r5)
    6878:	dfc00515 	stw	ra,20(sp)
    687c:	dcc00415 	stw	r19,16(sp)
    6880:	2025883a 	mov	r18,r4
    6884:	29400504 	addi	r5,r5,20
    6888:	0011883a 	mov	r8,zero
    688c:	28c00017 	ldw	r3,0(r5)
    6890:	29400104 	addi	r5,r5,4
    6894:	42000044 	addi	r8,r8,1
    6898:	18bfffcc 	andi	r2,r3,65535
    689c:	1185383a 	mul	r2,r2,r6
    68a0:	1806d43a 	srli	r3,r3,16
    68a4:	11cf883a 	add	r7,r2,r7
    68a8:	3808d43a 	srli	r4,r7,16
    68ac:	1987383a 	mul	r3,r3,r6
    68b0:	38bfffcc 	andi	r2,r7,65535
    68b4:	1907883a 	add	r3,r3,r4
    68b8:	1808943a 	slli	r4,r3,16
    68bc:	180ed43a 	srli	r7,r3,16
    68c0:	2085883a 	add	r2,r4,r2
    68c4:	28bfff15 	stw	r2,-4(r5)
    68c8:	443ff016 	blt	r8,r16,688c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000688c>
    68cc:	38000926 	beq	r7,zero,68f4 <__multadd+0x94>
    68d0:	88800217 	ldw	r2,8(r17)
    68d4:	80800f0e 	bge	r16,r2,6914 <__multadd+0xb4>
    68d8:	80800144 	addi	r2,r16,5
    68dc:	1085883a 	add	r2,r2,r2
    68e0:	1085883a 	add	r2,r2,r2
    68e4:	8885883a 	add	r2,r17,r2
    68e8:	11c00015 	stw	r7,0(r2)
    68ec:	84000044 	addi	r16,r16,1
    68f0:	8c000415 	stw	r16,16(r17)
    68f4:	8805883a 	mov	r2,r17
    68f8:	dfc00517 	ldw	ra,20(sp)
    68fc:	dcc00417 	ldw	r19,16(sp)
    6900:	dc800317 	ldw	r18,12(sp)
    6904:	dc400217 	ldw	r17,8(sp)
    6908:	dc000117 	ldw	r16,4(sp)
    690c:	dec00604 	addi	sp,sp,24
    6910:	f800283a 	ret
    6914:	89400117 	ldw	r5,4(r17)
    6918:	9009883a 	mov	r4,r18
    691c:	d9c00015 	stw	r7,0(sp)
    6920:	29400044 	addi	r5,r5,1
    6924:	00067900 	call	6790 <_Balloc>
    6928:	89800417 	ldw	r6,16(r17)
    692c:	89400304 	addi	r5,r17,12
    6930:	11000304 	addi	r4,r2,12
    6934:	31800084 	addi	r6,r6,2
    6938:	318d883a 	add	r6,r6,r6
    693c:	318d883a 	add	r6,r6,r6
    6940:	1027883a 	mov	r19,r2
    6944:	00063c40 	call	63c4 <memcpy>
    6948:	d9c00017 	ldw	r7,0(sp)
    694c:	88000a26 	beq	r17,zero,6978 <__multadd+0x118>
    6950:	88c00117 	ldw	r3,4(r17)
    6954:	90801317 	ldw	r2,76(r18)
    6958:	18c7883a 	add	r3,r3,r3
    695c:	18c7883a 	add	r3,r3,r3
    6960:	10c5883a 	add	r2,r2,r3
    6964:	10c00017 	ldw	r3,0(r2)
    6968:	88c00015 	stw	r3,0(r17)
    696c:	14400015 	stw	r17,0(r2)
    6970:	9823883a 	mov	r17,r19
    6974:	003fd806 	br	68d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00068d8>
    6978:	9823883a 	mov	r17,r19
    697c:	003fd606 	br	68d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00068d8>

00006980 <__s2b>:
    6980:	defff904 	addi	sp,sp,-28
    6984:	dc400115 	stw	r17,4(sp)
    6988:	dc000015 	stw	r16,0(sp)
    698c:	2023883a 	mov	r17,r4
    6990:	2821883a 	mov	r16,r5
    6994:	39000204 	addi	r4,r7,8
    6998:	01400244 	movi	r5,9
    699c:	dcc00315 	stw	r19,12(sp)
    69a0:	dc800215 	stw	r18,8(sp)
    69a4:	dfc00615 	stw	ra,24(sp)
    69a8:	dd400515 	stw	r21,20(sp)
    69ac:	dd000415 	stw	r20,16(sp)
    69b0:	3825883a 	mov	r18,r7
    69b4:	3027883a 	mov	r19,r6
    69b8:	000a9fc0 	call	a9fc <__divsi3>
    69bc:	00c00044 	movi	r3,1
    69c0:	000b883a 	mov	r5,zero
    69c4:	1880030e 	bge	r3,r2,69d4 <__s2b+0x54>
    69c8:	18c7883a 	add	r3,r3,r3
    69cc:	29400044 	addi	r5,r5,1
    69d0:	18bffd16 	blt	r3,r2,69c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00069c8>
    69d4:	8809883a 	mov	r4,r17
    69d8:	00067900 	call	6790 <_Balloc>
    69dc:	d8c00717 	ldw	r3,28(sp)
    69e0:	10c00515 	stw	r3,20(r2)
    69e4:	00c00044 	movi	r3,1
    69e8:	10c00415 	stw	r3,16(r2)
    69ec:	00c00244 	movi	r3,9
    69f0:	1cc0210e 	bge	r3,r19,6a78 <__s2b+0xf8>
    69f4:	80eb883a 	add	r21,r16,r3
    69f8:	a829883a 	mov	r20,r21
    69fc:	84e1883a 	add	r16,r16,r19
    6a00:	a1c00007 	ldb	r7,0(r20)
    6a04:	01800284 	movi	r6,10
    6a08:	a5000044 	addi	r20,r20,1
    6a0c:	100b883a 	mov	r5,r2
    6a10:	39fff404 	addi	r7,r7,-48
    6a14:	8809883a 	mov	r4,r17
    6a18:	00068600 	call	6860 <__multadd>
    6a1c:	a43ff81e 	bne	r20,r16,6a00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006a00>
    6a20:	ace1883a 	add	r16,r21,r19
    6a24:	843ffe04 	addi	r16,r16,-8
    6a28:	9c800a0e 	bge	r19,r18,6a54 <__s2b+0xd4>
    6a2c:	94e5c83a 	sub	r18,r18,r19
    6a30:	84a5883a 	add	r18,r16,r18
    6a34:	81c00007 	ldb	r7,0(r16)
    6a38:	01800284 	movi	r6,10
    6a3c:	84000044 	addi	r16,r16,1
    6a40:	100b883a 	mov	r5,r2
    6a44:	39fff404 	addi	r7,r7,-48
    6a48:	8809883a 	mov	r4,r17
    6a4c:	00068600 	call	6860 <__multadd>
    6a50:	84bff81e 	bne	r16,r18,6a34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006a34>
    6a54:	dfc00617 	ldw	ra,24(sp)
    6a58:	dd400517 	ldw	r21,20(sp)
    6a5c:	dd000417 	ldw	r20,16(sp)
    6a60:	dcc00317 	ldw	r19,12(sp)
    6a64:	dc800217 	ldw	r18,8(sp)
    6a68:	dc400117 	ldw	r17,4(sp)
    6a6c:	dc000017 	ldw	r16,0(sp)
    6a70:	dec00704 	addi	sp,sp,28
    6a74:	f800283a 	ret
    6a78:	84000284 	addi	r16,r16,10
    6a7c:	1827883a 	mov	r19,r3
    6a80:	003fe906 	br	6a28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006a28>

00006a84 <__hi0bits>:
    6a84:	20bfffec 	andhi	r2,r4,65535
    6a88:	1000141e 	bne	r2,zero,6adc <__hi0bits+0x58>
    6a8c:	2008943a 	slli	r4,r4,16
    6a90:	00800404 	movi	r2,16
    6a94:	20ffc02c 	andhi	r3,r4,65280
    6a98:	1800021e 	bne	r3,zero,6aa4 <__hi0bits+0x20>
    6a9c:	2008923a 	slli	r4,r4,8
    6aa0:	10800204 	addi	r2,r2,8
    6aa4:	20fc002c 	andhi	r3,r4,61440
    6aa8:	1800021e 	bne	r3,zero,6ab4 <__hi0bits+0x30>
    6aac:	2008913a 	slli	r4,r4,4
    6ab0:	10800104 	addi	r2,r2,4
    6ab4:	20f0002c 	andhi	r3,r4,49152
    6ab8:	1800031e 	bne	r3,zero,6ac8 <__hi0bits+0x44>
    6abc:	2109883a 	add	r4,r4,r4
    6ac0:	10800084 	addi	r2,r2,2
    6ac4:	2109883a 	add	r4,r4,r4
    6ac8:	20000316 	blt	r4,zero,6ad8 <__hi0bits+0x54>
    6acc:	2110002c 	andhi	r4,r4,16384
    6ad0:	2000041e 	bne	r4,zero,6ae4 <__hi0bits+0x60>
    6ad4:	00800804 	movi	r2,32
    6ad8:	f800283a 	ret
    6adc:	0005883a 	mov	r2,zero
    6ae0:	003fec06 	br	6a94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006a94>
    6ae4:	10800044 	addi	r2,r2,1
    6ae8:	f800283a 	ret

00006aec <__lo0bits>:
    6aec:	20c00017 	ldw	r3,0(r4)
    6af0:	188001cc 	andi	r2,r3,7
    6af4:	10000826 	beq	r2,zero,6b18 <__lo0bits+0x2c>
    6af8:	1880004c 	andi	r2,r3,1
    6afc:	1000211e 	bne	r2,zero,6b84 <__lo0bits+0x98>
    6b00:	1880008c 	andi	r2,r3,2
    6b04:	1000211e 	bne	r2,zero,6b8c <__lo0bits+0xa0>
    6b08:	1806d0ba 	srli	r3,r3,2
    6b0c:	00800084 	movi	r2,2
    6b10:	20c00015 	stw	r3,0(r4)
    6b14:	f800283a 	ret
    6b18:	18bfffcc 	andi	r2,r3,65535
    6b1c:	10001326 	beq	r2,zero,6b6c <__lo0bits+0x80>
    6b20:	0005883a 	mov	r2,zero
    6b24:	19403fcc 	andi	r5,r3,255
    6b28:	2800021e 	bne	r5,zero,6b34 <__lo0bits+0x48>
    6b2c:	1806d23a 	srli	r3,r3,8
    6b30:	10800204 	addi	r2,r2,8
    6b34:	194003cc 	andi	r5,r3,15
    6b38:	2800021e 	bne	r5,zero,6b44 <__lo0bits+0x58>
    6b3c:	1806d13a 	srli	r3,r3,4
    6b40:	10800104 	addi	r2,r2,4
    6b44:	194000cc 	andi	r5,r3,3
    6b48:	2800021e 	bne	r5,zero,6b54 <__lo0bits+0x68>
    6b4c:	1806d0ba 	srli	r3,r3,2
    6b50:	10800084 	addi	r2,r2,2
    6b54:	1940004c 	andi	r5,r3,1
    6b58:	2800081e 	bne	r5,zero,6b7c <__lo0bits+0x90>
    6b5c:	1806d07a 	srli	r3,r3,1
    6b60:	1800051e 	bne	r3,zero,6b78 <__lo0bits+0x8c>
    6b64:	00800804 	movi	r2,32
    6b68:	f800283a 	ret
    6b6c:	1806d43a 	srli	r3,r3,16
    6b70:	00800404 	movi	r2,16
    6b74:	003feb06 	br	6b24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006b24>
    6b78:	10800044 	addi	r2,r2,1
    6b7c:	20c00015 	stw	r3,0(r4)
    6b80:	f800283a 	ret
    6b84:	0005883a 	mov	r2,zero
    6b88:	f800283a 	ret
    6b8c:	1806d07a 	srli	r3,r3,1
    6b90:	00800044 	movi	r2,1
    6b94:	20c00015 	stw	r3,0(r4)
    6b98:	f800283a 	ret

00006b9c <__i2b>:
    6b9c:	defffd04 	addi	sp,sp,-12
    6ba0:	dc000015 	stw	r16,0(sp)
    6ba4:	04000044 	movi	r16,1
    6ba8:	dc400115 	stw	r17,4(sp)
    6bac:	2823883a 	mov	r17,r5
    6bb0:	800b883a 	mov	r5,r16
    6bb4:	dfc00215 	stw	ra,8(sp)
    6bb8:	00067900 	call	6790 <_Balloc>
    6bbc:	14400515 	stw	r17,20(r2)
    6bc0:	14000415 	stw	r16,16(r2)
    6bc4:	dfc00217 	ldw	ra,8(sp)
    6bc8:	dc400117 	ldw	r17,4(sp)
    6bcc:	dc000017 	ldw	r16,0(sp)
    6bd0:	dec00304 	addi	sp,sp,12
    6bd4:	f800283a 	ret

00006bd8 <__multiply>:
    6bd8:	defffa04 	addi	sp,sp,-24
    6bdc:	dcc00315 	stw	r19,12(sp)
    6be0:	dc800215 	stw	r18,8(sp)
    6be4:	34c00417 	ldw	r19,16(r6)
    6be8:	2c800417 	ldw	r18,16(r5)
    6bec:	dd000415 	stw	r20,16(sp)
    6bf0:	dc400115 	stw	r17,4(sp)
    6bf4:	dfc00515 	stw	ra,20(sp)
    6bf8:	dc000015 	stw	r16,0(sp)
    6bfc:	2829883a 	mov	r20,r5
    6c00:	3023883a 	mov	r17,r6
    6c04:	94c0050e 	bge	r18,r19,6c1c <__multiply+0x44>
    6c08:	9007883a 	mov	r3,r18
    6c0c:	3029883a 	mov	r20,r6
    6c10:	9825883a 	mov	r18,r19
    6c14:	2823883a 	mov	r17,r5
    6c18:	1827883a 	mov	r19,r3
    6c1c:	a0800217 	ldw	r2,8(r20)
    6c20:	94e1883a 	add	r16,r18,r19
    6c24:	a1400117 	ldw	r5,4(r20)
    6c28:	1400010e 	bge	r2,r16,6c30 <__multiply+0x58>
    6c2c:	29400044 	addi	r5,r5,1
    6c30:	00067900 	call	6790 <_Balloc>
    6c34:	8415883a 	add	r10,r16,r16
    6c38:	12c00504 	addi	r11,r2,20
    6c3c:	5295883a 	add	r10,r10,r10
    6c40:	5a95883a 	add	r10,r11,r10
    6c44:	5807883a 	mov	r3,r11
    6c48:	5a80032e 	bgeu	r11,r10,6c58 <__multiply+0x80>
    6c4c:	18000015 	stw	zero,0(r3)
    6c50:	18c00104 	addi	r3,r3,4
    6c54:	1abffd36 	bltu	r3,r10,6c4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006c4c>
    6c58:	9ce7883a 	add	r19,r19,r19
    6c5c:	94a5883a 	add	r18,r18,r18
    6c60:	89800504 	addi	r6,r17,20
    6c64:	9ce7883a 	add	r19,r19,r19
    6c68:	a3400504 	addi	r13,r20,20
    6c6c:	94a5883a 	add	r18,r18,r18
    6c70:	34d9883a 	add	r12,r6,r19
    6c74:	6c93883a 	add	r9,r13,r18
    6c78:	3300422e 	bgeu	r6,r12,6d84 <__multiply+0x1ac>
    6c7c:	37c00017 	ldw	ra,0(r6)
    6c80:	fbffffcc 	andi	r15,ra,65535
    6c84:	78001b26 	beq	r15,zero,6cf4 <__multiply+0x11c>
    6c88:	5811883a 	mov	r8,r11
    6c8c:	681d883a 	mov	r14,r13
    6c90:	000f883a 	mov	r7,zero
    6c94:	71000017 	ldw	r4,0(r14)
    6c98:	40c00017 	ldw	r3,0(r8)
    6c9c:	73800104 	addi	r14,r14,4
    6ca0:	217fffcc 	andi	r5,r4,65535
    6ca4:	2bcb383a 	mul	r5,r5,r15
    6ca8:	2008d43a 	srli	r4,r4,16
    6cac:	1c7fffcc 	andi	r17,r3,65535
    6cb0:	2c4b883a 	add	r5,r5,r17
    6cb4:	29cb883a 	add	r5,r5,r7
    6cb8:	23c9383a 	mul	r4,r4,r15
    6cbc:	1806d43a 	srli	r3,r3,16
    6cc0:	280ed43a 	srli	r7,r5,16
    6cc4:	297fffcc 	andi	r5,r5,65535
    6cc8:	20c7883a 	add	r3,r4,r3
    6ccc:	19c7883a 	add	r3,r3,r7
    6cd0:	1808943a 	slli	r4,r3,16
    6cd4:	4023883a 	mov	r17,r8
    6cd8:	180ed43a 	srli	r7,r3,16
    6cdc:	214ab03a 	or	r5,r4,r5
    6ce0:	41400015 	stw	r5,0(r8)
    6ce4:	42000104 	addi	r8,r8,4
    6ce8:	727fea36 	bltu	r14,r9,6c94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006c94>
    6cec:	89c00115 	stw	r7,4(r17)
    6cf0:	37c00017 	ldw	ra,0(r6)
    6cf4:	f83ed43a 	srli	ra,ra,16
    6cf8:	f8001f26 	beq	ra,zero,6d78 <__multiply+0x1a0>
    6cfc:	58c00017 	ldw	r3,0(r11)
    6d00:	681d883a 	mov	r14,r13
    6d04:	581f883a 	mov	r15,r11
    6d08:	1811883a 	mov	r8,r3
    6d0c:	5825883a 	mov	r18,r11
    6d10:	000f883a 	mov	r7,zero
    6d14:	00000106 	br	6d1c <__multiply+0x144>
    6d18:	8825883a 	mov	r18,r17
    6d1c:	7140000b 	ldhu	r5,0(r14)
    6d20:	4010d43a 	srli	r8,r8,16
    6d24:	193fffcc 	andi	r4,r3,65535
    6d28:	2fcb383a 	mul	r5,r5,ra
    6d2c:	7bc00104 	addi	r15,r15,4
    6d30:	73800104 	addi	r14,r14,4
    6d34:	2a0b883a 	add	r5,r5,r8
    6d38:	29cb883a 	add	r5,r5,r7
    6d3c:	2806943a 	slli	r3,r5,16
    6d40:	94400104 	addi	r17,r18,4
    6d44:	280ad43a 	srli	r5,r5,16
    6d48:	1908b03a 	or	r4,r3,r4
    6d4c:	793fff15 	stw	r4,-4(r15)
    6d50:	70ffff17 	ldw	r3,-4(r14)
    6d54:	8a000017 	ldw	r8,0(r17)
    6d58:	1806d43a 	srli	r3,r3,16
    6d5c:	413fffcc 	andi	r4,r8,65535
    6d60:	1fc7383a 	mul	r3,r3,ra
    6d64:	1907883a 	add	r3,r3,r4
    6d68:	1947883a 	add	r3,r3,r5
    6d6c:	180ed43a 	srli	r7,r3,16
    6d70:	727fe936 	bltu	r14,r9,6d18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006d18>
    6d74:	90c00115 	stw	r3,4(r18)
    6d78:	31800104 	addi	r6,r6,4
    6d7c:	5ac00104 	addi	r11,r11,4
    6d80:	333fbe36 	bltu	r6,r12,6c7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006c7c>
    6d84:	0400090e 	bge	zero,r16,6dac <__multiply+0x1d4>
    6d88:	50ffff17 	ldw	r3,-4(r10)
    6d8c:	52bfff04 	addi	r10,r10,-4
    6d90:	18000326 	beq	r3,zero,6da0 <__multiply+0x1c8>
    6d94:	00000506 	br	6dac <__multiply+0x1d4>
    6d98:	50c00017 	ldw	r3,0(r10)
    6d9c:	1800031e 	bne	r3,zero,6dac <__multiply+0x1d4>
    6da0:	843fffc4 	addi	r16,r16,-1
    6da4:	52bfff04 	addi	r10,r10,-4
    6da8:	803ffb1e 	bne	r16,zero,6d98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006d98>
    6dac:	14000415 	stw	r16,16(r2)
    6db0:	dfc00517 	ldw	ra,20(sp)
    6db4:	dd000417 	ldw	r20,16(sp)
    6db8:	dcc00317 	ldw	r19,12(sp)
    6dbc:	dc800217 	ldw	r18,8(sp)
    6dc0:	dc400117 	ldw	r17,4(sp)
    6dc4:	dc000017 	ldw	r16,0(sp)
    6dc8:	dec00604 	addi	sp,sp,24
    6dcc:	f800283a 	ret

00006dd0 <__pow5mult>:
    6dd0:	defffa04 	addi	sp,sp,-24
    6dd4:	dcc00315 	stw	r19,12(sp)
    6dd8:	dc000015 	stw	r16,0(sp)
    6ddc:	dfc00515 	stw	ra,20(sp)
    6de0:	dd000415 	stw	r20,16(sp)
    6de4:	dc800215 	stw	r18,8(sp)
    6de8:	dc400115 	stw	r17,4(sp)
    6dec:	308000cc 	andi	r2,r6,3
    6df0:	3021883a 	mov	r16,r6
    6df4:	2027883a 	mov	r19,r4
    6df8:	10002f1e 	bne	r2,zero,6eb8 <__pow5mult+0xe8>
    6dfc:	2825883a 	mov	r18,r5
    6e00:	8021d0ba 	srai	r16,r16,2
    6e04:	80001a26 	beq	r16,zero,6e70 <__pow5mult+0xa0>
    6e08:	9c401217 	ldw	r17,72(r19)
    6e0c:	8800061e 	bne	r17,zero,6e28 <__pow5mult+0x58>
    6e10:	00003406 	br	6ee4 <__pow5mult+0x114>
    6e14:	8021d07a 	srai	r16,r16,1
    6e18:	80001526 	beq	r16,zero,6e70 <__pow5mult+0xa0>
    6e1c:	88800017 	ldw	r2,0(r17)
    6e20:	10001c26 	beq	r2,zero,6e94 <__pow5mult+0xc4>
    6e24:	1023883a 	mov	r17,r2
    6e28:	8080004c 	andi	r2,r16,1
    6e2c:	103ff926 	beq	r2,zero,6e14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e14>
    6e30:	880d883a 	mov	r6,r17
    6e34:	900b883a 	mov	r5,r18
    6e38:	9809883a 	mov	r4,r19
    6e3c:	0006bd80 	call	6bd8 <__multiply>
    6e40:	90001b26 	beq	r18,zero,6eb0 <__pow5mult+0xe0>
    6e44:	91000117 	ldw	r4,4(r18)
    6e48:	98c01317 	ldw	r3,76(r19)
    6e4c:	8021d07a 	srai	r16,r16,1
    6e50:	2109883a 	add	r4,r4,r4
    6e54:	2109883a 	add	r4,r4,r4
    6e58:	1907883a 	add	r3,r3,r4
    6e5c:	19000017 	ldw	r4,0(r3)
    6e60:	91000015 	stw	r4,0(r18)
    6e64:	1c800015 	stw	r18,0(r3)
    6e68:	1025883a 	mov	r18,r2
    6e6c:	803feb1e 	bne	r16,zero,6e1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e1c>
    6e70:	9005883a 	mov	r2,r18
    6e74:	dfc00517 	ldw	ra,20(sp)
    6e78:	dd000417 	ldw	r20,16(sp)
    6e7c:	dcc00317 	ldw	r19,12(sp)
    6e80:	dc800217 	ldw	r18,8(sp)
    6e84:	dc400117 	ldw	r17,4(sp)
    6e88:	dc000017 	ldw	r16,0(sp)
    6e8c:	dec00604 	addi	sp,sp,24
    6e90:	f800283a 	ret
    6e94:	880d883a 	mov	r6,r17
    6e98:	880b883a 	mov	r5,r17
    6e9c:	9809883a 	mov	r4,r19
    6ea0:	0006bd80 	call	6bd8 <__multiply>
    6ea4:	88800015 	stw	r2,0(r17)
    6ea8:	10000015 	stw	zero,0(r2)
    6eac:	003fdd06 	br	6e24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e24>
    6eb0:	1025883a 	mov	r18,r2
    6eb4:	003fd706 	br	6e14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e14>
    6eb8:	10bfffc4 	addi	r2,r2,-1
    6ebc:	1085883a 	add	r2,r2,r2
    6ec0:	00c00074 	movhi	r3,1
    6ec4:	18c2a904 	addi	r3,r3,2724
    6ec8:	1085883a 	add	r2,r2,r2
    6ecc:	1885883a 	add	r2,r3,r2
    6ed0:	11800017 	ldw	r6,0(r2)
    6ed4:	000f883a 	mov	r7,zero
    6ed8:	00068600 	call	6860 <__multadd>
    6edc:	1025883a 	mov	r18,r2
    6ee0:	003fc706 	br	6e00 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e00>
    6ee4:	05000044 	movi	r20,1
    6ee8:	a00b883a 	mov	r5,r20
    6eec:	9809883a 	mov	r4,r19
    6ef0:	00067900 	call	6790 <_Balloc>
    6ef4:	1023883a 	mov	r17,r2
    6ef8:	00809c44 	movi	r2,625
    6efc:	88800515 	stw	r2,20(r17)
    6f00:	8d000415 	stw	r20,16(r17)
    6f04:	9c401215 	stw	r17,72(r19)
    6f08:	88000015 	stw	zero,0(r17)
    6f0c:	003fc606 	br	6e28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006e28>

00006f10 <__lshift>:
    6f10:	defff904 	addi	sp,sp,-28
    6f14:	dd400515 	stw	r21,20(sp)
    6f18:	dcc00315 	stw	r19,12(sp)
    6f1c:	302bd17a 	srai	r21,r6,5
    6f20:	2cc00417 	ldw	r19,16(r5)
    6f24:	28800217 	ldw	r2,8(r5)
    6f28:	dd000415 	stw	r20,16(sp)
    6f2c:	ace7883a 	add	r19,r21,r19
    6f30:	dc800215 	stw	r18,8(sp)
    6f34:	dc400115 	stw	r17,4(sp)
    6f38:	dc000015 	stw	r16,0(sp)
    6f3c:	dfc00615 	stw	ra,24(sp)
    6f40:	9c000044 	addi	r16,r19,1
    6f44:	2823883a 	mov	r17,r5
    6f48:	3029883a 	mov	r20,r6
    6f4c:	2025883a 	mov	r18,r4
    6f50:	29400117 	ldw	r5,4(r5)
    6f54:	1400030e 	bge	r2,r16,6f64 <__lshift+0x54>
    6f58:	1085883a 	add	r2,r2,r2
    6f5c:	29400044 	addi	r5,r5,1
    6f60:	143ffd16 	blt	r2,r16,6f58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006f58>
    6f64:	9009883a 	mov	r4,r18
    6f68:	00067900 	call	6790 <_Balloc>
    6f6c:	10c00504 	addi	r3,r2,20
    6f70:	0540070e 	bge	zero,r21,6f90 <__lshift+0x80>
    6f74:	ad6b883a 	add	r21,r21,r21
    6f78:	ad6b883a 	add	r21,r21,r21
    6f7c:	1809883a 	mov	r4,r3
    6f80:	1d47883a 	add	r3,r3,r21
    6f84:	20000015 	stw	zero,0(r4)
    6f88:	21000104 	addi	r4,r4,4
    6f8c:	193ffd1e 	bne	r3,r4,6f84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006f84>
    6f90:	8a000417 	ldw	r8,16(r17)
    6f94:	89000504 	addi	r4,r17,20
    6f98:	a18007cc 	andi	r6,r20,31
    6f9c:	4211883a 	add	r8,r8,r8
    6fa0:	4211883a 	add	r8,r8,r8
    6fa4:	2211883a 	add	r8,r4,r8
    6fa8:	30002326 	beq	r6,zero,7038 <__lshift+0x128>
    6fac:	02400804 	movi	r9,32
    6fb0:	4993c83a 	sub	r9,r9,r6
    6fb4:	000b883a 	mov	r5,zero
    6fb8:	21c00017 	ldw	r7,0(r4)
    6fbc:	1815883a 	mov	r10,r3
    6fc0:	18c00104 	addi	r3,r3,4
    6fc4:	398e983a 	sll	r7,r7,r6
    6fc8:	21000104 	addi	r4,r4,4
    6fcc:	394ab03a 	or	r5,r7,r5
    6fd0:	197fff15 	stw	r5,-4(r3)
    6fd4:	217fff17 	ldw	r5,-4(r4)
    6fd8:	2a4ad83a 	srl	r5,r5,r9
    6fdc:	223ff636 	bltu	r4,r8,6fb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006fb8>
    6fe0:	51400115 	stw	r5,4(r10)
    6fe4:	28001a1e 	bne	r5,zero,7050 <__lshift+0x140>
    6fe8:	843fffc4 	addi	r16,r16,-1
    6fec:	14000415 	stw	r16,16(r2)
    6ff0:	88000826 	beq	r17,zero,7014 <__lshift+0x104>
    6ff4:	89000117 	ldw	r4,4(r17)
    6ff8:	90c01317 	ldw	r3,76(r18)
    6ffc:	2109883a 	add	r4,r4,r4
    7000:	2109883a 	add	r4,r4,r4
    7004:	1907883a 	add	r3,r3,r4
    7008:	19000017 	ldw	r4,0(r3)
    700c:	89000015 	stw	r4,0(r17)
    7010:	1c400015 	stw	r17,0(r3)
    7014:	dfc00617 	ldw	ra,24(sp)
    7018:	dd400517 	ldw	r21,20(sp)
    701c:	dd000417 	ldw	r20,16(sp)
    7020:	dcc00317 	ldw	r19,12(sp)
    7024:	dc800217 	ldw	r18,8(sp)
    7028:	dc400117 	ldw	r17,4(sp)
    702c:	dc000017 	ldw	r16,0(sp)
    7030:	dec00704 	addi	sp,sp,28
    7034:	f800283a 	ret
    7038:	21400017 	ldw	r5,0(r4)
    703c:	18c00104 	addi	r3,r3,4
    7040:	21000104 	addi	r4,r4,4
    7044:	197fff15 	stw	r5,-4(r3)
    7048:	223ffb36 	bltu	r4,r8,7038 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007038>
    704c:	003fe606 	br	6fe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006fe8>
    7050:	9c000084 	addi	r16,r19,2
    7054:	003fe406 	br	6fe8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0006fe8>

00007058 <__mcmp>:
    7058:	20800417 	ldw	r2,16(r4)
    705c:	28c00417 	ldw	r3,16(r5)
    7060:	10c5c83a 	sub	r2,r2,r3
    7064:	1000111e 	bne	r2,zero,70ac <__mcmp+0x54>
    7068:	18c7883a 	add	r3,r3,r3
    706c:	18c7883a 	add	r3,r3,r3
    7070:	21000504 	addi	r4,r4,20
    7074:	29400504 	addi	r5,r5,20
    7078:	20c5883a 	add	r2,r4,r3
    707c:	28cb883a 	add	r5,r5,r3
    7080:	00000106 	br	7088 <__mcmp+0x30>
    7084:	20800a2e 	bgeu	r4,r2,70b0 <__mcmp+0x58>
    7088:	10bfff04 	addi	r2,r2,-4
    708c:	297fff04 	addi	r5,r5,-4
    7090:	11800017 	ldw	r6,0(r2)
    7094:	28c00017 	ldw	r3,0(r5)
    7098:	30fffa26 	beq	r6,r3,7084 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007084>
    709c:	30c00236 	bltu	r6,r3,70a8 <__mcmp+0x50>
    70a0:	00800044 	movi	r2,1
    70a4:	f800283a 	ret
    70a8:	00bfffc4 	movi	r2,-1
    70ac:	f800283a 	ret
    70b0:	0005883a 	mov	r2,zero
    70b4:	f800283a 	ret

000070b8 <__mdiff>:
    70b8:	28c00417 	ldw	r3,16(r5)
    70bc:	30800417 	ldw	r2,16(r6)
    70c0:	defffa04 	addi	sp,sp,-24
    70c4:	dcc00315 	stw	r19,12(sp)
    70c8:	dc800215 	stw	r18,8(sp)
    70cc:	dfc00515 	stw	ra,20(sp)
    70d0:	dd000415 	stw	r20,16(sp)
    70d4:	dc400115 	stw	r17,4(sp)
    70d8:	dc000015 	stw	r16,0(sp)
    70dc:	1887c83a 	sub	r3,r3,r2
    70e0:	2825883a 	mov	r18,r5
    70e4:	3027883a 	mov	r19,r6
    70e8:	1800141e 	bne	r3,zero,713c <__mdiff+0x84>
    70ec:	1085883a 	add	r2,r2,r2
    70f0:	1085883a 	add	r2,r2,r2
    70f4:	2a000504 	addi	r8,r5,20
    70f8:	34000504 	addi	r16,r6,20
    70fc:	4087883a 	add	r3,r8,r2
    7100:	8085883a 	add	r2,r16,r2
    7104:	00000106 	br	710c <__mdiff+0x54>
    7108:	40c0592e 	bgeu	r8,r3,7270 <__mdiff+0x1b8>
    710c:	18ffff04 	addi	r3,r3,-4
    7110:	10bfff04 	addi	r2,r2,-4
    7114:	19c00017 	ldw	r7,0(r3)
    7118:	11400017 	ldw	r5,0(r2)
    711c:	397ffa26 	beq	r7,r5,7108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007108>
    7120:	3940592e 	bgeu	r7,r5,7288 <__mdiff+0x1d0>
    7124:	9005883a 	mov	r2,r18
    7128:	4023883a 	mov	r17,r8
    712c:	9825883a 	mov	r18,r19
    7130:	05000044 	movi	r20,1
    7134:	1027883a 	mov	r19,r2
    7138:	00000406 	br	714c <__mdiff+0x94>
    713c:	18005616 	blt	r3,zero,7298 <__mdiff+0x1e0>
    7140:	34400504 	addi	r17,r6,20
    7144:	2c000504 	addi	r16,r5,20
    7148:	0029883a 	mov	r20,zero
    714c:	91400117 	ldw	r5,4(r18)
    7150:	00067900 	call	6790 <_Balloc>
    7154:	92400417 	ldw	r9,16(r18)
    7158:	9b000417 	ldw	r12,16(r19)
    715c:	12c00504 	addi	r11,r2,20
    7160:	4a51883a 	add	r8,r9,r9
    7164:	6319883a 	add	r12,r12,r12
    7168:	4211883a 	add	r8,r8,r8
    716c:	6319883a 	add	r12,r12,r12
    7170:	15000315 	stw	r20,12(r2)
    7174:	8211883a 	add	r8,r16,r8
    7178:	8b19883a 	add	r12,r17,r12
    717c:	0007883a 	mov	r3,zero
    7180:	81400017 	ldw	r5,0(r16)
    7184:	89c00017 	ldw	r7,0(r17)
    7188:	59800104 	addi	r6,r11,4
    718c:	293fffcc 	andi	r4,r5,65535
    7190:	20c7883a 	add	r3,r4,r3
    7194:	393fffcc 	andi	r4,r7,65535
    7198:	1909c83a 	sub	r4,r3,r4
    719c:	280ad43a 	srli	r5,r5,16
    71a0:	380ed43a 	srli	r7,r7,16
    71a4:	2007d43a 	srai	r3,r4,16
    71a8:	213fffcc 	andi	r4,r4,65535
    71ac:	29cbc83a 	sub	r5,r5,r7
    71b0:	28c7883a 	add	r3,r5,r3
    71b4:	180a943a 	slli	r5,r3,16
    71b8:	8c400104 	addi	r17,r17,4
    71bc:	84000104 	addi	r16,r16,4
    71c0:	2908b03a 	or	r4,r5,r4
    71c4:	59000015 	stw	r4,0(r11)
    71c8:	1807d43a 	srai	r3,r3,16
    71cc:	3015883a 	mov	r10,r6
    71d0:	3017883a 	mov	r11,r6
    71d4:	8b3fea36 	bltu	r17,r12,7180 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007180>
    71d8:	8200162e 	bgeu	r16,r8,7234 <__mdiff+0x17c>
    71dc:	8017883a 	mov	r11,r16
    71e0:	59400017 	ldw	r5,0(r11)
    71e4:	31800104 	addi	r6,r6,4
    71e8:	5ac00104 	addi	r11,r11,4
    71ec:	293fffcc 	andi	r4,r5,65535
    71f0:	20c7883a 	add	r3,r4,r3
    71f4:	280ed43a 	srli	r7,r5,16
    71f8:	180bd43a 	srai	r5,r3,16
    71fc:	193fffcc 	andi	r4,r3,65535
    7200:	3947883a 	add	r3,r7,r5
    7204:	180a943a 	slli	r5,r3,16
    7208:	1807d43a 	srai	r3,r3,16
    720c:	2908b03a 	or	r4,r5,r4
    7210:	313fff15 	stw	r4,-4(r6)
    7214:	5a3ff236 	bltu	r11,r8,71e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00071e0>
    7218:	0406303a 	nor	r3,zero,r16
    721c:	1a07883a 	add	r3,r3,r8
    7220:	1806d0ba 	srli	r3,r3,2
    7224:	18c00044 	addi	r3,r3,1
    7228:	18c7883a 	add	r3,r3,r3
    722c:	18c7883a 	add	r3,r3,r3
    7230:	50d5883a 	add	r10,r10,r3
    7234:	50ffff04 	addi	r3,r10,-4
    7238:	2000041e 	bne	r4,zero,724c <__mdiff+0x194>
    723c:	18ffff04 	addi	r3,r3,-4
    7240:	19000017 	ldw	r4,0(r3)
    7244:	4a7fffc4 	addi	r9,r9,-1
    7248:	203ffc26 	beq	r4,zero,723c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000723c>
    724c:	12400415 	stw	r9,16(r2)
    7250:	dfc00517 	ldw	ra,20(sp)
    7254:	dd000417 	ldw	r20,16(sp)
    7258:	dcc00317 	ldw	r19,12(sp)
    725c:	dc800217 	ldw	r18,8(sp)
    7260:	dc400117 	ldw	r17,4(sp)
    7264:	dc000017 	ldw	r16,0(sp)
    7268:	dec00604 	addi	sp,sp,24
    726c:	f800283a 	ret
    7270:	000b883a 	mov	r5,zero
    7274:	00067900 	call	6790 <_Balloc>
    7278:	00c00044 	movi	r3,1
    727c:	10c00415 	stw	r3,16(r2)
    7280:	10000515 	stw	zero,20(r2)
    7284:	003ff206 	br	7250 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007250>
    7288:	8023883a 	mov	r17,r16
    728c:	0029883a 	mov	r20,zero
    7290:	4021883a 	mov	r16,r8
    7294:	003fad06 	br	714c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000714c>
    7298:	9005883a 	mov	r2,r18
    729c:	94400504 	addi	r17,r18,20
    72a0:	9c000504 	addi	r16,r19,20
    72a4:	9825883a 	mov	r18,r19
    72a8:	05000044 	movi	r20,1
    72ac:	1027883a 	mov	r19,r2
    72b0:	003fa606 	br	714c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000714c>

000072b4 <__ulp>:
    72b4:	295ffc2c 	andhi	r5,r5,32752
    72b8:	00bf3034 	movhi	r2,64704
    72bc:	2887883a 	add	r3,r5,r2
    72c0:	00c0020e 	bge	zero,r3,72cc <__ulp+0x18>
    72c4:	0005883a 	mov	r2,zero
    72c8:	f800283a 	ret
    72cc:	00c7c83a 	sub	r3,zero,r3
    72d0:	1807d53a 	srai	r3,r3,20
    72d4:	008004c4 	movi	r2,19
    72d8:	10c00b0e 	bge	r2,r3,7308 <__ulp+0x54>
    72dc:	18bffb04 	addi	r2,r3,-20
    72e0:	01000784 	movi	r4,30
    72e4:	0007883a 	mov	r3,zero
    72e8:	20800516 	blt	r4,r2,7300 <__ulp+0x4c>
    72ec:	010007c4 	movi	r4,31
    72f0:	2089c83a 	sub	r4,r4,r2
    72f4:	00800044 	movi	r2,1
    72f8:	1104983a 	sll	r2,r2,r4
    72fc:	f800283a 	ret
    7300:	00800044 	movi	r2,1
    7304:	f800283a 	ret
    7308:	01400234 	movhi	r5,8
    730c:	28c7d83a 	sra	r3,r5,r3
    7310:	0005883a 	mov	r2,zero
    7314:	f800283a 	ret

00007318 <__b2d>:
    7318:	defffa04 	addi	sp,sp,-24
    731c:	dc000015 	stw	r16,0(sp)
    7320:	24000417 	ldw	r16,16(r4)
    7324:	dc400115 	stw	r17,4(sp)
    7328:	24400504 	addi	r17,r4,20
    732c:	8421883a 	add	r16,r16,r16
    7330:	8421883a 	add	r16,r16,r16
    7334:	8c21883a 	add	r16,r17,r16
    7338:	dc800215 	stw	r18,8(sp)
    733c:	84bfff17 	ldw	r18,-4(r16)
    7340:	dd000415 	stw	r20,16(sp)
    7344:	dcc00315 	stw	r19,12(sp)
    7348:	9009883a 	mov	r4,r18
    734c:	2829883a 	mov	r20,r5
    7350:	dfc00515 	stw	ra,20(sp)
    7354:	0006a840 	call	6a84 <__hi0bits>
    7358:	00c00804 	movi	r3,32
    735c:	1889c83a 	sub	r4,r3,r2
    7360:	a1000015 	stw	r4,0(r20)
    7364:	01000284 	movi	r4,10
    7368:	84ffff04 	addi	r19,r16,-4
    736c:	20801216 	blt	r4,r2,73b8 <__b2d+0xa0>
    7370:	018002c4 	movi	r6,11
    7374:	308dc83a 	sub	r6,r6,r2
    7378:	9186d83a 	srl	r3,r18,r6
    737c:	18cffc34 	orhi	r3,r3,16368
    7380:	8cc0212e 	bgeu	r17,r19,7408 <__b2d+0xf0>
    7384:	813ffe17 	ldw	r4,-8(r16)
    7388:	218cd83a 	srl	r6,r4,r6
    738c:	10800544 	addi	r2,r2,21
    7390:	9084983a 	sll	r2,r18,r2
    7394:	1184b03a 	or	r2,r2,r6
    7398:	dfc00517 	ldw	ra,20(sp)
    739c:	dd000417 	ldw	r20,16(sp)
    73a0:	dcc00317 	ldw	r19,12(sp)
    73a4:	dc800217 	ldw	r18,8(sp)
    73a8:	dc400117 	ldw	r17,4(sp)
    73ac:	dc000017 	ldw	r16,0(sp)
    73b0:	dec00604 	addi	sp,sp,24
    73b4:	f800283a 	ret
    73b8:	8cc00f2e 	bgeu	r17,r19,73f8 <__b2d+0xe0>
    73bc:	117ffd44 	addi	r5,r2,-11
    73c0:	80bffe17 	ldw	r2,-8(r16)
    73c4:	28000e26 	beq	r5,zero,7400 <__b2d+0xe8>
    73c8:	1949c83a 	sub	r4,r3,r5
    73cc:	9164983a 	sll	r18,r18,r5
    73d0:	1106d83a 	srl	r3,r2,r4
    73d4:	81bffe04 	addi	r6,r16,-8
    73d8:	948ffc34 	orhi	r18,r18,16368
    73dc:	90c6b03a 	or	r3,r18,r3
    73e0:	89800e2e 	bgeu	r17,r6,741c <__b2d+0x104>
    73e4:	81bffd17 	ldw	r6,-12(r16)
    73e8:	1144983a 	sll	r2,r2,r5
    73ec:	310ad83a 	srl	r5,r6,r4
    73f0:	2884b03a 	or	r2,r5,r2
    73f4:	003fe806 	br	7398 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007398>
    73f8:	10bffd44 	addi	r2,r2,-11
    73fc:	1000041e 	bne	r2,zero,7410 <__b2d+0xf8>
    7400:	90cffc34 	orhi	r3,r18,16368
    7404:	003fe406 	br	7398 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007398>
    7408:	000d883a 	mov	r6,zero
    740c:	003fdf06 	br	738c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000738c>
    7410:	90a4983a 	sll	r18,r18,r2
    7414:	0005883a 	mov	r2,zero
    7418:	003ff906 	br	7400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007400>
    741c:	1144983a 	sll	r2,r2,r5
    7420:	003fdd06 	br	7398 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007398>

00007424 <__d2b>:
    7424:	defff804 	addi	sp,sp,-32
    7428:	dc000215 	stw	r16,8(sp)
    742c:	3021883a 	mov	r16,r6
    7430:	dc400315 	stw	r17,12(sp)
    7434:	8022907a 	slli	r17,r16,1
    7438:	dd000615 	stw	r20,24(sp)
    743c:	2829883a 	mov	r20,r5
    7440:	01400044 	movi	r5,1
    7444:	dcc00515 	stw	r19,20(sp)
    7448:	dc800415 	stw	r18,16(sp)
    744c:	dfc00715 	stw	ra,28(sp)
    7450:	3825883a 	mov	r18,r7
    7454:	8822d57a 	srli	r17,r17,21
    7458:	00067900 	call	6790 <_Balloc>
    745c:	1027883a 	mov	r19,r2
    7460:	00800434 	movhi	r2,16
    7464:	10bfffc4 	addi	r2,r2,-1
    7468:	808c703a 	and	r6,r16,r2
    746c:	88000126 	beq	r17,zero,7474 <__d2b+0x50>
    7470:	31800434 	orhi	r6,r6,16
    7474:	d9800015 	stw	r6,0(sp)
    7478:	a0002426 	beq	r20,zero,750c <__d2b+0xe8>
    747c:	d9000104 	addi	r4,sp,4
    7480:	dd000115 	stw	r20,4(sp)
    7484:	0006aec0 	call	6aec <__lo0bits>
    7488:	d8c00017 	ldw	r3,0(sp)
    748c:	10002f1e 	bne	r2,zero,754c <__d2b+0x128>
    7490:	d9000117 	ldw	r4,4(sp)
    7494:	99000515 	stw	r4,20(r19)
    7498:	1821003a 	cmpeq	r16,r3,zero
    749c:	01000084 	movi	r4,2
    74a0:	2421c83a 	sub	r16,r4,r16
    74a4:	98c00615 	stw	r3,24(r19)
    74a8:	9c000415 	stw	r16,16(r19)
    74ac:	88001f1e 	bne	r17,zero,752c <__d2b+0x108>
    74b0:	10bef384 	addi	r2,r2,-1074
    74b4:	90800015 	stw	r2,0(r18)
    74b8:	00900034 	movhi	r2,16384
    74bc:	10bfffc4 	addi	r2,r2,-1
    74c0:	8085883a 	add	r2,r16,r2
    74c4:	1085883a 	add	r2,r2,r2
    74c8:	1085883a 	add	r2,r2,r2
    74cc:	9885883a 	add	r2,r19,r2
    74d0:	11000517 	ldw	r4,20(r2)
    74d4:	8020917a 	slli	r16,r16,5
    74d8:	0006a840 	call	6a84 <__hi0bits>
    74dc:	d8c00817 	ldw	r3,32(sp)
    74e0:	8085c83a 	sub	r2,r16,r2
    74e4:	18800015 	stw	r2,0(r3)
    74e8:	9805883a 	mov	r2,r19
    74ec:	dfc00717 	ldw	ra,28(sp)
    74f0:	dd000617 	ldw	r20,24(sp)
    74f4:	dcc00517 	ldw	r19,20(sp)
    74f8:	dc800417 	ldw	r18,16(sp)
    74fc:	dc400317 	ldw	r17,12(sp)
    7500:	dc000217 	ldw	r16,8(sp)
    7504:	dec00804 	addi	sp,sp,32
    7508:	f800283a 	ret
    750c:	d809883a 	mov	r4,sp
    7510:	0006aec0 	call	6aec <__lo0bits>
    7514:	d8c00017 	ldw	r3,0(sp)
    7518:	04000044 	movi	r16,1
    751c:	9c000415 	stw	r16,16(r19)
    7520:	98c00515 	stw	r3,20(r19)
    7524:	10800804 	addi	r2,r2,32
    7528:	883fe126 	beq	r17,zero,74b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00074b0>
    752c:	00c00d44 	movi	r3,53
    7530:	8c7ef344 	addi	r17,r17,-1075
    7534:	88a3883a 	add	r17,r17,r2
    7538:	1885c83a 	sub	r2,r3,r2
    753c:	d8c00817 	ldw	r3,32(sp)
    7540:	94400015 	stw	r17,0(r18)
    7544:	18800015 	stw	r2,0(r3)
    7548:	003fe706 	br	74e8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00074e8>
    754c:	01000804 	movi	r4,32
    7550:	2089c83a 	sub	r4,r4,r2
    7554:	1908983a 	sll	r4,r3,r4
    7558:	d9400117 	ldw	r5,4(sp)
    755c:	1886d83a 	srl	r3,r3,r2
    7560:	2148b03a 	or	r4,r4,r5
    7564:	99000515 	stw	r4,20(r19)
    7568:	d8c00015 	stw	r3,0(sp)
    756c:	003fca06 	br	7498 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007498>

00007570 <__ratio>:
    7570:	defff904 	addi	sp,sp,-28
    7574:	dc400315 	stw	r17,12(sp)
    7578:	2823883a 	mov	r17,r5
    757c:	d9400104 	addi	r5,sp,4
    7580:	dfc00615 	stw	ra,24(sp)
    7584:	dcc00515 	stw	r19,20(sp)
    7588:	dc800415 	stw	r18,16(sp)
    758c:	2027883a 	mov	r19,r4
    7590:	dc000215 	stw	r16,8(sp)
    7594:	00073180 	call	7318 <__b2d>
    7598:	d80b883a 	mov	r5,sp
    759c:	8809883a 	mov	r4,r17
    75a0:	1025883a 	mov	r18,r2
    75a4:	1821883a 	mov	r16,r3
    75a8:	00073180 	call	7318 <__b2d>
    75ac:	8a000417 	ldw	r8,16(r17)
    75b0:	99000417 	ldw	r4,16(r19)
    75b4:	d9400117 	ldw	r5,4(sp)
    75b8:	2209c83a 	sub	r4,r4,r8
    75bc:	2010917a 	slli	r8,r4,5
    75c0:	d9000017 	ldw	r4,0(sp)
    75c4:	2909c83a 	sub	r4,r5,r4
    75c8:	4109883a 	add	r4,r8,r4
    75cc:	01000e0e 	bge	zero,r4,7608 <__ratio+0x98>
    75d0:	2008953a 	slli	r4,r4,20
    75d4:	2421883a 	add	r16,r4,r16
    75d8:	100d883a 	mov	r6,r2
    75dc:	180f883a 	mov	r7,r3
    75e0:	9009883a 	mov	r4,r18
    75e4:	800b883a 	mov	r5,r16
    75e8:	000b45c0 	call	b45c <__divdf3>
    75ec:	dfc00617 	ldw	ra,24(sp)
    75f0:	dcc00517 	ldw	r19,20(sp)
    75f4:	dc800417 	ldw	r18,16(sp)
    75f8:	dc400317 	ldw	r17,12(sp)
    75fc:	dc000217 	ldw	r16,8(sp)
    7600:	dec00704 	addi	sp,sp,28
    7604:	f800283a 	ret
    7608:	2008953a 	slli	r4,r4,20
    760c:	1907c83a 	sub	r3,r3,r4
    7610:	003ff106 	br	75d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00075d8>

00007614 <_mprec_log10>:
    7614:	defffe04 	addi	sp,sp,-8
    7618:	dc000015 	stw	r16,0(sp)
    761c:	dfc00115 	stw	ra,4(sp)
    7620:	008005c4 	movi	r2,23
    7624:	2021883a 	mov	r16,r4
    7628:	11000d0e 	bge	r2,r4,7660 <_mprec_log10+0x4c>
    762c:	0005883a 	mov	r2,zero
    7630:	00cffc34 	movhi	r3,16368
    7634:	843fffc4 	addi	r16,r16,-1
    7638:	000d883a 	mov	r6,zero
    763c:	01d00934 	movhi	r7,16420
    7640:	1009883a 	mov	r4,r2
    7644:	180b883a 	mov	r5,r3
    7648:	000bf9c0 	call	bf9c <__muldf3>
    764c:	803ff91e 	bne	r16,zero,7634 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007634>
    7650:	dfc00117 	ldw	ra,4(sp)
    7654:	dc000017 	ldw	r16,0(sp)
    7658:	dec00204 	addi	sp,sp,8
    765c:	f800283a 	ret
    7660:	202090fa 	slli	r16,r4,3
    7664:	00800074 	movhi	r2,1
    7668:	1082c004 	addi	r2,r2,2816
    766c:	1421883a 	add	r16,r2,r16
    7670:	80800017 	ldw	r2,0(r16)
    7674:	80c00117 	ldw	r3,4(r16)
    7678:	dfc00117 	ldw	ra,4(sp)
    767c:	dc000017 	ldw	r16,0(sp)
    7680:	dec00204 	addi	sp,sp,8
    7684:	f800283a 	ret

00007688 <__copybits>:
    7688:	297fffc4 	addi	r5,r5,-1
    768c:	280fd17a 	srai	r7,r5,5
    7690:	30c00417 	ldw	r3,16(r6)
    7694:	30800504 	addi	r2,r6,20
    7698:	39c00044 	addi	r7,r7,1
    769c:	18c7883a 	add	r3,r3,r3
    76a0:	39cf883a 	add	r7,r7,r7
    76a4:	18c7883a 	add	r3,r3,r3
    76a8:	39cf883a 	add	r7,r7,r7
    76ac:	10c7883a 	add	r3,r2,r3
    76b0:	21cf883a 	add	r7,r4,r7
    76b4:	10c00d2e 	bgeu	r2,r3,76ec <__copybits+0x64>
    76b8:	200b883a 	mov	r5,r4
    76bc:	12000017 	ldw	r8,0(r2)
    76c0:	29400104 	addi	r5,r5,4
    76c4:	10800104 	addi	r2,r2,4
    76c8:	2a3fff15 	stw	r8,-4(r5)
    76cc:	10fffb36 	bltu	r2,r3,76bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00076bc>
    76d0:	1985c83a 	sub	r2,r3,r6
    76d4:	10bffac4 	addi	r2,r2,-21
    76d8:	1004d0ba 	srli	r2,r2,2
    76dc:	10800044 	addi	r2,r2,1
    76e0:	1085883a 	add	r2,r2,r2
    76e4:	1085883a 	add	r2,r2,r2
    76e8:	2089883a 	add	r4,r4,r2
    76ec:	21c0032e 	bgeu	r4,r7,76fc <__copybits+0x74>
    76f0:	20000015 	stw	zero,0(r4)
    76f4:	21000104 	addi	r4,r4,4
    76f8:	21fffd36 	bltu	r4,r7,76f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00076f0>
    76fc:	f800283a 	ret

00007700 <__any_on>:
    7700:	20c00417 	ldw	r3,16(r4)
    7704:	2805d17a 	srai	r2,r5,5
    7708:	21000504 	addi	r4,r4,20
    770c:	18800d0e 	bge	r3,r2,7744 <__any_on+0x44>
    7710:	18c7883a 	add	r3,r3,r3
    7714:	18c7883a 	add	r3,r3,r3
    7718:	20c7883a 	add	r3,r4,r3
    771c:	20c0192e 	bgeu	r4,r3,7784 <__any_on+0x84>
    7720:	18bfff17 	ldw	r2,-4(r3)
    7724:	18ffff04 	addi	r3,r3,-4
    7728:	1000041e 	bne	r2,zero,773c <__any_on+0x3c>
    772c:	20c0142e 	bgeu	r4,r3,7780 <__any_on+0x80>
    7730:	18ffff04 	addi	r3,r3,-4
    7734:	19400017 	ldw	r5,0(r3)
    7738:	283ffc26 	beq	r5,zero,772c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000772c>
    773c:	00800044 	movi	r2,1
    7740:	f800283a 	ret
    7744:	10c00a0e 	bge	r2,r3,7770 <__any_on+0x70>
    7748:	1085883a 	add	r2,r2,r2
    774c:	1085883a 	add	r2,r2,r2
    7750:	294007cc 	andi	r5,r5,31
    7754:	2087883a 	add	r3,r4,r2
    7758:	283ff026 	beq	r5,zero,771c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000771c>
    775c:	19800017 	ldw	r6,0(r3)
    7760:	3144d83a 	srl	r2,r6,r5
    7764:	114a983a 	sll	r5,r2,r5
    7768:	317ff41e 	bne	r6,r5,773c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000773c>
    776c:	003feb06 	br	771c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000771c>
    7770:	1085883a 	add	r2,r2,r2
    7774:	1085883a 	add	r2,r2,r2
    7778:	2087883a 	add	r3,r4,r2
    777c:	003fe706 	br	771c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000771c>
    7780:	f800283a 	ret
    7784:	0005883a 	mov	r2,zero
    7788:	f800283a 	ret

0000778c <_realloc_r>:
    778c:	defff604 	addi	sp,sp,-40
    7790:	dc800215 	stw	r18,8(sp)
    7794:	dfc00915 	stw	ra,36(sp)
    7798:	df000815 	stw	fp,32(sp)
    779c:	ddc00715 	stw	r23,28(sp)
    77a0:	dd800615 	stw	r22,24(sp)
    77a4:	dd400515 	stw	r21,20(sp)
    77a8:	dd000415 	stw	r20,16(sp)
    77ac:	dcc00315 	stw	r19,12(sp)
    77b0:	dc400115 	stw	r17,4(sp)
    77b4:	dc000015 	stw	r16,0(sp)
    77b8:	3025883a 	mov	r18,r6
    77bc:	2800b726 	beq	r5,zero,7a9c <_realloc_r+0x310>
    77c0:	282b883a 	mov	r21,r5
    77c4:	2029883a 	mov	r20,r4
    77c8:	000d7940 	call	d794 <__malloc_lock>
    77cc:	a8bfff17 	ldw	r2,-4(r21)
    77d0:	043fff04 	movi	r16,-4
    77d4:	90c002c4 	addi	r3,r18,11
    77d8:	01000584 	movi	r4,22
    77dc:	acfffe04 	addi	r19,r21,-8
    77e0:	1420703a 	and	r16,r2,r16
    77e4:	20c0332e 	bgeu	r4,r3,78b4 <_realloc_r+0x128>
    77e8:	047ffe04 	movi	r17,-8
    77ec:	1c62703a 	and	r17,r3,r17
    77f0:	8807883a 	mov	r3,r17
    77f4:	88005816 	blt	r17,zero,7958 <_realloc_r+0x1cc>
    77f8:	8c805736 	bltu	r17,r18,7958 <_realloc_r+0x1cc>
    77fc:	80c0300e 	bge	r16,r3,78c0 <_realloc_r+0x134>
    7800:	07000074 	movhi	fp,1
    7804:	e704a604 	addi	fp,fp,4760
    7808:	e1c00217 	ldw	r7,8(fp)
    780c:	9c09883a 	add	r4,r19,r16
    7810:	22000117 	ldw	r8,4(r4)
    7814:	21c06326 	beq	r4,r7,79a4 <_realloc_r+0x218>
    7818:	017fff84 	movi	r5,-2
    781c:	414a703a 	and	r5,r8,r5
    7820:	214b883a 	add	r5,r4,r5
    7824:	29800117 	ldw	r6,4(r5)
    7828:	3180004c 	andi	r6,r6,1
    782c:	30003f26 	beq	r6,zero,792c <_realloc_r+0x1a0>
    7830:	1080004c 	andi	r2,r2,1
    7834:	10008326 	beq	r2,zero,7a44 <_realloc_r+0x2b8>
    7838:	900b883a 	mov	r5,r18
    783c:	a009883a 	mov	r4,r20
    7840:	0005ad40 	call	5ad4 <_malloc_r>
    7844:	1025883a 	mov	r18,r2
    7848:	10011e26 	beq	r2,zero,7cc4 <_realloc_r+0x538>
    784c:	a93fff17 	ldw	r4,-4(r21)
    7850:	10fffe04 	addi	r3,r2,-8
    7854:	00bfff84 	movi	r2,-2
    7858:	2084703a 	and	r2,r4,r2
    785c:	9885883a 	add	r2,r19,r2
    7860:	1880ee26 	beq	r3,r2,7c1c <_realloc_r+0x490>
    7864:	81bfff04 	addi	r6,r16,-4
    7868:	00800904 	movi	r2,36
    786c:	1180b836 	bltu	r2,r6,7b50 <_realloc_r+0x3c4>
    7870:	00c004c4 	movi	r3,19
    7874:	19809636 	bltu	r3,r6,7ad0 <_realloc_r+0x344>
    7878:	9005883a 	mov	r2,r18
    787c:	a807883a 	mov	r3,r21
    7880:	19000017 	ldw	r4,0(r3)
    7884:	11000015 	stw	r4,0(r2)
    7888:	19000117 	ldw	r4,4(r3)
    788c:	11000115 	stw	r4,4(r2)
    7890:	18c00217 	ldw	r3,8(r3)
    7894:	10c00215 	stw	r3,8(r2)
    7898:	a80b883a 	mov	r5,r21
    789c:	a009883a 	mov	r4,r20
    78a0:	0004ee80 	call	4ee8 <_free_r>
    78a4:	a009883a 	mov	r4,r20
    78a8:	000d7b80 	call	d7b8 <__malloc_unlock>
    78ac:	9005883a 	mov	r2,r18
    78b0:	00001206 	br	78fc <_realloc_r+0x170>
    78b4:	00c00404 	movi	r3,16
    78b8:	1823883a 	mov	r17,r3
    78bc:	003fce06 	br	77f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00077f8>
    78c0:	a825883a 	mov	r18,r21
    78c4:	8445c83a 	sub	r2,r16,r17
    78c8:	00c003c4 	movi	r3,15
    78cc:	18802636 	bltu	r3,r2,7968 <_realloc_r+0x1dc>
    78d0:	99800117 	ldw	r6,4(r19)
    78d4:	9c07883a 	add	r3,r19,r16
    78d8:	3180004c 	andi	r6,r6,1
    78dc:	3420b03a 	or	r16,r6,r16
    78e0:	9c000115 	stw	r16,4(r19)
    78e4:	18800117 	ldw	r2,4(r3)
    78e8:	10800054 	ori	r2,r2,1
    78ec:	18800115 	stw	r2,4(r3)
    78f0:	a009883a 	mov	r4,r20
    78f4:	000d7b80 	call	d7b8 <__malloc_unlock>
    78f8:	9005883a 	mov	r2,r18
    78fc:	dfc00917 	ldw	ra,36(sp)
    7900:	df000817 	ldw	fp,32(sp)
    7904:	ddc00717 	ldw	r23,28(sp)
    7908:	dd800617 	ldw	r22,24(sp)
    790c:	dd400517 	ldw	r21,20(sp)
    7910:	dd000417 	ldw	r20,16(sp)
    7914:	dcc00317 	ldw	r19,12(sp)
    7918:	dc800217 	ldw	r18,8(sp)
    791c:	dc400117 	ldw	r17,4(sp)
    7920:	dc000017 	ldw	r16,0(sp)
    7924:	dec00a04 	addi	sp,sp,40
    7928:	f800283a 	ret
    792c:	017fff04 	movi	r5,-4
    7930:	414a703a 	and	r5,r8,r5
    7934:	814d883a 	add	r6,r16,r5
    7938:	30c01f16 	blt	r6,r3,79b8 <_realloc_r+0x22c>
    793c:	20800317 	ldw	r2,12(r4)
    7940:	20c00217 	ldw	r3,8(r4)
    7944:	a825883a 	mov	r18,r21
    7948:	3021883a 	mov	r16,r6
    794c:	18800315 	stw	r2,12(r3)
    7950:	10c00215 	stw	r3,8(r2)
    7954:	003fdb06 	br	78c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078c4>
    7958:	00800304 	movi	r2,12
    795c:	a0800015 	stw	r2,0(r20)
    7960:	0005883a 	mov	r2,zero
    7964:	003fe506 	br	78fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078fc>
    7968:	98c00117 	ldw	r3,4(r19)
    796c:	9c4b883a 	add	r5,r19,r17
    7970:	11000054 	ori	r4,r2,1
    7974:	18c0004c 	andi	r3,r3,1
    7978:	1c62b03a 	or	r17,r3,r17
    797c:	9c400115 	stw	r17,4(r19)
    7980:	29000115 	stw	r4,4(r5)
    7984:	2885883a 	add	r2,r5,r2
    7988:	10c00117 	ldw	r3,4(r2)
    798c:	29400204 	addi	r5,r5,8
    7990:	a009883a 	mov	r4,r20
    7994:	18c00054 	ori	r3,r3,1
    7998:	10c00115 	stw	r3,4(r2)
    799c:	0004ee80 	call	4ee8 <_free_r>
    79a0:	003fd306 	br	78f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078f0>
    79a4:	017fff04 	movi	r5,-4
    79a8:	414a703a 	and	r5,r8,r5
    79ac:	89800404 	addi	r6,r17,16
    79b0:	8151883a 	add	r8,r16,r5
    79b4:	4180590e 	bge	r8,r6,7b1c <_realloc_r+0x390>
    79b8:	1080004c 	andi	r2,r2,1
    79bc:	103f9e1e 	bne	r2,zero,7838 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007838>
    79c0:	adbffe17 	ldw	r22,-8(r21)
    79c4:	00bfff04 	movi	r2,-4
    79c8:	9dadc83a 	sub	r22,r19,r22
    79cc:	b1800117 	ldw	r6,4(r22)
    79d0:	3084703a 	and	r2,r6,r2
    79d4:	20002026 	beq	r4,zero,7a58 <_realloc_r+0x2cc>
    79d8:	80af883a 	add	r23,r16,r2
    79dc:	b96f883a 	add	r23,r23,r5
    79e0:	21c05f26 	beq	r4,r7,7b60 <_realloc_r+0x3d4>
    79e4:	b8c01c16 	blt	r23,r3,7a58 <_realloc_r+0x2cc>
    79e8:	20800317 	ldw	r2,12(r4)
    79ec:	20c00217 	ldw	r3,8(r4)
    79f0:	81bfff04 	addi	r6,r16,-4
    79f4:	01000904 	movi	r4,36
    79f8:	18800315 	stw	r2,12(r3)
    79fc:	10c00215 	stw	r3,8(r2)
    7a00:	b0c00217 	ldw	r3,8(r22)
    7a04:	b0800317 	ldw	r2,12(r22)
    7a08:	b4800204 	addi	r18,r22,8
    7a0c:	18800315 	stw	r2,12(r3)
    7a10:	10c00215 	stw	r3,8(r2)
    7a14:	21801b36 	bltu	r4,r6,7a84 <_realloc_r+0x2f8>
    7a18:	008004c4 	movi	r2,19
    7a1c:	1180352e 	bgeu	r2,r6,7af4 <_realloc_r+0x368>
    7a20:	a8800017 	ldw	r2,0(r21)
    7a24:	b0800215 	stw	r2,8(r22)
    7a28:	a8800117 	ldw	r2,4(r21)
    7a2c:	b0800315 	stw	r2,12(r22)
    7a30:	008006c4 	movi	r2,27
    7a34:	11807f36 	bltu	r2,r6,7c34 <_realloc_r+0x4a8>
    7a38:	b0800404 	addi	r2,r22,16
    7a3c:	ad400204 	addi	r21,r21,8
    7a40:	00002d06 	br	7af8 <_realloc_r+0x36c>
    7a44:	adbffe17 	ldw	r22,-8(r21)
    7a48:	00bfff04 	movi	r2,-4
    7a4c:	9dadc83a 	sub	r22,r19,r22
    7a50:	b1000117 	ldw	r4,4(r22)
    7a54:	2084703a 	and	r2,r4,r2
    7a58:	b03f7726 	beq	r22,zero,7838 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007838>
    7a5c:	80af883a 	add	r23,r16,r2
    7a60:	b8ff7516 	blt	r23,r3,7838 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007838>
    7a64:	b0800317 	ldw	r2,12(r22)
    7a68:	b0c00217 	ldw	r3,8(r22)
    7a6c:	81bfff04 	addi	r6,r16,-4
    7a70:	01000904 	movi	r4,36
    7a74:	18800315 	stw	r2,12(r3)
    7a78:	10c00215 	stw	r3,8(r2)
    7a7c:	b4800204 	addi	r18,r22,8
    7a80:	21bfe52e 	bgeu	r4,r6,7a18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007a18>
    7a84:	a80b883a 	mov	r5,r21
    7a88:	9009883a 	mov	r4,r18
    7a8c:	000650c0 	call	650c <memmove>
    7a90:	b821883a 	mov	r16,r23
    7a94:	b027883a 	mov	r19,r22
    7a98:	003f8a06 	br	78c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078c4>
    7a9c:	300b883a 	mov	r5,r6
    7aa0:	dfc00917 	ldw	ra,36(sp)
    7aa4:	df000817 	ldw	fp,32(sp)
    7aa8:	ddc00717 	ldw	r23,28(sp)
    7aac:	dd800617 	ldw	r22,24(sp)
    7ab0:	dd400517 	ldw	r21,20(sp)
    7ab4:	dd000417 	ldw	r20,16(sp)
    7ab8:	dcc00317 	ldw	r19,12(sp)
    7abc:	dc800217 	ldw	r18,8(sp)
    7ac0:	dc400117 	ldw	r17,4(sp)
    7ac4:	dc000017 	ldw	r16,0(sp)
    7ac8:	dec00a04 	addi	sp,sp,40
    7acc:	0005ad41 	jmpi	5ad4 <_malloc_r>
    7ad0:	a8c00017 	ldw	r3,0(r21)
    7ad4:	90c00015 	stw	r3,0(r18)
    7ad8:	a8c00117 	ldw	r3,4(r21)
    7adc:	90c00115 	stw	r3,4(r18)
    7ae0:	00c006c4 	movi	r3,27
    7ae4:	19804536 	bltu	r3,r6,7bfc <_realloc_r+0x470>
    7ae8:	90800204 	addi	r2,r18,8
    7aec:	a8c00204 	addi	r3,r21,8
    7af0:	003f6306 	br	7880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007880>
    7af4:	9005883a 	mov	r2,r18
    7af8:	a8c00017 	ldw	r3,0(r21)
    7afc:	b821883a 	mov	r16,r23
    7b00:	b027883a 	mov	r19,r22
    7b04:	10c00015 	stw	r3,0(r2)
    7b08:	a8c00117 	ldw	r3,4(r21)
    7b0c:	10c00115 	stw	r3,4(r2)
    7b10:	a8c00217 	ldw	r3,8(r21)
    7b14:	10c00215 	stw	r3,8(r2)
    7b18:	003f6a06 	br	78c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078c4>
    7b1c:	9c67883a 	add	r19,r19,r17
    7b20:	4445c83a 	sub	r2,r8,r17
    7b24:	e4c00215 	stw	r19,8(fp)
    7b28:	10800054 	ori	r2,r2,1
    7b2c:	98800115 	stw	r2,4(r19)
    7b30:	a8bfff17 	ldw	r2,-4(r21)
    7b34:	a009883a 	mov	r4,r20
    7b38:	1080004c 	andi	r2,r2,1
    7b3c:	1462b03a 	or	r17,r2,r17
    7b40:	ac7fff15 	stw	r17,-4(r21)
    7b44:	000d7b80 	call	d7b8 <__malloc_unlock>
    7b48:	a805883a 	mov	r2,r21
    7b4c:	003f6b06 	br	78fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078fc>
    7b50:	a80b883a 	mov	r5,r21
    7b54:	9009883a 	mov	r4,r18
    7b58:	000650c0 	call	650c <memmove>
    7b5c:	003f4e06 	br	7898 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007898>
    7b60:	89000404 	addi	r4,r17,16
    7b64:	b93fbc16 	blt	r23,r4,7a58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007a58>
    7b68:	b0800317 	ldw	r2,12(r22)
    7b6c:	b0c00217 	ldw	r3,8(r22)
    7b70:	81bfff04 	addi	r6,r16,-4
    7b74:	01000904 	movi	r4,36
    7b78:	18800315 	stw	r2,12(r3)
    7b7c:	10c00215 	stw	r3,8(r2)
    7b80:	b4800204 	addi	r18,r22,8
    7b84:	21804336 	bltu	r4,r6,7c94 <_realloc_r+0x508>
    7b88:	008004c4 	movi	r2,19
    7b8c:	11803f2e 	bgeu	r2,r6,7c8c <_realloc_r+0x500>
    7b90:	a8800017 	ldw	r2,0(r21)
    7b94:	b0800215 	stw	r2,8(r22)
    7b98:	a8800117 	ldw	r2,4(r21)
    7b9c:	b0800315 	stw	r2,12(r22)
    7ba0:	008006c4 	movi	r2,27
    7ba4:	11803f36 	bltu	r2,r6,7ca4 <_realloc_r+0x518>
    7ba8:	b0800404 	addi	r2,r22,16
    7bac:	ad400204 	addi	r21,r21,8
    7bb0:	a8c00017 	ldw	r3,0(r21)
    7bb4:	10c00015 	stw	r3,0(r2)
    7bb8:	a8c00117 	ldw	r3,4(r21)
    7bbc:	10c00115 	stw	r3,4(r2)
    7bc0:	a8c00217 	ldw	r3,8(r21)
    7bc4:	10c00215 	stw	r3,8(r2)
    7bc8:	b447883a 	add	r3,r22,r17
    7bcc:	bc45c83a 	sub	r2,r23,r17
    7bd0:	e0c00215 	stw	r3,8(fp)
    7bd4:	10800054 	ori	r2,r2,1
    7bd8:	18800115 	stw	r2,4(r3)
    7bdc:	b0800117 	ldw	r2,4(r22)
    7be0:	a009883a 	mov	r4,r20
    7be4:	1080004c 	andi	r2,r2,1
    7be8:	1462b03a 	or	r17,r2,r17
    7bec:	b4400115 	stw	r17,4(r22)
    7bf0:	000d7b80 	call	d7b8 <__malloc_unlock>
    7bf4:	9005883a 	mov	r2,r18
    7bf8:	003f4006 	br	78fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078fc>
    7bfc:	a8c00217 	ldw	r3,8(r21)
    7c00:	90c00215 	stw	r3,8(r18)
    7c04:	a8c00317 	ldw	r3,12(r21)
    7c08:	90c00315 	stw	r3,12(r18)
    7c0c:	30801126 	beq	r6,r2,7c54 <_realloc_r+0x4c8>
    7c10:	90800404 	addi	r2,r18,16
    7c14:	a8c00404 	addi	r3,r21,16
    7c18:	003f1906 	br	7880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007880>
    7c1c:	90ffff17 	ldw	r3,-4(r18)
    7c20:	00bfff04 	movi	r2,-4
    7c24:	a825883a 	mov	r18,r21
    7c28:	1884703a 	and	r2,r3,r2
    7c2c:	80a1883a 	add	r16,r16,r2
    7c30:	003f2406 	br	78c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078c4>
    7c34:	a8800217 	ldw	r2,8(r21)
    7c38:	b0800415 	stw	r2,16(r22)
    7c3c:	a8800317 	ldw	r2,12(r21)
    7c40:	b0800515 	stw	r2,20(r22)
    7c44:	31000a26 	beq	r6,r4,7c70 <_realloc_r+0x4e4>
    7c48:	b0800604 	addi	r2,r22,24
    7c4c:	ad400404 	addi	r21,r21,16
    7c50:	003fa906 	br	7af8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007af8>
    7c54:	a9000417 	ldw	r4,16(r21)
    7c58:	90800604 	addi	r2,r18,24
    7c5c:	a8c00604 	addi	r3,r21,24
    7c60:	91000415 	stw	r4,16(r18)
    7c64:	a9000517 	ldw	r4,20(r21)
    7c68:	91000515 	stw	r4,20(r18)
    7c6c:	003f0406 	br	7880 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007880>
    7c70:	a8c00417 	ldw	r3,16(r21)
    7c74:	ad400604 	addi	r21,r21,24
    7c78:	b0800804 	addi	r2,r22,32
    7c7c:	b0c00615 	stw	r3,24(r22)
    7c80:	a8ffff17 	ldw	r3,-4(r21)
    7c84:	b0c00715 	stw	r3,28(r22)
    7c88:	003f9b06 	br	7af8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007af8>
    7c8c:	9005883a 	mov	r2,r18
    7c90:	003fc706 	br	7bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007bb0>
    7c94:	a80b883a 	mov	r5,r21
    7c98:	9009883a 	mov	r4,r18
    7c9c:	000650c0 	call	650c <memmove>
    7ca0:	003fc906 	br	7bc8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007bc8>
    7ca4:	a8800217 	ldw	r2,8(r21)
    7ca8:	b0800415 	stw	r2,16(r22)
    7cac:	a8800317 	ldw	r2,12(r21)
    7cb0:	b0800515 	stw	r2,20(r22)
    7cb4:	31000726 	beq	r6,r4,7cd4 <_realloc_r+0x548>
    7cb8:	b0800604 	addi	r2,r22,24
    7cbc:	ad400404 	addi	r21,r21,16
    7cc0:	003fbb06 	br	7bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007bb0>
    7cc4:	a009883a 	mov	r4,r20
    7cc8:	000d7b80 	call	d7b8 <__malloc_unlock>
    7ccc:	0005883a 	mov	r2,zero
    7cd0:	003f0a06 	br	78fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00078fc>
    7cd4:	a8c00417 	ldw	r3,16(r21)
    7cd8:	ad400604 	addi	r21,r21,24
    7cdc:	b0800804 	addi	r2,r22,32
    7ce0:	b0c00615 	stw	r3,24(r22)
    7ce4:	a8ffff17 	ldw	r3,-4(r21)
    7ce8:	b0c00715 	stw	r3,28(r22)
    7cec:	003fb006 	br	7bb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007bb0>

00007cf0 <__fpclassifyd>:
    7cf0:	00a00034 	movhi	r2,32768
    7cf4:	10bfffc4 	addi	r2,r2,-1
    7cf8:	2884703a 	and	r2,r5,r2
    7cfc:	10000726 	beq	r2,zero,7d1c <__fpclassifyd+0x2c>
    7d00:	00fffc34 	movhi	r3,65520
    7d04:	019ff834 	movhi	r6,32736
    7d08:	28c7883a 	add	r3,r5,r3
    7d0c:	31bfffc4 	addi	r6,r6,-1
    7d10:	30c00536 	bltu	r6,r3,7d28 <__fpclassifyd+0x38>
    7d14:	00800104 	movi	r2,4
    7d18:	f800283a 	ret
    7d1c:	2000021e 	bne	r4,zero,7d28 <__fpclassifyd+0x38>
    7d20:	00800084 	movi	r2,2
    7d24:	f800283a 	ret
    7d28:	00dffc34 	movhi	r3,32752
    7d2c:	019ff834 	movhi	r6,32736
    7d30:	28cb883a 	add	r5,r5,r3
    7d34:	31bfffc4 	addi	r6,r6,-1
    7d38:	317ff62e 	bgeu	r6,r5,7d14 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d14>
    7d3c:	01400434 	movhi	r5,16
    7d40:	297fffc4 	addi	r5,r5,-1
    7d44:	28800236 	bltu	r5,r2,7d50 <__fpclassifyd+0x60>
    7d48:	008000c4 	movi	r2,3
    7d4c:	f800283a 	ret
    7d50:	10c00226 	beq	r2,r3,7d5c <__fpclassifyd+0x6c>
    7d54:	0005883a 	mov	r2,zero
    7d58:	f800283a 	ret
    7d5c:	2005003a 	cmpeq	r2,r4,zero
    7d60:	f800283a 	ret

00007d64 <_sbrk_r>:
    7d64:	defffd04 	addi	sp,sp,-12
    7d68:	dc000015 	stw	r16,0(sp)
    7d6c:	04000074 	movhi	r16,1
    7d70:	dc400115 	stw	r17,4(sp)
    7d74:	84121504 	addi	r16,r16,18516
    7d78:	2023883a 	mov	r17,r4
    7d7c:	2809883a 	mov	r4,r5
    7d80:	dfc00215 	stw	ra,8(sp)
    7d84:	80000015 	stw	zero,0(r16)
    7d88:	000d9780 	call	d978 <sbrk>
    7d8c:	00ffffc4 	movi	r3,-1
    7d90:	10c00526 	beq	r2,r3,7da8 <_sbrk_r+0x44>
    7d94:	dfc00217 	ldw	ra,8(sp)
    7d98:	dc400117 	ldw	r17,4(sp)
    7d9c:	dc000017 	ldw	r16,0(sp)
    7da0:	dec00304 	addi	sp,sp,12
    7da4:	f800283a 	ret
    7da8:	80c00017 	ldw	r3,0(r16)
    7dac:	183ff926 	beq	r3,zero,7d94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d94>
    7db0:	88c00015 	stw	r3,0(r17)
    7db4:	003ff706 	br	7d94 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007d94>

00007db8 <__sread>:
    7db8:	defffe04 	addi	sp,sp,-8
    7dbc:	dc000015 	stw	r16,0(sp)
    7dc0:	2821883a 	mov	r16,r5
    7dc4:	2940038f 	ldh	r5,14(r5)
    7dc8:	dfc00115 	stw	ra,4(sp)
    7dcc:	0009bac0 	call	9bac <_read_r>
    7dd0:	10000716 	blt	r2,zero,7df0 <__sread+0x38>
    7dd4:	80c01417 	ldw	r3,80(r16)
    7dd8:	1887883a 	add	r3,r3,r2
    7ddc:	80c01415 	stw	r3,80(r16)
    7de0:	dfc00117 	ldw	ra,4(sp)
    7de4:	dc000017 	ldw	r16,0(sp)
    7de8:	dec00204 	addi	sp,sp,8
    7dec:	f800283a 	ret
    7df0:	80c0030b 	ldhu	r3,12(r16)
    7df4:	18fbffcc 	andi	r3,r3,61439
    7df8:	80c0030d 	sth	r3,12(r16)
    7dfc:	dfc00117 	ldw	ra,4(sp)
    7e00:	dc000017 	ldw	r16,0(sp)
    7e04:	dec00204 	addi	sp,sp,8
    7e08:	f800283a 	ret

00007e0c <__seofread>:
    7e0c:	0005883a 	mov	r2,zero
    7e10:	f800283a 	ret

00007e14 <__swrite>:
    7e14:	2880030b 	ldhu	r2,12(r5)
    7e18:	defffb04 	addi	sp,sp,-20
    7e1c:	dcc00315 	stw	r19,12(sp)
    7e20:	dc800215 	stw	r18,8(sp)
    7e24:	dc400115 	stw	r17,4(sp)
    7e28:	dc000015 	stw	r16,0(sp)
    7e2c:	dfc00415 	stw	ra,16(sp)
    7e30:	10c0400c 	andi	r3,r2,256
    7e34:	2821883a 	mov	r16,r5
    7e38:	2023883a 	mov	r17,r4
    7e3c:	3025883a 	mov	r18,r6
    7e40:	3827883a 	mov	r19,r7
    7e44:	18000526 	beq	r3,zero,7e5c <__swrite+0x48>
    7e48:	2940038f 	ldh	r5,14(r5)
    7e4c:	01c00084 	movi	r7,2
    7e50:	000d883a 	mov	r6,zero
    7e54:	0009b4c0 	call	9b4c <_lseek_r>
    7e58:	8080030b 	ldhu	r2,12(r16)
    7e5c:	8140038f 	ldh	r5,14(r16)
    7e60:	10bbffcc 	andi	r2,r2,61439
    7e64:	980f883a 	mov	r7,r19
    7e68:	900d883a 	mov	r6,r18
    7e6c:	8809883a 	mov	r4,r17
    7e70:	8080030d 	sth	r2,12(r16)
    7e74:	dfc00417 	ldw	ra,16(sp)
    7e78:	dcc00317 	ldw	r19,12(sp)
    7e7c:	dc800217 	ldw	r18,8(sp)
    7e80:	dc400117 	ldw	r17,4(sp)
    7e84:	dc000017 	ldw	r16,0(sp)
    7e88:	dec00504 	addi	sp,sp,20
    7e8c:	00096181 	jmpi	9618 <_write_r>

00007e90 <__sseek>:
    7e90:	defffe04 	addi	sp,sp,-8
    7e94:	dc000015 	stw	r16,0(sp)
    7e98:	2821883a 	mov	r16,r5
    7e9c:	2940038f 	ldh	r5,14(r5)
    7ea0:	dfc00115 	stw	ra,4(sp)
    7ea4:	0009b4c0 	call	9b4c <_lseek_r>
    7ea8:	00ffffc4 	movi	r3,-1
    7eac:	10c00826 	beq	r2,r3,7ed0 <__sseek+0x40>
    7eb0:	80c0030b 	ldhu	r3,12(r16)
    7eb4:	80801415 	stw	r2,80(r16)
    7eb8:	18c40014 	ori	r3,r3,4096
    7ebc:	80c0030d 	sth	r3,12(r16)
    7ec0:	dfc00117 	ldw	ra,4(sp)
    7ec4:	dc000017 	ldw	r16,0(sp)
    7ec8:	dec00204 	addi	sp,sp,8
    7ecc:	f800283a 	ret
    7ed0:	80c0030b 	ldhu	r3,12(r16)
    7ed4:	18fbffcc 	andi	r3,r3,61439
    7ed8:	80c0030d 	sth	r3,12(r16)
    7edc:	dfc00117 	ldw	ra,4(sp)
    7ee0:	dc000017 	ldw	r16,0(sp)
    7ee4:	dec00204 	addi	sp,sp,8
    7ee8:	f800283a 	ret

00007eec <__sclose>:
    7eec:	2940038f 	ldh	r5,14(r5)
    7ef0:	00096781 	jmpi	9678 <_close_r>

00007ef4 <strcmp>:
    7ef4:	2144b03a 	or	r2,r4,r5
    7ef8:	108000cc 	andi	r2,r2,3
    7efc:	1000171e 	bne	r2,zero,7f5c <strcmp+0x68>
    7f00:	20800017 	ldw	r2,0(r4)
    7f04:	28c00017 	ldw	r3,0(r5)
    7f08:	10c0141e 	bne	r2,r3,7f5c <strcmp+0x68>
    7f0c:	027fbff4 	movhi	r9,65279
    7f10:	4a7fbfc4 	addi	r9,r9,-257
    7f14:	0086303a 	nor	r3,zero,r2
    7f18:	02202074 	movhi	r8,32897
    7f1c:	1245883a 	add	r2,r2,r9
    7f20:	42202004 	addi	r8,r8,-32640
    7f24:	10c4703a 	and	r2,r2,r3
    7f28:	1204703a 	and	r2,r2,r8
    7f2c:	10000226 	beq	r2,zero,7f38 <strcmp+0x44>
    7f30:	00002306 	br	7fc0 <strcmp+0xcc>
    7f34:	1000221e 	bne	r2,zero,7fc0 <strcmp+0xcc>
    7f38:	21000104 	addi	r4,r4,4
    7f3c:	20c00017 	ldw	r3,0(r4)
    7f40:	29400104 	addi	r5,r5,4
    7f44:	29800017 	ldw	r6,0(r5)
    7f48:	1a4f883a 	add	r7,r3,r9
    7f4c:	00c4303a 	nor	r2,zero,r3
    7f50:	3884703a 	and	r2,r7,r2
    7f54:	1204703a 	and	r2,r2,r8
    7f58:	19bff626 	beq	r3,r6,7f34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f34>
    7f5c:	20800003 	ldbu	r2,0(r4)
    7f60:	10c03fcc 	andi	r3,r2,255
    7f64:	18c0201c 	xori	r3,r3,128
    7f68:	18ffe004 	addi	r3,r3,-128
    7f6c:	18000c26 	beq	r3,zero,7fa0 <strcmp+0xac>
    7f70:	29800007 	ldb	r6,0(r5)
    7f74:	19800326 	beq	r3,r6,7f84 <strcmp+0x90>
    7f78:	00001306 	br	7fc8 <strcmp+0xd4>
    7f7c:	29800007 	ldb	r6,0(r5)
    7f80:	11800b1e 	bne	r2,r6,7fb0 <strcmp+0xbc>
    7f84:	21000044 	addi	r4,r4,1
    7f88:	20c00003 	ldbu	r3,0(r4)
    7f8c:	29400044 	addi	r5,r5,1
    7f90:	18803fcc 	andi	r2,r3,255
    7f94:	1080201c 	xori	r2,r2,128
    7f98:	10bfe004 	addi	r2,r2,-128
    7f9c:	103ff71e 	bne	r2,zero,7f7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007f7c>
    7fa0:	0007883a 	mov	r3,zero
    7fa4:	28800003 	ldbu	r2,0(r5)
    7fa8:	1885c83a 	sub	r2,r3,r2
    7fac:	f800283a 	ret
    7fb0:	28800003 	ldbu	r2,0(r5)
    7fb4:	18c03fcc 	andi	r3,r3,255
    7fb8:	1885c83a 	sub	r2,r3,r2
    7fbc:	f800283a 	ret
    7fc0:	0005883a 	mov	r2,zero
    7fc4:	f800283a 	ret
    7fc8:	10c03fcc 	andi	r3,r2,255
    7fcc:	003ff506 	br	7fa4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0007fa4>

00007fd0 <__sprint_r.part.0>:
    7fd0:	28801917 	ldw	r2,100(r5)
    7fd4:	defff604 	addi	sp,sp,-40
    7fd8:	dd400515 	stw	r21,20(sp)
    7fdc:	dfc00915 	stw	ra,36(sp)
    7fe0:	df000815 	stw	fp,32(sp)
    7fe4:	ddc00715 	stw	r23,28(sp)
    7fe8:	dd800615 	stw	r22,24(sp)
    7fec:	dd000415 	stw	r20,16(sp)
    7ff0:	dcc00315 	stw	r19,12(sp)
    7ff4:	dc800215 	stw	r18,8(sp)
    7ff8:	dc400115 	stw	r17,4(sp)
    7ffc:	dc000015 	stw	r16,0(sp)
    8000:	1088000c 	andi	r2,r2,8192
    8004:	302b883a 	mov	r21,r6
    8008:	10002e26 	beq	r2,zero,80c4 <__sprint_r.part.0+0xf4>
    800c:	30800217 	ldw	r2,8(r6)
    8010:	35800017 	ldw	r22,0(r6)
    8014:	10002926 	beq	r2,zero,80bc <__sprint_r.part.0+0xec>
    8018:	2827883a 	mov	r19,r5
    801c:	2029883a 	mov	r20,r4
    8020:	b5c00104 	addi	r23,r22,4
    8024:	04bfffc4 	movi	r18,-1
    8028:	bc400017 	ldw	r17,0(r23)
    802c:	b4000017 	ldw	r16,0(r22)
    8030:	0039883a 	mov	fp,zero
    8034:	8822d0ba 	srli	r17,r17,2
    8038:	8800031e 	bne	r17,zero,8048 <__sprint_r.part.0+0x78>
    803c:	00001806 	br	80a0 <__sprint_r.part.0+0xd0>
    8040:	84000104 	addi	r16,r16,4
    8044:	8f001526 	beq	r17,fp,809c <__sprint_r.part.0+0xcc>
    8048:	81400017 	ldw	r5,0(r16)
    804c:	980d883a 	mov	r6,r19
    8050:	a009883a 	mov	r4,r20
    8054:	00099f80 	call	99f8 <_fputwc_r>
    8058:	e7000044 	addi	fp,fp,1
    805c:	14bff81e 	bne	r2,r18,8040 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008040>
    8060:	9005883a 	mov	r2,r18
    8064:	a8000215 	stw	zero,8(r21)
    8068:	a8000115 	stw	zero,4(r21)
    806c:	dfc00917 	ldw	ra,36(sp)
    8070:	df000817 	ldw	fp,32(sp)
    8074:	ddc00717 	ldw	r23,28(sp)
    8078:	dd800617 	ldw	r22,24(sp)
    807c:	dd400517 	ldw	r21,20(sp)
    8080:	dd000417 	ldw	r20,16(sp)
    8084:	dcc00317 	ldw	r19,12(sp)
    8088:	dc800217 	ldw	r18,8(sp)
    808c:	dc400117 	ldw	r17,4(sp)
    8090:	dc000017 	ldw	r16,0(sp)
    8094:	dec00a04 	addi	sp,sp,40
    8098:	f800283a 	ret
    809c:	a8800217 	ldw	r2,8(r21)
    80a0:	8c63883a 	add	r17,r17,r17
    80a4:	8c63883a 	add	r17,r17,r17
    80a8:	1445c83a 	sub	r2,r2,r17
    80ac:	a8800215 	stw	r2,8(r21)
    80b0:	b5800204 	addi	r22,r22,8
    80b4:	bdc00204 	addi	r23,r23,8
    80b8:	103fdb1e 	bne	r2,zero,8028 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008028>
    80bc:	0005883a 	mov	r2,zero
    80c0:	003fe806 	br	8064 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008064>
    80c4:	00051f80 	call	51f8 <__sfvwrite_r>
    80c8:	003fe606 	br	8064 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008064>

000080cc <__sprint_r>:
    80cc:	30c00217 	ldw	r3,8(r6)
    80d0:	18000126 	beq	r3,zero,80d8 <__sprint_r+0xc>
    80d4:	0007fd01 	jmpi	7fd0 <__sprint_r.part.0>
    80d8:	30000115 	stw	zero,4(r6)
    80dc:	0005883a 	mov	r2,zero
    80e0:	f800283a 	ret

000080e4 <___vfiprintf_internal_r>:
    80e4:	deffc904 	addi	sp,sp,-220
    80e8:	df003515 	stw	fp,212(sp)
    80ec:	dd003115 	stw	r20,196(sp)
    80f0:	dfc03615 	stw	ra,216(sp)
    80f4:	ddc03415 	stw	r23,208(sp)
    80f8:	dd803315 	stw	r22,204(sp)
    80fc:	dd403215 	stw	r21,200(sp)
    8100:	dcc03015 	stw	r19,192(sp)
    8104:	dc802f15 	stw	r18,188(sp)
    8108:	dc402e15 	stw	r17,184(sp)
    810c:	dc002d15 	stw	r16,180(sp)
    8110:	d9002015 	stw	r4,128(sp)
    8114:	d9c02215 	stw	r7,136(sp)
    8118:	2829883a 	mov	r20,r5
    811c:	3039883a 	mov	fp,r6
    8120:	20000226 	beq	r4,zero,812c <___vfiprintf_internal_r+0x48>
    8124:	20800e17 	ldw	r2,56(r4)
    8128:	1000cf26 	beq	r2,zero,8468 <___vfiprintf_internal_r+0x384>
    812c:	a080030b 	ldhu	r2,12(r20)
    8130:	10c8000c 	andi	r3,r2,8192
    8134:	1800061e 	bne	r3,zero,8150 <___vfiprintf_internal_r+0x6c>
    8138:	a1001917 	ldw	r4,100(r20)
    813c:	00f7ffc4 	movi	r3,-8193
    8140:	10880014 	ori	r2,r2,8192
    8144:	20c6703a 	and	r3,r4,r3
    8148:	a080030d 	sth	r2,12(r20)
    814c:	a0c01915 	stw	r3,100(r20)
    8150:	10c0020c 	andi	r3,r2,8
    8154:	1800a926 	beq	r3,zero,83fc <___vfiprintf_internal_r+0x318>
    8158:	a0c00417 	ldw	r3,16(r20)
    815c:	1800a726 	beq	r3,zero,83fc <___vfiprintf_internal_r+0x318>
    8160:	1080068c 	andi	r2,r2,26
    8164:	00c00284 	movi	r3,10
    8168:	10c0ac26 	beq	r2,r3,841c <___vfiprintf_internal_r+0x338>
    816c:	da801a04 	addi	r10,sp,104
    8170:	da801e15 	stw	r10,120(sp)
    8174:	d8801e17 	ldw	r2,120(sp)
    8178:	da8019c4 	addi	r10,sp,103
    817c:	05800074 	movhi	r22,1
    8180:	05c00074 	movhi	r23,1
    8184:	da801f15 	stw	r10,124(sp)
    8188:	1295c83a 	sub	r10,r2,r10
    818c:	b582f604 	addi	r22,r22,3032
    8190:	bdc2f204 	addi	r23,r23,3016
    8194:	dec01a15 	stw	sp,104(sp)
    8198:	d8001c15 	stw	zero,112(sp)
    819c:	d8001b15 	stw	zero,108(sp)
    81a0:	d8002615 	stw	zero,152(sp)
    81a4:	d8002315 	stw	zero,140(sp)
    81a8:	da802715 	stw	r10,156(sp)
    81ac:	d811883a 	mov	r8,sp
    81b0:	dd002115 	stw	r20,132(sp)
    81b4:	e021883a 	mov	r16,fp
    81b8:	80800007 	ldb	r2,0(r16)
    81bc:	1003ea26 	beq	r2,zero,9168 <___vfiprintf_internal_r+0x1084>
    81c0:	00c00944 	movi	r3,37
    81c4:	8025883a 	mov	r18,r16
    81c8:	10c0021e 	bne	r2,r3,81d4 <___vfiprintf_internal_r+0xf0>
    81cc:	00001606 	br	8228 <___vfiprintf_internal_r+0x144>
    81d0:	10c00326 	beq	r2,r3,81e0 <___vfiprintf_internal_r+0xfc>
    81d4:	94800044 	addi	r18,r18,1
    81d8:	90800007 	ldb	r2,0(r18)
    81dc:	103ffc1e 	bne	r2,zero,81d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00081d0>
    81e0:	9423c83a 	sub	r17,r18,r16
    81e4:	88001026 	beq	r17,zero,8228 <___vfiprintf_internal_r+0x144>
    81e8:	d8c01c17 	ldw	r3,112(sp)
    81ec:	d8801b17 	ldw	r2,108(sp)
    81f0:	44000015 	stw	r16,0(r8)
    81f4:	88c7883a 	add	r3,r17,r3
    81f8:	10800044 	addi	r2,r2,1
    81fc:	44400115 	stw	r17,4(r8)
    8200:	d8c01c15 	stw	r3,112(sp)
    8204:	d8801b15 	stw	r2,108(sp)
    8208:	010001c4 	movi	r4,7
    820c:	2080760e 	bge	r4,r2,83e8 <___vfiprintf_internal_r+0x304>
    8210:	1803821e 	bne	r3,zero,901c <___vfiprintf_internal_r+0xf38>
    8214:	da802317 	ldw	r10,140(sp)
    8218:	d8001b15 	stw	zero,108(sp)
    821c:	d811883a 	mov	r8,sp
    8220:	5455883a 	add	r10,r10,r17
    8224:	da802315 	stw	r10,140(sp)
    8228:	90800007 	ldb	r2,0(r18)
    822c:	10044626 	beq	r2,zero,9348 <___vfiprintf_internal_r+0x1264>
    8230:	90c00047 	ldb	r3,1(r18)
    8234:	94000044 	addi	r16,r18,1
    8238:	d8001d85 	stb	zero,118(sp)
    823c:	0009883a 	mov	r4,zero
    8240:	000f883a 	mov	r7,zero
    8244:	027fffc4 	movi	r9,-1
    8248:	0023883a 	mov	r17,zero
    824c:	0029883a 	mov	r20,zero
    8250:	01401604 	movi	r5,88
    8254:	01800244 	movi	r6,9
    8258:	03400a84 	movi	r13,42
    825c:	03001b04 	movi	r12,108
    8260:	84000044 	addi	r16,r16,1
    8264:	18bff804 	addi	r2,r3,-32
    8268:	28827336 	bltu	r5,r2,8c38 <___vfiprintf_internal_r+0xb54>
    826c:	100490ba 	slli	r2,r2,2
    8270:	02800074 	movhi	r10,1
    8274:	52a0a104 	addi	r10,r10,-32124
    8278:	1285883a 	add	r2,r2,r10
    827c:	10800017 	ldw	r2,0(r2)
    8280:	1000683a 	jmp	r2
    8284:	0000896c 	andhi	zero,zero,549
    8288:	00008c38 	rdprs	zero,zero,560
    828c:	00008c38 	rdprs	zero,zero,560
    8290:	0000898c 	andi	zero,zero,550
    8294:	00008c38 	rdprs	zero,zero,560
    8298:	00008c38 	rdprs	zero,zero,560
    829c:	00008c38 	rdprs	zero,zero,560
    82a0:	00008c38 	rdprs	zero,zero,560
    82a4:	00008c38 	rdprs	zero,zero,560
    82a8:	00008c38 	rdprs	zero,zero,560
    82ac:	00008b74 	movhi	zero,557
    82b0:	00008b90 	cmplti	zero,zero,558
    82b4:	00008c38 	rdprs	zero,zero,560
    82b8:	00008478 	rdprs	zero,zero,529
    82bc:	00008ba0 	cmpeqi	zero,zero,558
    82c0:	00008c38 	rdprs	zero,zero,560
    82c4:	00008998 	cmpnei	zero,zero,550
    82c8:	000089a4 	muli	zero,zero,550
    82cc:	000089a4 	muli	zero,zero,550
    82d0:	000089a4 	muli	zero,zero,550
    82d4:	000089a4 	muli	zero,zero,550
    82d8:	000089a4 	muli	zero,zero,550
    82dc:	000089a4 	muli	zero,zero,550
    82e0:	000089a4 	muli	zero,zero,550
    82e4:	000089a4 	muli	zero,zero,550
    82e8:	000089a4 	muli	zero,zero,550
    82ec:	00008c38 	rdprs	zero,zero,560
    82f0:	00008c38 	rdprs	zero,zero,560
    82f4:	00008c38 	rdprs	zero,zero,560
    82f8:	00008c38 	rdprs	zero,zero,560
    82fc:	00008c38 	rdprs	zero,zero,560
    8300:	00008c38 	rdprs	zero,zero,560
    8304:	00008c38 	rdprs	zero,zero,560
    8308:	00008c38 	rdprs	zero,zero,560
    830c:	00008c38 	rdprs	zero,zero,560
    8310:	00008c38 	rdprs	zero,zero,560
    8314:	000089d0 	cmplti	zero,zero,551
    8318:	00008c38 	rdprs	zero,zero,560
    831c:	00008c38 	rdprs	zero,zero,560
    8320:	00008c38 	rdprs	zero,zero,560
    8324:	00008c38 	rdprs	zero,zero,560
    8328:	00008c38 	rdprs	zero,zero,560
    832c:	00008c38 	rdprs	zero,zero,560
    8330:	00008c38 	rdprs	zero,zero,560
    8334:	00008c38 	rdprs	zero,zero,560
    8338:	00008c38 	rdprs	zero,zero,560
    833c:	00008c38 	rdprs	zero,zero,560
    8340:	00008a08 	cmpgei	zero,zero,552
    8344:	00008c38 	rdprs	zero,zero,560
    8348:	00008c38 	rdprs	zero,zero,560
    834c:	00008c38 	rdprs	zero,zero,560
    8350:	00008c38 	rdprs	zero,zero,560
    8354:	00008c38 	rdprs	zero,zero,560
    8358:	00008a60 	cmpeqi	zero,zero,553
    835c:	00008c38 	rdprs	zero,zero,560
    8360:	00008c38 	rdprs	zero,zero,560
    8364:	00008ad0 	cmplti	zero,zero,555
    8368:	00008c38 	rdprs	zero,zero,560
    836c:	00008c38 	rdprs	zero,zero,560
    8370:	00008c38 	rdprs	zero,zero,560
    8374:	00008c38 	rdprs	zero,zero,560
    8378:	00008c38 	rdprs	zero,zero,560
    837c:	00008c38 	rdprs	zero,zero,560
    8380:	00008c38 	rdprs	zero,zero,560
    8384:	00008c38 	rdprs	zero,zero,560
    8388:	00008c38 	rdprs	zero,zero,560
    838c:	00008c38 	rdprs	zero,zero,560
    8390:	0000887c 	xorhi	zero,zero,545
    8394:	000088a8 	cmpgeui	zero,zero,546
    8398:	00008c38 	rdprs	zero,zero,560
    839c:	00008c38 	rdprs	zero,zero,560
    83a0:	00008c38 	rdprs	zero,zero,560
    83a4:	00008be0 	cmpeqi	zero,zero,559
    83a8:	000088a8 	cmpgeui	zero,zero,546
    83ac:	00008c38 	rdprs	zero,zero,560
    83b0:	00008c38 	rdprs	zero,zero,560
    83b4:	0000873c 	xorhi	zero,zero,540
    83b8:	00008c38 	rdprs	zero,zero,560
    83bc:	0000874c 	andi	zero,zero,541
    83c0:	00008788 	cmpgei	zero,zero,542
    83c4:	00008484 	movi	zero,530
    83c8:	00008730 	cmpltui	zero,zero,540
    83cc:	00008c38 	rdprs	zero,zero,560
    83d0:	00008b0c 	andi	zero,zero,556
    83d4:	00008c38 	rdprs	zero,zero,560
    83d8:	00008b64 	muli	zero,zero,557
    83dc:	00008c38 	rdprs	zero,zero,560
    83e0:	00008c38 	rdprs	zero,zero,560
    83e4:	00008828 	cmpgeui	zero,zero,544
    83e8:	42000204 	addi	r8,r8,8
    83ec:	da802317 	ldw	r10,140(sp)
    83f0:	5455883a 	add	r10,r10,r17
    83f4:	da802315 	stw	r10,140(sp)
    83f8:	003f8b06 	br	8228 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008228>
    83fc:	d9002017 	ldw	r4,128(sp)
    8400:	a00b883a 	mov	r5,r20
    8404:	0002da00 	call	2da0 <__swsetup_r>
    8408:	1003b11e 	bne	r2,zero,92d0 <___vfiprintf_internal_r+0x11ec>
    840c:	a080030b 	ldhu	r2,12(r20)
    8410:	00c00284 	movi	r3,10
    8414:	1080068c 	andi	r2,r2,26
    8418:	10ff541e 	bne	r2,r3,816c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000816c>
    841c:	a080038f 	ldh	r2,14(r20)
    8420:	103f5216 	blt	r2,zero,816c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000816c>
    8424:	d9c02217 	ldw	r7,136(sp)
    8428:	d9002017 	ldw	r4,128(sp)
    842c:	e00d883a 	mov	r6,fp
    8430:	a00b883a 	mov	r5,r20
    8434:	000955c0 	call	955c <__sbprintf>
    8438:	dfc03617 	ldw	ra,216(sp)
    843c:	df003517 	ldw	fp,212(sp)
    8440:	ddc03417 	ldw	r23,208(sp)
    8444:	dd803317 	ldw	r22,204(sp)
    8448:	dd403217 	ldw	r21,200(sp)
    844c:	dd003117 	ldw	r20,196(sp)
    8450:	dcc03017 	ldw	r19,192(sp)
    8454:	dc802f17 	ldw	r18,188(sp)
    8458:	dc402e17 	ldw	r17,184(sp)
    845c:	dc002d17 	ldw	r16,180(sp)
    8460:	dec03704 	addi	sp,sp,220
    8464:	f800283a 	ret
    8468:	0004d740 	call	4d74 <__sinit>
    846c:	003f2f06 	br	812c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000812c>
    8470:	0463c83a 	sub	r17,zero,r17
    8474:	d8802215 	stw	r2,136(sp)
    8478:	a5000114 	ori	r20,r20,4
    847c:	80c00007 	ldb	r3,0(r16)
    8480:	003f7706 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    8484:	00800c04 	movi	r2,48
    8488:	da802217 	ldw	r10,136(sp)
    848c:	d8801d05 	stb	r2,116(sp)
    8490:	00801e04 	movi	r2,120
    8494:	d8801d45 	stb	r2,117(sp)
    8498:	d8001d85 	stb	zero,118(sp)
    849c:	50c00104 	addi	r3,r10,4
    84a0:	54800017 	ldw	r18,0(r10)
    84a4:	0027883a 	mov	r19,zero
    84a8:	a0800094 	ori	r2,r20,2
    84ac:	48030b16 	blt	r9,zero,90dc <___vfiprintf_internal_r+0xff8>
    84b0:	00bfdfc4 	movi	r2,-129
    84b4:	a096703a 	and	r11,r20,r2
    84b8:	d8c02215 	stw	r3,136(sp)
    84bc:	5d000094 	ori	r20,r11,2
    84c0:	90032b1e 	bne	r18,zero,9170 <___vfiprintf_internal_r+0x108c>
    84c4:	00800074 	movhi	r2,1
    84c8:	10829104 	addi	r2,r2,2628
    84cc:	d8802615 	stw	r2,152(sp)
    84d0:	0039883a 	mov	fp,zero
    84d4:	48017b1e 	bne	r9,zero,8ac4 <___vfiprintf_internal_r+0x9e0>
    84d8:	0013883a 	mov	r9,zero
    84dc:	0027883a 	mov	r19,zero
    84e0:	dd401a04 	addi	r21,sp,104
    84e4:	4825883a 	mov	r18,r9
    84e8:	4cc0010e 	bge	r9,r19,84f0 <___vfiprintf_internal_r+0x40c>
    84ec:	9825883a 	mov	r18,r19
    84f0:	e7003fcc 	andi	fp,fp,255
    84f4:	e700201c 	xori	fp,fp,128
    84f8:	e73fe004 	addi	fp,fp,-128
    84fc:	e0000126 	beq	fp,zero,8504 <___vfiprintf_internal_r+0x420>
    8500:	94800044 	addi	r18,r18,1
    8504:	a380008c 	andi	r14,r20,2
    8508:	70000126 	beq	r14,zero,8510 <___vfiprintf_internal_r+0x42c>
    850c:	94800084 	addi	r18,r18,2
    8510:	a700210c 	andi	fp,r20,132
    8514:	e001df1e 	bne	fp,zero,8c94 <___vfiprintf_internal_r+0xbb0>
    8518:	8c87c83a 	sub	r3,r17,r18
    851c:	00c1dd0e 	bge	zero,r3,8c94 <___vfiprintf_internal_r+0xbb0>
    8520:	01c00404 	movi	r7,16
    8524:	d8801c17 	ldw	r2,112(sp)
    8528:	38c3ad0e 	bge	r7,r3,93e0 <___vfiprintf_internal_r+0x12fc>
    852c:	02800074 	movhi	r10,1
    8530:	5282f604 	addi	r10,r10,3032
    8534:	dc002915 	stw	r16,164(sp)
    8538:	d9801b17 	ldw	r6,108(sp)
    853c:	da802415 	stw	r10,144(sp)
    8540:	03c001c4 	movi	r15,7
    8544:	da402515 	stw	r9,148(sp)
    8548:	db802815 	stw	r14,160(sp)
    854c:	1821883a 	mov	r16,r3
    8550:	00000506 	br	8568 <___vfiprintf_internal_r+0x484>
    8554:	31400084 	addi	r5,r6,2
    8558:	42000204 	addi	r8,r8,8
    855c:	200d883a 	mov	r6,r4
    8560:	843ffc04 	addi	r16,r16,-16
    8564:	3c000d0e 	bge	r7,r16,859c <___vfiprintf_internal_r+0x4b8>
    8568:	10800404 	addi	r2,r2,16
    856c:	31000044 	addi	r4,r6,1
    8570:	45800015 	stw	r22,0(r8)
    8574:	41c00115 	stw	r7,4(r8)
    8578:	d8801c15 	stw	r2,112(sp)
    857c:	d9001b15 	stw	r4,108(sp)
    8580:	793ff40e 	bge	r15,r4,8554 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008554>
    8584:	1001b51e 	bne	r2,zero,8c5c <___vfiprintf_internal_r+0xb78>
    8588:	843ffc04 	addi	r16,r16,-16
    858c:	000d883a 	mov	r6,zero
    8590:	01400044 	movi	r5,1
    8594:	d811883a 	mov	r8,sp
    8598:	3c3ff316 	blt	r7,r16,8568 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008568>
    859c:	8007883a 	mov	r3,r16
    85a0:	da402517 	ldw	r9,148(sp)
    85a4:	db802817 	ldw	r14,160(sp)
    85a8:	dc002917 	ldw	r16,164(sp)
    85ac:	da802417 	ldw	r10,144(sp)
    85b0:	1885883a 	add	r2,r3,r2
    85b4:	40c00115 	stw	r3,4(r8)
    85b8:	42800015 	stw	r10,0(r8)
    85bc:	d8801c15 	stw	r2,112(sp)
    85c0:	d9401b15 	stw	r5,108(sp)
    85c4:	00c001c4 	movi	r3,7
    85c8:	19426016 	blt	r3,r5,8f4c <___vfiprintf_internal_r+0xe68>
    85cc:	d8c01d87 	ldb	r3,118(sp)
    85d0:	42000204 	addi	r8,r8,8
    85d4:	29000044 	addi	r4,r5,1
    85d8:	1801b31e 	bne	r3,zero,8ca8 <___vfiprintf_internal_r+0xbc4>
    85dc:	7001c026 	beq	r14,zero,8ce0 <___vfiprintf_internal_r+0xbfc>
    85e0:	d8c01d04 	addi	r3,sp,116
    85e4:	10800084 	addi	r2,r2,2
    85e8:	40c00015 	stw	r3,0(r8)
    85ec:	00c00084 	movi	r3,2
    85f0:	40c00115 	stw	r3,4(r8)
    85f4:	d8801c15 	stw	r2,112(sp)
    85f8:	d9001b15 	stw	r4,108(sp)
    85fc:	00c001c4 	movi	r3,7
    8600:	1902650e 	bge	r3,r4,8f98 <___vfiprintf_internal_r+0xeb4>
    8604:	10029a1e 	bne	r2,zero,9070 <___vfiprintf_internal_r+0xf8c>
    8608:	00c02004 	movi	r3,128
    860c:	01000044 	movi	r4,1
    8610:	000b883a 	mov	r5,zero
    8614:	d811883a 	mov	r8,sp
    8618:	e0c1b31e 	bne	fp,r3,8ce8 <___vfiprintf_internal_r+0xc04>
    861c:	8cb9c83a 	sub	fp,r17,r18
    8620:	0701b10e 	bge	zero,fp,8ce8 <___vfiprintf_internal_r+0xc04>
    8624:	01c00404 	movi	r7,16
    8628:	3f03890e 	bge	r7,fp,9450 <___vfiprintf_internal_r+0x136c>
    862c:	00c00074 	movhi	r3,1
    8630:	18c2f204 	addi	r3,r3,3016
    8634:	d8c02415 	stw	r3,144(sp)
    8638:	8007883a 	mov	r3,r16
    863c:	034001c4 	movi	r13,7
    8640:	e021883a 	mov	r16,fp
    8644:	da402515 	stw	r9,148(sp)
    8648:	1839883a 	mov	fp,r3
    864c:	00000506 	br	8664 <___vfiprintf_internal_r+0x580>
    8650:	29800084 	addi	r6,r5,2
    8654:	42000204 	addi	r8,r8,8
    8658:	180b883a 	mov	r5,r3
    865c:	843ffc04 	addi	r16,r16,-16
    8660:	3c000d0e 	bge	r7,r16,8698 <___vfiprintf_internal_r+0x5b4>
    8664:	10800404 	addi	r2,r2,16
    8668:	28c00044 	addi	r3,r5,1
    866c:	45c00015 	stw	r23,0(r8)
    8670:	41c00115 	stw	r7,4(r8)
    8674:	d8801c15 	stw	r2,112(sp)
    8678:	d8c01b15 	stw	r3,108(sp)
    867c:	68fff40e 	bge	r13,r3,8650 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008650>
    8680:	1002241e 	bne	r2,zero,8f14 <___vfiprintf_internal_r+0xe30>
    8684:	843ffc04 	addi	r16,r16,-16
    8688:	01800044 	movi	r6,1
    868c:	000b883a 	mov	r5,zero
    8690:	d811883a 	mov	r8,sp
    8694:	3c3ff316 	blt	r7,r16,8664 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008664>
    8698:	da402517 	ldw	r9,148(sp)
    869c:	e007883a 	mov	r3,fp
    86a0:	8039883a 	mov	fp,r16
    86a4:	1821883a 	mov	r16,r3
    86a8:	d8c02417 	ldw	r3,144(sp)
    86ac:	1705883a 	add	r2,r2,fp
    86b0:	47000115 	stw	fp,4(r8)
    86b4:	40c00015 	stw	r3,0(r8)
    86b8:	d8801c15 	stw	r2,112(sp)
    86bc:	d9801b15 	stw	r6,108(sp)
    86c0:	00c001c4 	movi	r3,7
    86c4:	19827616 	blt	r3,r6,90a0 <___vfiprintf_internal_r+0xfbc>
    86c8:	4cf9c83a 	sub	fp,r9,r19
    86cc:	42000204 	addi	r8,r8,8
    86d0:	31000044 	addi	r4,r6,1
    86d4:	300b883a 	mov	r5,r6
    86d8:	07018516 	blt	zero,fp,8cf0 <___vfiprintf_internal_r+0xc0c>
    86dc:	9885883a 	add	r2,r19,r2
    86e0:	45400015 	stw	r21,0(r8)
    86e4:	44c00115 	stw	r19,4(r8)
    86e8:	d8801c15 	stw	r2,112(sp)
    86ec:	d9001b15 	stw	r4,108(sp)
    86f0:	00c001c4 	movi	r3,7
    86f4:	1901dd0e 	bge	r3,r4,8e6c <___vfiprintf_internal_r+0xd88>
    86f8:	1002401e 	bne	r2,zero,8ffc <___vfiprintf_internal_r+0xf18>
    86fc:	d8001b15 	stw	zero,108(sp)
    8700:	a2c0010c 	andi	r11,r20,4
    8704:	58000226 	beq	r11,zero,8710 <___vfiprintf_internal_r+0x62c>
    8708:	8ca7c83a 	sub	r19,r17,r18
    870c:	04c2f216 	blt	zero,r19,92d8 <___vfiprintf_internal_r+0x11f4>
    8710:	8c80010e 	bge	r17,r18,8718 <___vfiprintf_internal_r+0x634>
    8714:	9023883a 	mov	r17,r18
    8718:	da802317 	ldw	r10,140(sp)
    871c:	5455883a 	add	r10,r10,r17
    8720:	da802315 	stw	r10,140(sp)
    8724:	d8001b15 	stw	zero,108(sp)
    8728:	d811883a 	mov	r8,sp
    872c:	003ea206 	br	81b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00081b8>
    8730:	a5000814 	ori	r20,r20,32
    8734:	80c00007 	ldb	r3,0(r16)
    8738:	003ec906 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    873c:	80c00007 	ldb	r3,0(r16)
    8740:	1b030926 	beq	r3,r12,9368 <___vfiprintf_internal_r+0x1284>
    8744:	a5000414 	ori	r20,r20,16
    8748:	003ec506 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    874c:	21003fcc 	andi	r4,r4,255
    8750:	20035e1e 	bne	r4,zero,94cc <___vfiprintf_internal_r+0x13e8>
    8754:	a080080c 	andi	r2,r20,32
    8758:	1002a526 	beq	r2,zero,91f0 <___vfiprintf_internal_r+0x110c>
    875c:	da802217 	ldw	r10,136(sp)
    8760:	50800017 	ldw	r2,0(r10)
    8764:	da802317 	ldw	r10,140(sp)
    8768:	5007d7fa 	srai	r3,r10,31
    876c:	da802217 	ldw	r10,136(sp)
    8770:	10c00115 	stw	r3,4(r2)
    8774:	52800104 	addi	r10,r10,4
    8778:	da802215 	stw	r10,136(sp)
    877c:	da802317 	ldw	r10,140(sp)
    8780:	12800015 	stw	r10,0(r2)
    8784:	003e8c06 	br	81b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00081b8>
    8788:	21003fcc 	andi	r4,r4,255
    878c:	2003511e 	bne	r4,zero,94d4 <___vfiprintf_internal_r+0x13f0>
    8790:	a080080c 	andi	r2,r20,32
    8794:	1000a126 	beq	r2,zero,8a1c <___vfiprintf_internal_r+0x938>
    8798:	da802217 	ldw	r10,136(sp)
    879c:	d8001d85 	stb	zero,118(sp)
    87a0:	50800204 	addi	r2,r10,8
    87a4:	54800017 	ldw	r18,0(r10)
    87a8:	54c00117 	ldw	r19,4(r10)
    87ac:	4802b416 	blt	r9,zero,9280 <___vfiprintf_internal_r+0x119c>
    87b0:	013fdfc4 	movi	r4,-129
    87b4:	94c6b03a 	or	r3,r18,r19
    87b8:	d8802215 	stw	r2,136(sp)
    87bc:	a128703a 	and	r20,r20,r4
    87c0:	1800a226 	beq	r3,zero,8a4c <___vfiprintf_internal_r+0x968>
    87c4:	0039883a 	mov	fp,zero
    87c8:	dd401a04 	addi	r21,sp,104
    87cc:	9006d0fa 	srli	r3,r18,3
    87d0:	9808977a 	slli	r4,r19,29
    87d4:	9826d0fa 	srli	r19,r19,3
    87d8:	948001cc 	andi	r18,r18,7
    87dc:	90800c04 	addi	r2,r18,48
    87e0:	ad7fffc4 	addi	r21,r21,-1
    87e4:	20e4b03a 	or	r18,r4,r3
    87e8:	a8800005 	stb	r2,0(r21)
    87ec:	94c6b03a 	or	r3,r18,r19
    87f0:	183ff61e 	bne	r3,zero,87cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00087cc>
    87f4:	a0c0004c 	andi	r3,r20,1
    87f8:	18005926 	beq	r3,zero,8960 <___vfiprintf_internal_r+0x87c>
    87fc:	10803fcc 	andi	r2,r2,255
    8800:	1080201c 	xori	r2,r2,128
    8804:	10bfe004 	addi	r2,r2,-128
    8808:	00c00c04 	movi	r3,48
    880c:	10c05426 	beq	r2,r3,8960 <___vfiprintf_internal_r+0x87c>
    8810:	da801e17 	ldw	r10,120(sp)
    8814:	a8bfffc4 	addi	r2,r21,-1
    8818:	a8ffffc5 	stb	r3,-1(r21)
    881c:	50a7c83a 	sub	r19,r10,r2
    8820:	102b883a 	mov	r21,r2
    8824:	003f2f06 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    8828:	21003fcc 	andi	r4,r4,255
    882c:	2003421e 	bne	r4,zero,9538 <___vfiprintf_internal_r+0x1454>
    8830:	00800074 	movhi	r2,1
    8834:	10829104 	addi	r2,r2,2628
    8838:	d8802615 	stw	r2,152(sp)
    883c:	a080080c 	andi	r2,r20,32
    8840:	1000aa26 	beq	r2,zero,8aec <___vfiprintf_internal_r+0xa08>
    8844:	da802217 	ldw	r10,136(sp)
    8848:	54800017 	ldw	r18,0(r10)
    884c:	54c00117 	ldw	r19,4(r10)
    8850:	52800204 	addi	r10,r10,8
    8854:	da802215 	stw	r10,136(sp)
    8858:	a080004c 	andi	r2,r20,1
    885c:	1001d226 	beq	r2,zero,8fa8 <___vfiprintf_internal_r+0xec4>
    8860:	94c4b03a 	or	r2,r18,r19
    8864:	1002351e 	bne	r2,zero,913c <___vfiprintf_internal_r+0x1058>
    8868:	d8001d85 	stb	zero,118(sp)
    886c:	48022216 	blt	r9,zero,90f8 <___vfiprintf_internal_r+0x1014>
    8870:	00bfdfc4 	movi	r2,-129
    8874:	a0a8703a 	and	r20,r20,r2
    8878:	003f1506 	br	84d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084d0>
    887c:	da802217 	ldw	r10,136(sp)
    8880:	04800044 	movi	r18,1
    8884:	d8001d85 	stb	zero,118(sp)
    8888:	50800017 	ldw	r2,0(r10)
    888c:	52800104 	addi	r10,r10,4
    8890:	da802215 	stw	r10,136(sp)
    8894:	d8801005 	stb	r2,64(sp)
    8898:	9027883a 	mov	r19,r18
    889c:	dd401004 	addi	r21,sp,64
    88a0:	0013883a 	mov	r9,zero
    88a4:	003f1706 	br	8504 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008504>
    88a8:	21003fcc 	andi	r4,r4,255
    88ac:	2003201e 	bne	r4,zero,9530 <___vfiprintf_internal_r+0x144c>
    88b0:	a080080c 	andi	r2,r20,32
    88b4:	10004b26 	beq	r2,zero,89e4 <___vfiprintf_internal_r+0x900>
    88b8:	da802217 	ldw	r10,136(sp)
    88bc:	50800117 	ldw	r2,4(r10)
    88c0:	54800017 	ldw	r18,0(r10)
    88c4:	52800204 	addi	r10,r10,8
    88c8:	da802215 	stw	r10,136(sp)
    88cc:	1027883a 	mov	r19,r2
    88d0:	10022c16 	blt	r2,zero,9184 <___vfiprintf_internal_r+0x10a0>
    88d4:	df001d83 	ldbu	fp,118(sp)
    88d8:	48007216 	blt	r9,zero,8aa4 <___vfiprintf_internal_r+0x9c0>
    88dc:	00ffdfc4 	movi	r3,-129
    88e0:	94c4b03a 	or	r2,r18,r19
    88e4:	a0e8703a 	and	r20,r20,r3
    88e8:	1000cc26 	beq	r2,zero,8c1c <___vfiprintf_internal_r+0xb38>
    88ec:	98021026 	beq	r19,zero,9130 <___vfiprintf_internal_r+0x104c>
    88f0:	dc402415 	stw	r17,144(sp)
    88f4:	dc002515 	stw	r16,148(sp)
    88f8:	9823883a 	mov	r17,r19
    88fc:	9021883a 	mov	r16,r18
    8900:	dd401a04 	addi	r21,sp,104
    8904:	4825883a 	mov	r18,r9
    8908:	4027883a 	mov	r19,r8
    890c:	8009883a 	mov	r4,r16
    8910:	880b883a 	mov	r5,r17
    8914:	01800284 	movi	r6,10
    8918:	000f883a 	mov	r7,zero
    891c:	000a4c40 	call	a4c4 <__umoddi3>
    8920:	10800c04 	addi	r2,r2,48
    8924:	ad7fffc4 	addi	r21,r21,-1
    8928:	8009883a 	mov	r4,r16
    892c:	880b883a 	mov	r5,r17
    8930:	a8800005 	stb	r2,0(r21)
    8934:	01800284 	movi	r6,10
    8938:	000f883a 	mov	r7,zero
    893c:	0009f4c0 	call	9f4c <__udivdi3>
    8940:	1021883a 	mov	r16,r2
    8944:	10c4b03a 	or	r2,r2,r3
    8948:	1823883a 	mov	r17,r3
    894c:	103fef1e 	bne	r2,zero,890c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000890c>
    8950:	dc402417 	ldw	r17,144(sp)
    8954:	dc002517 	ldw	r16,148(sp)
    8958:	9013883a 	mov	r9,r18
    895c:	9811883a 	mov	r8,r19
    8960:	da801e17 	ldw	r10,120(sp)
    8964:	5567c83a 	sub	r19,r10,r21
    8968:	003ede06 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    896c:	38803fcc 	andi	r2,r7,255
    8970:	1080201c 	xori	r2,r2,128
    8974:	10bfe004 	addi	r2,r2,-128
    8978:	1002371e 	bne	r2,zero,9258 <___vfiprintf_internal_r+0x1174>
    897c:	01000044 	movi	r4,1
    8980:	01c00804 	movi	r7,32
    8984:	80c00007 	ldb	r3,0(r16)
    8988:	003e3506 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    898c:	a5000054 	ori	r20,r20,1
    8990:	80c00007 	ldb	r3,0(r16)
    8994:	003e3206 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    8998:	a5002014 	ori	r20,r20,128
    899c:	80c00007 	ldb	r3,0(r16)
    89a0:	003e2f06 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    89a4:	8015883a 	mov	r10,r16
    89a8:	0023883a 	mov	r17,zero
    89ac:	18bff404 	addi	r2,r3,-48
    89b0:	50c00007 	ldb	r3,0(r10)
    89b4:	8c4002a4 	muli	r17,r17,10
    89b8:	84000044 	addi	r16,r16,1
    89bc:	8015883a 	mov	r10,r16
    89c0:	1463883a 	add	r17,r2,r17
    89c4:	18bff404 	addi	r2,r3,-48
    89c8:	30bff92e 	bgeu	r6,r2,89b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00089b0>
    89cc:	003e2506 	br	8264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008264>
    89d0:	21003fcc 	andi	r4,r4,255
    89d4:	2002d41e 	bne	r4,zero,9528 <___vfiprintf_internal_r+0x1444>
    89d8:	a5000414 	ori	r20,r20,16
    89dc:	a080080c 	andi	r2,r20,32
    89e0:	103fb51e 	bne	r2,zero,88b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088b8>
    89e4:	a080040c 	andi	r2,r20,16
    89e8:	1001f826 	beq	r2,zero,91cc <___vfiprintf_internal_r+0x10e8>
    89ec:	da802217 	ldw	r10,136(sp)
    89f0:	54800017 	ldw	r18,0(r10)
    89f4:	52800104 	addi	r10,r10,4
    89f8:	da802215 	stw	r10,136(sp)
    89fc:	9027d7fa 	srai	r19,r18,31
    8a00:	9805883a 	mov	r2,r19
    8a04:	003fb206 	br	88d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088d0>
    8a08:	21003fcc 	andi	r4,r4,255
    8a0c:	2002c41e 	bne	r4,zero,9520 <___vfiprintf_internal_r+0x143c>
    8a10:	a5000414 	ori	r20,r20,16
    8a14:	a080080c 	andi	r2,r20,32
    8a18:	103f5f1e 	bne	r2,zero,8798 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008798>
    8a1c:	a080040c 	andi	r2,r20,16
    8a20:	10020f26 	beq	r2,zero,9260 <___vfiprintf_internal_r+0x117c>
    8a24:	da802217 	ldw	r10,136(sp)
    8a28:	d8001d85 	stb	zero,118(sp)
    8a2c:	0027883a 	mov	r19,zero
    8a30:	50800104 	addi	r2,r10,4
    8a34:	54800017 	ldw	r18,0(r10)
    8a38:	48021116 	blt	r9,zero,9280 <___vfiprintf_internal_r+0x119c>
    8a3c:	00ffdfc4 	movi	r3,-129
    8a40:	d8802215 	stw	r2,136(sp)
    8a44:	a0e8703a 	and	r20,r20,r3
    8a48:	903f5e1e 	bne	r18,zero,87c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00087c4>
    8a4c:	0039883a 	mov	fp,zero
    8a50:	4802a626 	beq	r9,zero,94ec <___vfiprintf_internal_r+0x1408>
    8a54:	0025883a 	mov	r18,zero
    8a58:	0027883a 	mov	r19,zero
    8a5c:	003f5a06 	br	87c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00087c8>
    8a60:	21003fcc 	andi	r4,r4,255
    8a64:	20029f1e 	bne	r4,zero,94e4 <___vfiprintf_internal_r+0x1400>
    8a68:	a5000414 	ori	r20,r20,16
    8a6c:	a080080c 	andi	r2,r20,32
    8a70:	10005e1e 	bne	r2,zero,8bec <___vfiprintf_internal_r+0xb08>
    8a74:	a080040c 	andi	r2,r20,16
    8a78:	1001a21e 	bne	r2,zero,9104 <___vfiprintf_internal_r+0x1020>
    8a7c:	a080100c 	andi	r2,r20,64
    8a80:	d8001d85 	stb	zero,118(sp)
    8a84:	da802217 	ldw	r10,136(sp)
    8a88:	1002231e 	bne	r2,zero,9318 <___vfiprintf_internal_r+0x1234>
    8a8c:	50800104 	addi	r2,r10,4
    8a90:	54800017 	ldw	r18,0(r10)
    8a94:	0027883a 	mov	r19,zero
    8a98:	4801a00e 	bge	r9,zero,911c <___vfiprintf_internal_r+0x1038>
    8a9c:	d8802215 	stw	r2,136(sp)
    8aa0:	0039883a 	mov	fp,zero
    8aa4:	94c4b03a 	or	r2,r18,r19
    8aa8:	103f901e 	bne	r2,zero,88ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088ec>
    8aac:	00800044 	movi	r2,1
    8ab0:	10803fcc 	andi	r2,r2,255
    8ab4:	00c00044 	movi	r3,1
    8ab8:	10c05926 	beq	r2,r3,8c20 <___vfiprintf_internal_r+0xb3c>
    8abc:	00c00084 	movi	r3,2
    8ac0:	10ffe41e 	bne	r2,r3,8a54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a54>
    8ac4:	0025883a 	mov	r18,zero
    8ac8:	0027883a 	mov	r19,zero
    8acc:	00013d06 	br	8fc4 <___vfiprintf_internal_r+0xee0>
    8ad0:	21003fcc 	andi	r4,r4,255
    8ad4:	2002811e 	bne	r4,zero,94dc <___vfiprintf_internal_r+0x13f8>
    8ad8:	00800074 	movhi	r2,1
    8adc:	10828c04 	addi	r2,r2,2608
    8ae0:	d8802615 	stw	r2,152(sp)
    8ae4:	a080080c 	andi	r2,r20,32
    8ae8:	103f561e 	bne	r2,zero,8844 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008844>
    8aec:	a080040c 	andi	r2,r20,16
    8af0:	1001d126 	beq	r2,zero,9238 <___vfiprintf_internal_r+0x1154>
    8af4:	da802217 	ldw	r10,136(sp)
    8af8:	0027883a 	mov	r19,zero
    8afc:	54800017 	ldw	r18,0(r10)
    8b00:	52800104 	addi	r10,r10,4
    8b04:	da802215 	stw	r10,136(sp)
    8b08:	003f5306 	br	8858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008858>
    8b0c:	da802217 	ldw	r10,136(sp)
    8b10:	d8001d85 	stb	zero,118(sp)
    8b14:	55400017 	ldw	r21,0(r10)
    8b18:	50c00104 	addi	r3,r10,4
    8b1c:	a8024226 	beq	r21,zero,9428 <___vfiprintf_internal_r+0x1344>
    8b20:	48021816 	blt	r9,zero,9384 <___vfiprintf_internal_r+0x12a0>
    8b24:	480d883a 	mov	r6,r9
    8b28:	000b883a 	mov	r5,zero
    8b2c:	a809883a 	mov	r4,r21
    8b30:	d8c02a15 	stw	r3,168(sp)
    8b34:	da002b15 	stw	r8,172(sp)
    8b38:	da402c15 	stw	r9,176(sp)
    8b3c:	00062e00 	call	62e0 <memchr>
    8b40:	d8c02a17 	ldw	r3,168(sp)
    8b44:	da002b17 	ldw	r8,172(sp)
    8b48:	da402c17 	ldw	r9,176(sp)
    8b4c:	10024826 	beq	r2,zero,9470 <___vfiprintf_internal_r+0x138c>
    8b50:	1567c83a 	sub	r19,r2,r21
    8b54:	df001d83 	ldbu	fp,118(sp)
    8b58:	d8c02215 	stw	r3,136(sp)
    8b5c:	0013883a 	mov	r9,zero
    8b60:	003e6006 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    8b64:	21003fcc 	andi	r4,r4,255
    8b68:	203fc026 	beq	r4,zero,8a6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a6c>
    8b6c:	d9c01d85 	stb	r7,118(sp)
    8b70:	003fbe06 	br	8a6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a6c>
    8b74:	da802217 	ldw	r10,136(sp)
    8b78:	54400017 	ldw	r17,0(r10)
    8b7c:	50800104 	addi	r2,r10,4
    8b80:	883e3b16 	blt	r17,zero,8470 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008470>
    8b84:	d8802215 	stw	r2,136(sp)
    8b88:	80c00007 	ldb	r3,0(r16)
    8b8c:	003db406 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    8b90:	01000044 	movi	r4,1
    8b94:	01c00ac4 	movi	r7,43
    8b98:	80c00007 	ldb	r3,0(r16)
    8b9c:	003db006 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    8ba0:	80c00007 	ldb	r3,0(r16)
    8ba4:	82800044 	addi	r10,r16,1
    8ba8:	1b423c26 	beq	r3,r13,949c <___vfiprintf_internal_r+0x13b8>
    8bac:	18bff404 	addi	r2,r3,-48
    8bb0:	0013883a 	mov	r9,zero
    8bb4:	30822b36 	bltu	r6,r2,9464 <___vfiprintf_internal_r+0x1380>
    8bb8:	50c00007 	ldb	r3,0(r10)
    8bbc:	4a4002a4 	muli	r9,r9,10
    8bc0:	54000044 	addi	r16,r10,1
    8bc4:	8015883a 	mov	r10,r16
    8bc8:	4893883a 	add	r9,r9,r2
    8bcc:	18bff404 	addi	r2,r3,-48
    8bd0:	30bff92e 	bgeu	r6,r2,8bb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008bb8>
    8bd4:	483da30e 	bge	r9,zero,8264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008264>
    8bd8:	027fffc4 	movi	r9,-1
    8bdc:	003da106 	br	8264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008264>
    8be0:	a5001014 	ori	r20,r20,64
    8be4:	80c00007 	ldb	r3,0(r16)
    8be8:	003d9d06 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    8bec:	da802217 	ldw	r10,136(sp)
    8bf0:	d8001d85 	stb	zero,118(sp)
    8bf4:	50c00204 	addi	r3,r10,8
    8bf8:	54800017 	ldw	r18,0(r10)
    8bfc:	54c00117 	ldw	r19,4(r10)
    8c00:	4801ca16 	blt	r9,zero,932c <___vfiprintf_internal_r+0x1248>
    8c04:	013fdfc4 	movi	r4,-129
    8c08:	94c4b03a 	or	r2,r18,r19
    8c0c:	d8c02215 	stw	r3,136(sp)
    8c10:	a128703a 	and	r20,r20,r4
    8c14:	0039883a 	mov	fp,zero
    8c18:	103f341e 	bne	r2,zero,88ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088ec>
    8c1c:	483e2e26 	beq	r9,zero,84d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084d8>
    8c20:	0025883a 	mov	r18,zero
    8c24:	94800c04 	addi	r18,r18,48
    8c28:	dc8019c5 	stb	r18,103(sp)
    8c2c:	dcc02717 	ldw	r19,156(sp)
    8c30:	dd4019c4 	addi	r21,sp,103
    8c34:	003e2b06 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    8c38:	21003fcc 	andi	r4,r4,255
    8c3c:	2002361e 	bne	r4,zero,9518 <___vfiprintf_internal_r+0x1434>
    8c40:	1801c126 	beq	r3,zero,9348 <___vfiprintf_internal_r+0x1264>
    8c44:	04800044 	movi	r18,1
    8c48:	d8c01005 	stb	r3,64(sp)
    8c4c:	d8001d85 	stb	zero,118(sp)
    8c50:	9027883a 	mov	r19,r18
    8c54:	dd401004 	addi	r21,sp,64
    8c58:	003f1106 	br	88a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088a0>
    8c5c:	d9402117 	ldw	r5,132(sp)
    8c60:	d9002017 	ldw	r4,128(sp)
    8c64:	d9801a04 	addi	r6,sp,104
    8c68:	d9c02b15 	stw	r7,172(sp)
    8c6c:	dbc02a15 	stw	r15,168(sp)
    8c70:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    8c74:	d9c02b17 	ldw	r7,172(sp)
    8c78:	dbc02a17 	ldw	r15,168(sp)
    8c7c:	10006d1e 	bne	r2,zero,8e34 <___vfiprintf_internal_r+0xd50>
    8c80:	d9801b17 	ldw	r6,108(sp)
    8c84:	d8801c17 	ldw	r2,112(sp)
    8c88:	d811883a 	mov	r8,sp
    8c8c:	31400044 	addi	r5,r6,1
    8c90:	003e3306 	br	8560 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008560>
    8c94:	d9401b17 	ldw	r5,108(sp)
    8c98:	d8801c17 	ldw	r2,112(sp)
    8c9c:	29000044 	addi	r4,r5,1
    8ca0:	d8c01d87 	ldb	r3,118(sp)
    8ca4:	183e4d26 	beq	r3,zero,85dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085dc>
    8ca8:	00c00044 	movi	r3,1
    8cac:	d9401d84 	addi	r5,sp,118
    8cb0:	10c5883a 	add	r2,r2,r3
    8cb4:	41400015 	stw	r5,0(r8)
    8cb8:	40c00115 	stw	r3,4(r8)
    8cbc:	d8801c15 	stw	r2,112(sp)
    8cc0:	d9001b15 	stw	r4,108(sp)
    8cc4:	014001c4 	movi	r5,7
    8cc8:	2900a90e 	bge	r5,r4,8f70 <___vfiprintf_internal_r+0xe8c>
    8ccc:	1000da1e 	bne	r2,zero,9038 <___vfiprintf_internal_r+0xf54>
    8cd0:	7000ab1e 	bne	r14,zero,8f80 <___vfiprintf_internal_r+0xe9c>
    8cd4:	000b883a 	mov	r5,zero
    8cd8:	1809883a 	mov	r4,r3
    8cdc:	d811883a 	mov	r8,sp
    8ce0:	00c02004 	movi	r3,128
    8ce4:	e0fe4d26 	beq	fp,r3,861c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000861c>
    8ce8:	4cf9c83a 	sub	fp,r9,r19
    8cec:	073e7b0e 	bge	zero,fp,86dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00086dc>
    8cf0:	01c00404 	movi	r7,16
    8cf4:	3f01900e 	bge	r7,fp,9338 <___vfiprintf_internal_r+0x1254>
    8cf8:	00c00074 	movhi	r3,1
    8cfc:	18c2f204 	addi	r3,r3,3016
    8d00:	d8c02415 	stw	r3,144(sp)
    8d04:	034001c4 	movi	r13,7
    8d08:	00000506 	br	8d20 <___vfiprintf_internal_r+0xc3c>
    8d0c:	29000084 	addi	r4,r5,2
    8d10:	42000204 	addi	r8,r8,8
    8d14:	180b883a 	mov	r5,r3
    8d18:	e73ffc04 	addi	fp,fp,-16
    8d1c:	3f000d0e 	bge	r7,fp,8d54 <___vfiprintf_internal_r+0xc70>
    8d20:	10800404 	addi	r2,r2,16
    8d24:	28c00044 	addi	r3,r5,1
    8d28:	45c00015 	stw	r23,0(r8)
    8d2c:	41c00115 	stw	r7,4(r8)
    8d30:	d8801c15 	stw	r2,112(sp)
    8d34:	d8c01b15 	stw	r3,108(sp)
    8d38:	68fff40e 	bge	r13,r3,8d0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008d0c>
    8d3c:	1000101e 	bne	r2,zero,8d80 <___vfiprintf_internal_r+0xc9c>
    8d40:	e73ffc04 	addi	fp,fp,-16
    8d44:	01000044 	movi	r4,1
    8d48:	000b883a 	mov	r5,zero
    8d4c:	d811883a 	mov	r8,sp
    8d50:	3f3ff316 	blt	r7,fp,8d20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008d20>
    8d54:	da802417 	ldw	r10,144(sp)
    8d58:	1705883a 	add	r2,r2,fp
    8d5c:	47000115 	stw	fp,4(r8)
    8d60:	42800015 	stw	r10,0(r8)
    8d64:	d8801c15 	stw	r2,112(sp)
    8d68:	d9001b15 	stw	r4,108(sp)
    8d6c:	00c001c4 	movi	r3,7
    8d70:	19003616 	blt	r3,r4,8e4c <___vfiprintf_internal_r+0xd68>
    8d74:	42000204 	addi	r8,r8,8
    8d78:	21000044 	addi	r4,r4,1
    8d7c:	003e5706 	br	86dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00086dc>
    8d80:	d9402117 	ldw	r5,132(sp)
    8d84:	d9002017 	ldw	r4,128(sp)
    8d88:	d9801a04 	addi	r6,sp,104
    8d8c:	d9c02b15 	stw	r7,172(sp)
    8d90:	db402a15 	stw	r13,168(sp)
    8d94:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    8d98:	d9c02b17 	ldw	r7,172(sp)
    8d9c:	db402a17 	ldw	r13,168(sp)
    8da0:	1000241e 	bne	r2,zero,8e34 <___vfiprintf_internal_r+0xd50>
    8da4:	d9401b17 	ldw	r5,108(sp)
    8da8:	d8801c17 	ldw	r2,112(sp)
    8dac:	d811883a 	mov	r8,sp
    8db0:	29000044 	addi	r4,r5,1
    8db4:	003fd806 	br	8d18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008d18>
    8db8:	d9401b17 	ldw	r5,108(sp)
    8dbc:	00c00074 	movhi	r3,1
    8dc0:	18c2f604 	addi	r3,r3,3032
    8dc4:	d8c02415 	stw	r3,144(sp)
    8dc8:	29400044 	addi	r5,r5,1
    8dcc:	d8c02417 	ldw	r3,144(sp)
    8dd0:	14c5883a 	add	r2,r2,r19
    8dd4:	44c00115 	stw	r19,4(r8)
    8dd8:	40c00015 	stw	r3,0(r8)
    8ddc:	d8801c15 	stw	r2,112(sp)
    8de0:	d9401b15 	stw	r5,108(sp)
    8de4:	00c001c4 	movi	r3,7
    8de8:	1940070e 	bge	r3,r5,8e08 <___vfiprintf_internal_r+0xd24>
    8dec:	103e4826 	beq	r2,zero,8710 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008710>
    8df0:	d9402117 	ldw	r5,132(sp)
    8df4:	d9002017 	ldw	r4,128(sp)
    8df8:	d9801a04 	addi	r6,sp,104
    8dfc:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    8e00:	10000c1e 	bne	r2,zero,8e34 <___vfiprintf_internal_r+0xd50>
    8e04:	d8801c17 	ldw	r2,112(sp)
    8e08:	8c80010e 	bge	r17,r18,8e10 <___vfiprintf_internal_r+0xd2c>
    8e0c:	9023883a 	mov	r17,r18
    8e10:	da802317 	ldw	r10,140(sp)
    8e14:	5455883a 	add	r10,r10,r17
    8e18:	da802315 	stw	r10,140(sp)
    8e1c:	103e4126 	beq	r2,zero,8724 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008724>
    8e20:	d9402117 	ldw	r5,132(sp)
    8e24:	d9002017 	ldw	r4,128(sp)
    8e28:	d9801a04 	addi	r6,sp,104
    8e2c:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    8e30:	103e3c26 	beq	r2,zero,8724 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008724>
    8e34:	dd002117 	ldw	r20,132(sp)
    8e38:	a080030b 	ldhu	r2,12(r20)
    8e3c:	1080100c 	andi	r2,r2,64
    8e40:	1001231e 	bne	r2,zero,92d0 <___vfiprintf_internal_r+0x11ec>
    8e44:	d8802317 	ldw	r2,140(sp)
    8e48:	003d7b06 	br	8438 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008438>
    8e4c:	1000991e 	bne	r2,zero,90b4 <___vfiprintf_internal_r+0xfd0>
    8e50:	00c00044 	movi	r3,1
    8e54:	9805883a 	mov	r2,r19
    8e58:	dd400015 	stw	r21,0(sp)
    8e5c:	dcc00115 	stw	r19,4(sp)
    8e60:	dcc01c15 	stw	r19,112(sp)
    8e64:	d8c01b15 	stw	r3,108(sp)
    8e68:	d811883a 	mov	r8,sp
    8e6c:	42000204 	addi	r8,r8,8
    8e70:	a2c0010c 	andi	r11,r20,4
    8e74:	583fe426 	beq	r11,zero,8e08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e08>
    8e78:	8ca7c83a 	sub	r19,r17,r18
    8e7c:	04ffe20e 	bge	zero,r19,8e08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e08>
    8e80:	01c00404 	movi	r7,16
    8e84:	3cffcc0e 	bge	r7,r19,8db8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008db8>
    8e88:	02800074 	movhi	r10,1
    8e8c:	5282f604 	addi	r10,r10,3032
    8e90:	d9001b17 	ldw	r4,108(sp)
    8e94:	da802415 	stw	r10,144(sp)
    8e98:	382b883a 	mov	r21,r7
    8e9c:	050001c4 	movi	r20,7
    8ea0:	df002017 	ldw	fp,128(sp)
    8ea4:	00000506 	br	8ebc <___vfiprintf_internal_r+0xdd8>
    8ea8:	21400084 	addi	r5,r4,2
    8eac:	42000204 	addi	r8,r8,8
    8eb0:	1809883a 	mov	r4,r3
    8eb4:	9cfffc04 	addi	r19,r19,-16
    8eb8:	acffc40e 	bge	r21,r19,8dcc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008dcc>
    8ebc:	10800404 	addi	r2,r2,16
    8ec0:	20c00044 	addi	r3,r4,1
    8ec4:	45800015 	stw	r22,0(r8)
    8ec8:	45400115 	stw	r21,4(r8)
    8ecc:	d8801c15 	stw	r2,112(sp)
    8ed0:	d8c01b15 	stw	r3,108(sp)
    8ed4:	a0fff40e 	bge	r20,r3,8ea8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ea8>
    8ed8:	1000041e 	bne	r2,zero,8eec <___vfiprintf_internal_r+0xe08>
    8edc:	01400044 	movi	r5,1
    8ee0:	0009883a 	mov	r4,zero
    8ee4:	d811883a 	mov	r8,sp
    8ee8:	003ff206 	br	8eb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008eb4>
    8eec:	d9402117 	ldw	r5,132(sp)
    8ef0:	d9801a04 	addi	r6,sp,104
    8ef4:	e009883a 	mov	r4,fp
    8ef8:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    8efc:	103fcd1e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    8f00:	d9001b17 	ldw	r4,108(sp)
    8f04:	d8801c17 	ldw	r2,112(sp)
    8f08:	d811883a 	mov	r8,sp
    8f0c:	21400044 	addi	r5,r4,1
    8f10:	003fe806 	br	8eb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008eb4>
    8f14:	d9402117 	ldw	r5,132(sp)
    8f18:	d9002017 	ldw	r4,128(sp)
    8f1c:	d9801a04 	addi	r6,sp,104
    8f20:	d9c02b15 	stw	r7,172(sp)
    8f24:	db402a15 	stw	r13,168(sp)
    8f28:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    8f2c:	d9c02b17 	ldw	r7,172(sp)
    8f30:	db402a17 	ldw	r13,168(sp)
    8f34:	103fbf1e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    8f38:	d9401b17 	ldw	r5,108(sp)
    8f3c:	d8801c17 	ldw	r2,112(sp)
    8f40:	d811883a 	mov	r8,sp
    8f44:	29800044 	addi	r6,r5,1
    8f48:	003dc406 	br	865c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000865c>
    8f4c:	1000d21e 	bne	r2,zero,9298 <___vfiprintf_internal_r+0x11b4>
    8f50:	d8c01d87 	ldb	r3,118(sp)
    8f54:	18009526 	beq	r3,zero,91ac <___vfiprintf_internal_r+0x10c8>
    8f58:	00800044 	movi	r2,1
    8f5c:	d8c01d84 	addi	r3,sp,118
    8f60:	1009883a 	mov	r4,r2
    8f64:	d8c00015 	stw	r3,0(sp)
    8f68:	d8800115 	stw	r2,4(sp)
    8f6c:	d811883a 	mov	r8,sp
    8f70:	200b883a 	mov	r5,r4
    8f74:	42000204 	addi	r8,r8,8
    8f78:	21000044 	addi	r4,r4,1
    8f7c:	003d9706 	br	85dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085dc>
    8f80:	d9001d04 	addi	r4,sp,116
    8f84:	00800084 	movi	r2,2
    8f88:	d9000015 	stw	r4,0(sp)
    8f8c:	d8800115 	stw	r2,4(sp)
    8f90:	1809883a 	mov	r4,r3
    8f94:	d811883a 	mov	r8,sp
    8f98:	200b883a 	mov	r5,r4
    8f9c:	42000204 	addi	r8,r8,8
    8fa0:	21000044 	addi	r4,r4,1
    8fa4:	003f4e06 	br	8ce0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ce0>
    8fa8:	d8001d85 	stb	zero,118(sp)
    8fac:	48005016 	blt	r9,zero,90f0 <___vfiprintf_internal_r+0x100c>
    8fb0:	00ffdfc4 	movi	r3,-129
    8fb4:	94c4b03a 	or	r2,r18,r19
    8fb8:	a0e8703a 	and	r20,r20,r3
    8fbc:	103d4426 	beq	r2,zero,84d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084d0>
    8fc0:	0039883a 	mov	fp,zero
    8fc4:	d9002617 	ldw	r4,152(sp)
    8fc8:	dd401a04 	addi	r21,sp,104
    8fcc:	908003cc 	andi	r2,r18,15
    8fd0:	9806973a 	slli	r3,r19,28
    8fd4:	2085883a 	add	r2,r4,r2
    8fd8:	9024d13a 	srli	r18,r18,4
    8fdc:	10800003 	ldbu	r2,0(r2)
    8fe0:	9826d13a 	srli	r19,r19,4
    8fe4:	ad7fffc4 	addi	r21,r21,-1
    8fe8:	1ca4b03a 	or	r18,r3,r18
    8fec:	a8800005 	stb	r2,0(r21)
    8ff0:	94c4b03a 	or	r2,r18,r19
    8ff4:	103ff51e 	bne	r2,zero,8fcc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008fcc>
    8ff8:	003e5906 	br	8960 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008960>
    8ffc:	d9402117 	ldw	r5,132(sp)
    9000:	d9002017 	ldw	r4,128(sp)
    9004:	d9801a04 	addi	r6,sp,104
    9008:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    900c:	103f891e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    9010:	d8801c17 	ldw	r2,112(sp)
    9014:	d811883a 	mov	r8,sp
    9018:	003f9506 	br	8e70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e70>
    901c:	d9402117 	ldw	r5,132(sp)
    9020:	d9002017 	ldw	r4,128(sp)
    9024:	d9801a04 	addi	r6,sp,104
    9028:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    902c:	103f811e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    9030:	d811883a 	mov	r8,sp
    9034:	003ced06 	br	83ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00083ec>
    9038:	d9402117 	ldw	r5,132(sp)
    903c:	d9002017 	ldw	r4,128(sp)
    9040:	d9801a04 	addi	r6,sp,104
    9044:	da402c15 	stw	r9,176(sp)
    9048:	db802a15 	stw	r14,168(sp)
    904c:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    9050:	da402c17 	ldw	r9,176(sp)
    9054:	db802a17 	ldw	r14,168(sp)
    9058:	103f761e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    905c:	d9401b17 	ldw	r5,108(sp)
    9060:	d8801c17 	ldw	r2,112(sp)
    9064:	d811883a 	mov	r8,sp
    9068:	29000044 	addi	r4,r5,1
    906c:	003d5b06 	br	85dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085dc>
    9070:	d9402117 	ldw	r5,132(sp)
    9074:	d9002017 	ldw	r4,128(sp)
    9078:	d9801a04 	addi	r6,sp,104
    907c:	da402c15 	stw	r9,176(sp)
    9080:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    9084:	da402c17 	ldw	r9,176(sp)
    9088:	103f6a1e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    908c:	d9401b17 	ldw	r5,108(sp)
    9090:	d8801c17 	ldw	r2,112(sp)
    9094:	d811883a 	mov	r8,sp
    9098:	29000044 	addi	r4,r5,1
    909c:	003f1006 	br	8ce0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ce0>
    90a0:	1000c31e 	bne	r2,zero,93b0 <___vfiprintf_internal_r+0x12cc>
    90a4:	01000044 	movi	r4,1
    90a8:	000b883a 	mov	r5,zero
    90ac:	d811883a 	mov	r8,sp
    90b0:	003f0d06 	br	8ce8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ce8>
    90b4:	d9402117 	ldw	r5,132(sp)
    90b8:	d9002017 	ldw	r4,128(sp)
    90bc:	d9801a04 	addi	r6,sp,104
    90c0:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    90c4:	103f5b1e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    90c8:	d9001b17 	ldw	r4,108(sp)
    90cc:	d8801c17 	ldw	r2,112(sp)
    90d0:	d811883a 	mov	r8,sp
    90d4:	21000044 	addi	r4,r4,1
    90d8:	003d8006 	br	86dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00086dc>
    90dc:	01000074 	movhi	r4,1
    90e0:	21029104 	addi	r4,r4,2628
    90e4:	d9002615 	stw	r4,152(sp)
    90e8:	d8c02215 	stw	r3,136(sp)
    90ec:	1029883a 	mov	r20,r2
    90f0:	94c4b03a 	or	r2,r18,r19
    90f4:	103fb21e 	bne	r2,zero,8fc0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008fc0>
    90f8:	0039883a 	mov	fp,zero
    90fc:	00800084 	movi	r2,2
    9100:	003e6b06 	br	8ab0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ab0>
    9104:	da802217 	ldw	r10,136(sp)
    9108:	d8001d85 	stb	zero,118(sp)
    910c:	0027883a 	mov	r19,zero
    9110:	50800104 	addi	r2,r10,4
    9114:	54800017 	ldw	r18,0(r10)
    9118:	483e6016 	blt	r9,zero,8a9c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a9c>
    911c:	00ffdfc4 	movi	r3,-129
    9120:	d8802215 	stw	r2,136(sp)
    9124:	a0e8703a 	and	r20,r20,r3
    9128:	0039883a 	mov	fp,zero
    912c:	903ebb26 	beq	r18,zero,8c1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c1c>
    9130:	00800244 	movi	r2,9
    9134:	14bdee36 	bltu	r2,r18,88f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088f0>
    9138:	003eba06 	br	8c24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c24>
    913c:	00800c04 	movi	r2,48
    9140:	d8c01d45 	stb	r3,117(sp)
    9144:	d8801d05 	stb	r2,116(sp)
    9148:	d8001d85 	stb	zero,118(sp)
    914c:	a0c00094 	ori	r3,r20,2
    9150:	4800a916 	blt	r9,zero,93f8 <___vfiprintf_internal_r+0x1314>
    9154:	00bfdfc4 	movi	r2,-129
    9158:	a096703a 	and	r11,r20,r2
    915c:	5d000094 	ori	r20,r11,2
    9160:	0039883a 	mov	fp,zero
    9164:	003f9706 	br	8fc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008fc4>
    9168:	8025883a 	mov	r18,r16
    916c:	003c2e06 	br	8228 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008228>
    9170:	00800074 	movhi	r2,1
    9174:	10829104 	addi	r2,r2,2628
    9178:	0039883a 	mov	fp,zero
    917c:	d8802615 	stw	r2,152(sp)
    9180:	003f9006 	br	8fc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008fc4>
    9184:	04a5c83a 	sub	r18,zero,r18
    9188:	07000b44 	movi	fp,45
    918c:	9004c03a 	cmpne	r2,r18,zero
    9190:	04e7c83a 	sub	r19,zero,r19
    9194:	df001d85 	stb	fp,118(sp)
    9198:	98a7c83a 	sub	r19,r19,r2
    919c:	48009f16 	blt	r9,zero,941c <___vfiprintf_internal_r+0x1338>
    91a0:	00bfdfc4 	movi	r2,-129
    91a4:	a0a8703a 	and	r20,r20,r2
    91a8:	003dd006 	br	88ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088ec>
    91ac:	70004c26 	beq	r14,zero,92e0 <___vfiprintf_internal_r+0x11fc>
    91b0:	00800084 	movi	r2,2
    91b4:	d8c01d04 	addi	r3,sp,116
    91b8:	d8c00015 	stw	r3,0(sp)
    91bc:	d8800115 	stw	r2,4(sp)
    91c0:	01000044 	movi	r4,1
    91c4:	d811883a 	mov	r8,sp
    91c8:	003f7306 	br	8f98 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008f98>
    91cc:	a080100c 	andi	r2,r20,64
    91d0:	da802217 	ldw	r10,136(sp)
    91d4:	103e0626 	beq	r2,zero,89f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00089f0>
    91d8:	5480000f 	ldh	r18,0(r10)
    91dc:	52800104 	addi	r10,r10,4
    91e0:	da802215 	stw	r10,136(sp)
    91e4:	9027d7fa 	srai	r19,r18,31
    91e8:	9805883a 	mov	r2,r19
    91ec:	003db806 	br	88d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088d0>
    91f0:	a080040c 	andi	r2,r20,16
    91f4:	1000091e 	bne	r2,zero,921c <___vfiprintf_internal_r+0x1138>
    91f8:	a2c0100c 	andi	r11,r20,64
    91fc:	58000726 	beq	r11,zero,921c <___vfiprintf_internal_r+0x1138>
    9200:	da802217 	ldw	r10,136(sp)
    9204:	50800017 	ldw	r2,0(r10)
    9208:	52800104 	addi	r10,r10,4
    920c:	da802215 	stw	r10,136(sp)
    9210:	da802317 	ldw	r10,140(sp)
    9214:	1280000d 	sth	r10,0(r2)
    9218:	003be706 	br	81b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00081b8>
    921c:	da802217 	ldw	r10,136(sp)
    9220:	50800017 	ldw	r2,0(r10)
    9224:	52800104 	addi	r10,r10,4
    9228:	da802215 	stw	r10,136(sp)
    922c:	da802317 	ldw	r10,140(sp)
    9230:	12800015 	stw	r10,0(r2)
    9234:	003be006 	br	81b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00081b8>
    9238:	a080100c 	andi	r2,r20,64
    923c:	da802217 	ldw	r10,136(sp)
    9240:	10003026 	beq	r2,zero,9304 <___vfiprintf_internal_r+0x1220>
    9244:	5480000b 	ldhu	r18,0(r10)
    9248:	52800104 	addi	r10,r10,4
    924c:	0027883a 	mov	r19,zero
    9250:	da802215 	stw	r10,136(sp)
    9254:	003d8006 	br	8858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008858>
    9258:	80c00007 	ldb	r3,0(r16)
    925c:	003c0006 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    9260:	a080100c 	andi	r2,r20,64
    9264:	d8001d85 	stb	zero,118(sp)
    9268:	da802217 	ldw	r10,136(sp)
    926c:	1000201e 	bne	r2,zero,92f0 <___vfiprintf_internal_r+0x120c>
    9270:	50800104 	addi	r2,r10,4
    9274:	54800017 	ldw	r18,0(r10)
    9278:	0027883a 	mov	r19,zero
    927c:	483def0e 	bge	r9,zero,8a3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a3c>
    9280:	94c6b03a 	or	r3,r18,r19
    9284:	d8802215 	stw	r2,136(sp)
    9288:	183d4e1e 	bne	r3,zero,87c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00087c4>
    928c:	0039883a 	mov	fp,zero
    9290:	0005883a 	mov	r2,zero
    9294:	003e0606 	br	8ab0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ab0>
    9298:	d9402117 	ldw	r5,132(sp)
    929c:	d9002017 	ldw	r4,128(sp)
    92a0:	d9801a04 	addi	r6,sp,104
    92a4:	da402c15 	stw	r9,176(sp)
    92a8:	db802a15 	stw	r14,168(sp)
    92ac:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    92b0:	da402c17 	ldw	r9,176(sp)
    92b4:	db802a17 	ldw	r14,168(sp)
    92b8:	103ede1e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    92bc:	d9401b17 	ldw	r5,108(sp)
    92c0:	d8801c17 	ldw	r2,112(sp)
    92c4:	d811883a 	mov	r8,sp
    92c8:	29000044 	addi	r4,r5,1
    92cc:	003e7406 	br	8ca0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ca0>
    92d0:	00bfffc4 	movi	r2,-1
    92d4:	003c5806 	br	8438 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008438>
    92d8:	d811883a 	mov	r8,sp
    92dc:	003ee806 	br	8e80 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e80>
    92e0:	000b883a 	mov	r5,zero
    92e4:	01000044 	movi	r4,1
    92e8:	d811883a 	mov	r8,sp
    92ec:	003e7c06 	br	8ce0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ce0>
    92f0:	50800104 	addi	r2,r10,4
    92f4:	5480000b 	ldhu	r18,0(r10)
    92f8:	0027883a 	mov	r19,zero
    92fc:	483dcf0e 	bge	r9,zero,8a3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a3c>
    9300:	003fdf06 	br	9280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009280>
    9304:	54800017 	ldw	r18,0(r10)
    9308:	52800104 	addi	r10,r10,4
    930c:	0027883a 	mov	r19,zero
    9310:	da802215 	stw	r10,136(sp)
    9314:	003d5006 	br	8858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008858>
    9318:	50800104 	addi	r2,r10,4
    931c:	5480000b 	ldhu	r18,0(r10)
    9320:	0027883a 	mov	r19,zero
    9324:	483f7d0e 	bge	r9,zero,911c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000911c>
    9328:	003ddc06 	br	8a9c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a9c>
    932c:	d8c02215 	stw	r3,136(sp)
    9330:	0039883a 	mov	fp,zero
    9334:	003ddb06 	br	8aa4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008aa4>
    9338:	02800074 	movhi	r10,1
    933c:	5282f204 	addi	r10,r10,3016
    9340:	da802415 	stw	r10,144(sp)
    9344:	003e8306 	br	8d54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008d54>
    9348:	d8801c17 	ldw	r2,112(sp)
    934c:	dd002117 	ldw	r20,132(sp)
    9350:	103eb926 	beq	r2,zero,8e38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e38>
    9354:	d9002017 	ldw	r4,128(sp)
    9358:	d9801a04 	addi	r6,sp,104
    935c:	a00b883a 	mov	r5,r20
    9360:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    9364:	003eb406 	br	8e38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e38>
    9368:	80c00043 	ldbu	r3,1(r16)
    936c:	a5000814 	ori	r20,r20,32
    9370:	84000044 	addi	r16,r16,1
    9374:	18c03fcc 	andi	r3,r3,255
    9378:	18c0201c 	xori	r3,r3,128
    937c:	18ffe004 	addi	r3,r3,-128
    9380:	003bb706 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    9384:	a809883a 	mov	r4,r21
    9388:	d8c02a15 	stw	r3,168(sp)
    938c:	da002b15 	stw	r8,172(sp)
    9390:	0000a380 	call	a38 <strlen>
    9394:	d8c02a17 	ldw	r3,168(sp)
    9398:	1027883a 	mov	r19,r2
    939c:	df001d83 	ldbu	fp,118(sp)
    93a0:	d8c02215 	stw	r3,136(sp)
    93a4:	0013883a 	mov	r9,zero
    93a8:	da002b17 	ldw	r8,172(sp)
    93ac:	003c4d06 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    93b0:	d9402117 	ldw	r5,132(sp)
    93b4:	d9002017 	ldw	r4,128(sp)
    93b8:	d9801a04 	addi	r6,sp,104
    93bc:	da402c15 	stw	r9,176(sp)
    93c0:	0007fd00 	call	7fd0 <__sprint_r.part.0>
    93c4:	da402c17 	ldw	r9,176(sp)
    93c8:	103e9a1e 	bne	r2,zero,8e34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008e34>
    93cc:	d9401b17 	ldw	r5,108(sp)
    93d0:	d8801c17 	ldw	r2,112(sp)
    93d4:	d811883a 	mov	r8,sp
    93d8:	29000044 	addi	r4,r5,1
    93dc:	003e4206 	br	8ce8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ce8>
    93e0:	d9401b17 	ldw	r5,108(sp)
    93e4:	01000074 	movhi	r4,1
    93e8:	2102f604 	addi	r4,r4,3032
    93ec:	d9002415 	stw	r4,144(sp)
    93f0:	29400044 	addi	r5,r5,1
    93f4:	003c6d06 	br	85ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00085ac>
    93f8:	0039883a 	mov	fp,zero
    93fc:	00800084 	movi	r2,2
    9400:	10803fcc 	andi	r2,r2,255
    9404:	01000044 	movi	r4,1
    9408:	11001e26 	beq	r2,r4,9484 <___vfiprintf_internal_r+0x13a0>
    940c:	01000084 	movi	r4,2
    9410:	11001e1e 	bne	r2,r4,948c <___vfiprintf_internal_r+0x13a8>
    9414:	1829883a 	mov	r20,r3
    9418:	003eea06 	br	8fc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008fc4>
    941c:	a007883a 	mov	r3,r20
    9420:	00800044 	movi	r2,1
    9424:	003ff606 	br	9400 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009400>
    9428:	00800184 	movi	r2,6
    942c:	1240012e 	bgeu	r2,r9,9434 <___vfiprintf_internal_r+0x1350>
    9430:	1013883a 	mov	r9,r2
    9434:	4827883a 	mov	r19,r9
    9438:	4825883a 	mov	r18,r9
    943c:	48001516 	blt	r9,zero,9494 <___vfiprintf_internal_r+0x13b0>
    9440:	05400074 	movhi	r21,1
    9444:	d8c02215 	stw	r3,136(sp)
    9448:	ad429604 	addi	r21,r21,2648
    944c:	003d1406 	br	88a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088a0>
    9450:	02800074 	movhi	r10,1
    9454:	5282f204 	addi	r10,r10,3016
    9458:	da802415 	stw	r10,144(sp)
    945c:	200d883a 	mov	r6,r4
    9460:	003c9106 	br	86a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00086a8>
    9464:	5021883a 	mov	r16,r10
    9468:	0013883a 	mov	r9,zero
    946c:	003b7d06 	br	8264 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008264>
    9470:	4827883a 	mov	r19,r9
    9474:	df001d83 	ldbu	fp,118(sp)
    9478:	d8c02215 	stw	r3,136(sp)
    947c:	0013883a 	mov	r9,zero
    9480:	003c1806 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    9484:	1829883a 	mov	r20,r3
    9488:	003d1806 	br	88ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088ec>
    948c:	1829883a 	mov	r20,r3
    9490:	003ccd06 	br	87c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00087c8>
    9494:	0025883a 	mov	r18,zero
    9498:	003fe906 	br	9440 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009440>
    949c:	d8802217 	ldw	r2,136(sp)
    94a0:	80c00043 	ldbu	r3,1(r16)
    94a4:	5021883a 	mov	r16,r10
    94a8:	12400017 	ldw	r9,0(r2)
    94ac:	10800104 	addi	r2,r2,4
    94b0:	d8802215 	stw	r2,136(sp)
    94b4:	483faf0e 	bge	r9,zero,9374 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009374>
    94b8:	18c03fcc 	andi	r3,r3,255
    94bc:	18c0201c 	xori	r3,r3,128
    94c0:	027fffc4 	movi	r9,-1
    94c4:	18ffe004 	addi	r3,r3,-128
    94c8:	003b6506 	br	8260 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008260>
    94cc:	d9c01d85 	stb	r7,118(sp)
    94d0:	003ca006 	br	8754 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008754>
    94d4:	d9c01d85 	stb	r7,118(sp)
    94d8:	003cad06 	br	8790 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008790>
    94dc:	d9c01d85 	stb	r7,118(sp)
    94e0:	003d7d06 	br	8ad8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008ad8>
    94e4:	d9c01d85 	stb	r7,118(sp)
    94e8:	003d5f06 	br	8a68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a68>
    94ec:	a080004c 	andi	r2,r20,1
    94f0:	0039883a 	mov	fp,zero
    94f4:	10000526 	beq	r2,zero,950c <___vfiprintf_internal_r+0x1428>
    94f8:	00800c04 	movi	r2,48
    94fc:	d88019c5 	stb	r2,103(sp)
    9500:	dcc02717 	ldw	r19,156(sp)
    9504:	dd4019c4 	addi	r21,sp,103
    9508:	003bf606 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    950c:	0027883a 	mov	r19,zero
    9510:	dd401a04 	addi	r21,sp,104
    9514:	003bf306 	br	84e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00084e4>
    9518:	d9c01d85 	stb	r7,118(sp)
    951c:	003dc806 	br	8c40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008c40>
    9520:	d9c01d85 	stb	r7,118(sp)
    9524:	003d3a06 	br	8a10 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008a10>
    9528:	d9c01d85 	stb	r7,118(sp)
    952c:	003d2a06 	br	89d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00089d8>
    9530:	d9c01d85 	stb	r7,118(sp)
    9534:	003cde06 	br	88b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00088b0>
    9538:	d9c01d85 	stb	r7,118(sp)
    953c:	003cbc06 	br	8830 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0008830>

00009540 <__vfiprintf_internal>:
    9540:	00800074 	movhi	r2,1
    9544:	108ab804 	addi	r2,r2,10976
    9548:	300f883a 	mov	r7,r6
    954c:	280d883a 	mov	r6,r5
    9550:	200b883a 	mov	r5,r4
    9554:	11000017 	ldw	r4,0(r2)
    9558:	00080e41 	jmpi	80e4 <___vfiprintf_internal_r>

0000955c <__sbprintf>:
    955c:	2880030b 	ldhu	r2,12(r5)
    9560:	2ac01917 	ldw	r11,100(r5)
    9564:	2a80038b 	ldhu	r10,14(r5)
    9568:	2a400717 	ldw	r9,28(r5)
    956c:	2a000917 	ldw	r8,36(r5)
    9570:	defee204 	addi	sp,sp,-1144
    9574:	00c10004 	movi	r3,1024
    9578:	dc011a15 	stw	r16,1128(sp)
    957c:	10bfff4c 	andi	r2,r2,65533
    9580:	2821883a 	mov	r16,r5
    9584:	d8cb883a 	add	r5,sp,r3
    9588:	dc811c15 	stw	r18,1136(sp)
    958c:	dc411b15 	stw	r17,1132(sp)
    9590:	dfc11d15 	stw	ra,1140(sp)
    9594:	2025883a 	mov	r18,r4
    9598:	d881030d 	sth	r2,1036(sp)
    959c:	dac11915 	stw	r11,1124(sp)
    95a0:	da81038d 	sth	r10,1038(sp)
    95a4:	da410715 	stw	r9,1052(sp)
    95a8:	da010915 	stw	r8,1060(sp)
    95ac:	dec10015 	stw	sp,1024(sp)
    95b0:	dec10415 	stw	sp,1040(sp)
    95b4:	d8c10215 	stw	r3,1032(sp)
    95b8:	d8c10515 	stw	r3,1044(sp)
    95bc:	d8010615 	stw	zero,1048(sp)
    95c0:	00080e40 	call	80e4 <___vfiprintf_internal_r>
    95c4:	1023883a 	mov	r17,r2
    95c8:	10000416 	blt	r2,zero,95dc <__sbprintf+0x80>
    95cc:	d9410004 	addi	r5,sp,1024
    95d0:	9009883a 	mov	r4,r18
    95d4:	00049980 	call	4998 <_fflush_r>
    95d8:	10000d1e 	bne	r2,zero,9610 <__sbprintf+0xb4>
    95dc:	d881030b 	ldhu	r2,1036(sp)
    95e0:	1080100c 	andi	r2,r2,64
    95e4:	10000326 	beq	r2,zero,95f4 <__sbprintf+0x98>
    95e8:	8080030b 	ldhu	r2,12(r16)
    95ec:	10801014 	ori	r2,r2,64
    95f0:	8080030d 	sth	r2,12(r16)
    95f4:	8805883a 	mov	r2,r17
    95f8:	dfc11d17 	ldw	ra,1140(sp)
    95fc:	dc811c17 	ldw	r18,1136(sp)
    9600:	dc411b17 	ldw	r17,1132(sp)
    9604:	dc011a17 	ldw	r16,1128(sp)
    9608:	dec11e04 	addi	sp,sp,1144
    960c:	f800283a 	ret
    9610:	047fffc4 	movi	r17,-1
    9614:	003ff106 	br	95dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00095dc>

00009618 <_write_r>:
    9618:	defffd04 	addi	sp,sp,-12
    961c:	2805883a 	mov	r2,r5
    9620:	dc000015 	stw	r16,0(sp)
    9624:	04000074 	movhi	r16,1
    9628:	dc400115 	stw	r17,4(sp)
    962c:	300b883a 	mov	r5,r6
    9630:	84121504 	addi	r16,r16,18516
    9634:	2023883a 	mov	r17,r4
    9638:	380d883a 	mov	r6,r7
    963c:	1009883a 	mov	r4,r2
    9640:	dfc00215 	stw	ra,8(sp)
    9644:	80000015 	stw	zero,0(r16)
    9648:	000da640 	call	da64 <write>
    964c:	00ffffc4 	movi	r3,-1
    9650:	10c00526 	beq	r2,r3,9668 <_write_r+0x50>
    9654:	dfc00217 	ldw	ra,8(sp)
    9658:	dc400117 	ldw	r17,4(sp)
    965c:	dc000017 	ldw	r16,0(sp)
    9660:	dec00304 	addi	sp,sp,12
    9664:	f800283a 	ret
    9668:	80c00017 	ldw	r3,0(r16)
    966c:	183ff926 	beq	r3,zero,9654 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009654>
    9670:	88c00015 	stw	r3,0(r17)
    9674:	003ff706 	br	9654 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009654>

00009678 <_close_r>:
    9678:	defffd04 	addi	sp,sp,-12
    967c:	dc000015 	stw	r16,0(sp)
    9680:	04000074 	movhi	r16,1
    9684:	dc400115 	stw	r17,4(sp)
    9688:	84121504 	addi	r16,r16,18516
    968c:	2023883a 	mov	r17,r4
    9690:	2809883a 	mov	r4,r5
    9694:	dfc00215 	stw	ra,8(sp)
    9698:	80000015 	stw	zero,0(r16)
    969c:	000d2540 	call	d254 <close>
    96a0:	00ffffc4 	movi	r3,-1
    96a4:	10c00526 	beq	r2,r3,96bc <_close_r+0x44>
    96a8:	dfc00217 	ldw	ra,8(sp)
    96ac:	dc400117 	ldw	r17,4(sp)
    96b0:	dc000017 	ldw	r16,0(sp)
    96b4:	dec00304 	addi	sp,sp,12
    96b8:	f800283a 	ret
    96bc:	80c00017 	ldw	r3,0(r16)
    96c0:	183ff926 	beq	r3,zero,96a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00096a8>
    96c4:	88c00015 	stw	r3,0(r17)
    96c8:	003ff706 	br	96a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00096a8>

000096cc <_calloc_r>:
    96cc:	298b383a 	mul	r5,r5,r6
    96d0:	defffe04 	addi	sp,sp,-8
    96d4:	dfc00115 	stw	ra,4(sp)
    96d8:	dc000015 	stw	r16,0(sp)
    96dc:	0005ad40 	call	5ad4 <_malloc_r>
    96e0:	10002926 	beq	r2,zero,9788 <_calloc_r+0xbc>
    96e4:	11bfff17 	ldw	r6,-4(r2)
    96e8:	1021883a 	mov	r16,r2
    96ec:	00bfff04 	movi	r2,-4
    96f0:	308c703a 	and	r6,r6,r2
    96f4:	00c00904 	movi	r3,36
    96f8:	308d883a 	add	r6,r6,r2
    96fc:	19801636 	bltu	r3,r6,9758 <_calloc_r+0x8c>
    9700:	008004c4 	movi	r2,19
    9704:	11800b2e 	bgeu	r2,r6,9734 <_calloc_r+0x68>
    9708:	80000015 	stw	zero,0(r16)
    970c:	80000115 	stw	zero,4(r16)
    9710:	008006c4 	movi	r2,27
    9714:	11801a2e 	bgeu	r2,r6,9780 <_calloc_r+0xb4>
    9718:	80000215 	stw	zero,8(r16)
    971c:	80000315 	stw	zero,12(r16)
    9720:	30c0151e 	bne	r6,r3,9778 <_calloc_r+0xac>
    9724:	80000415 	stw	zero,16(r16)
    9728:	80800604 	addi	r2,r16,24
    972c:	80000515 	stw	zero,20(r16)
    9730:	00000106 	br	9738 <_calloc_r+0x6c>
    9734:	8005883a 	mov	r2,r16
    9738:	10000015 	stw	zero,0(r2)
    973c:	10000115 	stw	zero,4(r2)
    9740:	10000215 	stw	zero,8(r2)
    9744:	8005883a 	mov	r2,r16
    9748:	dfc00117 	ldw	ra,4(sp)
    974c:	dc000017 	ldw	r16,0(sp)
    9750:	dec00204 	addi	sp,sp,8
    9754:	f800283a 	ret
    9758:	000b883a 	mov	r5,zero
    975c:	8009883a 	mov	r4,r16
    9760:	00066680 	call	6668 <memset>
    9764:	8005883a 	mov	r2,r16
    9768:	dfc00117 	ldw	ra,4(sp)
    976c:	dc000017 	ldw	r16,0(sp)
    9770:	dec00204 	addi	sp,sp,8
    9774:	f800283a 	ret
    9778:	80800404 	addi	r2,r16,16
    977c:	003fee06 	br	9738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009738>
    9780:	80800204 	addi	r2,r16,8
    9784:	003fec06 	br	9738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009738>
    9788:	0005883a 	mov	r2,zero
    978c:	003fee06 	br	9748 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009748>

00009790 <_fclose_r>:
    9790:	28003926 	beq	r5,zero,9878 <_fclose_r+0xe8>
    9794:	defffc04 	addi	sp,sp,-16
    9798:	dc400115 	stw	r17,4(sp)
    979c:	dc000015 	stw	r16,0(sp)
    97a0:	dfc00315 	stw	ra,12(sp)
    97a4:	dc800215 	stw	r18,8(sp)
    97a8:	2023883a 	mov	r17,r4
    97ac:	2821883a 	mov	r16,r5
    97b0:	20000226 	beq	r4,zero,97bc <_fclose_r+0x2c>
    97b4:	20800e17 	ldw	r2,56(r4)
    97b8:	10002726 	beq	r2,zero,9858 <_fclose_r+0xc8>
    97bc:	8080030f 	ldh	r2,12(r16)
    97c0:	1000071e 	bne	r2,zero,97e0 <_fclose_r+0x50>
    97c4:	0005883a 	mov	r2,zero
    97c8:	dfc00317 	ldw	ra,12(sp)
    97cc:	dc800217 	ldw	r18,8(sp)
    97d0:	dc400117 	ldw	r17,4(sp)
    97d4:	dc000017 	ldw	r16,0(sp)
    97d8:	dec00404 	addi	sp,sp,16
    97dc:	f800283a 	ret
    97e0:	800b883a 	mov	r5,r16
    97e4:	8809883a 	mov	r4,r17
    97e8:	000477c0 	call	477c <__sflush_r>
    97ec:	1025883a 	mov	r18,r2
    97f0:	80800b17 	ldw	r2,44(r16)
    97f4:	10000426 	beq	r2,zero,9808 <_fclose_r+0x78>
    97f8:	81400717 	ldw	r5,28(r16)
    97fc:	8809883a 	mov	r4,r17
    9800:	103ee83a 	callr	r2
    9804:	10001616 	blt	r2,zero,9860 <_fclose_r+0xd0>
    9808:	8080030b 	ldhu	r2,12(r16)
    980c:	1080200c 	andi	r2,r2,128
    9810:	1000151e 	bne	r2,zero,9868 <_fclose_r+0xd8>
    9814:	81400c17 	ldw	r5,48(r16)
    9818:	28000526 	beq	r5,zero,9830 <_fclose_r+0xa0>
    981c:	80801004 	addi	r2,r16,64
    9820:	28800226 	beq	r5,r2,982c <_fclose_r+0x9c>
    9824:	8809883a 	mov	r4,r17
    9828:	0004ee80 	call	4ee8 <_free_r>
    982c:	80000c15 	stw	zero,48(r16)
    9830:	81401117 	ldw	r5,68(r16)
    9834:	28000326 	beq	r5,zero,9844 <_fclose_r+0xb4>
    9838:	8809883a 	mov	r4,r17
    983c:	0004ee80 	call	4ee8 <_free_r>
    9840:	80001115 	stw	zero,68(r16)
    9844:	0004d840 	call	4d84 <__sfp_lock_acquire>
    9848:	8000030d 	sth	zero,12(r16)
    984c:	0004d880 	call	4d88 <__sfp_lock_release>
    9850:	9005883a 	mov	r2,r18
    9854:	003fdc06 	br	97c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00097c8>
    9858:	0004d740 	call	4d74 <__sinit>
    985c:	003fd706 	br	97bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00097bc>
    9860:	04bfffc4 	movi	r18,-1
    9864:	003fe806 	br	9808 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009808>
    9868:	81400417 	ldw	r5,16(r16)
    986c:	8809883a 	mov	r4,r17
    9870:	0004ee80 	call	4ee8 <_free_r>
    9874:	003fe706 	br	9814 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009814>
    9878:	0005883a 	mov	r2,zero
    987c:	f800283a 	ret

00009880 <fclose>:
    9880:	00800074 	movhi	r2,1
    9884:	108ab804 	addi	r2,r2,10976
    9888:	200b883a 	mov	r5,r4
    988c:	11000017 	ldw	r4,0(r2)
    9890:	00097901 	jmpi	9790 <_fclose_r>

00009894 <__fputwc>:
    9894:	defff804 	addi	sp,sp,-32
    9898:	dcc00415 	stw	r19,16(sp)
    989c:	dc800315 	stw	r18,12(sp)
    98a0:	dc000115 	stw	r16,4(sp)
    98a4:	dfc00715 	stw	ra,28(sp)
    98a8:	dd400615 	stw	r21,24(sp)
    98ac:	dd000515 	stw	r20,20(sp)
    98b0:	dc400215 	stw	r17,8(sp)
    98b4:	2027883a 	mov	r19,r4
    98b8:	2825883a 	mov	r18,r5
    98bc:	3021883a 	mov	r16,r6
    98c0:	00058c40 	call	58c4 <__locale_mb_cur_max>
    98c4:	00c00044 	movi	r3,1
    98c8:	10c03e26 	beq	r2,r3,99c4 <__fputwc+0x130>
    98cc:	81c01704 	addi	r7,r16,92
    98d0:	900d883a 	mov	r6,r18
    98d4:	d80b883a 	mov	r5,sp
    98d8:	9809883a 	mov	r4,r19
    98dc:	0009d640 	call	9d64 <_wcrtomb_r>
    98e0:	1029883a 	mov	r20,r2
    98e4:	00bfffc4 	movi	r2,-1
    98e8:	a0802026 	beq	r20,r2,996c <__fputwc+0xd8>
    98ec:	d9400003 	ldbu	r5,0(sp)
    98f0:	a0001c26 	beq	r20,zero,9964 <__fputwc+0xd0>
    98f4:	0023883a 	mov	r17,zero
    98f8:	05400284 	movi	r21,10
    98fc:	00000906 	br	9924 <__fputwc+0x90>
    9900:	80800017 	ldw	r2,0(r16)
    9904:	11400005 	stb	r5,0(r2)
    9908:	80c00017 	ldw	r3,0(r16)
    990c:	18c00044 	addi	r3,r3,1
    9910:	80c00015 	stw	r3,0(r16)
    9914:	8c400044 	addi	r17,r17,1
    9918:	dc45883a 	add	r2,sp,r17
    991c:	8d00112e 	bgeu	r17,r20,9964 <__fputwc+0xd0>
    9920:	11400003 	ldbu	r5,0(r2)
    9924:	80c00217 	ldw	r3,8(r16)
    9928:	18ffffc4 	addi	r3,r3,-1
    992c:	80c00215 	stw	r3,8(r16)
    9930:	183ff30e 	bge	r3,zero,9900 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009900>
    9934:	80800617 	ldw	r2,24(r16)
    9938:	18801916 	blt	r3,r2,99a0 <__fputwc+0x10c>
    993c:	80800017 	ldw	r2,0(r16)
    9940:	11400005 	stb	r5,0(r2)
    9944:	80800017 	ldw	r2,0(r16)
    9948:	10c00003 	ldbu	r3,0(r2)
    994c:	10800044 	addi	r2,r2,1
    9950:	1d402326 	beq	r3,r21,99e0 <__fputwc+0x14c>
    9954:	80800015 	stw	r2,0(r16)
    9958:	8c400044 	addi	r17,r17,1
    995c:	dc45883a 	add	r2,sp,r17
    9960:	8d3fef36 	bltu	r17,r20,9920 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009920>
    9964:	9005883a 	mov	r2,r18
    9968:	00000406 	br	997c <__fputwc+0xe8>
    996c:	80c0030b 	ldhu	r3,12(r16)
    9970:	a005883a 	mov	r2,r20
    9974:	18c01014 	ori	r3,r3,64
    9978:	80c0030d 	sth	r3,12(r16)
    997c:	dfc00717 	ldw	ra,28(sp)
    9980:	dd400617 	ldw	r21,24(sp)
    9984:	dd000517 	ldw	r20,20(sp)
    9988:	dcc00417 	ldw	r19,16(sp)
    998c:	dc800317 	ldw	r18,12(sp)
    9990:	dc400217 	ldw	r17,8(sp)
    9994:	dc000117 	ldw	r16,4(sp)
    9998:	dec00804 	addi	sp,sp,32
    999c:	f800283a 	ret
    99a0:	800d883a 	mov	r6,r16
    99a4:	29403fcc 	andi	r5,r5,255
    99a8:	9809883a 	mov	r4,r19
    99ac:	0009c0c0 	call	9c0c <__swbuf_r>
    99b0:	10bfffe0 	cmpeqi	r2,r2,-1
    99b4:	10803fcc 	andi	r2,r2,255
    99b8:	103fd626 	beq	r2,zero,9914 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009914>
    99bc:	00bfffc4 	movi	r2,-1
    99c0:	003fee06 	br	997c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000997c>
    99c4:	90ffffc4 	addi	r3,r18,-1
    99c8:	01003f84 	movi	r4,254
    99cc:	20ffbf36 	bltu	r4,r3,98cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00098cc>
    99d0:	900b883a 	mov	r5,r18
    99d4:	dc800005 	stb	r18,0(sp)
    99d8:	1029883a 	mov	r20,r2
    99dc:	003fc506 	br	98f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00098f4>
    99e0:	800d883a 	mov	r6,r16
    99e4:	a80b883a 	mov	r5,r21
    99e8:	9809883a 	mov	r4,r19
    99ec:	0009c0c0 	call	9c0c <__swbuf_r>
    99f0:	10bfffe0 	cmpeqi	r2,r2,-1
    99f4:	003fef06 	br	99b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00099b4>

000099f8 <_fputwc_r>:
    99f8:	3080030b 	ldhu	r2,12(r6)
    99fc:	10c8000c 	andi	r3,r2,8192
    9a00:	1800051e 	bne	r3,zero,9a18 <_fputwc_r+0x20>
    9a04:	30c01917 	ldw	r3,100(r6)
    9a08:	10880014 	ori	r2,r2,8192
    9a0c:	3080030d 	sth	r2,12(r6)
    9a10:	18880014 	ori	r2,r3,8192
    9a14:	30801915 	stw	r2,100(r6)
    9a18:	00098941 	jmpi	9894 <__fputwc>

00009a1c <fputwc>:
    9a1c:	00800074 	movhi	r2,1
    9a20:	defffc04 	addi	sp,sp,-16
    9a24:	108ab804 	addi	r2,r2,10976
    9a28:	dc000115 	stw	r16,4(sp)
    9a2c:	14000017 	ldw	r16,0(r2)
    9a30:	dc400215 	stw	r17,8(sp)
    9a34:	dfc00315 	stw	ra,12(sp)
    9a38:	2023883a 	mov	r17,r4
    9a3c:	80000226 	beq	r16,zero,9a48 <fputwc+0x2c>
    9a40:	80800e17 	ldw	r2,56(r16)
    9a44:	10001026 	beq	r2,zero,9a88 <fputwc+0x6c>
    9a48:	2880030b 	ldhu	r2,12(r5)
    9a4c:	10c8000c 	andi	r3,r2,8192
    9a50:	1800051e 	bne	r3,zero,9a68 <fputwc+0x4c>
    9a54:	28c01917 	ldw	r3,100(r5)
    9a58:	10880014 	ori	r2,r2,8192
    9a5c:	2880030d 	sth	r2,12(r5)
    9a60:	18880014 	ori	r2,r3,8192
    9a64:	28801915 	stw	r2,100(r5)
    9a68:	280d883a 	mov	r6,r5
    9a6c:	8009883a 	mov	r4,r16
    9a70:	880b883a 	mov	r5,r17
    9a74:	dfc00317 	ldw	ra,12(sp)
    9a78:	dc400217 	ldw	r17,8(sp)
    9a7c:	dc000117 	ldw	r16,4(sp)
    9a80:	dec00404 	addi	sp,sp,16
    9a84:	00098941 	jmpi	9894 <__fputwc>
    9a88:	8009883a 	mov	r4,r16
    9a8c:	d9400015 	stw	r5,0(sp)
    9a90:	0004d740 	call	4d74 <__sinit>
    9a94:	d9400017 	ldw	r5,0(sp)
    9a98:	003feb06 	br	9a48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009a48>

00009a9c <_fstat_r>:
    9a9c:	defffd04 	addi	sp,sp,-12
    9aa0:	2805883a 	mov	r2,r5
    9aa4:	dc000015 	stw	r16,0(sp)
    9aa8:	04000074 	movhi	r16,1
    9aac:	dc400115 	stw	r17,4(sp)
    9ab0:	84121504 	addi	r16,r16,18516
    9ab4:	2023883a 	mov	r17,r4
    9ab8:	300b883a 	mov	r5,r6
    9abc:	1009883a 	mov	r4,r2
    9ac0:	dfc00215 	stw	ra,8(sp)
    9ac4:	80000015 	stw	zero,0(r16)
    9ac8:	000d38c0 	call	d38c <fstat>
    9acc:	00ffffc4 	movi	r3,-1
    9ad0:	10c00526 	beq	r2,r3,9ae8 <_fstat_r+0x4c>
    9ad4:	dfc00217 	ldw	ra,8(sp)
    9ad8:	dc400117 	ldw	r17,4(sp)
    9adc:	dc000017 	ldw	r16,0(sp)
    9ae0:	dec00304 	addi	sp,sp,12
    9ae4:	f800283a 	ret
    9ae8:	80c00017 	ldw	r3,0(r16)
    9aec:	183ff926 	beq	r3,zero,9ad4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009ad4>
    9af0:	88c00015 	stw	r3,0(r17)
    9af4:	003ff706 	br	9ad4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009ad4>

00009af8 <_isatty_r>:
    9af8:	defffd04 	addi	sp,sp,-12
    9afc:	dc000015 	stw	r16,0(sp)
    9b00:	04000074 	movhi	r16,1
    9b04:	dc400115 	stw	r17,4(sp)
    9b08:	84121504 	addi	r16,r16,18516
    9b0c:	2023883a 	mov	r17,r4
    9b10:	2809883a 	mov	r4,r5
    9b14:	dfc00215 	stw	ra,8(sp)
    9b18:	80000015 	stw	zero,0(r16)
    9b1c:	000d4780 	call	d478 <isatty>
    9b20:	00ffffc4 	movi	r3,-1
    9b24:	10c00526 	beq	r2,r3,9b3c <_isatty_r+0x44>
    9b28:	dfc00217 	ldw	ra,8(sp)
    9b2c:	dc400117 	ldw	r17,4(sp)
    9b30:	dc000017 	ldw	r16,0(sp)
    9b34:	dec00304 	addi	sp,sp,12
    9b38:	f800283a 	ret
    9b3c:	80c00017 	ldw	r3,0(r16)
    9b40:	183ff926 	beq	r3,zero,9b28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b28>
    9b44:	88c00015 	stw	r3,0(r17)
    9b48:	003ff706 	br	9b28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b28>

00009b4c <_lseek_r>:
    9b4c:	defffd04 	addi	sp,sp,-12
    9b50:	2805883a 	mov	r2,r5
    9b54:	dc000015 	stw	r16,0(sp)
    9b58:	04000074 	movhi	r16,1
    9b5c:	dc400115 	stw	r17,4(sp)
    9b60:	300b883a 	mov	r5,r6
    9b64:	84121504 	addi	r16,r16,18516
    9b68:	2023883a 	mov	r17,r4
    9b6c:	380d883a 	mov	r6,r7
    9b70:	1009883a 	mov	r4,r2
    9b74:	dfc00215 	stw	ra,8(sp)
    9b78:	80000015 	stw	zero,0(r16)
    9b7c:	000d6440 	call	d644 <lseek>
    9b80:	00ffffc4 	movi	r3,-1
    9b84:	10c00526 	beq	r2,r3,9b9c <_lseek_r+0x50>
    9b88:	dfc00217 	ldw	ra,8(sp)
    9b8c:	dc400117 	ldw	r17,4(sp)
    9b90:	dc000017 	ldw	r16,0(sp)
    9b94:	dec00304 	addi	sp,sp,12
    9b98:	f800283a 	ret
    9b9c:	80c00017 	ldw	r3,0(r16)
    9ba0:	183ff926 	beq	r3,zero,9b88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b88>
    9ba4:	88c00015 	stw	r3,0(r17)
    9ba8:	003ff706 	br	9b88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009b88>

00009bac <_read_r>:
    9bac:	defffd04 	addi	sp,sp,-12
    9bb0:	2805883a 	mov	r2,r5
    9bb4:	dc000015 	stw	r16,0(sp)
    9bb8:	04000074 	movhi	r16,1
    9bbc:	dc400115 	stw	r17,4(sp)
    9bc0:	300b883a 	mov	r5,r6
    9bc4:	84121504 	addi	r16,r16,18516
    9bc8:	2023883a 	mov	r17,r4
    9bcc:	380d883a 	mov	r6,r7
    9bd0:	1009883a 	mov	r4,r2
    9bd4:	dfc00215 	stw	ra,8(sp)
    9bd8:	80000015 	stw	zero,0(r16)
    9bdc:	000d8180 	call	d818 <read>
    9be0:	00ffffc4 	movi	r3,-1
    9be4:	10c00526 	beq	r2,r3,9bfc <_read_r+0x50>
    9be8:	dfc00217 	ldw	ra,8(sp)
    9bec:	dc400117 	ldw	r17,4(sp)
    9bf0:	dc000017 	ldw	r16,0(sp)
    9bf4:	dec00304 	addi	sp,sp,12
    9bf8:	f800283a 	ret
    9bfc:	80c00017 	ldw	r3,0(r16)
    9c00:	183ff926 	beq	r3,zero,9be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009be8>
    9c04:	88c00015 	stw	r3,0(r17)
    9c08:	003ff706 	br	9be8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009be8>

00009c0c <__swbuf_r>:
    9c0c:	defffb04 	addi	sp,sp,-20
    9c10:	dcc00315 	stw	r19,12(sp)
    9c14:	dc800215 	stw	r18,8(sp)
    9c18:	dc000015 	stw	r16,0(sp)
    9c1c:	dfc00415 	stw	ra,16(sp)
    9c20:	dc400115 	stw	r17,4(sp)
    9c24:	2025883a 	mov	r18,r4
    9c28:	2827883a 	mov	r19,r5
    9c2c:	3021883a 	mov	r16,r6
    9c30:	20000226 	beq	r4,zero,9c3c <__swbuf_r+0x30>
    9c34:	20800e17 	ldw	r2,56(r4)
    9c38:	10004226 	beq	r2,zero,9d44 <__swbuf_r+0x138>
    9c3c:	80800617 	ldw	r2,24(r16)
    9c40:	8100030b 	ldhu	r4,12(r16)
    9c44:	80800215 	stw	r2,8(r16)
    9c48:	2080020c 	andi	r2,r4,8
    9c4c:	10003626 	beq	r2,zero,9d28 <__swbuf_r+0x11c>
    9c50:	80c00417 	ldw	r3,16(r16)
    9c54:	18003426 	beq	r3,zero,9d28 <__swbuf_r+0x11c>
    9c58:	2088000c 	andi	r2,r4,8192
    9c5c:	9c403fcc 	andi	r17,r19,255
    9c60:	10001a26 	beq	r2,zero,9ccc <__swbuf_r+0xc0>
    9c64:	80800017 	ldw	r2,0(r16)
    9c68:	81000517 	ldw	r4,20(r16)
    9c6c:	10c7c83a 	sub	r3,r2,r3
    9c70:	1900200e 	bge	r3,r4,9cf4 <__swbuf_r+0xe8>
    9c74:	18c00044 	addi	r3,r3,1
    9c78:	81000217 	ldw	r4,8(r16)
    9c7c:	11400044 	addi	r5,r2,1
    9c80:	81400015 	stw	r5,0(r16)
    9c84:	213fffc4 	addi	r4,r4,-1
    9c88:	81000215 	stw	r4,8(r16)
    9c8c:	14c00005 	stb	r19,0(r2)
    9c90:	80800517 	ldw	r2,20(r16)
    9c94:	10c01e26 	beq	r2,r3,9d10 <__swbuf_r+0x104>
    9c98:	8080030b 	ldhu	r2,12(r16)
    9c9c:	1080004c 	andi	r2,r2,1
    9ca0:	10000226 	beq	r2,zero,9cac <__swbuf_r+0xa0>
    9ca4:	00800284 	movi	r2,10
    9ca8:	88801926 	beq	r17,r2,9d10 <__swbuf_r+0x104>
    9cac:	8805883a 	mov	r2,r17
    9cb0:	dfc00417 	ldw	ra,16(sp)
    9cb4:	dcc00317 	ldw	r19,12(sp)
    9cb8:	dc800217 	ldw	r18,8(sp)
    9cbc:	dc400117 	ldw	r17,4(sp)
    9cc0:	dc000017 	ldw	r16,0(sp)
    9cc4:	dec00504 	addi	sp,sp,20
    9cc8:	f800283a 	ret
    9ccc:	81401917 	ldw	r5,100(r16)
    9cd0:	00b7ffc4 	movi	r2,-8193
    9cd4:	21080014 	ori	r4,r4,8192
    9cd8:	2884703a 	and	r2,r5,r2
    9cdc:	80801915 	stw	r2,100(r16)
    9ce0:	80800017 	ldw	r2,0(r16)
    9ce4:	8100030d 	sth	r4,12(r16)
    9ce8:	81000517 	ldw	r4,20(r16)
    9cec:	10c7c83a 	sub	r3,r2,r3
    9cf0:	193fe016 	blt	r3,r4,9c74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009c74>
    9cf4:	800b883a 	mov	r5,r16
    9cf8:	9009883a 	mov	r4,r18
    9cfc:	00049980 	call	4998 <_fflush_r>
    9d00:	1000071e 	bne	r2,zero,9d20 <__swbuf_r+0x114>
    9d04:	80800017 	ldw	r2,0(r16)
    9d08:	00c00044 	movi	r3,1
    9d0c:	003fda06 	br	9c78 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009c78>
    9d10:	800b883a 	mov	r5,r16
    9d14:	9009883a 	mov	r4,r18
    9d18:	00049980 	call	4998 <_fflush_r>
    9d1c:	103fe326 	beq	r2,zero,9cac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009cac>
    9d20:	00bfffc4 	movi	r2,-1
    9d24:	003fe206 	br	9cb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009cb0>
    9d28:	800b883a 	mov	r5,r16
    9d2c:	9009883a 	mov	r4,r18
    9d30:	0002da00 	call	2da0 <__swsetup_r>
    9d34:	103ffa1e 	bne	r2,zero,9d20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009d20>
    9d38:	8100030b 	ldhu	r4,12(r16)
    9d3c:	80c00417 	ldw	r3,16(r16)
    9d40:	003fc506 	br	9c58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009c58>
    9d44:	0004d740 	call	4d74 <__sinit>
    9d48:	003fbc06 	br	9c3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009c3c>

00009d4c <__swbuf>:
    9d4c:	00800074 	movhi	r2,1
    9d50:	108ab804 	addi	r2,r2,10976
    9d54:	280d883a 	mov	r6,r5
    9d58:	200b883a 	mov	r5,r4
    9d5c:	11000017 	ldw	r4,0(r2)
    9d60:	0009c0c1 	jmpi	9c0c <__swbuf_r>

00009d64 <_wcrtomb_r>:
    9d64:	defff604 	addi	sp,sp,-40
    9d68:	00800074 	movhi	r2,1
    9d6c:	dc800815 	stw	r18,32(sp)
    9d70:	dc400715 	stw	r17,28(sp)
    9d74:	dc000615 	stw	r16,24(sp)
    9d78:	108abc04 	addi	r2,r2,10992
    9d7c:	dfc00915 	stw	ra,36(sp)
    9d80:	2021883a 	mov	r16,r4
    9d84:	3823883a 	mov	r17,r7
    9d88:	14800017 	ldw	r18,0(r2)
    9d8c:	28001426 	beq	r5,zero,9de0 <_wcrtomb_r+0x7c>
    9d90:	d9400415 	stw	r5,16(sp)
    9d94:	d9800515 	stw	r6,20(sp)
    9d98:	00058b80 	call	58b8 <__locale_charset>
    9d9c:	d9800517 	ldw	r6,20(sp)
    9da0:	d9400417 	ldw	r5,16(sp)
    9da4:	100f883a 	mov	r7,r2
    9da8:	dc400015 	stw	r17,0(sp)
    9dac:	8009883a 	mov	r4,r16
    9db0:	903ee83a 	callr	r18
    9db4:	00ffffc4 	movi	r3,-1
    9db8:	10c0031e 	bne	r2,r3,9dc8 <_wcrtomb_r+0x64>
    9dbc:	88000015 	stw	zero,0(r17)
    9dc0:	00c02284 	movi	r3,138
    9dc4:	80c00015 	stw	r3,0(r16)
    9dc8:	dfc00917 	ldw	ra,36(sp)
    9dcc:	dc800817 	ldw	r18,32(sp)
    9dd0:	dc400717 	ldw	r17,28(sp)
    9dd4:	dc000617 	ldw	r16,24(sp)
    9dd8:	dec00a04 	addi	sp,sp,40
    9ddc:	f800283a 	ret
    9de0:	00058b80 	call	58b8 <__locale_charset>
    9de4:	100f883a 	mov	r7,r2
    9de8:	dc400015 	stw	r17,0(sp)
    9dec:	000d883a 	mov	r6,zero
    9df0:	d9400104 	addi	r5,sp,4
    9df4:	8009883a 	mov	r4,r16
    9df8:	903ee83a 	callr	r18
    9dfc:	003fed06 	br	9db4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009db4>

00009e00 <wcrtomb>:
    9e00:	defff604 	addi	sp,sp,-40
    9e04:	00800074 	movhi	r2,1
    9e08:	dc800615 	stw	r18,24(sp)
    9e0c:	dc400515 	stw	r17,20(sp)
    9e10:	108ab804 	addi	r2,r2,10976
    9e14:	dfc00915 	stw	ra,36(sp)
    9e18:	dd000815 	stw	r20,32(sp)
    9e1c:	dcc00715 	stw	r19,28(sp)
    9e20:	dc000415 	stw	r16,16(sp)
    9e24:	3025883a 	mov	r18,r6
    9e28:	14400017 	ldw	r17,0(r2)
    9e2c:	20001926 	beq	r4,zero,9e94 <wcrtomb+0x94>
    9e30:	00800074 	movhi	r2,1
    9e34:	108abc04 	addi	r2,r2,10992
    9e38:	15000017 	ldw	r20,0(r2)
    9e3c:	2021883a 	mov	r16,r4
    9e40:	2827883a 	mov	r19,r5
    9e44:	00058b80 	call	58b8 <__locale_charset>
    9e48:	100f883a 	mov	r7,r2
    9e4c:	dc800015 	stw	r18,0(sp)
    9e50:	980d883a 	mov	r6,r19
    9e54:	800b883a 	mov	r5,r16
    9e58:	8809883a 	mov	r4,r17
    9e5c:	a03ee83a 	callr	r20
    9e60:	00ffffc4 	movi	r3,-1
    9e64:	10c0031e 	bne	r2,r3,9e74 <wcrtomb+0x74>
    9e68:	90000015 	stw	zero,0(r18)
    9e6c:	00c02284 	movi	r3,138
    9e70:	88c00015 	stw	r3,0(r17)
    9e74:	dfc00917 	ldw	ra,36(sp)
    9e78:	dd000817 	ldw	r20,32(sp)
    9e7c:	dcc00717 	ldw	r19,28(sp)
    9e80:	dc800617 	ldw	r18,24(sp)
    9e84:	dc400517 	ldw	r17,20(sp)
    9e88:	dc000417 	ldw	r16,16(sp)
    9e8c:	dec00a04 	addi	sp,sp,40
    9e90:	f800283a 	ret
    9e94:	00800074 	movhi	r2,1
    9e98:	108abc04 	addi	r2,r2,10992
    9e9c:	14000017 	ldw	r16,0(r2)
    9ea0:	00058b80 	call	58b8 <__locale_charset>
    9ea4:	100f883a 	mov	r7,r2
    9ea8:	dc800015 	stw	r18,0(sp)
    9eac:	000d883a 	mov	r6,zero
    9eb0:	d9400104 	addi	r5,sp,4
    9eb4:	8809883a 	mov	r4,r17
    9eb8:	803ee83a 	callr	r16
    9ebc:	003fe806 	br	9e60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009e60>

00009ec0 <__ascii_wctomb>:
    9ec0:	28000526 	beq	r5,zero,9ed8 <__ascii_wctomb+0x18>
    9ec4:	00803fc4 	movi	r2,255
    9ec8:	11800536 	bltu	r2,r6,9ee0 <__ascii_wctomb+0x20>
    9ecc:	29800005 	stb	r6,0(r5)
    9ed0:	00800044 	movi	r2,1
    9ed4:	f800283a 	ret
    9ed8:	0005883a 	mov	r2,zero
    9edc:	f800283a 	ret
    9ee0:	00802284 	movi	r2,138
    9ee4:	20800015 	stw	r2,0(r4)
    9ee8:	00bfffc4 	movi	r2,-1
    9eec:	f800283a 	ret

00009ef0 <_wctomb_r>:
    9ef0:	00800074 	movhi	r2,1
    9ef4:	defff904 	addi	sp,sp,-28
    9ef8:	108abc04 	addi	r2,r2,10992
    9efc:	dfc00615 	stw	ra,24(sp)
    9f00:	dc400515 	stw	r17,20(sp)
    9f04:	dc000415 	stw	r16,16(sp)
    9f08:	3823883a 	mov	r17,r7
    9f0c:	14000017 	ldw	r16,0(r2)
    9f10:	d9000115 	stw	r4,4(sp)
    9f14:	d9400215 	stw	r5,8(sp)
    9f18:	d9800315 	stw	r6,12(sp)
    9f1c:	00058b80 	call	58b8 <__locale_charset>
    9f20:	d9800317 	ldw	r6,12(sp)
    9f24:	d9400217 	ldw	r5,8(sp)
    9f28:	d9000117 	ldw	r4,4(sp)
    9f2c:	100f883a 	mov	r7,r2
    9f30:	dc400015 	stw	r17,0(sp)
    9f34:	803ee83a 	callr	r16
    9f38:	dfc00617 	ldw	ra,24(sp)
    9f3c:	dc400517 	ldw	r17,20(sp)
    9f40:	dc000417 	ldw	r16,16(sp)
    9f44:	dec00704 	addi	sp,sp,28
    9f48:	f800283a 	ret

00009f4c <__udivdi3>:
    9f4c:	defff504 	addi	sp,sp,-44
    9f50:	dcc00415 	stw	r19,16(sp)
    9f54:	dc000115 	stw	r16,4(sp)
    9f58:	dfc00a15 	stw	ra,40(sp)
    9f5c:	df000915 	stw	fp,36(sp)
    9f60:	ddc00815 	stw	r23,32(sp)
    9f64:	dd800715 	stw	r22,28(sp)
    9f68:	dd400615 	stw	r21,24(sp)
    9f6c:	dd000515 	stw	r20,20(sp)
    9f70:	dc800315 	stw	r18,12(sp)
    9f74:	dc400215 	stw	r17,8(sp)
    9f78:	2027883a 	mov	r19,r4
    9f7c:	2821883a 	mov	r16,r5
    9f80:	3800411e 	bne	r7,zero,a088 <__udivdi3+0x13c>
    9f84:	3023883a 	mov	r17,r6
    9f88:	2025883a 	mov	r18,r4
    9f8c:	2980522e 	bgeu	r5,r6,a0d8 <__udivdi3+0x18c>
    9f90:	00bfffd4 	movui	r2,65535
    9f94:	282d883a 	mov	r22,r5
    9f98:	1180a836 	bltu	r2,r6,a23c <__udivdi3+0x2f0>
    9f9c:	00803fc4 	movi	r2,255
    9fa0:	1185803a 	cmpltu	r2,r2,r6
    9fa4:	100490fa 	slli	r2,r2,3
    9fa8:	3086d83a 	srl	r3,r6,r2
    9fac:	01000074 	movhi	r4,1
    9fb0:	2102fa04 	addi	r4,r4,3048
    9fb4:	20c7883a 	add	r3,r4,r3
    9fb8:	18c00003 	ldbu	r3,0(r3)
    9fbc:	1885883a 	add	r2,r3,r2
    9fc0:	00c00804 	movi	r3,32
    9fc4:	1887c83a 	sub	r3,r3,r2
    9fc8:	18000526 	beq	r3,zero,9fe0 <__udivdi3+0x94>
    9fcc:	80e0983a 	sll	r16,r16,r3
    9fd0:	9884d83a 	srl	r2,r19,r2
    9fd4:	30e2983a 	sll	r17,r6,r3
    9fd8:	98e4983a 	sll	r18,r19,r3
    9fdc:	142cb03a 	or	r22,r2,r16
    9fe0:	882ad43a 	srli	r21,r17,16
    9fe4:	b009883a 	mov	r4,r22
    9fe8:	8d3fffcc 	andi	r20,r17,65535
    9fec:	a80b883a 	mov	r5,r21
    9ff0:	000ab580 	call	ab58 <__umodsi3>
    9ff4:	b009883a 	mov	r4,r22
    9ff8:	a80b883a 	mov	r5,r21
    9ffc:	1027883a 	mov	r19,r2
    a000:	000aaf40 	call	aaf4 <__udivsi3>
    a004:	102d883a 	mov	r22,r2
    a008:	9826943a 	slli	r19,r19,16
    a00c:	9004d43a 	srli	r2,r18,16
    a010:	a5a1383a 	mul	r16,r20,r22
    a014:	14c4b03a 	or	r2,r2,r19
    a018:	1400052e 	bgeu	r2,r16,a030 <__udivdi3+0xe4>
    a01c:	1445883a 	add	r2,r2,r17
    a020:	b0ffffc4 	addi	r3,r22,-1
    a024:	14400136 	bltu	r2,r17,a02c <__udivdi3+0xe0>
    a028:	14012336 	bltu	r2,r16,a4b8 <__udivdi3+0x56c>
    a02c:	182d883a 	mov	r22,r3
    a030:	1421c83a 	sub	r16,r2,r16
    a034:	a80b883a 	mov	r5,r21
    a038:	8009883a 	mov	r4,r16
    a03c:	000ab580 	call	ab58 <__umodsi3>
    a040:	1027883a 	mov	r19,r2
    a044:	a80b883a 	mov	r5,r21
    a048:	8009883a 	mov	r4,r16
    a04c:	000aaf40 	call	aaf4 <__udivsi3>
    a050:	9826943a 	slli	r19,r19,16
    a054:	a0a9383a 	mul	r20,r20,r2
    a058:	94bfffcc 	andi	r18,r18,65535
    a05c:	94e4b03a 	or	r18,r18,r19
    a060:	9500052e 	bgeu	r18,r20,a078 <__udivdi3+0x12c>
    a064:	8ca5883a 	add	r18,r17,r18
    a068:	10ffffc4 	addi	r3,r2,-1
    a06c:	9440f136 	bltu	r18,r17,a434 <__udivdi3+0x4e8>
    a070:	9500f02e 	bgeu	r18,r20,a434 <__udivdi3+0x4e8>
    a074:	10bfff84 	addi	r2,r2,-2
    a078:	b00c943a 	slli	r6,r22,16
    a07c:	0007883a 	mov	r3,zero
    a080:	3084b03a 	or	r2,r6,r2
    a084:	00005906 	br	a1ec <__udivdi3+0x2a0>
    a088:	29c05636 	bltu	r5,r7,a1e4 <__udivdi3+0x298>
    a08c:	00bfffd4 	movui	r2,65535
    a090:	11c0622e 	bgeu	r2,r7,a21c <__udivdi3+0x2d0>
    a094:	00804034 	movhi	r2,256
    a098:	10bfffc4 	addi	r2,r2,-1
    a09c:	11c0ee36 	bltu	r2,r7,a458 <__udivdi3+0x50c>
    a0a0:	00800404 	movi	r2,16
    a0a4:	3886d83a 	srl	r3,r7,r2
    a0a8:	01000074 	movhi	r4,1
    a0ac:	2102fa04 	addi	r4,r4,3048
    a0b0:	20c7883a 	add	r3,r4,r3
    a0b4:	18c00003 	ldbu	r3,0(r3)
    a0b8:	05400804 	movi	r21,32
    a0bc:	1885883a 	add	r2,r3,r2
    a0c0:	a8abc83a 	sub	r21,r21,r2
    a0c4:	a800621e 	bne	r21,zero,a250 <__udivdi3+0x304>
    a0c8:	3c00e936 	bltu	r7,r16,a470 <__udivdi3+0x524>
    a0cc:	9985403a 	cmpgeu	r2,r19,r6
    a0d0:	0007883a 	mov	r3,zero
    a0d4:	00004506 	br	a1ec <__udivdi3+0x2a0>
    a0d8:	3000041e 	bne	r6,zero,a0ec <__udivdi3+0x1a0>
    a0dc:	000b883a 	mov	r5,zero
    a0e0:	01000044 	movi	r4,1
    a0e4:	000aaf40 	call	aaf4 <__udivsi3>
    a0e8:	1023883a 	mov	r17,r2
    a0ec:	00bfffd4 	movui	r2,65535
    a0f0:	14404e2e 	bgeu	r2,r17,a22c <__udivdi3+0x2e0>
    a0f4:	00804034 	movhi	r2,256
    a0f8:	10bfffc4 	addi	r2,r2,-1
    a0fc:	1440d836 	bltu	r2,r17,a460 <__udivdi3+0x514>
    a100:	00800404 	movi	r2,16
    a104:	8886d83a 	srl	r3,r17,r2
    a108:	01000074 	movhi	r4,1
    a10c:	2102fa04 	addi	r4,r4,3048
    a110:	20c7883a 	add	r3,r4,r3
    a114:	18c00003 	ldbu	r3,0(r3)
    a118:	1885883a 	add	r2,r3,r2
    a11c:	00c00804 	movi	r3,32
    a120:	1887c83a 	sub	r3,r3,r2
    a124:	18008f1e 	bne	r3,zero,a364 <__udivdi3+0x418>
    a128:	882ad43a 	srli	r21,r17,16
    a12c:	8461c83a 	sub	r16,r16,r17
    a130:	8d3fffcc 	andi	r20,r17,65535
    a134:	00c00044 	movi	r3,1
    a138:	8009883a 	mov	r4,r16
    a13c:	a80b883a 	mov	r5,r21
    a140:	d8c00015 	stw	r3,0(sp)
    a144:	000ab580 	call	ab58 <__umodsi3>
    a148:	8009883a 	mov	r4,r16
    a14c:	a80b883a 	mov	r5,r21
    a150:	1027883a 	mov	r19,r2
    a154:	000aaf40 	call	aaf4 <__udivsi3>
    a158:	9826943a 	slli	r19,r19,16
    a15c:	9008d43a 	srli	r4,r18,16
    a160:	1521383a 	mul	r16,r2,r20
    a164:	102d883a 	mov	r22,r2
    a168:	24c8b03a 	or	r4,r4,r19
    a16c:	d8c00017 	ldw	r3,0(sp)
    a170:	2400052e 	bgeu	r4,r16,a188 <__udivdi3+0x23c>
    a174:	2449883a 	add	r4,r4,r17
    a178:	b0bfffc4 	addi	r2,r22,-1
    a17c:	24400136 	bltu	r4,r17,a184 <__udivdi3+0x238>
    a180:	2400ca36 	bltu	r4,r16,a4ac <__udivdi3+0x560>
    a184:	102d883a 	mov	r22,r2
    a188:	2421c83a 	sub	r16,r4,r16
    a18c:	a80b883a 	mov	r5,r21
    a190:	8009883a 	mov	r4,r16
    a194:	d8c00015 	stw	r3,0(sp)
    a198:	000ab580 	call	ab58 <__umodsi3>
    a19c:	1027883a 	mov	r19,r2
    a1a0:	a80b883a 	mov	r5,r21
    a1a4:	8009883a 	mov	r4,r16
    a1a8:	000aaf40 	call	aaf4 <__udivsi3>
    a1ac:	9826943a 	slli	r19,r19,16
    a1b0:	1529383a 	mul	r20,r2,r20
    a1b4:	94bfffcc 	andi	r18,r18,65535
    a1b8:	94e4b03a 	or	r18,r18,r19
    a1bc:	d8c00017 	ldw	r3,0(sp)
    a1c0:	9500052e 	bgeu	r18,r20,a1d8 <__udivdi3+0x28c>
    a1c4:	8ca5883a 	add	r18,r17,r18
    a1c8:	113fffc4 	addi	r4,r2,-1
    a1cc:	94409736 	bltu	r18,r17,a42c <__udivdi3+0x4e0>
    a1d0:	9500962e 	bgeu	r18,r20,a42c <__udivdi3+0x4e0>
    a1d4:	10bfff84 	addi	r2,r2,-2
    a1d8:	b00c943a 	slli	r6,r22,16
    a1dc:	3084b03a 	or	r2,r6,r2
    a1e0:	00000206 	br	a1ec <__udivdi3+0x2a0>
    a1e4:	0007883a 	mov	r3,zero
    a1e8:	0005883a 	mov	r2,zero
    a1ec:	dfc00a17 	ldw	ra,40(sp)
    a1f0:	df000917 	ldw	fp,36(sp)
    a1f4:	ddc00817 	ldw	r23,32(sp)
    a1f8:	dd800717 	ldw	r22,28(sp)
    a1fc:	dd400617 	ldw	r21,24(sp)
    a200:	dd000517 	ldw	r20,20(sp)
    a204:	dcc00417 	ldw	r19,16(sp)
    a208:	dc800317 	ldw	r18,12(sp)
    a20c:	dc400217 	ldw	r17,8(sp)
    a210:	dc000117 	ldw	r16,4(sp)
    a214:	dec00b04 	addi	sp,sp,44
    a218:	f800283a 	ret
    a21c:	00803fc4 	movi	r2,255
    a220:	11c5803a 	cmpltu	r2,r2,r7
    a224:	100490fa 	slli	r2,r2,3
    a228:	003f9e06 	br	a0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a0a4>
    a22c:	00803fc4 	movi	r2,255
    a230:	1445803a 	cmpltu	r2,r2,r17
    a234:	100490fa 	slli	r2,r2,3
    a238:	003fb206 	br	a104 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a104>
    a23c:	00804034 	movhi	r2,256
    a240:	10bfffc4 	addi	r2,r2,-1
    a244:	11808836 	bltu	r2,r6,a468 <__udivdi3+0x51c>
    a248:	00800404 	movi	r2,16
    a24c:	003f5606 	br	9fa8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009fa8>
    a250:	30aed83a 	srl	r23,r6,r2
    a254:	3d4e983a 	sll	r7,r7,r21
    a258:	80acd83a 	srl	r22,r16,r2
    a25c:	9884d83a 	srl	r2,r19,r2
    a260:	3deeb03a 	or	r23,r7,r23
    a264:	b824d43a 	srli	r18,r23,16
    a268:	8560983a 	sll	r16,r16,r21
    a26c:	b009883a 	mov	r4,r22
    a270:	900b883a 	mov	r5,r18
    a274:	3568983a 	sll	r20,r6,r21
    a278:	1420b03a 	or	r16,r2,r16
    a27c:	000ab580 	call	ab58 <__umodsi3>
    a280:	b009883a 	mov	r4,r22
    a284:	900b883a 	mov	r5,r18
    a288:	1023883a 	mov	r17,r2
    a28c:	000aaf40 	call	aaf4 <__udivsi3>
    a290:	8808943a 	slli	r4,r17,16
    a294:	bf3fffcc 	andi	fp,r23,65535
    a298:	8006d43a 	srli	r3,r16,16
    a29c:	e0a3383a 	mul	r17,fp,r2
    a2a0:	100d883a 	mov	r6,r2
    a2a4:	1906b03a 	or	r3,r3,r4
    a2a8:	1c40042e 	bgeu	r3,r17,a2bc <__udivdi3+0x370>
    a2ac:	1dc7883a 	add	r3,r3,r23
    a2b0:	10bfffc4 	addi	r2,r2,-1
    a2b4:	1dc0752e 	bgeu	r3,r23,a48c <__udivdi3+0x540>
    a2b8:	100d883a 	mov	r6,r2
    a2bc:	1c63c83a 	sub	r17,r3,r17
    a2c0:	900b883a 	mov	r5,r18
    a2c4:	8809883a 	mov	r4,r17
    a2c8:	d9800015 	stw	r6,0(sp)
    a2cc:	000ab580 	call	ab58 <__umodsi3>
    a2d0:	102d883a 	mov	r22,r2
    a2d4:	8809883a 	mov	r4,r17
    a2d8:	900b883a 	mov	r5,r18
    a2dc:	000aaf40 	call	aaf4 <__udivsi3>
    a2e0:	b02c943a 	slli	r22,r22,16
    a2e4:	e089383a 	mul	r4,fp,r2
    a2e8:	843fffcc 	andi	r16,r16,65535
    a2ec:	85a0b03a 	or	r16,r16,r22
    a2f0:	d9800017 	ldw	r6,0(sp)
    a2f4:	8100042e 	bgeu	r16,r4,a308 <__udivdi3+0x3bc>
    a2f8:	85e1883a 	add	r16,r16,r23
    a2fc:	10ffffc4 	addi	r3,r2,-1
    a300:	85c05e2e 	bgeu	r16,r23,a47c <__udivdi3+0x530>
    a304:	1805883a 	mov	r2,r3
    a308:	300c943a 	slli	r6,r6,16
    a30c:	a17fffcc 	andi	r5,r20,65535
    a310:	a028d43a 	srli	r20,r20,16
    a314:	3084b03a 	or	r2,r6,r2
    a318:	10ffffcc 	andi	r3,r2,65535
    a31c:	100cd43a 	srli	r6,r2,16
    a320:	194f383a 	mul	r7,r3,r5
    a324:	1d07383a 	mul	r3,r3,r20
    a328:	314b383a 	mul	r5,r6,r5
    a32c:	3810d43a 	srli	r8,r7,16
    a330:	8121c83a 	sub	r16,r16,r4
    a334:	1947883a 	add	r3,r3,r5
    a338:	40c7883a 	add	r3,r8,r3
    a33c:	350d383a 	mul	r6,r6,r20
    a340:	1940022e 	bgeu	r3,r5,a34c <__udivdi3+0x400>
    a344:	01000074 	movhi	r4,1
    a348:	310d883a 	add	r6,r6,r4
    a34c:	1828d43a 	srli	r20,r3,16
    a350:	a18d883a 	add	r6,r20,r6
    a354:	81803e36 	bltu	r16,r6,a450 <__udivdi3+0x504>
    a358:	81803826 	beq	r16,r6,a43c <__udivdi3+0x4f0>
    a35c:	0007883a 	mov	r3,zero
    a360:	003fa206 	br	a1ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a1ec>
    a364:	88e2983a 	sll	r17,r17,r3
    a368:	80a8d83a 	srl	r20,r16,r2
    a36c:	80e0983a 	sll	r16,r16,r3
    a370:	882ad43a 	srli	r21,r17,16
    a374:	9884d83a 	srl	r2,r19,r2
    a378:	a009883a 	mov	r4,r20
    a37c:	a80b883a 	mov	r5,r21
    a380:	142eb03a 	or	r23,r2,r16
    a384:	98e4983a 	sll	r18,r19,r3
    a388:	000ab580 	call	ab58 <__umodsi3>
    a38c:	a009883a 	mov	r4,r20
    a390:	a80b883a 	mov	r5,r21
    a394:	1021883a 	mov	r16,r2
    a398:	000aaf40 	call	aaf4 <__udivsi3>
    a39c:	1039883a 	mov	fp,r2
    a3a0:	8d3fffcc 	andi	r20,r17,65535
    a3a4:	8020943a 	slli	r16,r16,16
    a3a8:	b804d43a 	srli	r2,r23,16
    a3ac:	a72d383a 	mul	r22,r20,fp
    a3b0:	1404b03a 	or	r2,r2,r16
    a3b4:	1580062e 	bgeu	r2,r22,a3d0 <__udivdi3+0x484>
    a3b8:	1445883a 	add	r2,r2,r17
    a3bc:	e0ffffc4 	addi	r3,fp,-1
    a3c0:	14403836 	bltu	r2,r17,a4a4 <__udivdi3+0x558>
    a3c4:	1580372e 	bgeu	r2,r22,a4a4 <__udivdi3+0x558>
    a3c8:	e73fff84 	addi	fp,fp,-2
    a3cc:	1445883a 	add	r2,r2,r17
    a3d0:	15adc83a 	sub	r22,r2,r22
    a3d4:	a80b883a 	mov	r5,r21
    a3d8:	b009883a 	mov	r4,r22
    a3dc:	000ab580 	call	ab58 <__umodsi3>
    a3e0:	1027883a 	mov	r19,r2
    a3e4:	b009883a 	mov	r4,r22
    a3e8:	a80b883a 	mov	r5,r21
    a3ec:	000aaf40 	call	aaf4 <__udivsi3>
    a3f0:	9826943a 	slli	r19,r19,16
    a3f4:	a0a1383a 	mul	r16,r20,r2
    a3f8:	b93fffcc 	andi	r4,r23,65535
    a3fc:	24c8b03a 	or	r4,r4,r19
    a400:	2400062e 	bgeu	r4,r16,a41c <__udivdi3+0x4d0>
    a404:	2449883a 	add	r4,r4,r17
    a408:	10ffffc4 	addi	r3,r2,-1
    a40c:	24402336 	bltu	r4,r17,a49c <__udivdi3+0x550>
    a410:	2400222e 	bgeu	r4,r16,a49c <__udivdi3+0x550>
    a414:	10bfff84 	addi	r2,r2,-2
    a418:	2449883a 	add	r4,r4,r17
    a41c:	e038943a 	slli	fp,fp,16
    a420:	2421c83a 	sub	r16,r4,r16
    a424:	e086b03a 	or	r3,fp,r2
    a428:	003f4306 	br	a138 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a138>
    a42c:	2005883a 	mov	r2,r4
    a430:	003f6906 	br	a1d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a1d8>
    a434:	1805883a 	mov	r2,r3
    a438:	003f0f06 	br	a078 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a078>
    a43c:	1806943a 	slli	r3,r3,16
    a440:	9d66983a 	sll	r19,r19,r21
    a444:	39ffffcc 	andi	r7,r7,65535
    a448:	19c7883a 	add	r3,r3,r7
    a44c:	98ffc32e 	bgeu	r19,r3,a35c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a35c>
    a450:	10bfffc4 	addi	r2,r2,-1
    a454:	003fc106 	br	a35c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a35c>
    a458:	00800604 	movi	r2,24
    a45c:	003f1106 	br	a0a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a0a4>
    a460:	00800604 	movi	r2,24
    a464:	003f2706 	br	a104 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a104>
    a468:	00800604 	movi	r2,24
    a46c:	003ece06 	br	9fa8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0009fa8>
    a470:	0007883a 	mov	r3,zero
    a474:	00800044 	movi	r2,1
    a478:	003f5c06 	br	a1ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a1ec>
    a47c:	813fa12e 	bgeu	r16,r4,a304 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a304>
    a480:	10bfff84 	addi	r2,r2,-2
    a484:	85e1883a 	add	r16,r16,r23
    a488:	003f9f06 	br	a308 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a308>
    a48c:	1c7f8a2e 	bgeu	r3,r17,a2b8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a2b8>
    a490:	31bfff84 	addi	r6,r6,-2
    a494:	1dc7883a 	add	r3,r3,r23
    a498:	003f8806 	br	a2bc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a2bc>
    a49c:	1805883a 	mov	r2,r3
    a4a0:	003fde06 	br	a41c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a41c>
    a4a4:	1839883a 	mov	fp,r3
    a4a8:	003fc906 	br	a3d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a3d0>
    a4ac:	b5bfff84 	addi	r22,r22,-2
    a4b0:	2449883a 	add	r4,r4,r17
    a4b4:	003f3406 	br	a188 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a188>
    a4b8:	b5bfff84 	addi	r22,r22,-2
    a4bc:	1445883a 	add	r2,r2,r17
    a4c0:	003edb06 	br	a030 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a030>

0000a4c4 <__umoddi3>:
    a4c4:	defff404 	addi	sp,sp,-48
    a4c8:	df000a15 	stw	fp,40(sp)
    a4cc:	dc400315 	stw	r17,12(sp)
    a4d0:	dc000215 	stw	r16,8(sp)
    a4d4:	dfc00b15 	stw	ra,44(sp)
    a4d8:	ddc00915 	stw	r23,36(sp)
    a4dc:	dd800815 	stw	r22,32(sp)
    a4e0:	dd400715 	stw	r21,28(sp)
    a4e4:	dd000615 	stw	r20,24(sp)
    a4e8:	dcc00515 	stw	r19,20(sp)
    a4ec:	dc800415 	stw	r18,16(sp)
    a4f0:	2021883a 	mov	r16,r4
    a4f4:	2823883a 	mov	r17,r5
    a4f8:	2839883a 	mov	fp,r5
    a4fc:	38003c1e 	bne	r7,zero,a5f0 <__umoddi3+0x12c>
    a500:	3027883a 	mov	r19,r6
    a504:	2029883a 	mov	r20,r4
    a508:	2980512e 	bgeu	r5,r6,a650 <__umoddi3+0x18c>
    a50c:	00bfffd4 	movui	r2,65535
    a510:	11809a36 	bltu	r2,r6,a77c <__umoddi3+0x2b8>
    a514:	01003fc4 	movi	r4,255
    a518:	2189803a 	cmpltu	r4,r4,r6
    a51c:	200890fa 	slli	r4,r4,3
    a520:	3104d83a 	srl	r2,r6,r4
    a524:	00c00074 	movhi	r3,1
    a528:	18c2fa04 	addi	r3,r3,3048
    a52c:	1885883a 	add	r2,r3,r2
    a530:	10c00003 	ldbu	r3,0(r2)
    a534:	00800804 	movi	r2,32
    a538:	1909883a 	add	r4,r3,r4
    a53c:	1125c83a 	sub	r18,r2,r4
    a540:	90000526 	beq	r18,zero,a558 <__umoddi3+0x94>
    a544:	8ca2983a 	sll	r17,r17,r18
    a548:	8108d83a 	srl	r4,r16,r4
    a54c:	34a6983a 	sll	r19,r6,r18
    a550:	84a8983a 	sll	r20,r16,r18
    a554:	2478b03a 	or	fp,r4,r17
    a558:	982ed43a 	srli	r23,r19,16
    a55c:	e009883a 	mov	r4,fp
    a560:	9dbfffcc 	andi	r22,r19,65535
    a564:	b80b883a 	mov	r5,r23
    a568:	000ab580 	call	ab58 <__umodsi3>
    a56c:	e009883a 	mov	r4,fp
    a570:	b80b883a 	mov	r5,r23
    a574:	102b883a 	mov	r21,r2
    a578:	000aaf40 	call	aaf4 <__udivsi3>
    a57c:	a806943a 	slli	r3,r21,16
    a580:	a008d43a 	srli	r4,r20,16
    a584:	b085383a 	mul	r2,r22,r2
    a588:	20c8b03a 	or	r4,r4,r3
    a58c:	2080032e 	bgeu	r4,r2,a59c <__umoddi3+0xd8>
    a590:	24c9883a 	add	r4,r4,r19
    a594:	24c00136 	bltu	r4,r19,a59c <__umoddi3+0xd8>
    a598:	20811036 	bltu	r4,r2,a9dc <__umoddi3+0x518>
    a59c:	20abc83a 	sub	r21,r4,r2
    a5a0:	b80b883a 	mov	r5,r23
    a5a4:	a809883a 	mov	r4,r21
    a5a8:	000ab580 	call	ab58 <__umodsi3>
    a5ac:	1023883a 	mov	r17,r2
    a5b0:	b80b883a 	mov	r5,r23
    a5b4:	a809883a 	mov	r4,r21
    a5b8:	000aaf40 	call	aaf4 <__udivsi3>
    a5bc:	8822943a 	slli	r17,r17,16
    a5c0:	b085383a 	mul	r2,r22,r2
    a5c4:	a0ffffcc 	andi	r3,r20,65535
    a5c8:	1c46b03a 	or	r3,r3,r17
    a5cc:	1880042e 	bgeu	r3,r2,a5e0 <__umoddi3+0x11c>
    a5d0:	1cc7883a 	add	r3,r3,r19
    a5d4:	1cc00236 	bltu	r3,r19,a5e0 <__umoddi3+0x11c>
    a5d8:	1880012e 	bgeu	r3,r2,a5e0 <__umoddi3+0x11c>
    a5dc:	1cc7883a 	add	r3,r3,r19
    a5e0:	1885c83a 	sub	r2,r3,r2
    a5e4:	1484d83a 	srl	r2,r2,r18
    a5e8:	0007883a 	mov	r3,zero
    a5ec:	00004f06 	br	a72c <__umoddi3+0x268>
    a5f0:	29c04c36 	bltu	r5,r7,a724 <__umoddi3+0x260>
    a5f4:	00bfffd4 	movui	r2,65535
    a5f8:	11c0582e 	bgeu	r2,r7,a75c <__umoddi3+0x298>
    a5fc:	00804034 	movhi	r2,256
    a600:	10bfffc4 	addi	r2,r2,-1
    a604:	11c0e736 	bltu	r2,r7,a9a4 <__umoddi3+0x4e0>
    a608:	01000404 	movi	r4,16
    a60c:	3904d83a 	srl	r2,r7,r4
    a610:	00c00074 	movhi	r3,1
    a614:	18c2fa04 	addi	r3,r3,3048
    a618:	1885883a 	add	r2,r3,r2
    a61c:	14c00003 	ldbu	r19,0(r2)
    a620:	00c00804 	movi	r3,32
    a624:	9927883a 	add	r19,r19,r4
    a628:	1ce9c83a 	sub	r20,r3,r19
    a62c:	a000581e 	bne	r20,zero,a790 <__umoddi3+0x2cc>
    a630:	3c400136 	bltu	r7,r17,a638 <__umoddi3+0x174>
    a634:	8180eb36 	bltu	r16,r6,a9e4 <__umoddi3+0x520>
    a638:	8185c83a 	sub	r2,r16,r6
    a63c:	89e3c83a 	sub	r17,r17,r7
    a640:	8089803a 	cmpltu	r4,r16,r2
    a644:	8939c83a 	sub	fp,r17,r4
    a648:	e007883a 	mov	r3,fp
    a64c:	00003706 	br	a72c <__umoddi3+0x268>
    a650:	3000041e 	bne	r6,zero,a664 <__umoddi3+0x1a0>
    a654:	000b883a 	mov	r5,zero
    a658:	01000044 	movi	r4,1
    a65c:	000aaf40 	call	aaf4 <__udivsi3>
    a660:	1027883a 	mov	r19,r2
    a664:	00bfffd4 	movui	r2,65535
    a668:	14c0402e 	bgeu	r2,r19,a76c <__umoddi3+0x2a8>
    a66c:	00804034 	movhi	r2,256
    a670:	10bfffc4 	addi	r2,r2,-1
    a674:	14c0cd36 	bltu	r2,r19,a9ac <__umoddi3+0x4e8>
    a678:	00800404 	movi	r2,16
    a67c:	9886d83a 	srl	r3,r19,r2
    a680:	01000074 	movhi	r4,1
    a684:	2102fa04 	addi	r4,r4,3048
    a688:	20c7883a 	add	r3,r4,r3
    a68c:	18c00003 	ldbu	r3,0(r3)
    a690:	1887883a 	add	r3,r3,r2
    a694:	00800804 	movi	r2,32
    a698:	10e5c83a 	sub	r18,r2,r3
    a69c:	9000901e 	bne	r18,zero,a8e0 <__umoddi3+0x41c>
    a6a0:	982cd43a 	srli	r22,r19,16
    a6a4:	8ce3c83a 	sub	r17,r17,r19
    a6a8:	9d7fffcc 	andi	r21,r19,65535
    a6ac:	b00b883a 	mov	r5,r22
    a6b0:	8809883a 	mov	r4,r17
    a6b4:	000ab580 	call	ab58 <__umodsi3>
    a6b8:	8809883a 	mov	r4,r17
    a6bc:	b00b883a 	mov	r5,r22
    a6c0:	1021883a 	mov	r16,r2
    a6c4:	000aaf40 	call	aaf4 <__udivsi3>
    a6c8:	8006943a 	slli	r3,r16,16
    a6cc:	a008d43a 	srli	r4,r20,16
    a6d0:	1545383a 	mul	r2,r2,r21
    a6d4:	20c8b03a 	or	r4,r4,r3
    a6d8:	2080042e 	bgeu	r4,r2,a6ec <__umoddi3+0x228>
    a6dc:	24c9883a 	add	r4,r4,r19
    a6e0:	24c00236 	bltu	r4,r19,a6ec <__umoddi3+0x228>
    a6e4:	2080012e 	bgeu	r4,r2,a6ec <__umoddi3+0x228>
    a6e8:	24c9883a 	add	r4,r4,r19
    a6ec:	20a1c83a 	sub	r16,r4,r2
    a6f0:	b00b883a 	mov	r5,r22
    a6f4:	8009883a 	mov	r4,r16
    a6f8:	000ab580 	call	ab58 <__umodsi3>
    a6fc:	1023883a 	mov	r17,r2
    a700:	b00b883a 	mov	r5,r22
    a704:	8009883a 	mov	r4,r16
    a708:	000aaf40 	call	aaf4 <__udivsi3>
    a70c:	8822943a 	slli	r17,r17,16
    a710:	1545383a 	mul	r2,r2,r21
    a714:	a53fffcc 	andi	r20,r20,65535
    a718:	a446b03a 	or	r3,r20,r17
    a71c:	18bfb02e 	bgeu	r3,r2,a5e0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a5e0>
    a720:	003fab06 	br	a5d0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a5d0>
    a724:	2005883a 	mov	r2,r4
    a728:	2807883a 	mov	r3,r5
    a72c:	dfc00b17 	ldw	ra,44(sp)
    a730:	df000a17 	ldw	fp,40(sp)
    a734:	ddc00917 	ldw	r23,36(sp)
    a738:	dd800817 	ldw	r22,32(sp)
    a73c:	dd400717 	ldw	r21,28(sp)
    a740:	dd000617 	ldw	r20,24(sp)
    a744:	dcc00517 	ldw	r19,20(sp)
    a748:	dc800417 	ldw	r18,16(sp)
    a74c:	dc400317 	ldw	r17,12(sp)
    a750:	dc000217 	ldw	r16,8(sp)
    a754:	dec00c04 	addi	sp,sp,48
    a758:	f800283a 	ret
    a75c:	04c03fc4 	movi	r19,255
    a760:	99c9803a 	cmpltu	r4,r19,r7
    a764:	200890fa 	slli	r4,r4,3
    a768:	003fa806 	br	a60c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a60c>
    a76c:	00803fc4 	movi	r2,255
    a770:	14c5803a 	cmpltu	r2,r2,r19
    a774:	100490fa 	slli	r2,r2,3
    a778:	003fc006 	br	a67c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a67c>
    a77c:	00804034 	movhi	r2,256
    a780:	10bfffc4 	addi	r2,r2,-1
    a784:	11808b36 	bltu	r2,r6,a9b4 <__umoddi3+0x4f0>
    a788:	01000404 	movi	r4,16
    a78c:	003f6406 	br	a520 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a520>
    a790:	34c4d83a 	srl	r2,r6,r19
    a794:	3d0e983a 	sll	r7,r7,r20
    a798:	8cf8d83a 	srl	fp,r17,r19
    a79c:	8d10983a 	sll	r8,r17,r20
    a7a0:	38aab03a 	or	r21,r7,r2
    a7a4:	a82cd43a 	srli	r22,r21,16
    a7a8:	84e2d83a 	srl	r17,r16,r19
    a7ac:	e009883a 	mov	r4,fp
    a7b0:	b00b883a 	mov	r5,r22
    a7b4:	8a22b03a 	or	r17,r17,r8
    a7b8:	3524983a 	sll	r18,r6,r20
    a7bc:	000ab580 	call	ab58 <__umodsi3>
    a7c0:	e009883a 	mov	r4,fp
    a7c4:	b00b883a 	mov	r5,r22
    a7c8:	102f883a 	mov	r23,r2
    a7cc:	000aaf40 	call	aaf4 <__udivsi3>
    a7d0:	100d883a 	mov	r6,r2
    a7d4:	b808943a 	slli	r4,r23,16
    a7d8:	aa3fffcc 	andi	r8,r21,65535
    a7dc:	8804d43a 	srli	r2,r17,16
    a7e0:	41af383a 	mul	r23,r8,r6
    a7e4:	8520983a 	sll	r16,r16,r20
    a7e8:	1104b03a 	or	r2,r2,r4
    a7ec:	15c0042e 	bgeu	r2,r23,a800 <__umoddi3+0x33c>
    a7f0:	1545883a 	add	r2,r2,r21
    a7f4:	30ffffc4 	addi	r3,r6,-1
    a7f8:	1540742e 	bgeu	r2,r21,a9cc <__umoddi3+0x508>
    a7fc:	180d883a 	mov	r6,r3
    a800:	15efc83a 	sub	r23,r2,r23
    a804:	b00b883a 	mov	r5,r22
    a808:	b809883a 	mov	r4,r23
    a80c:	d9800115 	stw	r6,4(sp)
    a810:	da000015 	stw	r8,0(sp)
    a814:	000ab580 	call	ab58 <__umodsi3>
    a818:	b00b883a 	mov	r5,r22
    a81c:	b809883a 	mov	r4,r23
    a820:	1039883a 	mov	fp,r2
    a824:	000aaf40 	call	aaf4 <__udivsi3>
    a828:	da000017 	ldw	r8,0(sp)
    a82c:	e038943a 	slli	fp,fp,16
    a830:	100b883a 	mov	r5,r2
    a834:	4089383a 	mul	r4,r8,r2
    a838:	8a3fffcc 	andi	r8,r17,65535
    a83c:	4710b03a 	or	r8,r8,fp
    a840:	d9800117 	ldw	r6,4(sp)
    a844:	4100042e 	bgeu	r8,r4,a858 <__umoddi3+0x394>
    a848:	4551883a 	add	r8,r8,r21
    a84c:	10bfffc4 	addi	r2,r2,-1
    a850:	45405a2e 	bgeu	r8,r21,a9bc <__umoddi3+0x4f8>
    a854:	100b883a 	mov	r5,r2
    a858:	300c943a 	slli	r6,r6,16
    a85c:	91ffffcc 	andi	r7,r18,65535
    a860:	9004d43a 	srli	r2,r18,16
    a864:	314cb03a 	or	r6,r6,r5
    a868:	317fffcc 	andi	r5,r6,65535
    a86c:	300cd43a 	srli	r6,r6,16
    a870:	29d3383a 	mul	r9,r5,r7
    a874:	288b383a 	mul	r5,r5,r2
    a878:	31cf383a 	mul	r7,r6,r7
    a87c:	4806d43a 	srli	r3,r9,16
    a880:	4111c83a 	sub	r8,r8,r4
    a884:	29cb883a 	add	r5,r5,r7
    a888:	194b883a 	add	r5,r3,r5
    a88c:	3085383a 	mul	r2,r6,r2
    a890:	29c0022e 	bgeu	r5,r7,a89c <__umoddi3+0x3d8>
    a894:	00c00074 	movhi	r3,1
    a898:	10c5883a 	add	r2,r2,r3
    a89c:	2808d43a 	srli	r4,r5,16
    a8a0:	280a943a 	slli	r5,r5,16
    a8a4:	4a7fffcc 	andi	r9,r9,65535
    a8a8:	2085883a 	add	r2,r4,r2
    a8ac:	2a4b883a 	add	r5,r5,r9
    a8b0:	40803636 	bltu	r8,r2,a98c <__umoddi3+0x4c8>
    a8b4:	40804d26 	beq	r8,r2,a9ec <__umoddi3+0x528>
    a8b8:	4089c83a 	sub	r4,r8,r2
    a8bc:	280f883a 	mov	r7,r5
    a8c0:	81cfc83a 	sub	r7,r16,r7
    a8c4:	81c7803a 	cmpltu	r3,r16,r7
    a8c8:	20c7c83a 	sub	r3,r4,r3
    a8cc:	1cc4983a 	sll	r2,r3,r19
    a8d0:	3d0ed83a 	srl	r7,r7,r20
    a8d4:	1d06d83a 	srl	r3,r3,r20
    a8d8:	11c4b03a 	or	r2,r2,r7
    a8dc:	003f9306 	br	a72c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a72c>
    a8e0:	9ca6983a 	sll	r19,r19,r18
    a8e4:	88e8d83a 	srl	r20,r17,r3
    a8e8:	80c4d83a 	srl	r2,r16,r3
    a8ec:	982cd43a 	srli	r22,r19,16
    a8f0:	8ca2983a 	sll	r17,r17,r18
    a8f4:	a009883a 	mov	r4,r20
    a8f8:	b00b883a 	mov	r5,r22
    a8fc:	1478b03a 	or	fp,r2,r17
    a900:	000ab580 	call	ab58 <__umodsi3>
    a904:	a009883a 	mov	r4,r20
    a908:	b00b883a 	mov	r5,r22
    a90c:	1023883a 	mov	r17,r2
    a910:	000aaf40 	call	aaf4 <__udivsi3>
    a914:	9d7fffcc 	andi	r21,r19,65535
    a918:	880a943a 	slli	r5,r17,16
    a91c:	e008d43a 	srli	r4,fp,16
    a920:	a885383a 	mul	r2,r21,r2
    a924:	84a8983a 	sll	r20,r16,r18
    a928:	2148b03a 	or	r4,r4,r5
    a92c:	2080042e 	bgeu	r4,r2,a940 <__umoddi3+0x47c>
    a930:	24c9883a 	add	r4,r4,r19
    a934:	24c00236 	bltu	r4,r19,a940 <__umoddi3+0x47c>
    a938:	2080012e 	bgeu	r4,r2,a940 <__umoddi3+0x47c>
    a93c:	24c9883a 	add	r4,r4,r19
    a940:	20a3c83a 	sub	r17,r4,r2
    a944:	b00b883a 	mov	r5,r22
    a948:	8809883a 	mov	r4,r17
    a94c:	000ab580 	call	ab58 <__umodsi3>
    a950:	102f883a 	mov	r23,r2
    a954:	8809883a 	mov	r4,r17
    a958:	b00b883a 	mov	r5,r22
    a95c:	000aaf40 	call	aaf4 <__udivsi3>
    a960:	b82e943a 	slli	r23,r23,16
    a964:	a885383a 	mul	r2,r21,r2
    a968:	e13fffcc 	andi	r4,fp,65535
    a96c:	25c8b03a 	or	r4,r4,r23
    a970:	2080042e 	bgeu	r4,r2,a984 <__umoddi3+0x4c0>
    a974:	24c9883a 	add	r4,r4,r19
    a978:	24c00236 	bltu	r4,r19,a984 <__umoddi3+0x4c0>
    a97c:	2080012e 	bgeu	r4,r2,a984 <__umoddi3+0x4c0>
    a980:	24c9883a 	add	r4,r4,r19
    a984:	20a3c83a 	sub	r17,r4,r2
    a988:	003f4806 	br	a6ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a6ac>
    a98c:	2c8fc83a 	sub	r7,r5,r18
    a990:	1545c83a 	sub	r2,r2,r21
    a994:	29cb803a 	cmpltu	r5,r5,r7
    a998:	1145c83a 	sub	r2,r2,r5
    a99c:	4089c83a 	sub	r4,r8,r2
    a9a0:	003fc706 	br	a8c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8c0>
    a9a4:	01000604 	movi	r4,24
    a9a8:	003f1806 	br	a60c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a60c>
    a9ac:	00800604 	movi	r2,24
    a9b0:	003f3206 	br	a67c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a67c>
    a9b4:	01000604 	movi	r4,24
    a9b8:	003ed906 	br	a520 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a520>
    a9bc:	413fa52e 	bgeu	r8,r4,a854 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a854>
    a9c0:	297fff84 	addi	r5,r5,-2
    a9c4:	4551883a 	add	r8,r8,r21
    a9c8:	003fa306 	br	a858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a858>
    a9cc:	15ff8b2e 	bgeu	r2,r23,a7fc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a7fc>
    a9d0:	31bfff84 	addi	r6,r6,-2
    a9d4:	1545883a 	add	r2,r2,r21
    a9d8:	003f8906 	br	a800 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a800>
    a9dc:	24c9883a 	add	r4,r4,r19
    a9e0:	003eee06 	br	a59c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a59c>
    a9e4:	8005883a 	mov	r2,r16
    a9e8:	003f1706 	br	a648 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a648>
    a9ec:	817fe736 	bltu	r16,r5,a98c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a98c>
    a9f0:	280f883a 	mov	r7,r5
    a9f4:	0009883a 	mov	r4,zero
    a9f8:	003fb106 	br	a8c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000a8c0>

0000a9fc <__divsi3>:
    a9fc:	20001b16 	blt	r4,zero,aa6c <__divsi3+0x70>
    aa00:	000f883a 	mov	r7,zero
    aa04:	28001616 	blt	r5,zero,aa60 <__divsi3+0x64>
    aa08:	200d883a 	mov	r6,r4
    aa0c:	29001a2e 	bgeu	r5,r4,aa78 <__divsi3+0x7c>
    aa10:	00800804 	movi	r2,32
    aa14:	00c00044 	movi	r3,1
    aa18:	00000106 	br	aa20 <__divsi3+0x24>
    aa1c:	10000d26 	beq	r2,zero,aa54 <__divsi3+0x58>
    aa20:	294b883a 	add	r5,r5,r5
    aa24:	10bfffc4 	addi	r2,r2,-1
    aa28:	18c7883a 	add	r3,r3,r3
    aa2c:	293ffb36 	bltu	r5,r4,aa1c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa1c>
    aa30:	0005883a 	mov	r2,zero
    aa34:	18000726 	beq	r3,zero,aa54 <__divsi3+0x58>
    aa38:	0005883a 	mov	r2,zero
    aa3c:	31400236 	bltu	r6,r5,aa48 <__divsi3+0x4c>
    aa40:	314dc83a 	sub	r6,r6,r5
    aa44:	10c4b03a 	or	r2,r2,r3
    aa48:	1806d07a 	srli	r3,r3,1
    aa4c:	280ad07a 	srli	r5,r5,1
    aa50:	183ffa1e 	bne	r3,zero,aa3c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa3c>
    aa54:	38000126 	beq	r7,zero,aa5c <__divsi3+0x60>
    aa58:	0085c83a 	sub	r2,zero,r2
    aa5c:	f800283a 	ret
    aa60:	014bc83a 	sub	r5,zero,r5
    aa64:	39c0005c 	xori	r7,r7,1
    aa68:	003fe706 	br	aa08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa08>
    aa6c:	0109c83a 	sub	r4,zero,r4
    aa70:	01c00044 	movi	r7,1
    aa74:	003fe306 	br	aa04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa04>
    aa78:	00c00044 	movi	r3,1
    aa7c:	003fee06 	br	aa38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa38>

0000aa80 <__modsi3>:
    aa80:	20001716 	blt	r4,zero,aae0 <__modsi3+0x60>
    aa84:	000f883a 	mov	r7,zero
    aa88:	2005883a 	mov	r2,r4
    aa8c:	28001216 	blt	r5,zero,aad8 <__modsi3+0x58>
    aa90:	2900162e 	bgeu	r5,r4,aaec <__modsi3+0x6c>
    aa94:	01800804 	movi	r6,32
    aa98:	00c00044 	movi	r3,1
    aa9c:	00000106 	br	aaa4 <__modsi3+0x24>
    aaa0:	30000a26 	beq	r6,zero,aacc <__modsi3+0x4c>
    aaa4:	294b883a 	add	r5,r5,r5
    aaa8:	31bfffc4 	addi	r6,r6,-1
    aaac:	18c7883a 	add	r3,r3,r3
    aab0:	293ffb36 	bltu	r5,r4,aaa0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aaa0>
    aab4:	18000526 	beq	r3,zero,aacc <__modsi3+0x4c>
    aab8:	1806d07a 	srli	r3,r3,1
    aabc:	11400136 	bltu	r2,r5,aac4 <__modsi3+0x44>
    aac0:	1145c83a 	sub	r2,r2,r5
    aac4:	280ad07a 	srli	r5,r5,1
    aac8:	183ffb1e 	bne	r3,zero,aab8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aab8>
    aacc:	38000126 	beq	r7,zero,aad4 <__modsi3+0x54>
    aad0:	0085c83a 	sub	r2,zero,r2
    aad4:	f800283a 	ret
    aad8:	014bc83a 	sub	r5,zero,r5
    aadc:	003fec06 	br	aa90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa90>
    aae0:	0109c83a 	sub	r4,zero,r4
    aae4:	01c00044 	movi	r7,1
    aae8:	003fe706 	br	aa88 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aa88>
    aaec:	00c00044 	movi	r3,1
    aaf0:	003ff106 	br	aab8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000aab8>

0000aaf4 <__udivsi3>:
    aaf4:	200d883a 	mov	r6,r4
    aaf8:	2900152e 	bgeu	r5,r4,ab50 <__udivsi3+0x5c>
    aafc:	28001416 	blt	r5,zero,ab50 <__udivsi3+0x5c>
    ab00:	00800804 	movi	r2,32
    ab04:	00c00044 	movi	r3,1
    ab08:	00000206 	br	ab14 <__udivsi3+0x20>
    ab0c:	10000e26 	beq	r2,zero,ab48 <__udivsi3+0x54>
    ab10:	28000516 	blt	r5,zero,ab28 <__udivsi3+0x34>
    ab14:	294b883a 	add	r5,r5,r5
    ab18:	10bfffc4 	addi	r2,r2,-1
    ab1c:	18c7883a 	add	r3,r3,r3
    ab20:	293ffa36 	bltu	r5,r4,ab0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab0c>
    ab24:	18000826 	beq	r3,zero,ab48 <__udivsi3+0x54>
    ab28:	0005883a 	mov	r2,zero
    ab2c:	31400236 	bltu	r6,r5,ab38 <__udivsi3+0x44>
    ab30:	314dc83a 	sub	r6,r6,r5
    ab34:	10c4b03a 	or	r2,r2,r3
    ab38:	1806d07a 	srli	r3,r3,1
    ab3c:	280ad07a 	srli	r5,r5,1
    ab40:	183ffa1e 	bne	r3,zero,ab2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab2c>
    ab44:	f800283a 	ret
    ab48:	0005883a 	mov	r2,zero
    ab4c:	f800283a 	ret
    ab50:	00c00044 	movi	r3,1
    ab54:	003ff406 	br	ab28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab28>

0000ab58 <__umodsi3>:
    ab58:	2005883a 	mov	r2,r4
    ab5c:	2900122e 	bgeu	r5,r4,aba8 <__umodsi3+0x50>
    ab60:	28001116 	blt	r5,zero,aba8 <__umodsi3+0x50>
    ab64:	01800804 	movi	r6,32
    ab68:	00c00044 	movi	r3,1
    ab6c:	00000206 	br	ab78 <__umodsi3+0x20>
    ab70:	30000c26 	beq	r6,zero,aba4 <__umodsi3+0x4c>
    ab74:	28000516 	blt	r5,zero,ab8c <__umodsi3+0x34>
    ab78:	294b883a 	add	r5,r5,r5
    ab7c:	31bfffc4 	addi	r6,r6,-1
    ab80:	18c7883a 	add	r3,r3,r3
    ab84:	293ffa36 	bltu	r5,r4,ab70 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab70>
    ab88:	18000626 	beq	r3,zero,aba4 <__umodsi3+0x4c>
    ab8c:	1806d07a 	srli	r3,r3,1
    ab90:	11400136 	bltu	r2,r5,ab98 <__umodsi3+0x40>
    ab94:	1145c83a 	sub	r2,r2,r5
    ab98:	280ad07a 	srli	r5,r5,1
    ab9c:	183ffb1e 	bne	r3,zero,ab8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab8c>
    aba0:	f800283a 	ret
    aba4:	f800283a 	ret
    aba8:	00c00044 	movi	r3,1
    abac:	003ff706 	br	ab8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ab8c>

0000abb0 <__adddf3>:
    abb0:	02c00434 	movhi	r11,16
    abb4:	5affffc4 	addi	r11,r11,-1
    abb8:	2806d7fa 	srli	r3,r5,31
    abbc:	2ad4703a 	and	r10,r5,r11
    abc0:	3ad2703a 	and	r9,r7,r11
    abc4:	3804d53a 	srli	r2,r7,20
    abc8:	3018d77a 	srli	r12,r6,29
    abcc:	280ad53a 	srli	r5,r5,20
    abd0:	501490fa 	slli	r10,r10,3
    abd4:	2010d77a 	srli	r8,r4,29
    abd8:	481290fa 	slli	r9,r9,3
    abdc:	380ed7fa 	srli	r7,r7,31
    abe0:	defffb04 	addi	sp,sp,-20
    abe4:	dc800215 	stw	r18,8(sp)
    abe8:	dc400115 	stw	r17,4(sp)
    abec:	dc000015 	stw	r16,0(sp)
    abf0:	dfc00415 	stw	ra,16(sp)
    abf4:	dcc00315 	stw	r19,12(sp)
    abf8:	1c803fcc 	andi	r18,r3,255
    abfc:	2c01ffcc 	andi	r16,r5,2047
    ac00:	5210b03a 	or	r8,r10,r8
    ac04:	202290fa 	slli	r17,r4,3
    ac08:	1081ffcc 	andi	r2,r2,2047
    ac0c:	4b12b03a 	or	r9,r9,r12
    ac10:	300c90fa 	slli	r6,r6,3
    ac14:	91c07526 	beq	r18,r7,adec <__adddf3+0x23c>
    ac18:	8087c83a 	sub	r3,r16,r2
    ac1c:	00c0ab0e 	bge	zero,r3,aecc <__adddf3+0x31c>
    ac20:	10002a1e 	bne	r2,zero,accc <__adddf3+0x11c>
    ac24:	4984b03a 	or	r2,r9,r6
    ac28:	1000961e 	bne	r2,zero,ae84 <__adddf3+0x2d4>
    ac2c:	888001cc 	andi	r2,r17,7
    ac30:	10000726 	beq	r2,zero,ac50 <__adddf3+0xa0>
    ac34:	888003cc 	andi	r2,r17,15
    ac38:	00c00104 	movi	r3,4
    ac3c:	10c00426 	beq	r2,r3,ac50 <__adddf3+0xa0>
    ac40:	88c7883a 	add	r3,r17,r3
    ac44:	1c63803a 	cmpltu	r17,r3,r17
    ac48:	4451883a 	add	r8,r8,r17
    ac4c:	1823883a 	mov	r17,r3
    ac50:	4080202c 	andhi	r2,r8,128
    ac54:	10005926 	beq	r2,zero,adbc <__adddf3+0x20c>
    ac58:	84000044 	addi	r16,r16,1
    ac5c:	0081ffc4 	movi	r2,2047
    ac60:	8080ba26 	beq	r16,r2,af4c <__adddf3+0x39c>
    ac64:	00bfe034 	movhi	r2,65408
    ac68:	10bfffc4 	addi	r2,r2,-1
    ac6c:	4090703a 	and	r8,r8,r2
    ac70:	4004977a 	slli	r2,r8,29
    ac74:	4010927a 	slli	r8,r8,9
    ac78:	8822d0fa 	srli	r17,r17,3
    ac7c:	8401ffcc 	andi	r16,r16,2047
    ac80:	4010d33a 	srli	r8,r8,12
    ac84:	9007883a 	mov	r3,r18
    ac88:	1444b03a 	or	r2,r2,r17
    ac8c:	8401ffcc 	andi	r16,r16,2047
    ac90:	8020953a 	slli	r16,r16,20
    ac94:	18c03fcc 	andi	r3,r3,255
    ac98:	01000434 	movhi	r4,16
    ac9c:	213fffc4 	addi	r4,r4,-1
    aca0:	180697fa 	slli	r3,r3,31
    aca4:	4110703a 	and	r8,r8,r4
    aca8:	4410b03a 	or	r8,r8,r16
    acac:	40c6b03a 	or	r3,r8,r3
    acb0:	dfc00417 	ldw	ra,16(sp)
    acb4:	dcc00317 	ldw	r19,12(sp)
    acb8:	dc800217 	ldw	r18,8(sp)
    acbc:	dc400117 	ldw	r17,4(sp)
    acc0:	dc000017 	ldw	r16,0(sp)
    acc4:	dec00504 	addi	sp,sp,20
    acc8:	f800283a 	ret
    accc:	0081ffc4 	movi	r2,2047
    acd0:	80bfd626 	beq	r16,r2,ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    acd4:	4a402034 	orhi	r9,r9,128
    acd8:	00800e04 	movi	r2,56
    acdc:	10c09f16 	blt	r2,r3,af5c <__adddf3+0x3ac>
    ace0:	008007c4 	movi	r2,31
    ace4:	10c0c216 	blt	r2,r3,aff0 <__adddf3+0x440>
    ace8:	00800804 	movi	r2,32
    acec:	10c5c83a 	sub	r2,r2,r3
    acf0:	488a983a 	sll	r5,r9,r2
    acf4:	30c8d83a 	srl	r4,r6,r3
    acf8:	3084983a 	sll	r2,r6,r2
    acfc:	48c6d83a 	srl	r3,r9,r3
    ad00:	290cb03a 	or	r6,r5,r4
    ad04:	1004c03a 	cmpne	r2,r2,zero
    ad08:	308cb03a 	or	r6,r6,r2
    ad0c:	898dc83a 	sub	r6,r17,r6
    ad10:	89a3803a 	cmpltu	r17,r17,r6
    ad14:	40d1c83a 	sub	r8,r8,r3
    ad18:	4451c83a 	sub	r8,r8,r17
    ad1c:	3023883a 	mov	r17,r6
    ad20:	4080202c 	andhi	r2,r8,128
    ad24:	10002326 	beq	r2,zero,adb4 <__adddf3+0x204>
    ad28:	04c02034 	movhi	r19,128
    ad2c:	9cffffc4 	addi	r19,r19,-1
    ad30:	44e6703a 	and	r19,r8,r19
    ad34:	98007626 	beq	r19,zero,af10 <__adddf3+0x360>
    ad38:	9809883a 	mov	r4,r19
    ad3c:	000d1b40 	call	d1b4 <__clzsi2>
    ad40:	10fffe04 	addi	r3,r2,-8
    ad44:	010007c4 	movi	r4,31
    ad48:	20c07716 	blt	r4,r3,af28 <__adddf3+0x378>
    ad4c:	00800804 	movi	r2,32
    ad50:	10c5c83a 	sub	r2,r2,r3
    ad54:	8884d83a 	srl	r2,r17,r2
    ad58:	98d0983a 	sll	r8,r19,r3
    ad5c:	88e2983a 	sll	r17,r17,r3
    ad60:	1204b03a 	or	r2,r2,r8
    ad64:	1c007416 	blt	r3,r16,af38 <__adddf3+0x388>
    ad68:	1c21c83a 	sub	r16,r3,r16
    ad6c:	82000044 	addi	r8,r16,1
    ad70:	00c007c4 	movi	r3,31
    ad74:	1a009116 	blt	r3,r8,afbc <__adddf3+0x40c>
    ad78:	00c00804 	movi	r3,32
    ad7c:	1a07c83a 	sub	r3,r3,r8
    ad80:	8a08d83a 	srl	r4,r17,r8
    ad84:	88e2983a 	sll	r17,r17,r3
    ad88:	10c6983a 	sll	r3,r2,r3
    ad8c:	1210d83a 	srl	r8,r2,r8
    ad90:	8804c03a 	cmpne	r2,r17,zero
    ad94:	1906b03a 	or	r3,r3,r4
    ad98:	18a2b03a 	or	r17,r3,r2
    ad9c:	0021883a 	mov	r16,zero
    ada0:	003fa206 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    ada4:	1890b03a 	or	r8,r3,r2
    ada8:	40017d26 	beq	r8,zero,b3a0 <__adddf3+0x7f0>
    adac:	1011883a 	mov	r8,r2
    adb0:	1823883a 	mov	r17,r3
    adb4:	888001cc 	andi	r2,r17,7
    adb8:	103f9e1e 	bne	r2,zero,ac34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac34>
    adbc:	4004977a 	slli	r2,r8,29
    adc0:	8822d0fa 	srli	r17,r17,3
    adc4:	4010d0fa 	srli	r8,r8,3
    adc8:	9007883a 	mov	r3,r18
    adcc:	1444b03a 	or	r2,r2,r17
    add0:	0101ffc4 	movi	r4,2047
    add4:	81002426 	beq	r16,r4,ae68 <__adddf3+0x2b8>
    add8:	8120703a 	and	r16,r16,r4
    addc:	01000434 	movhi	r4,16
    ade0:	213fffc4 	addi	r4,r4,-1
    ade4:	4110703a 	and	r8,r8,r4
    ade8:	003fa806 	br	ac8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac8c>
    adec:	8089c83a 	sub	r4,r16,r2
    adf0:	01005e0e 	bge	zero,r4,af6c <__adddf3+0x3bc>
    adf4:	10002b26 	beq	r2,zero,aea4 <__adddf3+0x2f4>
    adf8:	0081ffc4 	movi	r2,2047
    adfc:	80bf8b26 	beq	r16,r2,ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    ae00:	4a402034 	orhi	r9,r9,128
    ae04:	00800e04 	movi	r2,56
    ae08:	1100a40e 	bge	r2,r4,b09c <__adddf3+0x4ec>
    ae0c:	498cb03a 	or	r6,r9,r6
    ae10:	300ac03a 	cmpne	r5,r6,zero
    ae14:	0013883a 	mov	r9,zero
    ae18:	2c4b883a 	add	r5,r5,r17
    ae1c:	2c63803a 	cmpltu	r17,r5,r17
    ae20:	4a11883a 	add	r8,r9,r8
    ae24:	8a11883a 	add	r8,r17,r8
    ae28:	2823883a 	mov	r17,r5
    ae2c:	4080202c 	andhi	r2,r8,128
    ae30:	103fe026 	beq	r2,zero,adb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000adb4>
    ae34:	84000044 	addi	r16,r16,1
    ae38:	0081ffc4 	movi	r2,2047
    ae3c:	8080d226 	beq	r16,r2,b188 <__adddf3+0x5d8>
    ae40:	00bfe034 	movhi	r2,65408
    ae44:	10bfffc4 	addi	r2,r2,-1
    ae48:	4090703a 	and	r8,r8,r2
    ae4c:	880ad07a 	srli	r5,r17,1
    ae50:	400897fa 	slli	r4,r8,31
    ae54:	88c0004c 	andi	r3,r17,1
    ae58:	28e2b03a 	or	r17,r5,r3
    ae5c:	4010d07a 	srli	r8,r8,1
    ae60:	2462b03a 	or	r17,r4,r17
    ae64:	003f7106 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    ae68:	4088b03a 	or	r4,r8,r2
    ae6c:	20014526 	beq	r4,zero,b384 <__adddf3+0x7d4>
    ae70:	01000434 	movhi	r4,16
    ae74:	42000234 	orhi	r8,r8,8
    ae78:	213fffc4 	addi	r4,r4,-1
    ae7c:	4110703a 	and	r8,r8,r4
    ae80:	003f8206 	br	ac8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac8c>
    ae84:	18ffffc4 	addi	r3,r3,-1
    ae88:	1800491e 	bne	r3,zero,afb0 <__adddf3+0x400>
    ae8c:	898bc83a 	sub	r5,r17,r6
    ae90:	8963803a 	cmpltu	r17,r17,r5
    ae94:	4251c83a 	sub	r8,r8,r9
    ae98:	4451c83a 	sub	r8,r8,r17
    ae9c:	2823883a 	mov	r17,r5
    aea0:	003f9f06 	br	ad20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad20>
    aea4:	4984b03a 	or	r2,r9,r6
    aea8:	103f6026 	beq	r2,zero,ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    aeac:	213fffc4 	addi	r4,r4,-1
    aeb0:	2000931e 	bne	r4,zero,b100 <__adddf3+0x550>
    aeb4:	898d883a 	add	r6,r17,r6
    aeb8:	3463803a 	cmpltu	r17,r6,r17
    aebc:	4251883a 	add	r8,r8,r9
    aec0:	8a11883a 	add	r8,r17,r8
    aec4:	3023883a 	mov	r17,r6
    aec8:	003fd806 	br	ae2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae2c>
    aecc:	1800541e 	bne	r3,zero,b020 <__adddf3+0x470>
    aed0:	80800044 	addi	r2,r16,1
    aed4:	1081ffcc 	andi	r2,r2,2047
    aed8:	00c00044 	movi	r3,1
    aedc:	1880a00e 	bge	r3,r2,b160 <__adddf3+0x5b0>
    aee0:	8989c83a 	sub	r4,r17,r6
    aee4:	8905803a 	cmpltu	r2,r17,r4
    aee8:	4267c83a 	sub	r19,r8,r9
    aeec:	98a7c83a 	sub	r19,r19,r2
    aef0:	9880202c 	andhi	r2,r19,128
    aef4:	10006326 	beq	r2,zero,b084 <__adddf3+0x4d4>
    aef8:	3463c83a 	sub	r17,r6,r17
    aefc:	4a07c83a 	sub	r3,r9,r8
    af00:	344d803a 	cmpltu	r6,r6,r17
    af04:	19a7c83a 	sub	r19,r3,r6
    af08:	3825883a 	mov	r18,r7
    af0c:	983f8a1e 	bne	r19,zero,ad38 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad38>
    af10:	8809883a 	mov	r4,r17
    af14:	000d1b40 	call	d1b4 <__clzsi2>
    af18:	10800804 	addi	r2,r2,32
    af1c:	10fffe04 	addi	r3,r2,-8
    af20:	010007c4 	movi	r4,31
    af24:	20ff890e 	bge	r4,r3,ad4c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad4c>
    af28:	10bff604 	addi	r2,r2,-40
    af2c:	8884983a 	sll	r2,r17,r2
    af30:	0023883a 	mov	r17,zero
    af34:	1c3f8c0e 	bge	r3,r16,ad68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad68>
    af38:	023fe034 	movhi	r8,65408
    af3c:	423fffc4 	addi	r8,r8,-1
    af40:	80e1c83a 	sub	r16,r16,r3
    af44:	1210703a 	and	r8,r2,r8
    af48:	003f3806 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    af4c:	9007883a 	mov	r3,r18
    af50:	0011883a 	mov	r8,zero
    af54:	0005883a 	mov	r2,zero
    af58:	003f4c06 	br	ac8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac8c>
    af5c:	498cb03a 	or	r6,r9,r6
    af60:	300cc03a 	cmpne	r6,r6,zero
    af64:	0007883a 	mov	r3,zero
    af68:	003f6806 	br	ad0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad0c>
    af6c:	20009c1e 	bne	r4,zero,b1e0 <__adddf3+0x630>
    af70:	80800044 	addi	r2,r16,1
    af74:	1141ffcc 	andi	r5,r2,2047
    af78:	01000044 	movi	r4,1
    af7c:	2140670e 	bge	r4,r5,b11c <__adddf3+0x56c>
    af80:	0101ffc4 	movi	r4,2047
    af84:	11007f26 	beq	r2,r4,b184 <__adddf3+0x5d4>
    af88:	898d883a 	add	r6,r17,r6
    af8c:	4247883a 	add	r3,r8,r9
    af90:	3451803a 	cmpltu	r8,r6,r17
    af94:	40d1883a 	add	r8,r8,r3
    af98:	402297fa 	slli	r17,r8,31
    af9c:	300cd07a 	srli	r6,r6,1
    afa0:	4010d07a 	srli	r8,r8,1
    afa4:	1021883a 	mov	r16,r2
    afa8:	89a2b03a 	or	r17,r17,r6
    afac:	003f1f06 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    afb0:	0081ffc4 	movi	r2,2047
    afb4:	80bf481e 	bne	r16,r2,acd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000acd8>
    afb8:	003f1c06 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    afbc:	843ff844 	addi	r16,r16,-31
    afc0:	01000804 	movi	r4,32
    afc4:	1406d83a 	srl	r3,r2,r16
    afc8:	41005026 	beq	r8,r4,b10c <__adddf3+0x55c>
    afcc:	01001004 	movi	r4,64
    afd0:	2211c83a 	sub	r8,r4,r8
    afd4:	1204983a 	sll	r2,r2,r8
    afd8:	88a2b03a 	or	r17,r17,r2
    afdc:	8822c03a 	cmpne	r17,r17,zero
    afe0:	1c62b03a 	or	r17,r3,r17
    afe4:	0011883a 	mov	r8,zero
    afe8:	0021883a 	mov	r16,zero
    afec:	003f7106 	br	adb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000adb4>
    aff0:	193ff804 	addi	r4,r3,-32
    aff4:	00800804 	movi	r2,32
    aff8:	4908d83a 	srl	r4,r9,r4
    affc:	18804526 	beq	r3,r2,b114 <__adddf3+0x564>
    b000:	00801004 	movi	r2,64
    b004:	10c5c83a 	sub	r2,r2,r3
    b008:	4886983a 	sll	r3,r9,r2
    b00c:	198cb03a 	or	r6,r3,r6
    b010:	300cc03a 	cmpne	r6,r6,zero
    b014:	218cb03a 	or	r6,r4,r6
    b018:	0007883a 	mov	r3,zero
    b01c:	003f3b06 	br	ad0c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad0c>
    b020:	80002a26 	beq	r16,zero,b0cc <__adddf3+0x51c>
    b024:	0101ffc4 	movi	r4,2047
    b028:	11006826 	beq	r2,r4,b1cc <__adddf3+0x61c>
    b02c:	00c7c83a 	sub	r3,zero,r3
    b030:	42002034 	orhi	r8,r8,128
    b034:	01000e04 	movi	r4,56
    b038:	20c07c16 	blt	r4,r3,b22c <__adddf3+0x67c>
    b03c:	010007c4 	movi	r4,31
    b040:	20c0da16 	blt	r4,r3,b3ac <__adddf3+0x7fc>
    b044:	01000804 	movi	r4,32
    b048:	20c9c83a 	sub	r4,r4,r3
    b04c:	4114983a 	sll	r10,r8,r4
    b050:	88cad83a 	srl	r5,r17,r3
    b054:	8908983a 	sll	r4,r17,r4
    b058:	40c6d83a 	srl	r3,r8,r3
    b05c:	5162b03a 	or	r17,r10,r5
    b060:	2008c03a 	cmpne	r4,r4,zero
    b064:	8922b03a 	or	r17,r17,r4
    b068:	3463c83a 	sub	r17,r6,r17
    b06c:	48c7c83a 	sub	r3,r9,r3
    b070:	344d803a 	cmpltu	r6,r6,r17
    b074:	1991c83a 	sub	r8,r3,r6
    b078:	1021883a 	mov	r16,r2
    b07c:	3825883a 	mov	r18,r7
    b080:	003f2706 	br	ad20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad20>
    b084:	24d0b03a 	or	r8,r4,r19
    b088:	40001b1e 	bne	r8,zero,b0f8 <__adddf3+0x548>
    b08c:	0005883a 	mov	r2,zero
    b090:	0007883a 	mov	r3,zero
    b094:	0021883a 	mov	r16,zero
    b098:	003f4d06 	br	add0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000add0>
    b09c:	008007c4 	movi	r2,31
    b0a0:	11003c16 	blt	r2,r4,b194 <__adddf3+0x5e4>
    b0a4:	00800804 	movi	r2,32
    b0a8:	1105c83a 	sub	r2,r2,r4
    b0ac:	488e983a 	sll	r7,r9,r2
    b0b0:	310ad83a 	srl	r5,r6,r4
    b0b4:	3084983a 	sll	r2,r6,r2
    b0b8:	4912d83a 	srl	r9,r9,r4
    b0bc:	394ab03a 	or	r5,r7,r5
    b0c0:	1004c03a 	cmpne	r2,r2,zero
    b0c4:	288ab03a 	or	r5,r5,r2
    b0c8:	003f5306 	br	ae18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae18>
    b0cc:	4448b03a 	or	r4,r8,r17
    b0d0:	20003e26 	beq	r4,zero,b1cc <__adddf3+0x61c>
    b0d4:	00c6303a 	nor	r3,zero,r3
    b0d8:	18003a1e 	bne	r3,zero,b1c4 <__adddf3+0x614>
    b0dc:	3463c83a 	sub	r17,r6,r17
    b0e0:	4a07c83a 	sub	r3,r9,r8
    b0e4:	344d803a 	cmpltu	r6,r6,r17
    b0e8:	1991c83a 	sub	r8,r3,r6
    b0ec:	1021883a 	mov	r16,r2
    b0f0:	3825883a 	mov	r18,r7
    b0f4:	003f0a06 	br	ad20 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad20>
    b0f8:	2023883a 	mov	r17,r4
    b0fc:	003f0d06 	br	ad34 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ad34>
    b100:	0081ffc4 	movi	r2,2047
    b104:	80bf3f1e 	bne	r16,r2,ae04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae04>
    b108:	003ec806 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b10c:	0005883a 	mov	r2,zero
    b110:	003fb106 	br	afd8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000afd8>
    b114:	0007883a 	mov	r3,zero
    b118:	003fbc06 	br	b00c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b00c>
    b11c:	4444b03a 	or	r2,r8,r17
    b120:	8000871e 	bne	r16,zero,b340 <__adddf3+0x790>
    b124:	1000ba26 	beq	r2,zero,b410 <__adddf3+0x860>
    b128:	4984b03a 	or	r2,r9,r6
    b12c:	103ebf26 	beq	r2,zero,ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b130:	8985883a 	add	r2,r17,r6
    b134:	4247883a 	add	r3,r8,r9
    b138:	1451803a 	cmpltu	r8,r2,r17
    b13c:	40d1883a 	add	r8,r8,r3
    b140:	40c0202c 	andhi	r3,r8,128
    b144:	1023883a 	mov	r17,r2
    b148:	183f1a26 	beq	r3,zero,adb4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000adb4>
    b14c:	00bfe034 	movhi	r2,65408
    b150:	10bfffc4 	addi	r2,r2,-1
    b154:	2021883a 	mov	r16,r4
    b158:	4090703a 	and	r8,r8,r2
    b15c:	003eb306 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b160:	4444b03a 	or	r2,r8,r17
    b164:	8000291e 	bne	r16,zero,b20c <__adddf3+0x65c>
    b168:	10004b1e 	bne	r2,zero,b298 <__adddf3+0x6e8>
    b16c:	4990b03a 	or	r8,r9,r6
    b170:	40008b26 	beq	r8,zero,b3a0 <__adddf3+0x7f0>
    b174:	4811883a 	mov	r8,r9
    b178:	3023883a 	mov	r17,r6
    b17c:	3825883a 	mov	r18,r7
    b180:	003eaa06 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b184:	1021883a 	mov	r16,r2
    b188:	0011883a 	mov	r8,zero
    b18c:	0005883a 	mov	r2,zero
    b190:	003f0f06 	br	add0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000add0>
    b194:	217ff804 	addi	r5,r4,-32
    b198:	00800804 	movi	r2,32
    b19c:	494ad83a 	srl	r5,r9,r5
    b1a0:	20807d26 	beq	r4,r2,b398 <__adddf3+0x7e8>
    b1a4:	00801004 	movi	r2,64
    b1a8:	1109c83a 	sub	r4,r2,r4
    b1ac:	4912983a 	sll	r9,r9,r4
    b1b0:	498cb03a 	or	r6,r9,r6
    b1b4:	300cc03a 	cmpne	r6,r6,zero
    b1b8:	298ab03a 	or	r5,r5,r6
    b1bc:	0013883a 	mov	r9,zero
    b1c0:	003f1506 	br	ae18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae18>
    b1c4:	0101ffc4 	movi	r4,2047
    b1c8:	113f9a1e 	bne	r2,r4,b034 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b034>
    b1cc:	4811883a 	mov	r8,r9
    b1d0:	3023883a 	mov	r17,r6
    b1d4:	1021883a 	mov	r16,r2
    b1d8:	3825883a 	mov	r18,r7
    b1dc:	003e9306 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b1e0:	8000161e 	bne	r16,zero,b23c <__adddf3+0x68c>
    b1e4:	444ab03a 	or	r5,r8,r17
    b1e8:	28005126 	beq	r5,zero,b330 <__adddf3+0x780>
    b1ec:	0108303a 	nor	r4,zero,r4
    b1f0:	20004d1e 	bne	r4,zero,b328 <__adddf3+0x778>
    b1f4:	89a3883a 	add	r17,r17,r6
    b1f8:	4253883a 	add	r9,r8,r9
    b1fc:	898d803a 	cmpltu	r6,r17,r6
    b200:	3251883a 	add	r8,r6,r9
    b204:	1021883a 	mov	r16,r2
    b208:	003f0806 	br	ae2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae2c>
    b20c:	1000301e 	bne	r2,zero,b2d0 <__adddf3+0x720>
    b210:	4984b03a 	or	r2,r9,r6
    b214:	10007126 	beq	r2,zero,b3dc <__adddf3+0x82c>
    b218:	4811883a 	mov	r8,r9
    b21c:	3023883a 	mov	r17,r6
    b220:	3825883a 	mov	r18,r7
    b224:	0401ffc4 	movi	r16,2047
    b228:	003e8006 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b22c:	4462b03a 	or	r17,r8,r17
    b230:	8822c03a 	cmpne	r17,r17,zero
    b234:	0007883a 	mov	r3,zero
    b238:	003f8b06 	br	b068 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b068>
    b23c:	0141ffc4 	movi	r5,2047
    b240:	11403b26 	beq	r2,r5,b330 <__adddf3+0x780>
    b244:	0109c83a 	sub	r4,zero,r4
    b248:	42002034 	orhi	r8,r8,128
    b24c:	01400e04 	movi	r5,56
    b250:	29006716 	blt	r5,r4,b3f0 <__adddf3+0x840>
    b254:	014007c4 	movi	r5,31
    b258:	29007016 	blt	r5,r4,b41c <__adddf3+0x86c>
    b25c:	01400804 	movi	r5,32
    b260:	290bc83a 	sub	r5,r5,r4
    b264:	4154983a 	sll	r10,r8,r5
    b268:	890ed83a 	srl	r7,r17,r4
    b26c:	894a983a 	sll	r5,r17,r5
    b270:	4108d83a 	srl	r4,r8,r4
    b274:	51e2b03a 	or	r17,r10,r7
    b278:	280ac03a 	cmpne	r5,r5,zero
    b27c:	8962b03a 	or	r17,r17,r5
    b280:	89a3883a 	add	r17,r17,r6
    b284:	2253883a 	add	r9,r4,r9
    b288:	898d803a 	cmpltu	r6,r17,r6
    b28c:	3251883a 	add	r8,r6,r9
    b290:	1021883a 	mov	r16,r2
    b294:	003ee506 	br	ae2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ae2c>
    b298:	4984b03a 	or	r2,r9,r6
    b29c:	103e6326 	beq	r2,zero,ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b2a0:	8987c83a 	sub	r3,r17,r6
    b2a4:	88c9803a 	cmpltu	r4,r17,r3
    b2a8:	4245c83a 	sub	r2,r8,r9
    b2ac:	1105c83a 	sub	r2,r2,r4
    b2b0:	1100202c 	andhi	r4,r2,128
    b2b4:	203ebb26 	beq	r4,zero,ada4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ada4>
    b2b8:	3463c83a 	sub	r17,r6,r17
    b2bc:	4a07c83a 	sub	r3,r9,r8
    b2c0:	344d803a 	cmpltu	r6,r6,r17
    b2c4:	1991c83a 	sub	r8,r3,r6
    b2c8:	3825883a 	mov	r18,r7
    b2cc:	003e5706 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b2d0:	4984b03a 	or	r2,r9,r6
    b2d4:	10002e26 	beq	r2,zero,b390 <__adddf3+0x7e0>
    b2d8:	4004d0fa 	srli	r2,r8,3
    b2dc:	8822d0fa 	srli	r17,r17,3
    b2e0:	4010977a 	slli	r8,r8,29
    b2e4:	10c0022c 	andhi	r3,r2,8
    b2e8:	4462b03a 	or	r17,r8,r17
    b2ec:	18000826 	beq	r3,zero,b310 <__adddf3+0x760>
    b2f0:	4808d0fa 	srli	r4,r9,3
    b2f4:	20c0022c 	andhi	r3,r4,8
    b2f8:	1800051e 	bne	r3,zero,b310 <__adddf3+0x760>
    b2fc:	300cd0fa 	srli	r6,r6,3
    b300:	4806977a 	slli	r3,r9,29
    b304:	2005883a 	mov	r2,r4
    b308:	3825883a 	mov	r18,r7
    b30c:	19a2b03a 	or	r17,r3,r6
    b310:	8810d77a 	srli	r8,r17,29
    b314:	100490fa 	slli	r2,r2,3
    b318:	882290fa 	slli	r17,r17,3
    b31c:	0401ffc4 	movi	r16,2047
    b320:	4090b03a 	or	r8,r8,r2
    b324:	003e4106 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b328:	0141ffc4 	movi	r5,2047
    b32c:	117fc71e 	bne	r2,r5,b24c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b24c>
    b330:	4811883a 	mov	r8,r9
    b334:	3023883a 	mov	r17,r6
    b338:	1021883a 	mov	r16,r2
    b33c:	003e3b06 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b340:	10002f26 	beq	r2,zero,b400 <__adddf3+0x850>
    b344:	4984b03a 	or	r2,r9,r6
    b348:	10001126 	beq	r2,zero,b390 <__adddf3+0x7e0>
    b34c:	4004d0fa 	srli	r2,r8,3
    b350:	8822d0fa 	srli	r17,r17,3
    b354:	4010977a 	slli	r8,r8,29
    b358:	10c0022c 	andhi	r3,r2,8
    b35c:	4462b03a 	or	r17,r8,r17
    b360:	183feb26 	beq	r3,zero,b310 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b310>
    b364:	4808d0fa 	srli	r4,r9,3
    b368:	20c0022c 	andhi	r3,r4,8
    b36c:	183fe81e 	bne	r3,zero,b310 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b310>
    b370:	300cd0fa 	srli	r6,r6,3
    b374:	4806977a 	slli	r3,r9,29
    b378:	2005883a 	mov	r2,r4
    b37c:	19a2b03a 	or	r17,r3,r6
    b380:	003fe306 	br	b310 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b310>
    b384:	0011883a 	mov	r8,zero
    b388:	0005883a 	mov	r2,zero
    b38c:	003e3f06 	br	ac8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac8c>
    b390:	0401ffc4 	movi	r16,2047
    b394:	003e2506 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b398:	0013883a 	mov	r9,zero
    b39c:	003f8406 	br	b1b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b1b0>
    b3a0:	0005883a 	mov	r2,zero
    b3a4:	0007883a 	mov	r3,zero
    b3a8:	003e8906 	br	add0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000add0>
    b3ac:	197ff804 	addi	r5,r3,-32
    b3b0:	01000804 	movi	r4,32
    b3b4:	414ad83a 	srl	r5,r8,r5
    b3b8:	19002426 	beq	r3,r4,b44c <__adddf3+0x89c>
    b3bc:	01001004 	movi	r4,64
    b3c0:	20c7c83a 	sub	r3,r4,r3
    b3c4:	40c6983a 	sll	r3,r8,r3
    b3c8:	1c46b03a 	or	r3,r3,r17
    b3cc:	1806c03a 	cmpne	r3,r3,zero
    b3d0:	28e2b03a 	or	r17,r5,r3
    b3d4:	0007883a 	mov	r3,zero
    b3d8:	003f2306 	br	b068 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b068>
    b3dc:	0007883a 	mov	r3,zero
    b3e0:	5811883a 	mov	r8,r11
    b3e4:	00bfffc4 	movi	r2,-1
    b3e8:	0401ffc4 	movi	r16,2047
    b3ec:	003e7806 	br	add0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000add0>
    b3f0:	4462b03a 	or	r17,r8,r17
    b3f4:	8822c03a 	cmpne	r17,r17,zero
    b3f8:	0009883a 	mov	r4,zero
    b3fc:	003fa006 	br	b280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b280>
    b400:	4811883a 	mov	r8,r9
    b404:	3023883a 	mov	r17,r6
    b408:	0401ffc4 	movi	r16,2047
    b40c:	003e0706 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b410:	4811883a 	mov	r8,r9
    b414:	3023883a 	mov	r17,r6
    b418:	003e0406 	br	ac2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ac2c>
    b41c:	21fff804 	addi	r7,r4,-32
    b420:	01400804 	movi	r5,32
    b424:	41ced83a 	srl	r7,r8,r7
    b428:	21400a26 	beq	r4,r5,b454 <__adddf3+0x8a4>
    b42c:	01401004 	movi	r5,64
    b430:	2909c83a 	sub	r4,r5,r4
    b434:	4108983a 	sll	r4,r8,r4
    b438:	2448b03a 	or	r4,r4,r17
    b43c:	2008c03a 	cmpne	r4,r4,zero
    b440:	3922b03a 	or	r17,r7,r4
    b444:	0009883a 	mov	r4,zero
    b448:	003f8d06 	br	b280 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b280>
    b44c:	0007883a 	mov	r3,zero
    b450:	003fdd06 	br	b3c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b3c8>
    b454:	0009883a 	mov	r4,zero
    b458:	003ff706 	br	b438 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b438>

0000b45c <__divdf3>:
    b45c:	defff204 	addi	sp,sp,-56
    b460:	dd400915 	stw	r21,36(sp)
    b464:	282ad53a 	srli	r21,r5,20
    b468:	dd000815 	stw	r20,32(sp)
    b46c:	2828d7fa 	srli	r20,r5,31
    b470:	dc000415 	stw	r16,16(sp)
    b474:	04000434 	movhi	r16,16
    b478:	df000c15 	stw	fp,48(sp)
    b47c:	843fffc4 	addi	r16,r16,-1
    b480:	dfc00d15 	stw	ra,52(sp)
    b484:	ddc00b15 	stw	r23,44(sp)
    b488:	dd800a15 	stw	r22,40(sp)
    b48c:	dcc00715 	stw	r19,28(sp)
    b490:	dc800615 	stw	r18,24(sp)
    b494:	dc400515 	stw	r17,20(sp)
    b498:	ad41ffcc 	andi	r21,r21,2047
    b49c:	2c20703a 	and	r16,r5,r16
    b4a0:	a7003fcc 	andi	fp,r20,255
    b4a4:	a8006126 	beq	r21,zero,b62c <__divdf3+0x1d0>
    b4a8:	0081ffc4 	movi	r2,2047
    b4ac:	2025883a 	mov	r18,r4
    b4b0:	a8803726 	beq	r21,r2,b590 <__divdf3+0x134>
    b4b4:	80800434 	orhi	r2,r16,16
    b4b8:	100490fa 	slli	r2,r2,3
    b4bc:	2020d77a 	srli	r16,r4,29
    b4c0:	202490fa 	slli	r18,r4,3
    b4c4:	ad7f0044 	addi	r21,r21,-1023
    b4c8:	80a0b03a 	or	r16,r16,r2
    b4cc:	0027883a 	mov	r19,zero
    b4d0:	0013883a 	mov	r9,zero
    b4d4:	3804d53a 	srli	r2,r7,20
    b4d8:	382cd7fa 	srli	r22,r7,31
    b4dc:	04400434 	movhi	r17,16
    b4e0:	8c7fffc4 	addi	r17,r17,-1
    b4e4:	1081ffcc 	andi	r2,r2,2047
    b4e8:	3011883a 	mov	r8,r6
    b4ec:	3c62703a 	and	r17,r7,r17
    b4f0:	b5c03fcc 	andi	r23,r22,255
    b4f4:	10006c26 	beq	r2,zero,b6a8 <__divdf3+0x24c>
    b4f8:	00c1ffc4 	movi	r3,2047
    b4fc:	10c06426 	beq	r2,r3,b690 <__divdf3+0x234>
    b500:	88c00434 	orhi	r3,r17,16
    b504:	180690fa 	slli	r3,r3,3
    b508:	3022d77a 	srli	r17,r6,29
    b50c:	301090fa 	slli	r8,r6,3
    b510:	10bf0044 	addi	r2,r2,-1023
    b514:	88e2b03a 	or	r17,r17,r3
    b518:	000f883a 	mov	r7,zero
    b51c:	a58cf03a 	xor	r6,r20,r22
    b520:	3cc8b03a 	or	r4,r7,r19
    b524:	a8abc83a 	sub	r21,r21,r2
    b528:	008003c4 	movi	r2,15
    b52c:	3007883a 	mov	r3,r6
    b530:	34c03fcc 	andi	r19,r6,255
    b534:	11009036 	bltu	r2,r4,b778 <__divdf3+0x31c>
    b538:	200890ba 	slli	r4,r4,2
    b53c:	00800074 	movhi	r2,1
    b540:	10ad5404 	addi	r2,r2,-19120
    b544:	2089883a 	add	r4,r4,r2
    b548:	20800017 	ldw	r2,0(r4)
    b54c:	1000683a 	jmp	r2
    b550:	0000b778 	rdprs	zero,zero,733
    b554:	0000b5c8 	cmpgei	zero,zero,727
    b558:	0000b768 	cmpgeui	zero,zero,733
    b55c:	0000b5bc 	xorhi	zero,zero,726
    b560:	0000b768 	cmpgeui	zero,zero,733
    b564:	0000b73c 	xorhi	zero,zero,732
    b568:	0000b768 	cmpgeui	zero,zero,733
    b56c:	0000b5bc 	xorhi	zero,zero,726
    b570:	0000b5c8 	cmpgei	zero,zero,727
    b574:	0000b5c8 	cmpgei	zero,zero,727
    b578:	0000b73c 	xorhi	zero,zero,732
    b57c:	0000b5bc 	xorhi	zero,zero,726
    b580:	0000b5ac 	andhi	zero,zero,726
    b584:	0000b5ac 	andhi	zero,zero,726
    b588:	0000b5ac 	andhi	zero,zero,726
    b58c:	0000ba5c 	xori	zero,zero,745
    b590:	2404b03a 	or	r2,r4,r16
    b594:	1000661e 	bne	r2,zero,b730 <__divdf3+0x2d4>
    b598:	04c00204 	movi	r19,8
    b59c:	0021883a 	mov	r16,zero
    b5a0:	0025883a 	mov	r18,zero
    b5a4:	02400084 	movi	r9,2
    b5a8:	003fca06 	br	b4d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4d4>
    b5ac:	8023883a 	mov	r17,r16
    b5b0:	9011883a 	mov	r8,r18
    b5b4:	e02f883a 	mov	r23,fp
    b5b8:	480f883a 	mov	r7,r9
    b5bc:	00800084 	movi	r2,2
    b5c0:	3881311e 	bne	r7,r2,ba88 <__divdf3+0x62c>
    b5c4:	b827883a 	mov	r19,r23
    b5c8:	98c0004c 	andi	r3,r19,1
    b5cc:	0081ffc4 	movi	r2,2047
    b5d0:	000b883a 	mov	r5,zero
    b5d4:	0025883a 	mov	r18,zero
    b5d8:	1004953a 	slli	r2,r2,20
    b5dc:	18c03fcc 	andi	r3,r3,255
    b5e0:	04400434 	movhi	r17,16
    b5e4:	8c7fffc4 	addi	r17,r17,-1
    b5e8:	180697fa 	slli	r3,r3,31
    b5ec:	2c4a703a 	and	r5,r5,r17
    b5f0:	288ab03a 	or	r5,r5,r2
    b5f4:	28c6b03a 	or	r3,r5,r3
    b5f8:	9005883a 	mov	r2,r18
    b5fc:	dfc00d17 	ldw	ra,52(sp)
    b600:	df000c17 	ldw	fp,48(sp)
    b604:	ddc00b17 	ldw	r23,44(sp)
    b608:	dd800a17 	ldw	r22,40(sp)
    b60c:	dd400917 	ldw	r21,36(sp)
    b610:	dd000817 	ldw	r20,32(sp)
    b614:	dcc00717 	ldw	r19,28(sp)
    b618:	dc800617 	ldw	r18,24(sp)
    b61c:	dc400517 	ldw	r17,20(sp)
    b620:	dc000417 	ldw	r16,16(sp)
    b624:	dec00e04 	addi	sp,sp,56
    b628:	f800283a 	ret
    b62c:	2404b03a 	or	r2,r4,r16
    b630:	2027883a 	mov	r19,r4
    b634:	10003926 	beq	r2,zero,b71c <__divdf3+0x2c0>
    b638:	80012e26 	beq	r16,zero,baf4 <__divdf3+0x698>
    b63c:	8009883a 	mov	r4,r16
    b640:	d9800315 	stw	r6,12(sp)
    b644:	d9c00215 	stw	r7,8(sp)
    b648:	000d1b40 	call	d1b4 <__clzsi2>
    b64c:	d9800317 	ldw	r6,12(sp)
    b650:	d9c00217 	ldw	r7,8(sp)
    b654:	113ffd44 	addi	r4,r2,-11
    b658:	00c00704 	movi	r3,28
    b65c:	19012116 	blt	r3,r4,bae4 <__divdf3+0x688>
    b660:	00c00744 	movi	r3,29
    b664:	147ffe04 	addi	r17,r2,-8
    b668:	1907c83a 	sub	r3,r3,r4
    b66c:	8460983a 	sll	r16,r16,r17
    b670:	98c6d83a 	srl	r3,r19,r3
    b674:	9c64983a 	sll	r18,r19,r17
    b678:	1c20b03a 	or	r16,r3,r16
    b67c:	1080fcc4 	addi	r2,r2,1011
    b680:	00abc83a 	sub	r21,zero,r2
    b684:	0027883a 	mov	r19,zero
    b688:	0013883a 	mov	r9,zero
    b68c:	003f9106 	br	b4d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4d4>
    b690:	3446b03a 	or	r3,r6,r17
    b694:	18001f1e 	bne	r3,zero,b714 <__divdf3+0x2b8>
    b698:	0023883a 	mov	r17,zero
    b69c:	0011883a 	mov	r8,zero
    b6a0:	01c00084 	movi	r7,2
    b6a4:	003f9d06 	br	b51c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b51c>
    b6a8:	3446b03a 	or	r3,r6,r17
    b6ac:	18001526 	beq	r3,zero,b704 <__divdf3+0x2a8>
    b6b0:	88011b26 	beq	r17,zero,bb20 <__divdf3+0x6c4>
    b6b4:	8809883a 	mov	r4,r17
    b6b8:	d9800315 	stw	r6,12(sp)
    b6bc:	da400115 	stw	r9,4(sp)
    b6c0:	000d1b40 	call	d1b4 <__clzsi2>
    b6c4:	d9800317 	ldw	r6,12(sp)
    b6c8:	da400117 	ldw	r9,4(sp)
    b6cc:	113ffd44 	addi	r4,r2,-11
    b6d0:	00c00704 	movi	r3,28
    b6d4:	19010e16 	blt	r3,r4,bb10 <__divdf3+0x6b4>
    b6d8:	00c00744 	movi	r3,29
    b6dc:	123ffe04 	addi	r8,r2,-8
    b6e0:	1907c83a 	sub	r3,r3,r4
    b6e4:	8a22983a 	sll	r17,r17,r8
    b6e8:	30c6d83a 	srl	r3,r6,r3
    b6ec:	3210983a 	sll	r8,r6,r8
    b6f0:	1c62b03a 	or	r17,r3,r17
    b6f4:	1080fcc4 	addi	r2,r2,1011
    b6f8:	0085c83a 	sub	r2,zero,r2
    b6fc:	000f883a 	mov	r7,zero
    b700:	003f8606 	br	b51c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b51c>
    b704:	0023883a 	mov	r17,zero
    b708:	0011883a 	mov	r8,zero
    b70c:	01c00044 	movi	r7,1
    b710:	003f8206 	br	b51c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b51c>
    b714:	01c000c4 	movi	r7,3
    b718:	003f8006 	br	b51c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b51c>
    b71c:	04c00104 	movi	r19,4
    b720:	0021883a 	mov	r16,zero
    b724:	0025883a 	mov	r18,zero
    b728:	02400044 	movi	r9,1
    b72c:	003f6906 	br	b4d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4d4>
    b730:	04c00304 	movi	r19,12
    b734:	024000c4 	movi	r9,3
    b738:	003f6606 	br	b4d4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b4d4>
    b73c:	01400434 	movhi	r5,16
    b740:	0007883a 	mov	r3,zero
    b744:	297fffc4 	addi	r5,r5,-1
    b748:	04bfffc4 	movi	r18,-1
    b74c:	0081ffc4 	movi	r2,2047
    b750:	003fa106 	br	b5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5d8>
    b754:	00c00044 	movi	r3,1
    b758:	1887c83a 	sub	r3,r3,r2
    b75c:	01000e04 	movi	r4,56
    b760:	20c1210e 	bge	r4,r3,bbe8 <__divdf3+0x78c>
    b764:	98c0004c 	andi	r3,r19,1
    b768:	0005883a 	mov	r2,zero
    b76c:	000b883a 	mov	r5,zero
    b770:	0025883a 	mov	r18,zero
    b774:	003f9806 	br	b5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5d8>
    b778:	8c00fd36 	bltu	r17,r16,bb70 <__divdf3+0x714>
    b77c:	8440fb26 	beq	r16,r17,bb6c <__divdf3+0x710>
    b780:	8007883a 	mov	r3,r16
    b784:	ad7fffc4 	addi	r21,r21,-1
    b788:	0021883a 	mov	r16,zero
    b78c:	4004d63a 	srli	r2,r8,24
    b790:	8822923a 	slli	r17,r17,8
    b794:	1809883a 	mov	r4,r3
    b798:	402c923a 	slli	r22,r8,8
    b79c:	88b8b03a 	or	fp,r17,r2
    b7a0:	e028d43a 	srli	r20,fp,16
    b7a4:	d8c00015 	stw	r3,0(sp)
    b7a8:	e5ffffcc 	andi	r23,fp,65535
    b7ac:	a00b883a 	mov	r5,r20
    b7b0:	000aaf40 	call	aaf4 <__udivsi3>
    b7b4:	d8c00017 	ldw	r3,0(sp)
    b7b8:	a00b883a 	mov	r5,r20
    b7bc:	d8800315 	stw	r2,12(sp)
    b7c0:	1809883a 	mov	r4,r3
    b7c4:	000ab580 	call	ab58 <__umodsi3>
    b7c8:	d9800317 	ldw	r6,12(sp)
    b7cc:	1006943a 	slli	r3,r2,16
    b7d0:	9004d43a 	srli	r2,r18,16
    b7d4:	b9a3383a 	mul	r17,r23,r6
    b7d8:	10c4b03a 	or	r2,r2,r3
    b7dc:	1440062e 	bgeu	r2,r17,b7f8 <__divdf3+0x39c>
    b7e0:	1705883a 	add	r2,r2,fp
    b7e4:	30ffffc4 	addi	r3,r6,-1
    b7e8:	1700ee36 	bltu	r2,fp,bba4 <__divdf3+0x748>
    b7ec:	1440ed2e 	bgeu	r2,r17,bba4 <__divdf3+0x748>
    b7f0:	31bfff84 	addi	r6,r6,-2
    b7f4:	1705883a 	add	r2,r2,fp
    b7f8:	1463c83a 	sub	r17,r2,r17
    b7fc:	a00b883a 	mov	r5,r20
    b800:	8809883a 	mov	r4,r17
    b804:	d9800315 	stw	r6,12(sp)
    b808:	000aaf40 	call	aaf4 <__udivsi3>
    b80c:	a00b883a 	mov	r5,r20
    b810:	8809883a 	mov	r4,r17
    b814:	d8800215 	stw	r2,8(sp)
    b818:	000ab580 	call	ab58 <__umodsi3>
    b81c:	d9c00217 	ldw	r7,8(sp)
    b820:	1004943a 	slli	r2,r2,16
    b824:	94bfffcc 	andi	r18,r18,65535
    b828:	b9d1383a 	mul	r8,r23,r7
    b82c:	90a4b03a 	or	r18,r18,r2
    b830:	d9800317 	ldw	r6,12(sp)
    b834:	9200062e 	bgeu	r18,r8,b850 <__divdf3+0x3f4>
    b838:	9725883a 	add	r18,r18,fp
    b83c:	38bfffc4 	addi	r2,r7,-1
    b840:	9700d636 	bltu	r18,fp,bb9c <__divdf3+0x740>
    b844:	9200d52e 	bgeu	r18,r8,bb9c <__divdf3+0x740>
    b848:	39ffff84 	addi	r7,r7,-2
    b84c:	9725883a 	add	r18,r18,fp
    b850:	3004943a 	slli	r2,r6,16
    b854:	b012d43a 	srli	r9,r22,16
    b858:	b1bfffcc 	andi	r6,r22,65535
    b85c:	11e2b03a 	or	r17,r2,r7
    b860:	8806d43a 	srli	r3,r17,16
    b864:	893fffcc 	andi	r4,r17,65535
    b868:	218b383a 	mul	r5,r4,r6
    b86c:	30c5383a 	mul	r2,r6,r3
    b870:	2249383a 	mul	r4,r4,r9
    b874:	280ed43a 	srli	r7,r5,16
    b878:	9225c83a 	sub	r18,r18,r8
    b87c:	2089883a 	add	r4,r4,r2
    b880:	3909883a 	add	r4,r7,r4
    b884:	1a47383a 	mul	r3,r3,r9
    b888:	2080022e 	bgeu	r4,r2,b894 <__divdf3+0x438>
    b88c:	00800074 	movhi	r2,1
    b890:	1887883a 	add	r3,r3,r2
    b894:	2004d43a 	srli	r2,r4,16
    b898:	2008943a 	slli	r4,r4,16
    b89c:	297fffcc 	andi	r5,r5,65535
    b8a0:	10c7883a 	add	r3,r2,r3
    b8a4:	2149883a 	add	r4,r4,r5
    b8a8:	90c0a536 	bltu	r18,r3,bb40 <__divdf3+0x6e4>
    b8ac:	90c0bf26 	beq	r18,r3,bbac <__divdf3+0x750>
    b8b0:	90c7c83a 	sub	r3,r18,r3
    b8b4:	810fc83a 	sub	r7,r16,r4
    b8b8:	81e5803a 	cmpltu	r18,r16,r7
    b8bc:	1ca5c83a 	sub	r18,r3,r18
    b8c0:	e480c126 	beq	fp,r18,bbc8 <__divdf3+0x76c>
    b8c4:	a00b883a 	mov	r5,r20
    b8c8:	9009883a 	mov	r4,r18
    b8cc:	d9800315 	stw	r6,12(sp)
    b8d0:	d9c00215 	stw	r7,8(sp)
    b8d4:	da400115 	stw	r9,4(sp)
    b8d8:	000aaf40 	call	aaf4 <__udivsi3>
    b8dc:	a00b883a 	mov	r5,r20
    b8e0:	9009883a 	mov	r4,r18
    b8e4:	d8800015 	stw	r2,0(sp)
    b8e8:	000ab580 	call	ab58 <__umodsi3>
    b8ec:	d9c00217 	ldw	r7,8(sp)
    b8f0:	da000017 	ldw	r8,0(sp)
    b8f4:	1006943a 	slli	r3,r2,16
    b8f8:	3804d43a 	srli	r2,r7,16
    b8fc:	ba21383a 	mul	r16,r23,r8
    b900:	d9800317 	ldw	r6,12(sp)
    b904:	10c4b03a 	or	r2,r2,r3
    b908:	da400117 	ldw	r9,4(sp)
    b90c:	1400062e 	bgeu	r2,r16,b928 <__divdf3+0x4cc>
    b910:	1705883a 	add	r2,r2,fp
    b914:	40ffffc4 	addi	r3,r8,-1
    b918:	1700ad36 	bltu	r2,fp,bbd0 <__divdf3+0x774>
    b91c:	1400ac2e 	bgeu	r2,r16,bbd0 <__divdf3+0x774>
    b920:	423fff84 	addi	r8,r8,-2
    b924:	1705883a 	add	r2,r2,fp
    b928:	1421c83a 	sub	r16,r2,r16
    b92c:	a00b883a 	mov	r5,r20
    b930:	8009883a 	mov	r4,r16
    b934:	d9800315 	stw	r6,12(sp)
    b938:	d9c00215 	stw	r7,8(sp)
    b93c:	da000015 	stw	r8,0(sp)
    b940:	da400115 	stw	r9,4(sp)
    b944:	000aaf40 	call	aaf4 <__udivsi3>
    b948:	8009883a 	mov	r4,r16
    b94c:	a00b883a 	mov	r5,r20
    b950:	1025883a 	mov	r18,r2
    b954:	000ab580 	call	ab58 <__umodsi3>
    b958:	d9c00217 	ldw	r7,8(sp)
    b95c:	1004943a 	slli	r2,r2,16
    b960:	bcaf383a 	mul	r23,r23,r18
    b964:	393fffcc 	andi	r4,r7,65535
    b968:	2088b03a 	or	r4,r4,r2
    b96c:	d9800317 	ldw	r6,12(sp)
    b970:	da000017 	ldw	r8,0(sp)
    b974:	da400117 	ldw	r9,4(sp)
    b978:	25c0062e 	bgeu	r4,r23,b994 <__divdf3+0x538>
    b97c:	2709883a 	add	r4,r4,fp
    b980:	90bfffc4 	addi	r2,r18,-1
    b984:	27009436 	bltu	r4,fp,bbd8 <__divdf3+0x77c>
    b988:	25c0932e 	bgeu	r4,r23,bbd8 <__divdf3+0x77c>
    b98c:	94bfff84 	addi	r18,r18,-2
    b990:	2709883a 	add	r4,r4,fp
    b994:	4004943a 	slli	r2,r8,16
    b998:	25efc83a 	sub	r23,r4,r23
    b99c:	1490b03a 	or	r8,r2,r18
    b9a0:	4008d43a 	srli	r4,r8,16
    b9a4:	40ffffcc 	andi	r3,r8,65535
    b9a8:	30c5383a 	mul	r2,r6,r3
    b9ac:	1a47383a 	mul	r3,r3,r9
    b9b0:	310d383a 	mul	r6,r6,r4
    b9b4:	100ad43a 	srli	r5,r2,16
    b9b8:	4913383a 	mul	r9,r9,r4
    b9bc:	1987883a 	add	r3,r3,r6
    b9c0:	28c7883a 	add	r3,r5,r3
    b9c4:	1980022e 	bgeu	r3,r6,b9d0 <__divdf3+0x574>
    b9c8:	01000074 	movhi	r4,1
    b9cc:	4913883a 	add	r9,r9,r4
    b9d0:	1808d43a 	srli	r4,r3,16
    b9d4:	1806943a 	slli	r3,r3,16
    b9d8:	10bfffcc 	andi	r2,r2,65535
    b9dc:	2253883a 	add	r9,r4,r9
    b9e0:	1887883a 	add	r3,r3,r2
    b9e4:	ba403836 	bltu	r23,r9,bac8 <__divdf3+0x66c>
    b9e8:	ba403626 	beq	r23,r9,bac4 <__divdf3+0x668>
    b9ec:	42000054 	ori	r8,r8,1
    b9f0:	a880ffc4 	addi	r2,r21,1023
    b9f4:	00bf570e 	bge	zero,r2,b754 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b754>
    b9f8:	40c001cc 	andi	r3,r8,7
    b9fc:	18000726 	beq	r3,zero,ba1c <__divdf3+0x5c0>
    ba00:	40c003cc 	andi	r3,r8,15
    ba04:	01000104 	movi	r4,4
    ba08:	19000426 	beq	r3,r4,ba1c <__divdf3+0x5c0>
    ba0c:	4107883a 	add	r3,r8,r4
    ba10:	1a11803a 	cmpltu	r8,r3,r8
    ba14:	8a23883a 	add	r17,r17,r8
    ba18:	1811883a 	mov	r8,r3
    ba1c:	88c0402c 	andhi	r3,r17,256
    ba20:	18000426 	beq	r3,zero,ba34 <__divdf3+0x5d8>
    ba24:	00ffc034 	movhi	r3,65280
    ba28:	18ffffc4 	addi	r3,r3,-1
    ba2c:	a8810004 	addi	r2,r21,1024
    ba30:	88e2703a 	and	r17,r17,r3
    ba34:	00c1ff84 	movi	r3,2046
    ba38:	18bee316 	blt	r3,r2,b5c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5c8>
    ba3c:	8824977a 	slli	r18,r17,29
    ba40:	4010d0fa 	srli	r8,r8,3
    ba44:	8822927a 	slli	r17,r17,9
    ba48:	1081ffcc 	andi	r2,r2,2047
    ba4c:	9224b03a 	or	r18,r18,r8
    ba50:	880ad33a 	srli	r5,r17,12
    ba54:	98c0004c 	andi	r3,r19,1
    ba58:	003edf06 	br	b5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5d8>
    ba5c:	8080022c 	andhi	r2,r16,8
    ba60:	10001226 	beq	r2,zero,baac <__divdf3+0x650>
    ba64:	8880022c 	andhi	r2,r17,8
    ba68:	1000101e 	bne	r2,zero,baac <__divdf3+0x650>
    ba6c:	00800434 	movhi	r2,16
    ba70:	89400234 	orhi	r5,r17,8
    ba74:	10bfffc4 	addi	r2,r2,-1
    ba78:	b007883a 	mov	r3,r22
    ba7c:	288a703a 	and	r5,r5,r2
    ba80:	4025883a 	mov	r18,r8
    ba84:	003f3106 	br	b74c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b74c>
    ba88:	008000c4 	movi	r2,3
    ba8c:	3880a626 	beq	r7,r2,bd28 <__divdf3+0x8cc>
    ba90:	00800044 	movi	r2,1
    ba94:	3880521e 	bne	r7,r2,bbe0 <__divdf3+0x784>
    ba98:	b807883a 	mov	r3,r23
    ba9c:	0005883a 	mov	r2,zero
    baa0:	000b883a 	mov	r5,zero
    baa4:	0025883a 	mov	r18,zero
    baa8:	003ecb06 	br	b5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5d8>
    baac:	00800434 	movhi	r2,16
    bab0:	81400234 	orhi	r5,r16,8
    bab4:	10bfffc4 	addi	r2,r2,-1
    bab8:	a007883a 	mov	r3,r20
    babc:	288a703a 	and	r5,r5,r2
    bac0:	003f2206 	br	b74c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b74c>
    bac4:	183fca26 	beq	r3,zero,b9f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f0>
    bac8:	e5ef883a 	add	r23,fp,r23
    bacc:	40bfffc4 	addi	r2,r8,-1
    bad0:	bf00392e 	bgeu	r23,fp,bbb8 <__divdf3+0x75c>
    bad4:	1011883a 	mov	r8,r2
    bad8:	ba7fc41e 	bne	r23,r9,b9ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9ec>
    badc:	b0ffc31e 	bne	r22,r3,b9ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9ec>
    bae0:	003fc306 	br	b9f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f0>
    bae4:	143ff604 	addi	r16,r2,-40
    bae8:	9c20983a 	sll	r16,r19,r16
    baec:	0025883a 	mov	r18,zero
    baf0:	003ee206 	br	b67c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b67c>
    baf4:	d9800315 	stw	r6,12(sp)
    baf8:	d9c00215 	stw	r7,8(sp)
    bafc:	000d1b40 	call	d1b4 <__clzsi2>
    bb00:	10800804 	addi	r2,r2,32
    bb04:	d9c00217 	ldw	r7,8(sp)
    bb08:	d9800317 	ldw	r6,12(sp)
    bb0c:	003ed106 	br	b654 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b654>
    bb10:	147ff604 	addi	r17,r2,-40
    bb14:	3462983a 	sll	r17,r6,r17
    bb18:	0011883a 	mov	r8,zero
    bb1c:	003ef506 	br	b6f4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b6f4>
    bb20:	3009883a 	mov	r4,r6
    bb24:	d9800315 	stw	r6,12(sp)
    bb28:	da400115 	stw	r9,4(sp)
    bb2c:	000d1b40 	call	d1b4 <__clzsi2>
    bb30:	10800804 	addi	r2,r2,32
    bb34:	da400117 	ldw	r9,4(sp)
    bb38:	d9800317 	ldw	r6,12(sp)
    bb3c:	003ee306 	br	b6cc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b6cc>
    bb40:	85a1883a 	add	r16,r16,r22
    bb44:	8585803a 	cmpltu	r2,r16,r22
    bb48:	1705883a 	add	r2,r2,fp
    bb4c:	14a5883a 	add	r18,r2,r18
    bb50:	88bfffc4 	addi	r2,r17,-1
    bb54:	e4800c2e 	bgeu	fp,r18,bb88 <__divdf3+0x72c>
    bb58:	90c03e36 	bltu	r18,r3,bc54 <__divdf3+0x7f8>
    bb5c:	1c806926 	beq	r3,r18,bd04 <__divdf3+0x8a8>
    bb60:	90c7c83a 	sub	r3,r18,r3
    bb64:	1023883a 	mov	r17,r2
    bb68:	003f5206 	br	b8b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b8b4>
    bb6c:	923f0436 	bltu	r18,r8,b780 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b780>
    bb70:	800897fa 	slli	r4,r16,31
    bb74:	9004d07a 	srli	r2,r18,1
    bb78:	8006d07a 	srli	r3,r16,1
    bb7c:	902097fa 	slli	r16,r18,31
    bb80:	20a4b03a 	or	r18,r4,r2
    bb84:	003f0106 	br	b78c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b78c>
    bb88:	e4bff51e 	bne	fp,r18,bb60 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb60>
    bb8c:	85bff22e 	bgeu	r16,r22,bb58 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb58>
    bb90:	e0c7c83a 	sub	r3,fp,r3
    bb94:	1023883a 	mov	r17,r2
    bb98:	003f4606 	br	b8b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b8b4>
    bb9c:	100f883a 	mov	r7,r2
    bba0:	003f2b06 	br	b850 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b850>
    bba4:	180d883a 	mov	r6,r3
    bba8:	003f1306 	br	b7f8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b7f8>
    bbac:	813fe436 	bltu	r16,r4,bb40 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bb40>
    bbb0:	0007883a 	mov	r3,zero
    bbb4:	003f3f06 	br	b8b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b8b4>
    bbb8:	ba402c36 	bltu	r23,r9,bc6c <__divdf3+0x810>
    bbbc:	4dc05426 	beq	r9,r23,bd10 <__divdf3+0x8b4>
    bbc0:	1011883a 	mov	r8,r2
    bbc4:	003f8906 	br	b9ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9ec>
    bbc8:	023fffc4 	movi	r8,-1
    bbcc:	003f8806 	br	b9f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f0>
    bbd0:	1811883a 	mov	r8,r3
    bbd4:	003f5406 	br	b928 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b928>
    bbd8:	1025883a 	mov	r18,r2
    bbdc:	003f6d06 	br	b994 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b994>
    bbe0:	b827883a 	mov	r19,r23
    bbe4:	003f8206 	br	b9f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f0>
    bbe8:	010007c4 	movi	r4,31
    bbec:	20c02616 	blt	r4,r3,bc88 <__divdf3+0x82c>
    bbf0:	00800804 	movi	r2,32
    bbf4:	10c5c83a 	sub	r2,r2,r3
    bbf8:	888a983a 	sll	r5,r17,r2
    bbfc:	40c8d83a 	srl	r4,r8,r3
    bc00:	4084983a 	sll	r2,r8,r2
    bc04:	88e2d83a 	srl	r17,r17,r3
    bc08:	2906b03a 	or	r3,r5,r4
    bc0c:	1004c03a 	cmpne	r2,r2,zero
    bc10:	1886b03a 	or	r3,r3,r2
    bc14:	188001cc 	andi	r2,r3,7
    bc18:	10000726 	beq	r2,zero,bc38 <__divdf3+0x7dc>
    bc1c:	188003cc 	andi	r2,r3,15
    bc20:	01000104 	movi	r4,4
    bc24:	11000426 	beq	r2,r4,bc38 <__divdf3+0x7dc>
    bc28:	1805883a 	mov	r2,r3
    bc2c:	10c00104 	addi	r3,r2,4
    bc30:	1885803a 	cmpltu	r2,r3,r2
    bc34:	88a3883a 	add	r17,r17,r2
    bc38:	8880202c 	andhi	r2,r17,128
    bc3c:	10002726 	beq	r2,zero,bcdc <__divdf3+0x880>
    bc40:	98c0004c 	andi	r3,r19,1
    bc44:	00800044 	movi	r2,1
    bc48:	000b883a 	mov	r5,zero
    bc4c:	0025883a 	mov	r18,zero
    bc50:	003e6106 	br	b5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5d8>
    bc54:	85a1883a 	add	r16,r16,r22
    bc58:	8585803a 	cmpltu	r2,r16,r22
    bc5c:	1705883a 	add	r2,r2,fp
    bc60:	14a5883a 	add	r18,r2,r18
    bc64:	8c7fff84 	addi	r17,r17,-2
    bc68:	003f1106 	br	b8b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b8b0>
    bc6c:	b589883a 	add	r4,r22,r22
    bc70:	25ad803a 	cmpltu	r22,r4,r22
    bc74:	b739883a 	add	fp,r22,fp
    bc78:	40bfff84 	addi	r2,r8,-2
    bc7c:	bf2f883a 	add	r23,r23,fp
    bc80:	202d883a 	mov	r22,r4
    bc84:	003f9306 	br	bad4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bad4>
    bc88:	013ff844 	movi	r4,-31
    bc8c:	2085c83a 	sub	r2,r4,r2
    bc90:	8888d83a 	srl	r4,r17,r2
    bc94:	00800804 	movi	r2,32
    bc98:	18802126 	beq	r3,r2,bd20 <__divdf3+0x8c4>
    bc9c:	00801004 	movi	r2,64
    bca0:	10c5c83a 	sub	r2,r2,r3
    bca4:	8884983a 	sll	r2,r17,r2
    bca8:	1204b03a 	or	r2,r2,r8
    bcac:	1004c03a 	cmpne	r2,r2,zero
    bcb0:	2084b03a 	or	r2,r4,r2
    bcb4:	144001cc 	andi	r17,r2,7
    bcb8:	88000d1e 	bne	r17,zero,bcf0 <__divdf3+0x894>
    bcbc:	000b883a 	mov	r5,zero
    bcc0:	1024d0fa 	srli	r18,r2,3
    bcc4:	98c0004c 	andi	r3,r19,1
    bcc8:	0005883a 	mov	r2,zero
    bccc:	9464b03a 	or	r18,r18,r17
    bcd0:	003e4106 	br	b5d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b5d8>
    bcd4:	1007883a 	mov	r3,r2
    bcd8:	0023883a 	mov	r17,zero
    bcdc:	880a927a 	slli	r5,r17,9
    bce0:	1805883a 	mov	r2,r3
    bce4:	8822977a 	slli	r17,r17,29
    bce8:	280ad33a 	srli	r5,r5,12
    bcec:	003ff406 	br	bcc0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bcc0>
    bcf0:	10c003cc 	andi	r3,r2,15
    bcf4:	01000104 	movi	r4,4
    bcf8:	193ff626 	beq	r3,r4,bcd4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bcd4>
    bcfc:	0023883a 	mov	r17,zero
    bd00:	003fca06 	br	bc2c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bc2c>
    bd04:	813fd336 	bltu	r16,r4,bc54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bc54>
    bd08:	1023883a 	mov	r17,r2
    bd0c:	003fa806 	br	bbb0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bbb0>
    bd10:	b0ffd636 	bltu	r22,r3,bc6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bc6c>
    bd14:	1011883a 	mov	r8,r2
    bd18:	b0ff341e 	bne	r22,r3,b9ec <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9ec>
    bd1c:	003f3406 	br	b9f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b9f0>
    bd20:	0005883a 	mov	r2,zero
    bd24:	003fe006 	br	bca8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bca8>
    bd28:	00800434 	movhi	r2,16
    bd2c:	89400234 	orhi	r5,r17,8
    bd30:	10bfffc4 	addi	r2,r2,-1
    bd34:	b807883a 	mov	r3,r23
    bd38:	288a703a 	and	r5,r5,r2
    bd3c:	4025883a 	mov	r18,r8
    bd40:	003e8206 	br	b74c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000b74c>

0000bd44 <__eqdf2>:
    bd44:	2804d53a 	srli	r2,r5,20
    bd48:	3806d53a 	srli	r3,r7,20
    bd4c:	02000434 	movhi	r8,16
    bd50:	423fffc4 	addi	r8,r8,-1
    bd54:	1081ffcc 	andi	r2,r2,2047
    bd58:	0281ffc4 	movi	r10,2047
    bd5c:	2a12703a 	and	r9,r5,r8
    bd60:	18c1ffcc 	andi	r3,r3,2047
    bd64:	3a10703a 	and	r8,r7,r8
    bd68:	280ad7fa 	srli	r5,r5,31
    bd6c:	380ed7fa 	srli	r7,r7,31
    bd70:	12801026 	beq	r2,r10,bdb4 <__eqdf2+0x70>
    bd74:	0281ffc4 	movi	r10,2047
    bd78:	1a800a26 	beq	r3,r10,bda4 <__eqdf2+0x60>
    bd7c:	10c00226 	beq	r2,r3,bd88 <__eqdf2+0x44>
    bd80:	00800044 	movi	r2,1
    bd84:	f800283a 	ret
    bd88:	4a3ffd1e 	bne	r9,r8,bd80 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd80>
    bd8c:	21bffc1e 	bne	r4,r6,bd80 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd80>
    bd90:	29c00c26 	beq	r5,r7,bdc4 <__eqdf2+0x80>
    bd94:	103ffa1e 	bne	r2,zero,bd80 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd80>
    bd98:	2244b03a 	or	r2,r4,r9
    bd9c:	1004c03a 	cmpne	r2,r2,zero
    bda0:	f800283a 	ret
    bda4:	3214b03a 	or	r10,r6,r8
    bda8:	503ff426 	beq	r10,zero,bd7c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd7c>
    bdac:	00800044 	movi	r2,1
    bdb0:	f800283a 	ret
    bdb4:	2254b03a 	or	r10,r4,r9
    bdb8:	503fee26 	beq	r10,zero,bd74 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bd74>
    bdbc:	00800044 	movi	r2,1
    bdc0:	f800283a 	ret
    bdc4:	0005883a 	mov	r2,zero
    bdc8:	f800283a 	ret

0000bdcc <__gedf2>:
    bdcc:	2804d53a 	srli	r2,r5,20
    bdd0:	3806d53a 	srli	r3,r7,20
    bdd4:	02000434 	movhi	r8,16
    bdd8:	423fffc4 	addi	r8,r8,-1
    bddc:	1081ffcc 	andi	r2,r2,2047
    bde0:	0241ffc4 	movi	r9,2047
    bde4:	2a14703a 	and	r10,r5,r8
    bde8:	18c1ffcc 	andi	r3,r3,2047
    bdec:	3a10703a 	and	r8,r7,r8
    bdf0:	280ad7fa 	srli	r5,r5,31
    bdf4:	380ed7fa 	srli	r7,r7,31
    bdf8:	12401d26 	beq	r2,r9,be70 <__gedf2+0xa4>
    bdfc:	0241ffc4 	movi	r9,2047
    be00:	1a401226 	beq	r3,r9,be4c <__gedf2+0x80>
    be04:	1000081e 	bne	r2,zero,be28 <__gedf2+0x5c>
    be08:	2296b03a 	or	r11,r4,r10
    be0c:	5813003a 	cmpeq	r9,r11,zero
    be10:	1800091e 	bne	r3,zero,be38 <__gedf2+0x6c>
    be14:	3218b03a 	or	r12,r6,r8
    be18:	6000071e 	bne	r12,zero,be38 <__gedf2+0x6c>
    be1c:	0005883a 	mov	r2,zero
    be20:	5800101e 	bne	r11,zero,be64 <__gedf2+0x98>
    be24:	f800283a 	ret
    be28:	18000c1e 	bne	r3,zero,be5c <__gedf2+0x90>
    be2c:	3212b03a 	or	r9,r6,r8
    be30:	48000c26 	beq	r9,zero,be64 <__gedf2+0x98>
    be34:	0013883a 	mov	r9,zero
    be38:	39c03fcc 	andi	r7,r7,255
    be3c:	48000826 	beq	r9,zero,be60 <__gedf2+0x94>
    be40:	38000926 	beq	r7,zero,be68 <__gedf2+0x9c>
    be44:	00800044 	movi	r2,1
    be48:	f800283a 	ret
    be4c:	3212b03a 	or	r9,r6,r8
    be50:	483fec26 	beq	r9,zero,be04 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be04>
    be54:	00bfff84 	movi	r2,-2
    be58:	f800283a 	ret
    be5c:	39c03fcc 	andi	r7,r7,255
    be60:	29c00626 	beq	r5,r7,be7c <__gedf2+0xb0>
    be64:	283ff726 	beq	r5,zero,be44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be44>
    be68:	00bfffc4 	movi	r2,-1
    be6c:	f800283a 	ret
    be70:	2292b03a 	or	r9,r4,r10
    be74:	483fe126 	beq	r9,zero,bdfc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bdfc>
    be78:	003ff606 	br	be54 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be54>
    be7c:	18bff916 	blt	r3,r2,be64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be64>
    be80:	10c00316 	blt	r2,r3,be90 <__gedf2+0xc4>
    be84:	42bff736 	bltu	r8,r10,be64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be64>
    be88:	52000326 	beq	r10,r8,be98 <__gedf2+0xcc>
    be8c:	5200042e 	bgeu	r10,r8,bea0 <__gedf2+0xd4>
    be90:	283fec1e 	bne	r5,zero,be44 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be44>
    be94:	003ff406 	br	be68 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be68>
    be98:	313ff236 	bltu	r6,r4,be64 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be64>
    be9c:	21bffc36 	bltu	r4,r6,be90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000be90>
    bea0:	0005883a 	mov	r2,zero
    bea4:	f800283a 	ret

0000bea8 <__ledf2>:
    bea8:	2804d53a 	srli	r2,r5,20
    beac:	3810d53a 	srli	r8,r7,20
    beb0:	00c00434 	movhi	r3,16
    beb4:	18ffffc4 	addi	r3,r3,-1
    beb8:	1081ffcc 	andi	r2,r2,2047
    bebc:	0241ffc4 	movi	r9,2047
    bec0:	28d4703a 	and	r10,r5,r3
    bec4:	4201ffcc 	andi	r8,r8,2047
    bec8:	38c6703a 	and	r3,r7,r3
    becc:	280ad7fa 	srli	r5,r5,31
    bed0:	380ed7fa 	srli	r7,r7,31
    bed4:	12401f26 	beq	r2,r9,bf54 <__ledf2+0xac>
    bed8:	0241ffc4 	movi	r9,2047
    bedc:	42401426 	beq	r8,r9,bf30 <__ledf2+0x88>
    bee0:	1000091e 	bne	r2,zero,bf08 <__ledf2+0x60>
    bee4:	2296b03a 	or	r11,r4,r10
    bee8:	5813003a 	cmpeq	r9,r11,zero
    beec:	29403fcc 	andi	r5,r5,255
    bef0:	40000a1e 	bne	r8,zero,bf1c <__ledf2+0x74>
    bef4:	30d8b03a 	or	r12,r6,r3
    bef8:	6000081e 	bne	r12,zero,bf1c <__ledf2+0x74>
    befc:	0005883a 	mov	r2,zero
    bf00:	5800111e 	bne	r11,zero,bf48 <__ledf2+0xa0>
    bf04:	f800283a 	ret
    bf08:	29403fcc 	andi	r5,r5,255
    bf0c:	40000c1e 	bne	r8,zero,bf40 <__ledf2+0x98>
    bf10:	30d2b03a 	or	r9,r6,r3
    bf14:	48000c26 	beq	r9,zero,bf48 <__ledf2+0xa0>
    bf18:	0013883a 	mov	r9,zero
    bf1c:	39c03fcc 	andi	r7,r7,255
    bf20:	48000826 	beq	r9,zero,bf44 <__ledf2+0x9c>
    bf24:	38001126 	beq	r7,zero,bf6c <__ledf2+0xc4>
    bf28:	00800044 	movi	r2,1
    bf2c:	f800283a 	ret
    bf30:	30d2b03a 	or	r9,r6,r3
    bf34:	483fea26 	beq	r9,zero,bee0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bee0>
    bf38:	00800084 	movi	r2,2
    bf3c:	f800283a 	ret
    bf40:	39c03fcc 	andi	r7,r7,255
    bf44:	39400726 	beq	r7,r5,bf64 <__ledf2+0xbc>
    bf48:	2800081e 	bne	r5,zero,bf6c <__ledf2+0xc4>
    bf4c:	00800044 	movi	r2,1
    bf50:	f800283a 	ret
    bf54:	2292b03a 	or	r9,r4,r10
    bf58:	483fdf26 	beq	r9,zero,bed8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bed8>
    bf5c:	00800084 	movi	r2,2
    bf60:	f800283a 	ret
    bf64:	4080030e 	bge	r8,r2,bf74 <__ledf2+0xcc>
    bf68:	383fef26 	beq	r7,zero,bf28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf28>
    bf6c:	00bfffc4 	movi	r2,-1
    bf70:	f800283a 	ret
    bf74:	123feb16 	blt	r2,r8,bf24 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf24>
    bf78:	1abff336 	bltu	r3,r10,bf48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf48>
    bf7c:	50c00326 	beq	r10,r3,bf8c <__ledf2+0xe4>
    bf80:	50c0042e 	bgeu	r10,r3,bf94 <__ledf2+0xec>
    bf84:	283fe81e 	bne	r5,zero,bf28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf28>
    bf88:	003ff806 	br	bf6c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf6c>
    bf8c:	313fee36 	bltu	r6,r4,bf48 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf48>
    bf90:	21bffc36 	bltu	r4,r6,bf84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000bf84>
    bf94:	0005883a 	mov	r2,zero
    bf98:	f800283a 	ret

0000bf9c <__muldf3>:
    bf9c:	defff304 	addi	sp,sp,-52
    bfa0:	2804d53a 	srli	r2,r5,20
    bfa4:	dd800915 	stw	r22,36(sp)
    bfa8:	282cd7fa 	srli	r22,r5,31
    bfac:	dc000315 	stw	r16,12(sp)
    bfb0:	04000434 	movhi	r16,16
    bfb4:	dd400815 	stw	r21,32(sp)
    bfb8:	dc800515 	stw	r18,20(sp)
    bfbc:	843fffc4 	addi	r16,r16,-1
    bfc0:	dfc00c15 	stw	ra,48(sp)
    bfc4:	df000b15 	stw	fp,44(sp)
    bfc8:	ddc00a15 	stw	r23,40(sp)
    bfcc:	dd000715 	stw	r20,28(sp)
    bfd0:	dcc00615 	stw	r19,24(sp)
    bfd4:	dc400415 	stw	r17,16(sp)
    bfd8:	1481ffcc 	andi	r18,r2,2047
    bfdc:	2c20703a 	and	r16,r5,r16
    bfe0:	b02b883a 	mov	r21,r22
    bfe4:	b2403fcc 	andi	r9,r22,255
    bfe8:	90006026 	beq	r18,zero,c16c <__muldf3+0x1d0>
    bfec:	0081ffc4 	movi	r2,2047
    bff0:	2029883a 	mov	r20,r4
    bff4:	90803626 	beq	r18,r2,c0d0 <__muldf3+0x134>
    bff8:	80800434 	orhi	r2,r16,16
    bffc:	100490fa 	slli	r2,r2,3
    c000:	2020d77a 	srli	r16,r4,29
    c004:	202890fa 	slli	r20,r4,3
    c008:	94bf0044 	addi	r18,r18,-1023
    c00c:	80a0b03a 	or	r16,r16,r2
    c010:	0027883a 	mov	r19,zero
    c014:	0039883a 	mov	fp,zero
    c018:	3804d53a 	srli	r2,r7,20
    c01c:	382ed7fa 	srli	r23,r7,31
    c020:	04400434 	movhi	r17,16
    c024:	8c7fffc4 	addi	r17,r17,-1
    c028:	1081ffcc 	andi	r2,r2,2047
    c02c:	3011883a 	mov	r8,r6
    c030:	3c62703a 	and	r17,r7,r17
    c034:	ba803fcc 	andi	r10,r23,255
    c038:	10006d26 	beq	r2,zero,c1f0 <__muldf3+0x254>
    c03c:	00c1ffc4 	movi	r3,2047
    c040:	10c06526 	beq	r2,r3,c1d8 <__muldf3+0x23c>
    c044:	88c00434 	orhi	r3,r17,16
    c048:	180690fa 	slli	r3,r3,3
    c04c:	3022d77a 	srli	r17,r6,29
    c050:	301090fa 	slli	r8,r6,3
    c054:	10bf0044 	addi	r2,r2,-1023
    c058:	88e2b03a 	or	r17,r17,r3
    c05c:	000b883a 	mov	r5,zero
    c060:	9085883a 	add	r2,r18,r2
    c064:	2cc8b03a 	or	r4,r5,r19
    c068:	00c003c4 	movi	r3,15
    c06c:	bdacf03a 	xor	r22,r23,r22
    c070:	12c00044 	addi	r11,r2,1
    c074:	19009936 	bltu	r3,r4,c2dc <__muldf3+0x340>
    c078:	200890ba 	slli	r4,r4,2
    c07c:	00c00074 	movhi	r3,1
    c080:	18f02404 	addi	r3,r3,-16240
    c084:	20c9883a 	add	r4,r4,r3
    c088:	20c00017 	ldw	r3,0(r4)
    c08c:	1800683a 	jmp	r3
    c090:	0000c2dc 	xori	zero,zero,779
    c094:	0000c0f0 	cmpltui	zero,zero,771
    c098:	0000c0f0 	cmpltui	zero,zero,771
    c09c:	0000c0ec 	andhi	zero,zero,771
    c0a0:	0000c2b8 	rdprs	zero,zero,778
    c0a4:	0000c2b8 	rdprs	zero,zero,778
    c0a8:	0000c2a0 	cmpeqi	zero,zero,778
    c0ac:	0000c0ec 	andhi	zero,zero,771
    c0b0:	0000c2b8 	rdprs	zero,zero,778
    c0b4:	0000c2a0 	cmpeqi	zero,zero,778
    c0b8:	0000c2b8 	rdprs	zero,zero,778
    c0bc:	0000c0ec 	andhi	zero,zero,771
    c0c0:	0000c2c8 	cmpgei	zero,zero,779
    c0c4:	0000c2c8 	cmpgei	zero,zero,779
    c0c8:	0000c2c8 	cmpgei	zero,zero,779
    c0cc:	0000c4e4 	muli	zero,zero,787
    c0d0:	2404b03a 	or	r2,r4,r16
    c0d4:	10006f1e 	bne	r2,zero,c294 <__muldf3+0x2f8>
    c0d8:	04c00204 	movi	r19,8
    c0dc:	0021883a 	mov	r16,zero
    c0e0:	0029883a 	mov	r20,zero
    c0e4:	07000084 	movi	fp,2
    c0e8:	003fcb06 	br	c018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c018>
    c0ec:	502d883a 	mov	r22,r10
    c0f0:	00800084 	movi	r2,2
    c0f4:	28805726 	beq	r5,r2,c254 <__muldf3+0x2b8>
    c0f8:	008000c4 	movi	r2,3
    c0fc:	28816626 	beq	r5,r2,c698 <__muldf3+0x6fc>
    c100:	00800044 	movi	r2,1
    c104:	2881411e 	bne	r5,r2,c60c <__muldf3+0x670>
    c108:	b02b883a 	mov	r21,r22
    c10c:	0005883a 	mov	r2,zero
    c110:	000b883a 	mov	r5,zero
    c114:	0029883a 	mov	r20,zero
    c118:	1004953a 	slli	r2,r2,20
    c11c:	a8c03fcc 	andi	r3,r21,255
    c120:	04400434 	movhi	r17,16
    c124:	8c7fffc4 	addi	r17,r17,-1
    c128:	180697fa 	slli	r3,r3,31
    c12c:	2c4a703a 	and	r5,r5,r17
    c130:	288ab03a 	or	r5,r5,r2
    c134:	28c6b03a 	or	r3,r5,r3
    c138:	a005883a 	mov	r2,r20
    c13c:	dfc00c17 	ldw	ra,48(sp)
    c140:	df000b17 	ldw	fp,44(sp)
    c144:	ddc00a17 	ldw	r23,40(sp)
    c148:	dd800917 	ldw	r22,36(sp)
    c14c:	dd400817 	ldw	r21,32(sp)
    c150:	dd000717 	ldw	r20,28(sp)
    c154:	dcc00617 	ldw	r19,24(sp)
    c158:	dc800517 	ldw	r18,20(sp)
    c15c:	dc400417 	ldw	r17,16(sp)
    c160:	dc000317 	ldw	r16,12(sp)
    c164:	dec00d04 	addi	sp,sp,52
    c168:	f800283a 	ret
    c16c:	2404b03a 	or	r2,r4,r16
    c170:	2027883a 	mov	r19,r4
    c174:	10004226 	beq	r2,zero,c280 <__muldf3+0x2e4>
    c178:	8000fc26 	beq	r16,zero,c56c <__muldf3+0x5d0>
    c17c:	8009883a 	mov	r4,r16
    c180:	d9800215 	stw	r6,8(sp)
    c184:	d9c00015 	stw	r7,0(sp)
    c188:	da400115 	stw	r9,4(sp)
    c18c:	000d1b40 	call	d1b4 <__clzsi2>
    c190:	d9800217 	ldw	r6,8(sp)
    c194:	d9c00017 	ldw	r7,0(sp)
    c198:	da400117 	ldw	r9,4(sp)
    c19c:	113ffd44 	addi	r4,r2,-11
    c1a0:	00c00704 	movi	r3,28
    c1a4:	1900ed16 	blt	r3,r4,c55c <__muldf3+0x5c0>
    c1a8:	00c00744 	movi	r3,29
    c1ac:	147ffe04 	addi	r17,r2,-8
    c1b0:	1907c83a 	sub	r3,r3,r4
    c1b4:	8460983a 	sll	r16,r16,r17
    c1b8:	98c6d83a 	srl	r3,r19,r3
    c1bc:	9c68983a 	sll	r20,r19,r17
    c1c0:	1c20b03a 	or	r16,r3,r16
    c1c4:	1080fcc4 	addi	r2,r2,1011
    c1c8:	00a5c83a 	sub	r18,zero,r2
    c1cc:	0027883a 	mov	r19,zero
    c1d0:	0039883a 	mov	fp,zero
    c1d4:	003f9006 	br	c018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c018>
    c1d8:	3446b03a 	or	r3,r6,r17
    c1dc:	1800261e 	bne	r3,zero,c278 <__muldf3+0x2dc>
    c1e0:	0023883a 	mov	r17,zero
    c1e4:	0011883a 	mov	r8,zero
    c1e8:	01400084 	movi	r5,2
    c1ec:	003f9c06 	br	c060 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c060>
    c1f0:	3446b03a 	or	r3,r6,r17
    c1f4:	18001c26 	beq	r3,zero,c268 <__muldf3+0x2cc>
    c1f8:	8800ce26 	beq	r17,zero,c534 <__muldf3+0x598>
    c1fc:	8809883a 	mov	r4,r17
    c200:	d9800215 	stw	r6,8(sp)
    c204:	da400115 	stw	r9,4(sp)
    c208:	da800015 	stw	r10,0(sp)
    c20c:	000d1b40 	call	d1b4 <__clzsi2>
    c210:	d9800217 	ldw	r6,8(sp)
    c214:	da400117 	ldw	r9,4(sp)
    c218:	da800017 	ldw	r10,0(sp)
    c21c:	113ffd44 	addi	r4,r2,-11
    c220:	00c00704 	movi	r3,28
    c224:	1900bf16 	blt	r3,r4,c524 <__muldf3+0x588>
    c228:	00c00744 	movi	r3,29
    c22c:	123ffe04 	addi	r8,r2,-8
    c230:	1907c83a 	sub	r3,r3,r4
    c234:	8a22983a 	sll	r17,r17,r8
    c238:	30c6d83a 	srl	r3,r6,r3
    c23c:	3210983a 	sll	r8,r6,r8
    c240:	1c62b03a 	or	r17,r3,r17
    c244:	1080fcc4 	addi	r2,r2,1011
    c248:	0085c83a 	sub	r2,zero,r2
    c24c:	000b883a 	mov	r5,zero
    c250:	003f8306 	br	c060 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c060>
    c254:	b02b883a 	mov	r21,r22
    c258:	0081ffc4 	movi	r2,2047
    c25c:	000b883a 	mov	r5,zero
    c260:	0029883a 	mov	r20,zero
    c264:	003fac06 	br	c118 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c118>
    c268:	0023883a 	mov	r17,zero
    c26c:	0011883a 	mov	r8,zero
    c270:	01400044 	movi	r5,1
    c274:	003f7a06 	br	c060 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c060>
    c278:	014000c4 	movi	r5,3
    c27c:	003f7806 	br	c060 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c060>
    c280:	04c00104 	movi	r19,4
    c284:	0021883a 	mov	r16,zero
    c288:	0029883a 	mov	r20,zero
    c28c:	07000044 	movi	fp,1
    c290:	003f6106 	br	c018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c018>
    c294:	04c00304 	movi	r19,12
    c298:	070000c4 	movi	fp,3
    c29c:	003f5e06 	br	c018 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c018>
    c2a0:	01400434 	movhi	r5,16
    c2a4:	002b883a 	mov	r21,zero
    c2a8:	297fffc4 	addi	r5,r5,-1
    c2ac:	053fffc4 	movi	r20,-1
    c2b0:	0081ffc4 	movi	r2,2047
    c2b4:	003f9806 	br	c118 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c118>
    c2b8:	8023883a 	mov	r17,r16
    c2bc:	a011883a 	mov	r8,r20
    c2c0:	e00b883a 	mov	r5,fp
    c2c4:	003f8a06 	br	c0f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c0f0>
    c2c8:	8023883a 	mov	r17,r16
    c2cc:	a011883a 	mov	r8,r20
    c2d0:	482d883a 	mov	r22,r9
    c2d4:	e00b883a 	mov	r5,fp
    c2d8:	003f8506 	br	c0f0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c0f0>
    c2dc:	a00ad43a 	srli	r5,r20,16
    c2e0:	401ad43a 	srli	r13,r8,16
    c2e4:	a53fffcc 	andi	r20,r20,65535
    c2e8:	423fffcc 	andi	r8,r8,65535
    c2ec:	4519383a 	mul	r12,r8,r20
    c2f0:	4147383a 	mul	r3,r8,r5
    c2f4:	6d09383a 	mul	r4,r13,r20
    c2f8:	600cd43a 	srli	r6,r12,16
    c2fc:	2b5d383a 	mul	r14,r5,r13
    c300:	20c9883a 	add	r4,r4,r3
    c304:	310d883a 	add	r6,r6,r4
    c308:	30c0022e 	bgeu	r6,r3,c314 <__muldf3+0x378>
    c30c:	00c00074 	movhi	r3,1
    c310:	70dd883a 	add	r14,r14,r3
    c314:	8826d43a 	srli	r19,r17,16
    c318:	8bffffcc 	andi	r15,r17,65535
    c31c:	7d23383a 	mul	r17,r15,r20
    c320:	7949383a 	mul	r4,r15,r5
    c324:	9d29383a 	mul	r20,r19,r20
    c328:	8814d43a 	srli	r10,r17,16
    c32c:	3012943a 	slli	r9,r6,16
    c330:	a129883a 	add	r20,r20,r4
    c334:	633fffcc 	andi	r12,r12,65535
    c338:	5515883a 	add	r10,r10,r20
    c33c:	3006d43a 	srli	r3,r6,16
    c340:	4b13883a 	add	r9,r9,r12
    c344:	2ccb383a 	mul	r5,r5,r19
    c348:	5100022e 	bgeu	r10,r4,c354 <__muldf3+0x3b8>
    c34c:	01000074 	movhi	r4,1
    c350:	290b883a 	add	r5,r5,r4
    c354:	802ad43a 	srli	r21,r16,16
    c358:	843fffcc 	andi	r16,r16,65535
    c35c:	440d383a 	mul	r6,r8,r16
    c360:	4565383a 	mul	r18,r8,r21
    c364:	8349383a 	mul	r4,r16,r13
    c368:	500e943a 	slli	r7,r10,16
    c36c:	3010d43a 	srli	r8,r6,16
    c370:	5028d43a 	srli	r20,r10,16
    c374:	2489883a 	add	r4,r4,r18
    c378:	8abfffcc 	andi	r10,r17,65535
    c37c:	3a95883a 	add	r10,r7,r10
    c380:	4119883a 	add	r12,r8,r4
    c384:	a169883a 	add	r20,r20,r5
    c388:	1a87883a 	add	r3,r3,r10
    c38c:	6d5b383a 	mul	r13,r13,r21
    c390:	6480022e 	bgeu	r12,r18,c39c <__muldf3+0x400>
    c394:	01000074 	movhi	r4,1
    c398:	691b883a 	add	r13,r13,r4
    c39c:	7c25383a 	mul	r18,r15,r16
    c3a0:	7d4b383a 	mul	r5,r15,r21
    c3a4:	84cf383a 	mul	r7,r16,r19
    c3a8:	901ed43a 	srli	r15,r18,16
    c3ac:	6008d43a 	srli	r4,r12,16
    c3b0:	6010943a 	slli	r8,r12,16
    c3b4:	394f883a 	add	r7,r7,r5
    c3b8:	333fffcc 	andi	r12,r6,65535
    c3bc:	79df883a 	add	r15,r15,r7
    c3c0:	235b883a 	add	r13,r4,r13
    c3c4:	9d63383a 	mul	r17,r19,r21
    c3c8:	4309883a 	add	r4,r8,r12
    c3cc:	7940022e 	bgeu	r15,r5,c3d8 <__muldf3+0x43c>
    c3d0:	01400074 	movhi	r5,1
    c3d4:	8963883a 	add	r17,r17,r5
    c3d8:	780a943a 	slli	r5,r15,16
    c3dc:	91bfffcc 	andi	r6,r18,65535
    c3e0:	70c7883a 	add	r3,r14,r3
    c3e4:	298d883a 	add	r6,r5,r6
    c3e8:	1a8f803a 	cmpltu	r7,r3,r10
    c3ec:	350b883a 	add	r5,r6,r20
    c3f0:	20c7883a 	add	r3,r4,r3
    c3f4:	3955883a 	add	r10,r7,r5
    c3f8:	1909803a 	cmpltu	r4,r3,r4
    c3fc:	6a91883a 	add	r8,r13,r10
    c400:	780cd43a 	srli	r6,r15,16
    c404:	2219883a 	add	r12,r4,r8
    c408:	2d0b803a 	cmpltu	r5,r5,r20
    c40c:	51cf803a 	cmpltu	r7,r10,r7
    c410:	29ceb03a 	or	r7,r5,r7
    c414:	4351803a 	cmpltu	r8,r8,r13
    c418:	610b803a 	cmpltu	r5,r12,r4
    c41c:	4148b03a 	or	r4,r8,r5
    c420:	398f883a 	add	r7,r7,r6
    c424:	3909883a 	add	r4,r7,r4
    c428:	1810927a 	slli	r8,r3,9
    c42c:	2449883a 	add	r4,r4,r17
    c430:	2008927a 	slli	r4,r4,9
    c434:	6022d5fa 	srli	r17,r12,23
    c438:	1806d5fa 	srli	r3,r3,23
    c43c:	4252b03a 	or	r9,r8,r9
    c440:	600a927a 	slli	r5,r12,9
    c444:	4810c03a 	cmpne	r8,r9,zero
    c448:	2462b03a 	or	r17,r4,r17
    c44c:	40c6b03a 	or	r3,r8,r3
    c450:	8900402c 	andhi	r4,r17,256
    c454:	1950b03a 	or	r8,r3,r5
    c458:	20000726 	beq	r4,zero,c478 <__muldf3+0x4dc>
    c45c:	4006d07a 	srli	r3,r8,1
    c460:	880497fa 	slli	r2,r17,31
    c464:	4200004c 	andi	r8,r8,1
    c468:	8822d07a 	srli	r17,r17,1
    c46c:	1a10b03a 	or	r8,r3,r8
    c470:	1210b03a 	or	r8,r2,r8
    c474:	5805883a 	mov	r2,r11
    c478:	1140ffc4 	addi	r5,r2,1023
    c47c:	0140440e 	bge	zero,r5,c590 <__muldf3+0x5f4>
    c480:	40c001cc 	andi	r3,r8,7
    c484:	18000726 	beq	r3,zero,c4a4 <__muldf3+0x508>
    c488:	40c003cc 	andi	r3,r8,15
    c48c:	01000104 	movi	r4,4
    c490:	19000426 	beq	r3,r4,c4a4 <__muldf3+0x508>
    c494:	4107883a 	add	r3,r8,r4
    c498:	1a11803a 	cmpltu	r8,r3,r8
    c49c:	8a23883a 	add	r17,r17,r8
    c4a0:	1811883a 	mov	r8,r3
    c4a4:	88c0402c 	andhi	r3,r17,256
    c4a8:	18000426 	beq	r3,zero,c4bc <__muldf3+0x520>
    c4ac:	11410004 	addi	r5,r2,1024
    c4b0:	00bfc034 	movhi	r2,65280
    c4b4:	10bfffc4 	addi	r2,r2,-1
    c4b8:	88a2703a 	and	r17,r17,r2
    c4bc:	0081ff84 	movi	r2,2046
    c4c0:	117f6416 	blt	r2,r5,c254 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c254>
    c4c4:	8828977a 	slli	r20,r17,29
    c4c8:	4010d0fa 	srli	r8,r8,3
    c4cc:	8822927a 	slli	r17,r17,9
    c4d0:	2881ffcc 	andi	r2,r5,2047
    c4d4:	a228b03a 	or	r20,r20,r8
    c4d8:	880ad33a 	srli	r5,r17,12
    c4dc:	b02b883a 	mov	r21,r22
    c4e0:	003f0d06 	br	c118 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c118>
    c4e4:	8080022c 	andhi	r2,r16,8
    c4e8:	10000926 	beq	r2,zero,c510 <__muldf3+0x574>
    c4ec:	8880022c 	andhi	r2,r17,8
    c4f0:	1000071e 	bne	r2,zero,c510 <__muldf3+0x574>
    c4f4:	00800434 	movhi	r2,16
    c4f8:	89400234 	orhi	r5,r17,8
    c4fc:	10bfffc4 	addi	r2,r2,-1
    c500:	b82b883a 	mov	r21,r23
    c504:	288a703a 	and	r5,r5,r2
    c508:	4029883a 	mov	r20,r8
    c50c:	003f6806 	br	c2b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2b0>
    c510:	00800434 	movhi	r2,16
    c514:	81400234 	orhi	r5,r16,8
    c518:	10bfffc4 	addi	r2,r2,-1
    c51c:	288a703a 	and	r5,r5,r2
    c520:	003f6306 	br	c2b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2b0>
    c524:	147ff604 	addi	r17,r2,-40
    c528:	3462983a 	sll	r17,r6,r17
    c52c:	0011883a 	mov	r8,zero
    c530:	003f4406 	br	c244 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c244>
    c534:	3009883a 	mov	r4,r6
    c538:	d9800215 	stw	r6,8(sp)
    c53c:	da400115 	stw	r9,4(sp)
    c540:	da800015 	stw	r10,0(sp)
    c544:	000d1b40 	call	d1b4 <__clzsi2>
    c548:	10800804 	addi	r2,r2,32
    c54c:	da800017 	ldw	r10,0(sp)
    c550:	da400117 	ldw	r9,4(sp)
    c554:	d9800217 	ldw	r6,8(sp)
    c558:	003f3006 	br	c21c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c21c>
    c55c:	143ff604 	addi	r16,r2,-40
    c560:	9c20983a 	sll	r16,r19,r16
    c564:	0029883a 	mov	r20,zero
    c568:	003f1606 	br	c1c4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c1c4>
    c56c:	d9800215 	stw	r6,8(sp)
    c570:	d9c00015 	stw	r7,0(sp)
    c574:	da400115 	stw	r9,4(sp)
    c578:	000d1b40 	call	d1b4 <__clzsi2>
    c57c:	10800804 	addi	r2,r2,32
    c580:	da400117 	ldw	r9,4(sp)
    c584:	d9c00017 	ldw	r7,0(sp)
    c588:	d9800217 	ldw	r6,8(sp)
    c58c:	003f0306 	br	c19c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c19c>
    c590:	00c00044 	movi	r3,1
    c594:	1947c83a 	sub	r3,r3,r5
    c598:	00800e04 	movi	r2,56
    c59c:	10feda16 	blt	r2,r3,c108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c108>
    c5a0:	008007c4 	movi	r2,31
    c5a4:	10c01b16 	blt	r2,r3,c614 <__muldf3+0x678>
    c5a8:	00800804 	movi	r2,32
    c5ac:	10c5c83a 	sub	r2,r2,r3
    c5b0:	888a983a 	sll	r5,r17,r2
    c5b4:	40c8d83a 	srl	r4,r8,r3
    c5b8:	4084983a 	sll	r2,r8,r2
    c5bc:	88e2d83a 	srl	r17,r17,r3
    c5c0:	2906b03a 	or	r3,r5,r4
    c5c4:	1004c03a 	cmpne	r2,r2,zero
    c5c8:	1886b03a 	or	r3,r3,r2
    c5cc:	188001cc 	andi	r2,r3,7
    c5d0:	10000726 	beq	r2,zero,c5f0 <__muldf3+0x654>
    c5d4:	188003cc 	andi	r2,r3,15
    c5d8:	01000104 	movi	r4,4
    c5dc:	11000426 	beq	r2,r4,c5f0 <__muldf3+0x654>
    c5e0:	1805883a 	mov	r2,r3
    c5e4:	10c00104 	addi	r3,r2,4
    c5e8:	1885803a 	cmpltu	r2,r3,r2
    c5ec:	88a3883a 	add	r17,r17,r2
    c5f0:	8880202c 	andhi	r2,r17,128
    c5f4:	10001c26 	beq	r2,zero,c668 <__muldf3+0x6cc>
    c5f8:	b02b883a 	mov	r21,r22
    c5fc:	00800044 	movi	r2,1
    c600:	000b883a 	mov	r5,zero
    c604:	0029883a 	mov	r20,zero
    c608:	003ec306 	br	c118 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c118>
    c60c:	5805883a 	mov	r2,r11
    c610:	003f9906 	br	c478 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c478>
    c614:	00bff844 	movi	r2,-31
    c618:	1145c83a 	sub	r2,r2,r5
    c61c:	8888d83a 	srl	r4,r17,r2
    c620:	00800804 	movi	r2,32
    c624:	18801a26 	beq	r3,r2,c690 <__muldf3+0x6f4>
    c628:	00801004 	movi	r2,64
    c62c:	10c5c83a 	sub	r2,r2,r3
    c630:	8884983a 	sll	r2,r17,r2
    c634:	1204b03a 	or	r2,r2,r8
    c638:	1004c03a 	cmpne	r2,r2,zero
    c63c:	2084b03a 	or	r2,r4,r2
    c640:	144001cc 	andi	r17,r2,7
    c644:	88000d1e 	bne	r17,zero,c67c <__muldf3+0x6e0>
    c648:	000b883a 	mov	r5,zero
    c64c:	1028d0fa 	srli	r20,r2,3
    c650:	b02b883a 	mov	r21,r22
    c654:	0005883a 	mov	r2,zero
    c658:	a468b03a 	or	r20,r20,r17
    c65c:	003eae06 	br	c118 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c118>
    c660:	1007883a 	mov	r3,r2
    c664:	0023883a 	mov	r17,zero
    c668:	880a927a 	slli	r5,r17,9
    c66c:	1805883a 	mov	r2,r3
    c670:	8822977a 	slli	r17,r17,29
    c674:	280ad33a 	srli	r5,r5,12
    c678:	003ff406 	br	c64c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c64c>
    c67c:	10c003cc 	andi	r3,r2,15
    c680:	01000104 	movi	r4,4
    c684:	193ff626 	beq	r3,r4,c660 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c660>
    c688:	0023883a 	mov	r17,zero
    c68c:	003fd506 	br	c5e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c5e4>
    c690:	0005883a 	mov	r2,zero
    c694:	003fe706 	br	c634 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c634>
    c698:	00800434 	movhi	r2,16
    c69c:	89400234 	orhi	r5,r17,8
    c6a0:	10bfffc4 	addi	r2,r2,-1
    c6a4:	b02b883a 	mov	r21,r22
    c6a8:	288a703a 	and	r5,r5,r2
    c6ac:	4029883a 	mov	r20,r8
    c6b0:	003eff06 	br	c2b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c2b0>

0000c6b4 <__subdf3>:
    c6b4:	02000434 	movhi	r8,16
    c6b8:	423fffc4 	addi	r8,r8,-1
    c6bc:	defffb04 	addi	sp,sp,-20
    c6c0:	2a14703a 	and	r10,r5,r8
    c6c4:	3812d53a 	srli	r9,r7,20
    c6c8:	3a10703a 	and	r8,r7,r8
    c6cc:	2006d77a 	srli	r3,r4,29
    c6d0:	3004d77a 	srli	r2,r6,29
    c6d4:	dc000015 	stw	r16,0(sp)
    c6d8:	501490fa 	slli	r10,r10,3
    c6dc:	2820d53a 	srli	r16,r5,20
    c6e0:	401090fa 	slli	r8,r8,3
    c6e4:	dc800215 	stw	r18,8(sp)
    c6e8:	dc400115 	stw	r17,4(sp)
    c6ec:	dfc00415 	stw	ra,16(sp)
    c6f0:	202290fa 	slli	r17,r4,3
    c6f4:	dcc00315 	stw	r19,12(sp)
    c6f8:	4a41ffcc 	andi	r9,r9,2047
    c6fc:	0101ffc4 	movi	r4,2047
    c700:	2824d7fa 	srli	r18,r5,31
    c704:	8401ffcc 	andi	r16,r16,2047
    c708:	50c6b03a 	or	r3,r10,r3
    c70c:	380ed7fa 	srli	r7,r7,31
    c710:	408ab03a 	or	r5,r8,r2
    c714:	300c90fa 	slli	r6,r6,3
    c718:	49009626 	beq	r9,r4,c974 <__subdf3+0x2c0>
    c71c:	39c0005c 	xori	r7,r7,1
    c720:	8245c83a 	sub	r2,r16,r9
    c724:	3c807426 	beq	r7,r18,c8f8 <__subdf3+0x244>
    c728:	0080af0e 	bge	zero,r2,c9e8 <__subdf3+0x334>
    c72c:	48002a1e 	bne	r9,zero,c7d8 <__subdf3+0x124>
    c730:	2988b03a 	or	r4,r5,r6
    c734:	20009a1e 	bne	r4,zero,c9a0 <__subdf3+0x2ec>
    c738:	888001cc 	andi	r2,r17,7
    c73c:	10000726 	beq	r2,zero,c75c <__subdf3+0xa8>
    c740:	888003cc 	andi	r2,r17,15
    c744:	01000104 	movi	r4,4
    c748:	11000426 	beq	r2,r4,c75c <__subdf3+0xa8>
    c74c:	890b883a 	add	r5,r17,r4
    c750:	2c63803a 	cmpltu	r17,r5,r17
    c754:	1c47883a 	add	r3,r3,r17
    c758:	2823883a 	mov	r17,r5
    c75c:	1880202c 	andhi	r2,r3,128
    c760:	10005926 	beq	r2,zero,c8c8 <__subdf3+0x214>
    c764:	84000044 	addi	r16,r16,1
    c768:	0081ffc4 	movi	r2,2047
    c76c:	8080be26 	beq	r16,r2,ca68 <__subdf3+0x3b4>
    c770:	017fe034 	movhi	r5,65408
    c774:	297fffc4 	addi	r5,r5,-1
    c778:	1946703a 	and	r3,r3,r5
    c77c:	1804977a 	slli	r2,r3,29
    c780:	1806927a 	slli	r3,r3,9
    c784:	8822d0fa 	srli	r17,r17,3
    c788:	8401ffcc 	andi	r16,r16,2047
    c78c:	180ad33a 	srli	r5,r3,12
    c790:	9100004c 	andi	r4,r18,1
    c794:	1444b03a 	or	r2,r2,r17
    c798:	80c1ffcc 	andi	r3,r16,2047
    c79c:	1820953a 	slli	r16,r3,20
    c7a0:	20c03fcc 	andi	r3,r4,255
    c7a4:	180897fa 	slli	r4,r3,31
    c7a8:	00c00434 	movhi	r3,16
    c7ac:	18ffffc4 	addi	r3,r3,-1
    c7b0:	28c6703a 	and	r3,r5,r3
    c7b4:	1c06b03a 	or	r3,r3,r16
    c7b8:	1906b03a 	or	r3,r3,r4
    c7bc:	dfc00417 	ldw	ra,16(sp)
    c7c0:	dcc00317 	ldw	r19,12(sp)
    c7c4:	dc800217 	ldw	r18,8(sp)
    c7c8:	dc400117 	ldw	r17,4(sp)
    c7cc:	dc000017 	ldw	r16,0(sp)
    c7d0:	dec00504 	addi	sp,sp,20
    c7d4:	f800283a 	ret
    c7d8:	0101ffc4 	movi	r4,2047
    c7dc:	813fd626 	beq	r16,r4,c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    c7e0:	29402034 	orhi	r5,r5,128
    c7e4:	01000e04 	movi	r4,56
    c7e8:	2080a316 	blt	r4,r2,ca78 <__subdf3+0x3c4>
    c7ec:	010007c4 	movi	r4,31
    c7f0:	2080c616 	blt	r4,r2,cb0c <__subdf3+0x458>
    c7f4:	01000804 	movi	r4,32
    c7f8:	2089c83a 	sub	r4,r4,r2
    c7fc:	2910983a 	sll	r8,r5,r4
    c800:	308ed83a 	srl	r7,r6,r2
    c804:	3108983a 	sll	r4,r6,r4
    c808:	2884d83a 	srl	r2,r5,r2
    c80c:	41ccb03a 	or	r6,r8,r7
    c810:	2008c03a 	cmpne	r4,r4,zero
    c814:	310cb03a 	or	r6,r6,r4
    c818:	898dc83a 	sub	r6,r17,r6
    c81c:	89a3803a 	cmpltu	r17,r17,r6
    c820:	1887c83a 	sub	r3,r3,r2
    c824:	1c47c83a 	sub	r3,r3,r17
    c828:	3023883a 	mov	r17,r6
    c82c:	1880202c 	andhi	r2,r3,128
    c830:	10002326 	beq	r2,zero,c8c0 <__subdf3+0x20c>
    c834:	04c02034 	movhi	r19,128
    c838:	9cffffc4 	addi	r19,r19,-1
    c83c:	1ce6703a 	and	r19,r3,r19
    c840:	98007a26 	beq	r19,zero,ca2c <__subdf3+0x378>
    c844:	9809883a 	mov	r4,r19
    c848:	000d1b40 	call	d1b4 <__clzsi2>
    c84c:	113ffe04 	addi	r4,r2,-8
    c850:	00c007c4 	movi	r3,31
    c854:	19007b16 	blt	r3,r4,ca44 <__subdf3+0x390>
    c858:	00800804 	movi	r2,32
    c85c:	1105c83a 	sub	r2,r2,r4
    c860:	8884d83a 	srl	r2,r17,r2
    c864:	9906983a 	sll	r3,r19,r4
    c868:	8922983a 	sll	r17,r17,r4
    c86c:	10c4b03a 	or	r2,r2,r3
    c870:	24007816 	blt	r4,r16,ca54 <__subdf3+0x3a0>
    c874:	2421c83a 	sub	r16,r4,r16
    c878:	80c00044 	addi	r3,r16,1
    c87c:	010007c4 	movi	r4,31
    c880:	20c09516 	blt	r4,r3,cad8 <__subdf3+0x424>
    c884:	01400804 	movi	r5,32
    c888:	28cbc83a 	sub	r5,r5,r3
    c88c:	88c8d83a 	srl	r4,r17,r3
    c890:	8962983a 	sll	r17,r17,r5
    c894:	114a983a 	sll	r5,r2,r5
    c898:	10c6d83a 	srl	r3,r2,r3
    c89c:	8804c03a 	cmpne	r2,r17,zero
    c8a0:	290ab03a 	or	r5,r5,r4
    c8a4:	28a2b03a 	or	r17,r5,r2
    c8a8:	0021883a 	mov	r16,zero
    c8ac:	003fa206 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    c8b0:	2090b03a 	or	r8,r4,r2
    c8b4:	40018e26 	beq	r8,zero,cef0 <__subdf3+0x83c>
    c8b8:	1007883a 	mov	r3,r2
    c8bc:	2023883a 	mov	r17,r4
    c8c0:	888001cc 	andi	r2,r17,7
    c8c4:	103f9e1e 	bne	r2,zero,c740 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c740>
    c8c8:	1804977a 	slli	r2,r3,29
    c8cc:	8822d0fa 	srli	r17,r17,3
    c8d0:	1810d0fa 	srli	r8,r3,3
    c8d4:	9100004c 	andi	r4,r18,1
    c8d8:	1444b03a 	or	r2,r2,r17
    c8dc:	00c1ffc4 	movi	r3,2047
    c8e0:	80c02826 	beq	r16,r3,c984 <__subdf3+0x2d0>
    c8e4:	01400434 	movhi	r5,16
    c8e8:	297fffc4 	addi	r5,r5,-1
    c8ec:	80e0703a 	and	r16,r16,r3
    c8f0:	414a703a 	and	r5,r8,r5
    c8f4:	003fa806 	br	c798 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c798>
    c8f8:	0080630e 	bge	zero,r2,ca88 <__subdf3+0x3d4>
    c8fc:	48003026 	beq	r9,zero,c9c0 <__subdf3+0x30c>
    c900:	0101ffc4 	movi	r4,2047
    c904:	813f8c26 	beq	r16,r4,c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    c908:	29402034 	orhi	r5,r5,128
    c90c:	01000e04 	movi	r4,56
    c910:	2080a90e 	bge	r4,r2,cbb8 <__subdf3+0x504>
    c914:	298cb03a 	or	r6,r5,r6
    c918:	3012c03a 	cmpne	r9,r6,zero
    c91c:	0005883a 	mov	r2,zero
    c920:	4c53883a 	add	r9,r9,r17
    c924:	4c63803a 	cmpltu	r17,r9,r17
    c928:	10c7883a 	add	r3,r2,r3
    c92c:	88c7883a 	add	r3,r17,r3
    c930:	4823883a 	mov	r17,r9
    c934:	1880202c 	andhi	r2,r3,128
    c938:	1000d026 	beq	r2,zero,cc7c <__subdf3+0x5c8>
    c93c:	84000044 	addi	r16,r16,1
    c940:	0081ffc4 	movi	r2,2047
    c944:	8080fe26 	beq	r16,r2,cd40 <__subdf3+0x68c>
    c948:	00bfe034 	movhi	r2,65408
    c94c:	10bfffc4 	addi	r2,r2,-1
    c950:	1886703a 	and	r3,r3,r2
    c954:	880ad07a 	srli	r5,r17,1
    c958:	180497fa 	slli	r2,r3,31
    c95c:	8900004c 	andi	r4,r17,1
    c960:	2922b03a 	or	r17,r5,r4
    c964:	1806d07a 	srli	r3,r3,1
    c968:	1462b03a 	or	r17,r2,r17
    c96c:	3825883a 	mov	r18,r7
    c970:	003f7106 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    c974:	2984b03a 	or	r2,r5,r6
    c978:	103f6826 	beq	r2,zero,c71c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c71c>
    c97c:	39c03fcc 	andi	r7,r7,255
    c980:	003f6706 	br	c720 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c720>
    c984:	4086b03a 	or	r3,r8,r2
    c988:	18015226 	beq	r3,zero,ced4 <__subdf3+0x820>
    c98c:	00c00434 	movhi	r3,16
    c990:	41400234 	orhi	r5,r8,8
    c994:	18ffffc4 	addi	r3,r3,-1
    c998:	28ca703a 	and	r5,r5,r3
    c99c:	003f7e06 	br	c798 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c798>
    c9a0:	10bfffc4 	addi	r2,r2,-1
    c9a4:	1000491e 	bne	r2,zero,cacc <__subdf3+0x418>
    c9a8:	898fc83a 	sub	r7,r17,r6
    c9ac:	89e3803a 	cmpltu	r17,r17,r7
    c9b0:	1947c83a 	sub	r3,r3,r5
    c9b4:	1c47c83a 	sub	r3,r3,r17
    c9b8:	3823883a 	mov	r17,r7
    c9bc:	003f9b06 	br	c82c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c82c>
    c9c0:	2988b03a 	or	r4,r5,r6
    c9c4:	203f5c26 	beq	r4,zero,c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    c9c8:	10bfffc4 	addi	r2,r2,-1
    c9cc:	1000931e 	bne	r2,zero,cc1c <__subdf3+0x568>
    c9d0:	898d883a 	add	r6,r17,r6
    c9d4:	3463803a 	cmpltu	r17,r6,r17
    c9d8:	1947883a 	add	r3,r3,r5
    c9dc:	88c7883a 	add	r3,r17,r3
    c9e0:	3023883a 	mov	r17,r6
    c9e4:	003fd306 	br	c934 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c934>
    c9e8:	1000541e 	bne	r2,zero,cb3c <__subdf3+0x488>
    c9ec:	80800044 	addi	r2,r16,1
    c9f0:	1081ffcc 	andi	r2,r2,2047
    c9f4:	01000044 	movi	r4,1
    c9f8:	2080a20e 	bge	r4,r2,cc84 <__subdf3+0x5d0>
    c9fc:	8989c83a 	sub	r4,r17,r6
    ca00:	8905803a 	cmpltu	r2,r17,r4
    ca04:	1967c83a 	sub	r19,r3,r5
    ca08:	98a7c83a 	sub	r19,r19,r2
    ca0c:	9880202c 	andhi	r2,r19,128
    ca10:	10006326 	beq	r2,zero,cba0 <__subdf3+0x4ec>
    ca14:	3463c83a 	sub	r17,r6,r17
    ca18:	28c7c83a 	sub	r3,r5,r3
    ca1c:	344d803a 	cmpltu	r6,r6,r17
    ca20:	19a7c83a 	sub	r19,r3,r6
    ca24:	3825883a 	mov	r18,r7
    ca28:	983f861e 	bne	r19,zero,c844 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c844>
    ca2c:	8809883a 	mov	r4,r17
    ca30:	000d1b40 	call	d1b4 <__clzsi2>
    ca34:	10800804 	addi	r2,r2,32
    ca38:	113ffe04 	addi	r4,r2,-8
    ca3c:	00c007c4 	movi	r3,31
    ca40:	193f850e 	bge	r3,r4,c858 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c858>
    ca44:	10bff604 	addi	r2,r2,-40
    ca48:	8884983a 	sll	r2,r17,r2
    ca4c:	0023883a 	mov	r17,zero
    ca50:	243f880e 	bge	r4,r16,c874 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c874>
    ca54:	00ffe034 	movhi	r3,65408
    ca58:	18ffffc4 	addi	r3,r3,-1
    ca5c:	8121c83a 	sub	r16,r16,r4
    ca60:	10c6703a 	and	r3,r2,r3
    ca64:	003f3406 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ca68:	9100004c 	andi	r4,r18,1
    ca6c:	000b883a 	mov	r5,zero
    ca70:	0005883a 	mov	r2,zero
    ca74:	003f4806 	br	c798 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c798>
    ca78:	298cb03a 	or	r6,r5,r6
    ca7c:	300cc03a 	cmpne	r6,r6,zero
    ca80:	0005883a 	mov	r2,zero
    ca84:	003f6406 	br	c818 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c818>
    ca88:	10009a1e 	bne	r2,zero,ccf4 <__subdf3+0x640>
    ca8c:	82400044 	addi	r9,r16,1
    ca90:	4881ffcc 	andi	r2,r9,2047
    ca94:	02800044 	movi	r10,1
    ca98:	5080670e 	bge	r10,r2,cc38 <__subdf3+0x584>
    ca9c:	0081ffc4 	movi	r2,2047
    caa0:	4880af26 	beq	r9,r2,cd60 <__subdf3+0x6ac>
    caa4:	898d883a 	add	r6,r17,r6
    caa8:	1945883a 	add	r2,r3,r5
    caac:	3447803a 	cmpltu	r3,r6,r17
    cab0:	1887883a 	add	r3,r3,r2
    cab4:	182297fa 	slli	r17,r3,31
    cab8:	300cd07a 	srli	r6,r6,1
    cabc:	1806d07a 	srli	r3,r3,1
    cac0:	4821883a 	mov	r16,r9
    cac4:	89a2b03a 	or	r17,r17,r6
    cac8:	003f1b06 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cacc:	0101ffc4 	movi	r4,2047
    cad0:	813f441e 	bne	r16,r4,c7e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c7e4>
    cad4:	003f1806 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cad8:	843ff844 	addi	r16,r16,-31
    cadc:	01400804 	movi	r5,32
    cae0:	1408d83a 	srl	r4,r2,r16
    cae4:	19405026 	beq	r3,r5,cc28 <__subdf3+0x574>
    cae8:	01401004 	movi	r5,64
    caec:	28c7c83a 	sub	r3,r5,r3
    caf0:	10c4983a 	sll	r2,r2,r3
    caf4:	88a2b03a 	or	r17,r17,r2
    caf8:	8822c03a 	cmpne	r17,r17,zero
    cafc:	2462b03a 	or	r17,r4,r17
    cb00:	0007883a 	mov	r3,zero
    cb04:	0021883a 	mov	r16,zero
    cb08:	003f6d06 	br	c8c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8c0>
    cb0c:	11fff804 	addi	r7,r2,-32
    cb10:	01000804 	movi	r4,32
    cb14:	29ced83a 	srl	r7,r5,r7
    cb18:	11004526 	beq	r2,r4,cc30 <__subdf3+0x57c>
    cb1c:	01001004 	movi	r4,64
    cb20:	2089c83a 	sub	r4,r4,r2
    cb24:	2904983a 	sll	r2,r5,r4
    cb28:	118cb03a 	or	r6,r2,r6
    cb2c:	300cc03a 	cmpne	r6,r6,zero
    cb30:	398cb03a 	or	r6,r7,r6
    cb34:	0005883a 	mov	r2,zero
    cb38:	003f3706 	br	c818 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c818>
    cb3c:	80002a26 	beq	r16,zero,cbe8 <__subdf3+0x534>
    cb40:	0101ffc4 	movi	r4,2047
    cb44:	49006626 	beq	r9,r4,cce0 <__subdf3+0x62c>
    cb48:	0085c83a 	sub	r2,zero,r2
    cb4c:	18c02034 	orhi	r3,r3,128
    cb50:	01000e04 	movi	r4,56
    cb54:	20807e16 	blt	r4,r2,cd50 <__subdf3+0x69c>
    cb58:	010007c4 	movi	r4,31
    cb5c:	2080e716 	blt	r4,r2,cefc <__subdf3+0x848>
    cb60:	01000804 	movi	r4,32
    cb64:	2089c83a 	sub	r4,r4,r2
    cb68:	1914983a 	sll	r10,r3,r4
    cb6c:	8890d83a 	srl	r8,r17,r2
    cb70:	8908983a 	sll	r4,r17,r4
    cb74:	1884d83a 	srl	r2,r3,r2
    cb78:	5222b03a 	or	r17,r10,r8
    cb7c:	2006c03a 	cmpne	r3,r4,zero
    cb80:	88e2b03a 	or	r17,r17,r3
    cb84:	3463c83a 	sub	r17,r6,r17
    cb88:	2885c83a 	sub	r2,r5,r2
    cb8c:	344d803a 	cmpltu	r6,r6,r17
    cb90:	1187c83a 	sub	r3,r2,r6
    cb94:	4821883a 	mov	r16,r9
    cb98:	3825883a 	mov	r18,r7
    cb9c:	003f2306 	br	c82c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c82c>
    cba0:	24d0b03a 	or	r8,r4,r19
    cba4:	40001b1e 	bne	r8,zero,cc14 <__subdf3+0x560>
    cba8:	0005883a 	mov	r2,zero
    cbac:	0009883a 	mov	r4,zero
    cbb0:	0021883a 	mov	r16,zero
    cbb4:	003f4906 	br	c8dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8dc>
    cbb8:	010007c4 	movi	r4,31
    cbbc:	20803a16 	blt	r4,r2,cca8 <__subdf3+0x5f4>
    cbc0:	01000804 	movi	r4,32
    cbc4:	2089c83a 	sub	r4,r4,r2
    cbc8:	2912983a 	sll	r9,r5,r4
    cbcc:	3090d83a 	srl	r8,r6,r2
    cbd0:	3108983a 	sll	r4,r6,r4
    cbd4:	2884d83a 	srl	r2,r5,r2
    cbd8:	4a12b03a 	or	r9,r9,r8
    cbdc:	2008c03a 	cmpne	r4,r4,zero
    cbe0:	4912b03a 	or	r9,r9,r4
    cbe4:	003f4e06 	br	c920 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c920>
    cbe8:	1c48b03a 	or	r4,r3,r17
    cbec:	20003c26 	beq	r4,zero,cce0 <__subdf3+0x62c>
    cbf0:	0084303a 	nor	r2,zero,r2
    cbf4:	1000381e 	bne	r2,zero,ccd8 <__subdf3+0x624>
    cbf8:	3463c83a 	sub	r17,r6,r17
    cbfc:	28c5c83a 	sub	r2,r5,r3
    cc00:	344d803a 	cmpltu	r6,r6,r17
    cc04:	1187c83a 	sub	r3,r2,r6
    cc08:	4821883a 	mov	r16,r9
    cc0c:	3825883a 	mov	r18,r7
    cc10:	003f0606 	br	c82c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c82c>
    cc14:	2023883a 	mov	r17,r4
    cc18:	003f0906 	br	c840 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c840>
    cc1c:	0101ffc4 	movi	r4,2047
    cc20:	813f3a1e 	bne	r16,r4,c90c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c90c>
    cc24:	003ec406 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cc28:	0005883a 	mov	r2,zero
    cc2c:	003fb106 	br	caf4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000caf4>
    cc30:	0005883a 	mov	r2,zero
    cc34:	003fbc06 	br	cb28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb28>
    cc38:	1c44b03a 	or	r2,r3,r17
    cc3c:	80008e1e 	bne	r16,zero,ce78 <__subdf3+0x7c4>
    cc40:	1000c826 	beq	r2,zero,cf64 <__subdf3+0x8b0>
    cc44:	2984b03a 	or	r2,r5,r6
    cc48:	103ebb26 	beq	r2,zero,c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cc4c:	8989883a 	add	r4,r17,r6
    cc50:	1945883a 	add	r2,r3,r5
    cc54:	2447803a 	cmpltu	r3,r4,r17
    cc58:	1887883a 	add	r3,r3,r2
    cc5c:	1880202c 	andhi	r2,r3,128
    cc60:	2023883a 	mov	r17,r4
    cc64:	103f1626 	beq	r2,zero,c8c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8c0>
    cc68:	00bfe034 	movhi	r2,65408
    cc6c:	10bfffc4 	addi	r2,r2,-1
    cc70:	5021883a 	mov	r16,r10
    cc74:	1886703a 	and	r3,r3,r2
    cc78:	003eaf06 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cc7c:	3825883a 	mov	r18,r7
    cc80:	003f0f06 	br	c8c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8c0>
    cc84:	1c44b03a 	or	r2,r3,r17
    cc88:	8000251e 	bne	r16,zero,cd20 <__subdf3+0x66c>
    cc8c:	1000661e 	bne	r2,zero,ce28 <__subdf3+0x774>
    cc90:	2990b03a 	or	r8,r5,r6
    cc94:	40009626 	beq	r8,zero,cef0 <__subdf3+0x83c>
    cc98:	2807883a 	mov	r3,r5
    cc9c:	3023883a 	mov	r17,r6
    cca0:	3825883a 	mov	r18,r7
    cca4:	003ea406 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cca8:	127ff804 	addi	r9,r2,-32
    ccac:	01000804 	movi	r4,32
    ccb0:	2a52d83a 	srl	r9,r5,r9
    ccb4:	11008c26 	beq	r2,r4,cee8 <__subdf3+0x834>
    ccb8:	01001004 	movi	r4,64
    ccbc:	2085c83a 	sub	r2,r4,r2
    ccc0:	2884983a 	sll	r2,r5,r2
    ccc4:	118cb03a 	or	r6,r2,r6
    ccc8:	300cc03a 	cmpne	r6,r6,zero
    cccc:	4992b03a 	or	r9,r9,r6
    ccd0:	0005883a 	mov	r2,zero
    ccd4:	003f1206 	br	c920 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c920>
    ccd8:	0101ffc4 	movi	r4,2047
    ccdc:	493f9c1e 	bne	r9,r4,cb50 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb50>
    cce0:	2807883a 	mov	r3,r5
    cce4:	3023883a 	mov	r17,r6
    cce8:	4821883a 	mov	r16,r9
    ccec:	3825883a 	mov	r18,r7
    ccf0:	003e9106 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ccf4:	80001f1e 	bne	r16,zero,cd74 <__subdf3+0x6c0>
    ccf8:	1c48b03a 	or	r4,r3,r17
    ccfc:	20005a26 	beq	r4,zero,ce68 <__subdf3+0x7b4>
    cd00:	0084303a 	nor	r2,zero,r2
    cd04:	1000561e 	bne	r2,zero,ce60 <__subdf3+0x7ac>
    cd08:	89a3883a 	add	r17,r17,r6
    cd0c:	1945883a 	add	r2,r3,r5
    cd10:	898d803a 	cmpltu	r6,r17,r6
    cd14:	3087883a 	add	r3,r6,r2
    cd18:	4821883a 	mov	r16,r9
    cd1c:	003f0506 	br	c934 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c934>
    cd20:	10002b1e 	bne	r2,zero,cdd0 <__subdf3+0x71c>
    cd24:	2984b03a 	or	r2,r5,r6
    cd28:	10008026 	beq	r2,zero,cf2c <__subdf3+0x878>
    cd2c:	2807883a 	mov	r3,r5
    cd30:	3023883a 	mov	r17,r6
    cd34:	3825883a 	mov	r18,r7
    cd38:	0401ffc4 	movi	r16,2047
    cd3c:	003e7e06 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cd40:	3809883a 	mov	r4,r7
    cd44:	0011883a 	mov	r8,zero
    cd48:	0005883a 	mov	r2,zero
    cd4c:	003ee306 	br	c8dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8dc>
    cd50:	1c62b03a 	or	r17,r3,r17
    cd54:	8822c03a 	cmpne	r17,r17,zero
    cd58:	0005883a 	mov	r2,zero
    cd5c:	003f8906 	br	cb84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb84>
    cd60:	3809883a 	mov	r4,r7
    cd64:	4821883a 	mov	r16,r9
    cd68:	0011883a 	mov	r8,zero
    cd6c:	0005883a 	mov	r2,zero
    cd70:	003eda06 	br	c8dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8dc>
    cd74:	0101ffc4 	movi	r4,2047
    cd78:	49003b26 	beq	r9,r4,ce68 <__subdf3+0x7b4>
    cd7c:	0085c83a 	sub	r2,zero,r2
    cd80:	18c02034 	orhi	r3,r3,128
    cd84:	01000e04 	movi	r4,56
    cd88:	20806e16 	blt	r4,r2,cf44 <__subdf3+0x890>
    cd8c:	010007c4 	movi	r4,31
    cd90:	20807716 	blt	r4,r2,cf70 <__subdf3+0x8bc>
    cd94:	01000804 	movi	r4,32
    cd98:	2089c83a 	sub	r4,r4,r2
    cd9c:	1914983a 	sll	r10,r3,r4
    cda0:	8890d83a 	srl	r8,r17,r2
    cda4:	8908983a 	sll	r4,r17,r4
    cda8:	1884d83a 	srl	r2,r3,r2
    cdac:	5222b03a 	or	r17,r10,r8
    cdb0:	2006c03a 	cmpne	r3,r4,zero
    cdb4:	88e2b03a 	or	r17,r17,r3
    cdb8:	89a3883a 	add	r17,r17,r6
    cdbc:	1145883a 	add	r2,r2,r5
    cdc0:	898d803a 	cmpltu	r6,r17,r6
    cdc4:	3087883a 	add	r3,r6,r2
    cdc8:	4821883a 	mov	r16,r9
    cdcc:	003ed906 	br	c934 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c934>
    cdd0:	2984b03a 	or	r2,r5,r6
    cdd4:	10004226 	beq	r2,zero,cee0 <__subdf3+0x82c>
    cdd8:	1808d0fa 	srli	r4,r3,3
    cddc:	8822d0fa 	srli	r17,r17,3
    cde0:	1806977a 	slli	r3,r3,29
    cde4:	2080022c 	andhi	r2,r4,8
    cde8:	1c62b03a 	or	r17,r3,r17
    cdec:	10000826 	beq	r2,zero,ce10 <__subdf3+0x75c>
    cdf0:	2812d0fa 	srli	r9,r5,3
    cdf4:	4880022c 	andhi	r2,r9,8
    cdf8:	1000051e 	bne	r2,zero,ce10 <__subdf3+0x75c>
    cdfc:	300cd0fa 	srli	r6,r6,3
    ce00:	2804977a 	slli	r2,r5,29
    ce04:	4809883a 	mov	r4,r9
    ce08:	3825883a 	mov	r18,r7
    ce0c:	11a2b03a 	or	r17,r2,r6
    ce10:	8806d77a 	srli	r3,r17,29
    ce14:	200890fa 	slli	r4,r4,3
    ce18:	882290fa 	slli	r17,r17,3
    ce1c:	0401ffc4 	movi	r16,2047
    ce20:	1906b03a 	or	r3,r3,r4
    ce24:	003e4406 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ce28:	2984b03a 	or	r2,r5,r6
    ce2c:	103e4226 	beq	r2,zero,c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ce30:	8989c83a 	sub	r4,r17,r6
    ce34:	8911803a 	cmpltu	r8,r17,r4
    ce38:	1945c83a 	sub	r2,r3,r5
    ce3c:	1205c83a 	sub	r2,r2,r8
    ce40:	1200202c 	andhi	r8,r2,128
    ce44:	403e9a26 	beq	r8,zero,c8b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8b0>
    ce48:	3463c83a 	sub	r17,r6,r17
    ce4c:	28c5c83a 	sub	r2,r5,r3
    ce50:	344d803a 	cmpltu	r6,r6,r17
    ce54:	1187c83a 	sub	r3,r2,r6
    ce58:	3825883a 	mov	r18,r7
    ce5c:	003e3606 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ce60:	0101ffc4 	movi	r4,2047
    ce64:	493fc71e 	bne	r9,r4,cd84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cd84>
    ce68:	2807883a 	mov	r3,r5
    ce6c:	3023883a 	mov	r17,r6
    ce70:	4821883a 	mov	r16,r9
    ce74:	003e3006 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ce78:	10003626 	beq	r2,zero,cf54 <__subdf3+0x8a0>
    ce7c:	2984b03a 	or	r2,r5,r6
    ce80:	10001726 	beq	r2,zero,cee0 <__subdf3+0x82c>
    ce84:	1808d0fa 	srli	r4,r3,3
    ce88:	8822d0fa 	srli	r17,r17,3
    ce8c:	1806977a 	slli	r3,r3,29
    ce90:	2080022c 	andhi	r2,r4,8
    ce94:	1c62b03a 	or	r17,r3,r17
    ce98:	10000726 	beq	r2,zero,ceb8 <__subdf3+0x804>
    ce9c:	2812d0fa 	srli	r9,r5,3
    cea0:	4880022c 	andhi	r2,r9,8
    cea4:	1000041e 	bne	r2,zero,ceb8 <__subdf3+0x804>
    cea8:	300cd0fa 	srli	r6,r6,3
    ceac:	2804977a 	slli	r2,r5,29
    ceb0:	4809883a 	mov	r4,r9
    ceb4:	11a2b03a 	or	r17,r2,r6
    ceb8:	8806d77a 	srli	r3,r17,29
    cebc:	200890fa 	slli	r4,r4,3
    cec0:	882290fa 	slli	r17,r17,3
    cec4:	3825883a 	mov	r18,r7
    cec8:	1906b03a 	or	r3,r3,r4
    cecc:	0401ffc4 	movi	r16,2047
    ced0:	003e1906 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    ced4:	000b883a 	mov	r5,zero
    ced8:	0005883a 	mov	r2,zero
    cedc:	003e2e06 	br	c798 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c798>
    cee0:	0401ffc4 	movi	r16,2047
    cee4:	003e1406 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cee8:	0005883a 	mov	r2,zero
    ceec:	003f7506 	br	ccc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ccc4>
    cef0:	0005883a 	mov	r2,zero
    cef4:	0009883a 	mov	r4,zero
    cef8:	003e7806 	br	c8dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8dc>
    cefc:	123ff804 	addi	r8,r2,-32
    cf00:	01000804 	movi	r4,32
    cf04:	1a10d83a 	srl	r8,r3,r8
    cf08:	11002526 	beq	r2,r4,cfa0 <__subdf3+0x8ec>
    cf0c:	01001004 	movi	r4,64
    cf10:	2085c83a 	sub	r2,r4,r2
    cf14:	1884983a 	sll	r2,r3,r2
    cf18:	1444b03a 	or	r2,r2,r17
    cf1c:	1004c03a 	cmpne	r2,r2,zero
    cf20:	40a2b03a 	or	r17,r8,r2
    cf24:	0005883a 	mov	r2,zero
    cf28:	003f1606 	br	cb84 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cb84>
    cf2c:	02000434 	movhi	r8,16
    cf30:	0009883a 	mov	r4,zero
    cf34:	423fffc4 	addi	r8,r8,-1
    cf38:	00bfffc4 	movi	r2,-1
    cf3c:	0401ffc4 	movi	r16,2047
    cf40:	003e6606 	br	c8dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c8dc>
    cf44:	1c62b03a 	or	r17,r3,r17
    cf48:	8822c03a 	cmpne	r17,r17,zero
    cf4c:	0005883a 	mov	r2,zero
    cf50:	003f9906 	br	cdb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cdb8>
    cf54:	2807883a 	mov	r3,r5
    cf58:	3023883a 	mov	r17,r6
    cf5c:	0401ffc4 	movi	r16,2047
    cf60:	003df506 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cf64:	2807883a 	mov	r3,r5
    cf68:	3023883a 	mov	r17,r6
    cf6c:	003df206 	br	c738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000c738>
    cf70:	123ff804 	addi	r8,r2,-32
    cf74:	01000804 	movi	r4,32
    cf78:	1a10d83a 	srl	r8,r3,r8
    cf7c:	11000a26 	beq	r2,r4,cfa8 <__subdf3+0x8f4>
    cf80:	01001004 	movi	r4,64
    cf84:	2085c83a 	sub	r2,r4,r2
    cf88:	1884983a 	sll	r2,r3,r2
    cf8c:	1444b03a 	or	r2,r2,r17
    cf90:	1004c03a 	cmpne	r2,r2,zero
    cf94:	40a2b03a 	or	r17,r8,r2
    cf98:	0005883a 	mov	r2,zero
    cf9c:	003f8606 	br	cdb8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cdb8>
    cfa0:	0005883a 	mov	r2,zero
    cfa4:	003fdc06 	br	cf18 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cf18>
    cfa8:	0005883a 	mov	r2,zero
    cfac:	003ff706 	br	cf8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cf8c>

0000cfb0 <__fixdfsi>:
    cfb0:	280cd53a 	srli	r6,r5,20
    cfb4:	00c00434 	movhi	r3,16
    cfb8:	18ffffc4 	addi	r3,r3,-1
    cfbc:	3181ffcc 	andi	r6,r6,2047
    cfc0:	01c0ff84 	movi	r7,1022
    cfc4:	28c6703a 	and	r3,r5,r3
    cfc8:	280ad7fa 	srli	r5,r5,31
    cfcc:	3980120e 	bge	r7,r6,d018 <__fixdfsi+0x68>
    cfd0:	00810744 	movi	r2,1053
    cfd4:	11800c16 	blt	r2,r6,d008 <__fixdfsi+0x58>
    cfd8:	00810cc4 	movi	r2,1075
    cfdc:	1185c83a 	sub	r2,r2,r6
    cfe0:	01c007c4 	movi	r7,31
    cfe4:	18c00434 	orhi	r3,r3,16
    cfe8:	38800d16 	blt	r7,r2,d020 <__fixdfsi+0x70>
    cfec:	31befb44 	addi	r6,r6,-1043
    cff0:	2084d83a 	srl	r2,r4,r2
    cff4:	1986983a 	sll	r3,r3,r6
    cff8:	1884b03a 	or	r2,r3,r2
    cffc:	28000726 	beq	r5,zero,d01c <__fixdfsi+0x6c>
    d000:	0085c83a 	sub	r2,zero,r2
    d004:	f800283a 	ret
    d008:	00a00034 	movhi	r2,32768
    d00c:	10bfffc4 	addi	r2,r2,-1
    d010:	2885883a 	add	r2,r5,r2
    d014:	f800283a 	ret
    d018:	0005883a 	mov	r2,zero
    d01c:	f800283a 	ret
    d020:	008104c4 	movi	r2,1043
    d024:	1185c83a 	sub	r2,r2,r6
    d028:	1884d83a 	srl	r2,r3,r2
    d02c:	003ff306 	br	cffc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000cffc>

0000d030 <__floatsidf>:
    d030:	defffd04 	addi	sp,sp,-12
    d034:	dfc00215 	stw	ra,8(sp)
    d038:	dc400115 	stw	r17,4(sp)
    d03c:	dc000015 	stw	r16,0(sp)
    d040:	20002b26 	beq	r4,zero,d0f0 <__floatsidf+0xc0>
    d044:	2023883a 	mov	r17,r4
    d048:	2020d7fa 	srli	r16,r4,31
    d04c:	20002d16 	blt	r4,zero,d104 <__floatsidf+0xd4>
    d050:	8809883a 	mov	r4,r17
    d054:	000d1b40 	call	d1b4 <__clzsi2>
    d058:	01410784 	movi	r5,1054
    d05c:	288bc83a 	sub	r5,r5,r2
    d060:	01010cc4 	movi	r4,1075
    d064:	2149c83a 	sub	r4,r4,r5
    d068:	00c007c4 	movi	r3,31
    d06c:	1900160e 	bge	r3,r4,d0c8 <__floatsidf+0x98>
    d070:	00c104c4 	movi	r3,1043
    d074:	1947c83a 	sub	r3,r3,r5
    d078:	88c6983a 	sll	r3,r17,r3
    d07c:	00800434 	movhi	r2,16
    d080:	10bfffc4 	addi	r2,r2,-1
    d084:	1886703a 	and	r3,r3,r2
    d088:	2941ffcc 	andi	r5,r5,2047
    d08c:	800d883a 	mov	r6,r16
    d090:	0005883a 	mov	r2,zero
    d094:	280a953a 	slli	r5,r5,20
    d098:	31803fcc 	andi	r6,r6,255
    d09c:	01000434 	movhi	r4,16
    d0a0:	300c97fa 	slli	r6,r6,31
    d0a4:	213fffc4 	addi	r4,r4,-1
    d0a8:	1906703a 	and	r3,r3,r4
    d0ac:	1946b03a 	or	r3,r3,r5
    d0b0:	1986b03a 	or	r3,r3,r6
    d0b4:	dfc00217 	ldw	ra,8(sp)
    d0b8:	dc400117 	ldw	r17,4(sp)
    d0bc:	dc000017 	ldw	r16,0(sp)
    d0c0:	dec00304 	addi	sp,sp,12
    d0c4:	f800283a 	ret
    d0c8:	00c002c4 	movi	r3,11
    d0cc:	1887c83a 	sub	r3,r3,r2
    d0d0:	88c6d83a 	srl	r3,r17,r3
    d0d4:	8904983a 	sll	r2,r17,r4
    d0d8:	01000434 	movhi	r4,16
    d0dc:	213fffc4 	addi	r4,r4,-1
    d0e0:	2941ffcc 	andi	r5,r5,2047
    d0e4:	1906703a 	and	r3,r3,r4
    d0e8:	800d883a 	mov	r6,r16
    d0ec:	003fe906 	br	d094 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d094>
    d0f0:	000d883a 	mov	r6,zero
    d0f4:	000b883a 	mov	r5,zero
    d0f8:	0007883a 	mov	r3,zero
    d0fc:	0005883a 	mov	r2,zero
    d100:	003fe406 	br	d094 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d094>
    d104:	0123c83a 	sub	r17,zero,r4
    d108:	003fd106 	br	d050 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d050>

0000d10c <__floatunsidf>:
    d10c:	defffe04 	addi	sp,sp,-8
    d110:	dc000015 	stw	r16,0(sp)
    d114:	dfc00115 	stw	ra,4(sp)
    d118:	2021883a 	mov	r16,r4
    d11c:	20002226 	beq	r4,zero,d1a8 <__floatunsidf+0x9c>
    d120:	000d1b40 	call	d1b4 <__clzsi2>
    d124:	01010784 	movi	r4,1054
    d128:	2089c83a 	sub	r4,r4,r2
    d12c:	01810cc4 	movi	r6,1075
    d130:	310dc83a 	sub	r6,r6,r4
    d134:	00c007c4 	movi	r3,31
    d138:	1980120e 	bge	r3,r6,d184 <__floatunsidf+0x78>
    d13c:	00c104c4 	movi	r3,1043
    d140:	1907c83a 	sub	r3,r3,r4
    d144:	80ca983a 	sll	r5,r16,r3
    d148:	00800434 	movhi	r2,16
    d14c:	10bfffc4 	addi	r2,r2,-1
    d150:	2101ffcc 	andi	r4,r4,2047
    d154:	0021883a 	mov	r16,zero
    d158:	288a703a 	and	r5,r5,r2
    d15c:	2008953a 	slli	r4,r4,20
    d160:	00c00434 	movhi	r3,16
    d164:	18ffffc4 	addi	r3,r3,-1
    d168:	28c6703a 	and	r3,r5,r3
    d16c:	8005883a 	mov	r2,r16
    d170:	1906b03a 	or	r3,r3,r4
    d174:	dfc00117 	ldw	ra,4(sp)
    d178:	dc000017 	ldw	r16,0(sp)
    d17c:	dec00204 	addi	sp,sp,8
    d180:	f800283a 	ret
    d184:	00c002c4 	movi	r3,11
    d188:	188bc83a 	sub	r5,r3,r2
    d18c:	814ad83a 	srl	r5,r16,r5
    d190:	00c00434 	movhi	r3,16
    d194:	18ffffc4 	addi	r3,r3,-1
    d198:	81a0983a 	sll	r16,r16,r6
    d19c:	2101ffcc 	andi	r4,r4,2047
    d1a0:	28ca703a 	and	r5,r5,r3
    d1a4:	003fed06 	br	d15c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d15c>
    d1a8:	0009883a 	mov	r4,zero
    d1ac:	000b883a 	mov	r5,zero
    d1b0:	003fea06 	br	d15c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d15c>

0000d1b4 <__clzsi2>:
    d1b4:	00bfffd4 	movui	r2,65535
    d1b8:	11000536 	bltu	r2,r4,d1d0 <__clzsi2+0x1c>
    d1bc:	00803fc4 	movi	r2,255
    d1c0:	11000f36 	bltu	r2,r4,d200 <__clzsi2+0x4c>
    d1c4:	00800804 	movi	r2,32
    d1c8:	0007883a 	mov	r3,zero
    d1cc:	00000506 	br	d1e4 <__clzsi2+0x30>
    d1d0:	00804034 	movhi	r2,256
    d1d4:	10bfffc4 	addi	r2,r2,-1
    d1d8:	11000c2e 	bgeu	r2,r4,d20c <__clzsi2+0x58>
    d1dc:	00800204 	movi	r2,8
    d1e0:	00c00604 	movi	r3,24
    d1e4:	20c8d83a 	srl	r4,r4,r3
    d1e8:	00c00074 	movhi	r3,1
    d1ec:	18c2fa04 	addi	r3,r3,3048
    d1f0:	1909883a 	add	r4,r3,r4
    d1f4:	20c00003 	ldbu	r3,0(r4)
    d1f8:	10c5c83a 	sub	r2,r2,r3
    d1fc:	f800283a 	ret
    d200:	00800604 	movi	r2,24
    d204:	00c00204 	movi	r3,8
    d208:	003ff606 	br	d1e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d1e4>
    d20c:	00800404 	movi	r2,16
    d210:	1007883a 	mov	r3,r2
    d214:	003ff306 	br	d1e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d1e4>

0000d218 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d218:	defffe04 	addi	sp,sp,-8
    d21c:	dfc00115 	stw	ra,4(sp)
    d220:	df000015 	stw	fp,0(sp)
    d224:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d228:	d0a00b17 	ldw	r2,-32724(gp)
    d22c:	10000326 	beq	r2,zero,d23c <alt_get_errno+0x24>
    d230:	d0a00b17 	ldw	r2,-32724(gp)
    d234:	103ee83a 	callr	r2
    d238:	00000106 	br	d240 <alt_get_errno+0x28>
    d23c:	d0a75e04 	addi	r2,gp,-25224
}
    d240:	e037883a 	mov	sp,fp
    d244:	dfc00117 	ldw	ra,4(sp)
    d248:	df000017 	ldw	fp,0(sp)
    d24c:	dec00204 	addi	sp,sp,8
    d250:	f800283a 	ret

0000d254 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d254:	defffb04 	addi	sp,sp,-20
    d258:	dfc00415 	stw	ra,16(sp)
    d25c:	df000315 	stw	fp,12(sp)
    d260:	df000304 	addi	fp,sp,12
    d264:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d268:	e0bfff17 	ldw	r2,-4(fp)
    d26c:	10000616 	blt	r2,zero,d288 <close+0x34>
    d270:	e0bfff17 	ldw	r2,-4(fp)
    d274:	10c00324 	muli	r3,r2,12
    d278:	00800074 	movhi	r2,1
    d27c:	1085b204 	addi	r2,r2,5832
    d280:	1885883a 	add	r2,r3,r2
    d284:	00000106 	br	d28c <close+0x38>
    d288:	0005883a 	mov	r2,zero
    d28c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d290:	e0bffd17 	ldw	r2,-12(fp)
    d294:	10001926 	beq	r2,zero,d2fc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d298:	e0bffd17 	ldw	r2,-12(fp)
    d29c:	10800017 	ldw	r2,0(r2)
    d2a0:	10800417 	ldw	r2,16(r2)
    d2a4:	10000626 	beq	r2,zero,d2c0 <close+0x6c>
    d2a8:	e0bffd17 	ldw	r2,-12(fp)
    d2ac:	10800017 	ldw	r2,0(r2)
    d2b0:	10800417 	ldw	r2,16(r2)
    d2b4:	e13ffd17 	ldw	r4,-12(fp)
    d2b8:	103ee83a 	callr	r2
    d2bc:	00000106 	br	d2c4 <close+0x70>
    d2c0:	0005883a 	mov	r2,zero
    d2c4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d2c8:	e13fff17 	ldw	r4,-4(fp)
    d2cc:	000d9140 	call	d914 <alt_release_fd>
    if (rval < 0)
    d2d0:	e0bffe17 	ldw	r2,-8(fp)
    d2d4:	1000070e 	bge	r2,zero,d2f4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    d2d8:	000d2180 	call	d218 <alt_get_errno>
    d2dc:	1007883a 	mov	r3,r2
    d2e0:	e0bffe17 	ldw	r2,-8(fp)
    d2e4:	0085c83a 	sub	r2,zero,r2
    d2e8:	18800015 	stw	r2,0(r3)
      return -1;
    d2ec:	00bfffc4 	movi	r2,-1
    d2f0:	00000706 	br	d310 <close+0xbc>
    }
    return 0;
    d2f4:	0005883a 	mov	r2,zero
    d2f8:	00000506 	br	d310 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d2fc:	000d2180 	call	d218 <alt_get_errno>
    d300:	1007883a 	mov	r3,r2
    d304:	00801444 	movi	r2,81
    d308:	18800015 	stw	r2,0(r3)
    return -1;
    d30c:	00bfffc4 	movi	r2,-1
  }
}
    d310:	e037883a 	mov	sp,fp
    d314:	dfc00117 	ldw	ra,4(sp)
    d318:	df000017 	ldw	fp,0(sp)
    d31c:	dec00204 	addi	sp,sp,8
    d320:	f800283a 	ret

0000d324 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d324:	defffc04 	addi	sp,sp,-16
    d328:	df000315 	stw	fp,12(sp)
    d32c:	df000304 	addi	fp,sp,12
    d330:	e13ffd15 	stw	r4,-12(fp)
    d334:	e17ffe15 	stw	r5,-8(fp)
    d338:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d33c:	e0bfff17 	ldw	r2,-4(fp)
}
    d340:	e037883a 	mov	sp,fp
    d344:	df000017 	ldw	fp,0(sp)
    d348:	dec00104 	addi	sp,sp,4
    d34c:	f800283a 	ret

0000d350 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d350:	defffe04 	addi	sp,sp,-8
    d354:	dfc00115 	stw	ra,4(sp)
    d358:	df000015 	stw	fp,0(sp)
    d35c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d360:	d0a00b17 	ldw	r2,-32724(gp)
    d364:	10000326 	beq	r2,zero,d374 <alt_get_errno+0x24>
    d368:	d0a00b17 	ldw	r2,-32724(gp)
    d36c:	103ee83a 	callr	r2
    d370:	00000106 	br	d378 <alt_get_errno+0x28>
    d374:	d0a75e04 	addi	r2,gp,-25224
}
    d378:	e037883a 	mov	sp,fp
    d37c:	dfc00117 	ldw	ra,4(sp)
    d380:	df000017 	ldw	fp,0(sp)
    d384:	dec00204 	addi	sp,sp,8
    d388:	f800283a 	ret

0000d38c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d38c:	defffb04 	addi	sp,sp,-20
    d390:	dfc00415 	stw	ra,16(sp)
    d394:	df000315 	stw	fp,12(sp)
    d398:	df000304 	addi	fp,sp,12
    d39c:	e13ffe15 	stw	r4,-8(fp)
    d3a0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d3a4:	e0bffe17 	ldw	r2,-8(fp)
    d3a8:	10000616 	blt	r2,zero,d3c4 <fstat+0x38>
    d3ac:	e0bffe17 	ldw	r2,-8(fp)
    d3b0:	10c00324 	muli	r3,r2,12
    d3b4:	00800074 	movhi	r2,1
    d3b8:	1085b204 	addi	r2,r2,5832
    d3bc:	1885883a 	add	r2,r3,r2
    d3c0:	00000106 	br	d3c8 <fstat+0x3c>
    d3c4:	0005883a 	mov	r2,zero
    d3c8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d3cc:	e0bffd17 	ldw	r2,-12(fp)
    d3d0:	10001026 	beq	r2,zero,d414 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d3d4:	e0bffd17 	ldw	r2,-12(fp)
    d3d8:	10800017 	ldw	r2,0(r2)
    d3dc:	10800817 	ldw	r2,32(r2)
    d3e0:	10000726 	beq	r2,zero,d400 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    d3e4:	e0bffd17 	ldw	r2,-12(fp)
    d3e8:	10800017 	ldw	r2,0(r2)
    d3ec:	10800817 	ldw	r2,32(r2)
    d3f0:	e17fff17 	ldw	r5,-4(fp)
    d3f4:	e13ffd17 	ldw	r4,-12(fp)
    d3f8:	103ee83a 	callr	r2
    d3fc:	00000a06 	br	d428 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d400:	e0bfff17 	ldw	r2,-4(fp)
    d404:	00c80004 	movi	r3,8192
    d408:	10c00115 	stw	r3,4(r2)
      return 0;
    d40c:	0005883a 	mov	r2,zero
    d410:	00000506 	br	d428 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d414:	000d3500 	call	d350 <alt_get_errno>
    d418:	1007883a 	mov	r3,r2
    d41c:	00801444 	movi	r2,81
    d420:	18800015 	stw	r2,0(r3)
    return -1;
    d424:	00bfffc4 	movi	r2,-1
  }
}
    d428:	e037883a 	mov	sp,fp
    d42c:	dfc00117 	ldw	ra,4(sp)
    d430:	df000017 	ldw	fp,0(sp)
    d434:	dec00204 	addi	sp,sp,8
    d438:	f800283a 	ret

0000d43c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d43c:	defffe04 	addi	sp,sp,-8
    d440:	dfc00115 	stw	ra,4(sp)
    d444:	df000015 	stw	fp,0(sp)
    d448:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d44c:	d0a00b17 	ldw	r2,-32724(gp)
    d450:	10000326 	beq	r2,zero,d460 <alt_get_errno+0x24>
    d454:	d0a00b17 	ldw	r2,-32724(gp)
    d458:	103ee83a 	callr	r2
    d45c:	00000106 	br	d464 <alt_get_errno+0x28>
    d460:	d0a75e04 	addi	r2,gp,-25224
}
    d464:	e037883a 	mov	sp,fp
    d468:	dfc00117 	ldw	ra,4(sp)
    d46c:	df000017 	ldw	fp,0(sp)
    d470:	dec00204 	addi	sp,sp,8
    d474:	f800283a 	ret

0000d478 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d478:	deffed04 	addi	sp,sp,-76
    d47c:	dfc01215 	stw	ra,72(sp)
    d480:	df001115 	stw	fp,68(sp)
    d484:	df001104 	addi	fp,sp,68
    d488:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d48c:	e0bfff17 	ldw	r2,-4(fp)
    d490:	10000616 	blt	r2,zero,d4ac <isatty+0x34>
    d494:	e0bfff17 	ldw	r2,-4(fp)
    d498:	10c00324 	muli	r3,r2,12
    d49c:	00800074 	movhi	r2,1
    d4a0:	1085b204 	addi	r2,r2,5832
    d4a4:	1885883a 	add	r2,r3,r2
    d4a8:	00000106 	br	d4b0 <isatty+0x38>
    d4ac:	0005883a 	mov	r2,zero
    d4b0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d4b4:	e0bfef17 	ldw	r2,-68(fp)
    d4b8:	10000e26 	beq	r2,zero,d4f4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d4bc:	e0bfef17 	ldw	r2,-68(fp)
    d4c0:	10800017 	ldw	r2,0(r2)
    d4c4:	10800817 	ldw	r2,32(r2)
    d4c8:	1000021e 	bne	r2,zero,d4d4 <isatty+0x5c>
    {
      return 1;
    d4cc:	00800044 	movi	r2,1
    d4d0:	00000d06 	br	d508 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d4d4:	e0bff004 	addi	r2,fp,-64
    d4d8:	100b883a 	mov	r5,r2
    d4dc:	e13fff17 	ldw	r4,-4(fp)
    d4e0:	000d38c0 	call	d38c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d4e4:	e0bff117 	ldw	r2,-60(fp)
    d4e8:	10880020 	cmpeqi	r2,r2,8192
    d4ec:	10803fcc 	andi	r2,r2,255
    d4f0:	00000506 	br	d508 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d4f4:	000d43c0 	call	d43c <alt_get_errno>
    d4f8:	1007883a 	mov	r3,r2
    d4fc:	00801444 	movi	r2,81
    d500:	18800015 	stw	r2,0(r3)
    return 0;
    d504:	0005883a 	mov	r2,zero
  }
}
    d508:	e037883a 	mov	sp,fp
    d50c:	dfc00117 	ldw	ra,4(sp)
    d510:	df000017 	ldw	fp,0(sp)
    d514:	dec00204 	addi	sp,sp,8
    d518:	f800283a 	ret

0000d51c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d51c:	defffc04 	addi	sp,sp,-16
    d520:	df000315 	stw	fp,12(sp)
    d524:	df000304 	addi	fp,sp,12
    d528:	e13ffd15 	stw	r4,-12(fp)
    d52c:	e17ffe15 	stw	r5,-8(fp)
    d530:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d534:	e0fffe17 	ldw	r3,-8(fp)
    d538:	e0bffd17 	ldw	r2,-12(fp)
    d53c:	18800c26 	beq	r3,r2,d570 <alt_load_section+0x54>
  {
    while( to != end )
    d540:	00000806 	br	d564 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d544:	e0bffe17 	ldw	r2,-8(fp)
    d548:	10c00104 	addi	r3,r2,4
    d54c:	e0fffe15 	stw	r3,-8(fp)
    d550:	e0fffd17 	ldw	r3,-12(fp)
    d554:	19000104 	addi	r4,r3,4
    d558:	e13ffd15 	stw	r4,-12(fp)
    d55c:	18c00017 	ldw	r3,0(r3)
    d560:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d564:	e0fffe17 	ldw	r3,-8(fp)
    d568:	e0bfff17 	ldw	r2,-4(fp)
    d56c:	18bff51e 	bne	r3,r2,d544 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000d544>
    {
      *to++ = *from++;
    }
  }
}
    d570:	0001883a 	nop
    d574:	e037883a 	mov	sp,fp
    d578:	df000017 	ldw	fp,0(sp)
    d57c:	dec00104 	addi	sp,sp,4
    d580:	f800283a 	ret

0000d584 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d584:	defffe04 	addi	sp,sp,-8
    d588:	dfc00115 	stw	ra,4(sp)
    d58c:	df000015 	stw	fp,0(sp)
    d590:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d594:	01800074 	movhi	r6,1
    d598:	318ac704 	addi	r6,r6,11036
    d59c:	01400074 	movhi	r5,1
    d5a0:	29437f04 	addi	r5,r5,3580
    d5a4:	01000074 	movhi	r4,1
    d5a8:	210ac704 	addi	r4,r4,11036
    d5ac:	000d51c0 	call	d51c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d5b0:	01800034 	movhi	r6,0
    d5b4:	31809204 	addi	r6,r6,584
    d5b8:	01400034 	movhi	r5,0
    d5bc:	29400804 	addi	r5,r5,32
    d5c0:	01000034 	movhi	r4,0
    d5c4:	21000804 	addi	r4,r4,32
    d5c8:	000d51c0 	call	d51c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d5cc:	01800074 	movhi	r6,1
    d5d0:	31837f04 	addi	r6,r6,3580
    d5d4:	01400074 	movhi	r5,1
    d5d8:	29427704 	addi	r5,r5,2524
    d5dc:	01000074 	movhi	r4,1
    d5e0:	21027704 	addi	r4,r4,2524
    d5e4:	000d51c0 	call	d51c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d5e8:	000fa100 	call	fa10 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d5ec:	000fc600 	call	fc60 <alt_icache_flush_all>
}
    d5f0:	0001883a 	nop
    d5f4:	e037883a 	mov	sp,fp
    d5f8:	dfc00117 	ldw	ra,4(sp)
    d5fc:	df000017 	ldw	fp,0(sp)
    d600:	dec00204 	addi	sp,sp,8
    d604:	f800283a 	ret

0000d608 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d608:	defffe04 	addi	sp,sp,-8
    d60c:	dfc00115 	stw	ra,4(sp)
    d610:	df000015 	stw	fp,0(sp)
    d614:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d618:	d0a00b17 	ldw	r2,-32724(gp)
    d61c:	10000326 	beq	r2,zero,d62c <alt_get_errno+0x24>
    d620:	d0a00b17 	ldw	r2,-32724(gp)
    d624:	103ee83a 	callr	r2
    d628:	00000106 	br	d630 <alt_get_errno+0x28>
    d62c:	d0a75e04 	addi	r2,gp,-25224
}
    d630:	e037883a 	mov	sp,fp
    d634:	dfc00117 	ldw	ra,4(sp)
    d638:	df000017 	ldw	fp,0(sp)
    d63c:	dec00204 	addi	sp,sp,8
    d640:	f800283a 	ret

0000d644 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d644:	defff904 	addi	sp,sp,-28
    d648:	dfc00615 	stw	ra,24(sp)
    d64c:	df000515 	stw	fp,20(sp)
    d650:	df000504 	addi	fp,sp,20
    d654:	e13ffd15 	stw	r4,-12(fp)
    d658:	e17ffe15 	stw	r5,-8(fp)
    d65c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d660:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d664:	e0bffd17 	ldw	r2,-12(fp)
    d668:	10000616 	blt	r2,zero,d684 <lseek+0x40>
    d66c:	e0bffd17 	ldw	r2,-12(fp)
    d670:	10c00324 	muli	r3,r2,12
    d674:	00800074 	movhi	r2,1
    d678:	1085b204 	addi	r2,r2,5832
    d67c:	1885883a 	add	r2,r3,r2
    d680:	00000106 	br	d688 <lseek+0x44>
    d684:	0005883a 	mov	r2,zero
    d688:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d68c:	e0bffc17 	ldw	r2,-16(fp)
    d690:	10001026 	beq	r2,zero,d6d4 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d694:	e0bffc17 	ldw	r2,-16(fp)
    d698:	10800017 	ldw	r2,0(r2)
    d69c:	10800717 	ldw	r2,28(r2)
    d6a0:	10000926 	beq	r2,zero,d6c8 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d6a4:	e0bffc17 	ldw	r2,-16(fp)
    d6a8:	10800017 	ldw	r2,0(r2)
    d6ac:	10800717 	ldw	r2,28(r2)
    d6b0:	e1bfff17 	ldw	r6,-4(fp)
    d6b4:	e17ffe17 	ldw	r5,-8(fp)
    d6b8:	e13ffc17 	ldw	r4,-16(fp)
    d6bc:	103ee83a 	callr	r2
    d6c0:	e0bffb15 	stw	r2,-20(fp)
    d6c4:	00000506 	br	d6dc <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d6c8:	00bfde84 	movi	r2,-134
    d6cc:	e0bffb15 	stw	r2,-20(fp)
    d6d0:	00000206 	br	d6dc <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    d6d4:	00bfebc4 	movi	r2,-81
    d6d8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d6dc:	e0bffb17 	ldw	r2,-20(fp)
    d6e0:	1000070e 	bge	r2,zero,d700 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    d6e4:	000d6080 	call	d608 <alt_get_errno>
    d6e8:	1007883a 	mov	r3,r2
    d6ec:	e0bffb17 	ldw	r2,-20(fp)
    d6f0:	0085c83a 	sub	r2,zero,r2
    d6f4:	18800015 	stw	r2,0(r3)
    rc = -1;
    d6f8:	00bfffc4 	movi	r2,-1
    d6fc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d700:	e0bffb17 	ldw	r2,-20(fp)
}
    d704:	e037883a 	mov	sp,fp
    d708:	dfc00117 	ldw	ra,4(sp)
    d70c:	df000017 	ldw	fp,0(sp)
    d710:	dec00204 	addi	sp,sp,8
    d714:	f800283a 	ret

0000d718 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d718:	defffd04 	addi	sp,sp,-12
    d71c:	dfc00215 	stw	ra,8(sp)
    d720:	df000115 	stw	fp,4(sp)
    d724:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d728:	0009883a 	mov	r4,zero
    d72c:	000db900 	call	db90 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d730:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d734:	000dbc80 	call	dbc8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d738:	01800074 	movhi	r6,1
    d73c:	31833d04 	addi	r6,r6,3316
    d740:	01400074 	movhi	r5,1
    d744:	29433d04 	addi	r5,r5,3316
    d748:	01000074 	movhi	r4,1
    d74c:	21033d04 	addi	r4,r4,3316
    d750:	000fd580 	call	fd58 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d754:	000fb100 	call	fb10 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d758:	01000074 	movhi	r4,1
    d75c:	213edc04 	addi	r4,r4,-1168
    d760:	00106480 	call	10648 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d764:	d0a75f17 	ldw	r2,-25220(gp)
    d768:	d0e76017 	ldw	r3,-25216(gp)
    d76c:	d1276117 	ldw	r4,-25212(gp)
    d770:	200d883a 	mov	r6,r4
    d774:	180b883a 	mov	r5,r3
    d778:	1009883a 	mov	r4,r2
    d77c:	00003380 	call	338 <main>
    d780:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d784:	01000044 	movi	r4,1
    d788:	000d2540 	call	d254 <close>
  exit (result);
    d78c:	e13fff17 	ldw	r4,-4(fp)
    d790:	001065c0 	call	1065c <exit>

0000d794 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d794:	defffe04 	addi	sp,sp,-8
    d798:	df000115 	stw	fp,4(sp)
    d79c:	df000104 	addi	fp,sp,4
    d7a0:	e13fff15 	stw	r4,-4(fp)
}
    d7a4:	0001883a 	nop
    d7a8:	e037883a 	mov	sp,fp
    d7ac:	df000017 	ldw	fp,0(sp)
    d7b0:	dec00104 	addi	sp,sp,4
    d7b4:	f800283a 	ret

0000d7b8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d7b8:	defffe04 	addi	sp,sp,-8
    d7bc:	df000115 	stw	fp,4(sp)
    d7c0:	df000104 	addi	fp,sp,4
    d7c4:	e13fff15 	stw	r4,-4(fp)
}
    d7c8:	0001883a 	nop
    d7cc:	e037883a 	mov	sp,fp
    d7d0:	df000017 	ldw	fp,0(sp)
    d7d4:	dec00104 	addi	sp,sp,4
    d7d8:	f800283a 	ret

0000d7dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d7dc:	defffe04 	addi	sp,sp,-8
    d7e0:	dfc00115 	stw	ra,4(sp)
    d7e4:	df000015 	stw	fp,0(sp)
    d7e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d7ec:	d0a00b17 	ldw	r2,-32724(gp)
    d7f0:	10000326 	beq	r2,zero,d800 <alt_get_errno+0x24>
    d7f4:	d0a00b17 	ldw	r2,-32724(gp)
    d7f8:	103ee83a 	callr	r2
    d7fc:	00000106 	br	d804 <alt_get_errno+0x28>
    d800:	d0a75e04 	addi	r2,gp,-25224
}
    d804:	e037883a 	mov	sp,fp
    d808:	dfc00117 	ldw	ra,4(sp)
    d80c:	df000017 	ldw	fp,0(sp)
    d810:	dec00204 	addi	sp,sp,8
    d814:	f800283a 	ret

0000d818 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d818:	defff904 	addi	sp,sp,-28
    d81c:	dfc00615 	stw	ra,24(sp)
    d820:	df000515 	stw	fp,20(sp)
    d824:	df000504 	addi	fp,sp,20
    d828:	e13ffd15 	stw	r4,-12(fp)
    d82c:	e17ffe15 	stw	r5,-8(fp)
    d830:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d834:	e0bffd17 	ldw	r2,-12(fp)
    d838:	10000616 	blt	r2,zero,d854 <read+0x3c>
    d83c:	e0bffd17 	ldw	r2,-12(fp)
    d840:	10c00324 	muli	r3,r2,12
    d844:	00800074 	movhi	r2,1
    d848:	1085b204 	addi	r2,r2,5832
    d84c:	1885883a 	add	r2,r3,r2
    d850:	00000106 	br	d858 <read+0x40>
    d854:	0005883a 	mov	r2,zero
    d858:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d85c:	e0bffb17 	ldw	r2,-20(fp)
    d860:	10002226 	beq	r2,zero,d8ec <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d864:	e0bffb17 	ldw	r2,-20(fp)
    d868:	10800217 	ldw	r2,8(r2)
    d86c:	108000cc 	andi	r2,r2,3
    d870:	10800060 	cmpeqi	r2,r2,1
    d874:	1000181e 	bne	r2,zero,d8d8 <read+0xc0>
        (fd->dev->read))
    d878:	e0bffb17 	ldw	r2,-20(fp)
    d87c:	10800017 	ldw	r2,0(r2)
    d880:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d884:	10001426 	beq	r2,zero,d8d8 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d888:	e0bffb17 	ldw	r2,-20(fp)
    d88c:	10800017 	ldw	r2,0(r2)
    d890:	10800517 	ldw	r2,20(r2)
    d894:	e0ffff17 	ldw	r3,-4(fp)
    d898:	180d883a 	mov	r6,r3
    d89c:	e17ffe17 	ldw	r5,-8(fp)
    d8a0:	e13ffb17 	ldw	r4,-20(fp)
    d8a4:	103ee83a 	callr	r2
    d8a8:	e0bffc15 	stw	r2,-16(fp)
    d8ac:	e0bffc17 	ldw	r2,-16(fp)
    d8b0:	1000070e 	bge	r2,zero,d8d0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
    d8b4:	000d7dc0 	call	d7dc <alt_get_errno>
    d8b8:	1007883a 	mov	r3,r2
    d8bc:	e0bffc17 	ldw	r2,-16(fp)
    d8c0:	0085c83a 	sub	r2,zero,r2
    d8c4:	18800015 	stw	r2,0(r3)
          return -1;
    d8c8:	00bfffc4 	movi	r2,-1
    d8cc:	00000c06 	br	d900 <read+0xe8>
        }
        return rval;
    d8d0:	e0bffc17 	ldw	r2,-16(fp)
    d8d4:	00000a06 	br	d900 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d8d8:	000d7dc0 	call	d7dc <alt_get_errno>
    d8dc:	1007883a 	mov	r3,r2
    d8e0:	00800344 	movi	r2,13
    d8e4:	18800015 	stw	r2,0(r3)
    d8e8:	00000406 	br	d8fc <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d8ec:	000d7dc0 	call	d7dc <alt_get_errno>
    d8f0:	1007883a 	mov	r3,r2
    d8f4:	00801444 	movi	r2,81
    d8f8:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d8fc:	00bfffc4 	movi	r2,-1
}
    d900:	e037883a 	mov	sp,fp
    d904:	dfc00117 	ldw	ra,4(sp)
    d908:	df000017 	ldw	fp,0(sp)
    d90c:	dec00204 	addi	sp,sp,8
    d910:	f800283a 	ret

0000d914 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d914:	defffe04 	addi	sp,sp,-8
    d918:	df000115 	stw	fp,4(sp)
    d91c:	df000104 	addi	fp,sp,4
    d920:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d924:	e0bfff17 	ldw	r2,-4(fp)
    d928:	108000d0 	cmplti	r2,r2,3
    d92c:	10000d1e 	bne	r2,zero,d964 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    d930:	00800074 	movhi	r2,1
    d934:	1085b204 	addi	r2,r2,5832
    d938:	e0ffff17 	ldw	r3,-4(fp)
    d93c:	18c00324 	muli	r3,r3,12
    d940:	10c5883a 	add	r2,r2,r3
    d944:	10800204 	addi	r2,r2,8
    d948:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d94c:	00800074 	movhi	r2,1
    d950:	1085b204 	addi	r2,r2,5832
    d954:	e0ffff17 	ldw	r3,-4(fp)
    d958:	18c00324 	muli	r3,r3,12
    d95c:	10c5883a 	add	r2,r2,r3
    d960:	10000015 	stw	zero,0(r2)
  }
}
    d964:	0001883a 	nop
    d968:	e037883a 	mov	sp,fp
    d96c:	df000017 	ldw	fp,0(sp)
    d970:	dec00104 	addi	sp,sp,4
    d974:	f800283a 	ret

0000d978 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d978:	defff904 	addi	sp,sp,-28
    d97c:	df000615 	stw	fp,24(sp)
    d980:	df000604 	addi	fp,sp,24
    d984:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d988:	0005303a 	rdctl	r2,status
    d98c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d990:	e0fffe17 	ldw	r3,-8(fp)
    d994:	00bfff84 	movi	r2,-2
    d998:	1884703a 	and	r2,r3,r2
    d99c:	1001703a 	wrctl	status,r2
  
  return context;
    d9a0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d9a4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d9a8:	d0a00c17 	ldw	r2,-32720(gp)
    d9ac:	10c000c4 	addi	r3,r2,3
    d9b0:	00bfff04 	movi	r2,-4
    d9b4:	1884703a 	and	r2,r3,r2
    d9b8:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d9bc:	d0e00c17 	ldw	r3,-32720(gp)
    d9c0:	e0bfff17 	ldw	r2,-4(fp)
    d9c4:	1887883a 	add	r3,r3,r2
    d9c8:	00808034 	movhi	r2,512
    d9cc:	10800004 	addi	r2,r2,0
    d9d0:	10c0062e 	bgeu	r2,r3,d9ec <sbrk+0x74>
    d9d4:	e0bffb17 	ldw	r2,-20(fp)
    d9d8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d9dc:	e0bffa17 	ldw	r2,-24(fp)
    d9e0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d9e4:	00bfffc4 	movi	r2,-1
    d9e8:	00000b06 	br	da18 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d9ec:	d0a00c17 	ldw	r2,-32720(gp)
    d9f0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    d9f4:	d0e00c17 	ldw	r3,-32720(gp)
    d9f8:	e0bfff17 	ldw	r2,-4(fp)
    d9fc:	1885883a 	add	r2,r3,r2
    da00:	d0a00c15 	stw	r2,-32720(gp)
    da04:	e0bffb17 	ldw	r2,-20(fp)
    da08:	e0bffc15 	stw	r2,-16(fp)
    da0c:	e0bffc17 	ldw	r2,-16(fp)
    da10:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    da14:	e0bffd17 	ldw	r2,-12(fp)
} 
    da18:	e037883a 	mov	sp,fp
    da1c:	df000017 	ldw	fp,0(sp)
    da20:	dec00104 	addi	sp,sp,4
    da24:	f800283a 	ret

0000da28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    da28:	defffe04 	addi	sp,sp,-8
    da2c:	dfc00115 	stw	ra,4(sp)
    da30:	df000015 	stw	fp,0(sp)
    da34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    da38:	d0a00b17 	ldw	r2,-32724(gp)
    da3c:	10000326 	beq	r2,zero,da4c <alt_get_errno+0x24>
    da40:	d0a00b17 	ldw	r2,-32724(gp)
    da44:	103ee83a 	callr	r2
    da48:	00000106 	br	da50 <alt_get_errno+0x28>
    da4c:	d0a75e04 	addi	r2,gp,-25224
}
    da50:	e037883a 	mov	sp,fp
    da54:	dfc00117 	ldw	ra,4(sp)
    da58:	df000017 	ldw	fp,0(sp)
    da5c:	dec00204 	addi	sp,sp,8
    da60:	f800283a 	ret

0000da64 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    da64:	defff904 	addi	sp,sp,-28
    da68:	dfc00615 	stw	ra,24(sp)
    da6c:	df000515 	stw	fp,20(sp)
    da70:	df000504 	addi	fp,sp,20
    da74:	e13ffd15 	stw	r4,-12(fp)
    da78:	e17ffe15 	stw	r5,-8(fp)
    da7c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    da80:	e0bffd17 	ldw	r2,-12(fp)
    da84:	10000616 	blt	r2,zero,daa0 <write+0x3c>
    da88:	e0bffd17 	ldw	r2,-12(fp)
    da8c:	10c00324 	muli	r3,r2,12
    da90:	00800074 	movhi	r2,1
    da94:	1085b204 	addi	r2,r2,5832
    da98:	1885883a 	add	r2,r3,r2
    da9c:	00000106 	br	daa4 <write+0x40>
    daa0:	0005883a 	mov	r2,zero
    daa4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    daa8:	e0bffb17 	ldw	r2,-20(fp)
    daac:	10002126 	beq	r2,zero,db34 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dab0:	e0bffb17 	ldw	r2,-20(fp)
    dab4:	10800217 	ldw	r2,8(r2)
    dab8:	108000cc 	andi	r2,r2,3
    dabc:	10001826 	beq	r2,zero,db20 <write+0xbc>
    dac0:	e0bffb17 	ldw	r2,-20(fp)
    dac4:	10800017 	ldw	r2,0(r2)
    dac8:	10800617 	ldw	r2,24(r2)
    dacc:	10001426 	beq	r2,zero,db20 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dad0:	e0bffb17 	ldw	r2,-20(fp)
    dad4:	10800017 	ldw	r2,0(r2)
    dad8:	10800617 	ldw	r2,24(r2)
    dadc:	e0ffff17 	ldw	r3,-4(fp)
    dae0:	180d883a 	mov	r6,r3
    dae4:	e17ffe17 	ldw	r5,-8(fp)
    dae8:	e13ffb17 	ldw	r4,-20(fp)
    daec:	103ee83a 	callr	r2
    daf0:	e0bffc15 	stw	r2,-16(fp)
    daf4:	e0bffc17 	ldw	r2,-16(fp)
    daf8:	1000070e 	bge	r2,zero,db18 <write+0xb4>
      {
        ALT_ERRNO = -rval;
    dafc:	000da280 	call	da28 <alt_get_errno>
    db00:	1007883a 	mov	r3,r2
    db04:	e0bffc17 	ldw	r2,-16(fp)
    db08:	0085c83a 	sub	r2,zero,r2
    db0c:	18800015 	stw	r2,0(r3)
        return -1;
    db10:	00bfffc4 	movi	r2,-1
    db14:	00000c06 	br	db48 <write+0xe4>
      }
      return rval;
    db18:	e0bffc17 	ldw	r2,-16(fp)
    db1c:	00000a06 	br	db48 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    db20:	000da280 	call	da28 <alt_get_errno>
    db24:	1007883a 	mov	r3,r2
    db28:	00800344 	movi	r2,13
    db2c:	18800015 	stw	r2,0(r3)
    db30:	00000406 	br	db44 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    db34:	000da280 	call	da28 <alt_get_errno>
    db38:	1007883a 	mov	r3,r2
    db3c:	00801444 	movi	r2,81
    db40:	18800015 	stw	r2,0(r3)
  }
  return -1;
    db44:	00bfffc4 	movi	r2,-1
}
    db48:	e037883a 	mov	sp,fp
    db4c:	dfc00117 	ldw	ra,4(sp)
    db50:	df000017 	ldw	fp,0(sp)
    db54:	dec00204 	addi	sp,sp,8
    db58:	f800283a 	ret

0000db5c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    db5c:	defffd04 	addi	sp,sp,-12
    db60:	dfc00215 	stw	ra,8(sp)
    db64:	df000115 	stw	fp,4(sp)
    db68:	df000104 	addi	fp,sp,4
    db6c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    db70:	d1600804 	addi	r5,gp,-32736
    db74:	e13fff17 	ldw	r4,-4(fp)
    db78:	000fa6c0 	call	fa6c <alt_dev_llist_insert>
}
    db7c:	e037883a 	mov	sp,fp
    db80:	dfc00117 	ldw	ra,4(sp)
    db84:	df000017 	ldw	fp,0(sp)
    db88:	dec00204 	addi	sp,sp,8
    db8c:	f800283a 	ret

0000db90 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    db90:	defffd04 	addi	sp,sp,-12
    db94:	dfc00215 	stw	ra,8(sp)
    db98:	df000115 	stw	fp,4(sp)
    db9c:	df000104 	addi	fp,sp,4
    dba0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
    dba4:	001034c0 	call	1034c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    dba8:	00800044 	movi	r2,1
    dbac:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    dbb0:	0001883a 	nop
    dbb4:	e037883a 	mov	sp,fp
    dbb8:	dfc00117 	ldw	ra,4(sp)
    dbbc:	df000017 	ldw	fp,0(sp)
    dbc0:	dec00204 	addi	sp,sp,8
    dbc4:	f800283a 	ret

0000dbc8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    dbc8:	defffc04 	addi	sp,sp,-16
    dbcc:	dfc00315 	stw	ra,12(sp)
    dbd0:	df000215 	stw	fp,8(sp)
    dbd4:	df000204 	addi	fp,sp,8
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
    dbd8:	01c00204 	movi	r7,8
    dbdc:	000d883a 	mov	r6,zero
    dbe0:	000b883a 	mov	r5,zero
    dbe4:	013fc834 	movhi	r4,65312
    dbe8:	21080004 	addi	r4,r4,8192
    dbec:	000ee340 	call	ee34 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    dbf0:	01800204 	movi	r6,8
    dbf4:	000b883a 	mov	r5,zero
    dbf8:	01000074 	movhi	r4,1
    dbfc:	21061c04 	addi	r4,r4,6256
    dc00:	000e4bc0 	call	e4bc <altera_avalon_jtag_uart_init>
    dc04:	01000074 	movhi	r4,1
    dc08:	21061204 	addi	r4,r4,6216
    dc0c:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
    dc10:	0001883a 	nop
    ALTERA_UP_AVALON_ADC_INIT ( ADC, ADC);
    dc14:	01000074 	movhi	r4,1
    dc18:	210a2a04 	addi	r4,r4,10408
    dc1c:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AV_CONFIG, AV_Config);
    dc20:	01000074 	movhi	r4,1
    dc24:	210a3504 	addi	r4,r4,10452
    dc28:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_SUBSYSTEM_AUDIO, Audio_Subsystem_Audio);
    dc2c:	01000074 	movhi	r4,1
    dc30:	210a4104 	addi	r4,r4,10500
    dc34:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_IRDA_INIT ( IRDA, IrDA);
    dc38:	01000074 	movhi	r4,1
    dc3c:	210a4d04 	addi	r4,r4,10548
    dc40:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT, PS2_Port);
    dc44:	01000074 	movhi	r4,1
    dc48:	210a5804 	addi	r4,r4,10592
    dc4c:	000f35c0 	call	f35c <alt_up_ps2_init>
    dc50:	01000074 	movhi	r4,1
    dc54:	210a5804 	addi	r4,r4,10592
    dc58:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_PS2_INIT ( PS2_PORT_DUAL, PS2_Port_Dual);
    dc5c:	01000074 	movhi	r4,1
    dc60:	210a6604 	addi	r4,r4,10648
    dc64:	000f35c0 	call	f35c <alt_up_ps2_init>
    dc68:	01000074 	movhi	r4,1
    dc6c:	210a6604 	addi	r4,r4,10648
    dc70:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VGA_SUBSYSTEM_CHAR_BUF_SUBSYSTEM_CHAR_BUF_DMA, VGA_Subsystem_Char_Buf_Subsystem_Char_Buf_DMA);
    dc74:	00800074 	movhi	r2,1
    dc78:	108a7404 	addi	r2,r2,10704
    dc7c:	10800a17 	ldw	r2,40(r2)
    dc80:	10800017 	ldw	r2,0(r2)
    dc84:	1007883a 	mov	r3,r2
    dc88:	00800074 	movhi	r2,1
    dc8c:	108a7404 	addi	r2,r2,10704
    dc90:	10c00b15 	stw	r3,44(r2)
    dc94:	00800074 	movhi	r2,1
    dc98:	108a7404 	addi	r2,r2,10704
    dc9c:	10800a17 	ldw	r2,40(r2)
    dca0:	10800104 	addi	r2,r2,4
    dca4:	10800017 	ldw	r2,0(r2)
    dca8:	1007883a 	mov	r3,r2
    dcac:	00800074 	movhi	r2,1
    dcb0:	108a7404 	addi	r2,r2,10704
    dcb4:	10c00c15 	stw	r3,48(r2)
    dcb8:	00800074 	movhi	r2,1
    dcbc:	108a7404 	addi	r2,r2,10704
    dcc0:	10800a17 	ldw	r2,40(r2)
    dcc4:	10800204 	addi	r2,r2,8
    dcc8:	10800017 	ldw	r2,0(r2)
    dccc:	10ffffcc 	andi	r3,r2,65535
    dcd0:	00800074 	movhi	r2,1
    dcd4:	108a7404 	addi	r2,r2,10704
    dcd8:	10c01115 	stw	r3,68(r2)
    dcdc:	00800074 	movhi	r2,1
    dce0:	108a7404 	addi	r2,r2,10704
    dce4:	10800a17 	ldw	r2,40(r2)
    dce8:	10800204 	addi	r2,r2,8
    dcec:	10800017 	ldw	r2,0(r2)
    dcf0:	1006d43a 	srli	r3,r2,16
    dcf4:	00800074 	movhi	r2,1
    dcf8:	108a7404 	addi	r2,r2,10704
    dcfc:	10c01215 	stw	r3,72(r2)
    dd00:	00800074 	movhi	r2,1
    dd04:	108a7404 	addi	r2,r2,10704
    dd08:	10800a17 	ldw	r2,40(r2)
    dd0c:	10800304 	addi	r2,r2,12
    dd10:	10800017 	ldw	r2,0(r2)
    dd14:	1005d07a 	srai	r2,r2,1
    dd18:	10c0004c 	andi	r3,r2,1
    dd1c:	00800074 	movhi	r2,1
    dd20:	108a7404 	addi	r2,r2,10704
    dd24:	10c00d15 	stw	r3,52(r2)
    dd28:	00800074 	movhi	r2,1
    dd2c:	108a7404 	addi	r2,r2,10704
    dd30:	10800a17 	ldw	r2,40(r2)
    dd34:	10800304 	addi	r2,r2,12
    dd38:	10800017 	ldw	r2,0(r2)
    dd3c:	1005d23a 	srai	r2,r2,8
    dd40:	10c003cc 	andi	r3,r2,15
    dd44:	00800074 	movhi	r2,1
    dd48:	108a7404 	addi	r2,r2,10704
    dd4c:	10c00e15 	stw	r3,56(r2)
    dd50:	00800074 	movhi	r2,1
    dd54:	108a7404 	addi	r2,r2,10704
    dd58:	10800a17 	ldw	r2,40(r2)
    dd5c:	10800304 	addi	r2,r2,12
    dd60:	10800017 	ldw	r2,0(r2)
    dd64:	1005d1ba 	srai	r2,r2,6
    dd68:	10c000cc 	andi	r3,r2,3
    dd6c:	00800074 	movhi	r2,1
    dd70:	108a7404 	addi	r2,r2,10704
    dd74:	10c00f15 	stw	r3,60(r2)
    dd78:	00800074 	movhi	r2,1
    dd7c:	108a7404 	addi	r2,r2,10704
    dd80:	10800e17 	ldw	r2,56(r2)
    dd84:	1007883a 	mov	r3,r2
    dd88:	00800074 	movhi	r2,1
    dd8c:	108a7404 	addi	r2,r2,10704
    dd90:	10800f17 	ldw	r2,60(r2)
    dd94:	1885383a 	mul	r2,r3,r2
    dd98:	e0bffe05 	stb	r2,-8(fp)
    dd9c:	e0bffe03 	ldbu	r2,-8(fp)
    dda0:	10800268 	cmpgeui	r2,r2,9
    dda4:	1000051e 	bne	r2,zero,ddbc <alt_sys_init+0x1f4>
    dda8:	00800074 	movhi	r2,1
    ddac:	108a7404 	addi	r2,r2,10704
    ddb0:	00c00044 	movi	r3,1
    ddb4:	10c01015 	stw	r3,64(r2)
    ddb8:	00000c06 	br	ddec <alt_sys_init+0x224>
    ddbc:	e0bffe03 	ldbu	r2,-8(fp)
    ddc0:	10800468 	cmpgeui	r2,r2,17
    ddc4:	1000051e 	bne	r2,zero,dddc <alt_sys_init+0x214>
    ddc8:	00800074 	movhi	r2,1
    ddcc:	108a7404 	addi	r2,r2,10704
    ddd0:	00c00084 	movi	r3,2
    ddd4:	10c01015 	stw	r3,64(r2)
    ddd8:	00000406 	br	ddec <alt_sys_init+0x224>
    dddc:	00800074 	movhi	r2,1
    dde0:	108a7404 	addi	r2,r2,10704
    dde4:	00c00104 	movi	r3,4
    dde8:	10c01015 	stw	r3,64(r2)
    ddec:	00800074 	movhi	r2,1
    ddf0:	108a7404 	addi	r2,r2,10704
    ddf4:	10800a17 	ldw	r2,40(r2)
    ddf8:	10800304 	addi	r2,r2,12
    ddfc:	10800017 	ldw	r2,0(r2)
    de00:	1005d43a 	srai	r2,r2,16
    de04:	e0bffe45 	stb	r2,-7(fp)
    de08:	00800074 	movhi	r2,1
    de0c:	108a7404 	addi	r2,r2,10704
    de10:	10800a17 	ldw	r2,40(r2)
    de14:	10800304 	addi	r2,r2,12
    de18:	10800017 	ldw	r2,0(r2)
    de1c:	1004d63a 	srli	r2,r2,24
    de20:	e0bffe85 	stb	r2,-6(fp)
    de24:	00800074 	movhi	r2,1
    de28:	108a7404 	addi	r2,r2,10704
    de2c:	10801017 	ldw	r2,64(r2)
    de30:	10800058 	cmpnei	r2,r2,1
    de34:	1000041e 	bne	r2,zero,de48 <alt_sys_init+0x280>
    de38:	00800074 	movhi	r2,1
    de3c:	108a7404 	addi	r2,r2,10704
    de40:	10001315 	stw	zero,76(r2)
    de44:	00000e06 	br	de80 <alt_sys_init+0x2b8>
    de48:	00800074 	movhi	r2,1
    de4c:	108a7404 	addi	r2,r2,10704
    de50:	10801017 	ldw	r2,64(r2)
    de54:	10800098 	cmpnei	r2,r2,2
    de58:	1000051e 	bne	r2,zero,de70 <alt_sys_init+0x2a8>
    de5c:	00800074 	movhi	r2,1
    de60:	108a7404 	addi	r2,r2,10704
    de64:	00c00044 	movi	r3,1
    de68:	10c01315 	stw	r3,76(r2)
    de6c:	00000406 	br	de80 <alt_sys_init+0x2b8>
    de70:	00800074 	movhi	r2,1
    de74:	108a7404 	addi	r2,r2,10704
    de78:	00c00084 	movi	r3,2
    de7c:	10c01315 	stw	r3,76(r2)
    de80:	e0bffe43 	ldbu	r2,-7(fp)
    de84:	00c00804 	movi	r3,32
    de88:	1885c83a 	sub	r2,r3,r2
    de8c:	00ffffc4 	movi	r3,-1
    de90:	1886d83a 	srl	r3,r3,r2
    de94:	00800074 	movhi	r2,1
    de98:	108a7404 	addi	r2,r2,10704
    de9c:	10c01415 	stw	r3,80(r2)
    dea0:	e0fffe43 	ldbu	r3,-7(fp)
    dea4:	00800074 	movhi	r2,1
    dea8:	108a7404 	addi	r2,r2,10704
    deac:	10801317 	ldw	r2,76(r2)
    deb0:	1887883a 	add	r3,r3,r2
    deb4:	00800074 	movhi	r2,1
    deb8:	108a7404 	addi	r2,r2,10704
    debc:	10c01515 	stw	r3,84(r2)
    dec0:	e0bffe83 	ldbu	r2,-6(fp)
    dec4:	00c00804 	movi	r3,32
    dec8:	1885c83a 	sub	r2,r3,r2
    decc:	00ffffc4 	movi	r3,-1
    ded0:	1886d83a 	srl	r3,r3,r2
    ded4:	00800074 	movhi	r2,1
    ded8:	108a7404 	addi	r2,r2,10704
    dedc:	10c01615 	stw	r3,88(r2)
    dee0:	01000074 	movhi	r4,1
    dee4:	210a7404 	addi	r4,r4,10704
    dee8:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_DMA_CONTROLLER_INIT ( VIDEO_IN_SUBSYSTEM_VIDEO_IN_DMA, Video_In_Subsystem_Video_In_DMA);
    deec:	00800074 	movhi	r2,1
    def0:	108a8b04 	addi	r2,r2,10796
    def4:	10800a17 	ldw	r2,40(r2)
    def8:	10800017 	ldw	r2,0(r2)
    defc:	1007883a 	mov	r3,r2
    df00:	00800074 	movhi	r2,1
    df04:	108a8b04 	addi	r2,r2,10796
    df08:	10c00b15 	stw	r3,44(r2)
    df0c:	00800074 	movhi	r2,1
    df10:	108a8b04 	addi	r2,r2,10796
    df14:	10800a17 	ldw	r2,40(r2)
    df18:	10800104 	addi	r2,r2,4
    df1c:	10800017 	ldw	r2,0(r2)
    df20:	1007883a 	mov	r3,r2
    df24:	00800074 	movhi	r2,1
    df28:	108a8b04 	addi	r2,r2,10796
    df2c:	10c00c15 	stw	r3,48(r2)
    df30:	00800074 	movhi	r2,1
    df34:	108a8b04 	addi	r2,r2,10796
    df38:	10800a17 	ldw	r2,40(r2)
    df3c:	10800204 	addi	r2,r2,8
    df40:	10800017 	ldw	r2,0(r2)
    df44:	10ffffcc 	andi	r3,r2,65535
    df48:	00800074 	movhi	r2,1
    df4c:	108a8b04 	addi	r2,r2,10796
    df50:	10c01115 	stw	r3,68(r2)
    df54:	00800074 	movhi	r2,1
    df58:	108a8b04 	addi	r2,r2,10796
    df5c:	10800a17 	ldw	r2,40(r2)
    df60:	10800204 	addi	r2,r2,8
    df64:	10800017 	ldw	r2,0(r2)
    df68:	1006d43a 	srli	r3,r2,16
    df6c:	00800074 	movhi	r2,1
    df70:	108a8b04 	addi	r2,r2,10796
    df74:	10c01215 	stw	r3,72(r2)
    df78:	00800074 	movhi	r2,1
    df7c:	108a8b04 	addi	r2,r2,10796
    df80:	10800a17 	ldw	r2,40(r2)
    df84:	10800304 	addi	r2,r2,12
    df88:	10800017 	ldw	r2,0(r2)
    df8c:	1005d07a 	srai	r2,r2,1
    df90:	10c0004c 	andi	r3,r2,1
    df94:	00800074 	movhi	r2,1
    df98:	108a8b04 	addi	r2,r2,10796
    df9c:	10c00d15 	stw	r3,52(r2)
    dfa0:	00800074 	movhi	r2,1
    dfa4:	108a8b04 	addi	r2,r2,10796
    dfa8:	10800a17 	ldw	r2,40(r2)
    dfac:	10800304 	addi	r2,r2,12
    dfb0:	10800017 	ldw	r2,0(r2)
    dfb4:	1005d23a 	srai	r2,r2,8
    dfb8:	10c003cc 	andi	r3,r2,15
    dfbc:	00800074 	movhi	r2,1
    dfc0:	108a8b04 	addi	r2,r2,10796
    dfc4:	10c00e15 	stw	r3,56(r2)
    dfc8:	00800074 	movhi	r2,1
    dfcc:	108a8b04 	addi	r2,r2,10796
    dfd0:	10800a17 	ldw	r2,40(r2)
    dfd4:	10800304 	addi	r2,r2,12
    dfd8:	10800017 	ldw	r2,0(r2)
    dfdc:	1005d1ba 	srai	r2,r2,6
    dfe0:	10c000cc 	andi	r3,r2,3
    dfe4:	00800074 	movhi	r2,1
    dfe8:	108a8b04 	addi	r2,r2,10796
    dfec:	10c00f15 	stw	r3,60(r2)
    dff0:	00800074 	movhi	r2,1
    dff4:	108a8b04 	addi	r2,r2,10796
    dff8:	10800e17 	ldw	r2,56(r2)
    dffc:	1007883a 	mov	r3,r2
    e000:	00800074 	movhi	r2,1
    e004:	108a8b04 	addi	r2,r2,10796
    e008:	10800f17 	ldw	r2,60(r2)
    e00c:	1885383a 	mul	r2,r3,r2
    e010:	e0bffec5 	stb	r2,-5(fp)
    e014:	e0bffec3 	ldbu	r2,-5(fp)
    e018:	10800268 	cmpgeui	r2,r2,9
    e01c:	1000051e 	bne	r2,zero,e034 <alt_sys_init+0x46c>
    e020:	00800074 	movhi	r2,1
    e024:	108a8b04 	addi	r2,r2,10796
    e028:	00c00044 	movi	r3,1
    e02c:	10c01015 	stw	r3,64(r2)
    e030:	00000c06 	br	e064 <alt_sys_init+0x49c>
    e034:	e0bffec3 	ldbu	r2,-5(fp)
    e038:	10800468 	cmpgeui	r2,r2,17
    e03c:	1000051e 	bne	r2,zero,e054 <alt_sys_init+0x48c>
    e040:	00800074 	movhi	r2,1
    e044:	108a8b04 	addi	r2,r2,10796
    e048:	00c00084 	movi	r3,2
    e04c:	10c01015 	stw	r3,64(r2)
    e050:	00000406 	br	e064 <alt_sys_init+0x49c>
    e054:	00800074 	movhi	r2,1
    e058:	108a8b04 	addi	r2,r2,10796
    e05c:	00c00104 	movi	r3,4
    e060:	10c01015 	stw	r3,64(r2)
    e064:	00800074 	movhi	r2,1
    e068:	108a8b04 	addi	r2,r2,10796
    e06c:	10800a17 	ldw	r2,40(r2)
    e070:	10800304 	addi	r2,r2,12
    e074:	10800017 	ldw	r2,0(r2)
    e078:	1005d43a 	srai	r2,r2,16
    e07c:	e0bfff05 	stb	r2,-4(fp)
    e080:	00800074 	movhi	r2,1
    e084:	108a8b04 	addi	r2,r2,10796
    e088:	10800a17 	ldw	r2,40(r2)
    e08c:	10800304 	addi	r2,r2,12
    e090:	10800017 	ldw	r2,0(r2)
    e094:	1004d63a 	srli	r2,r2,24
    e098:	e0bfff45 	stb	r2,-3(fp)
    e09c:	00800074 	movhi	r2,1
    e0a0:	108a8b04 	addi	r2,r2,10796
    e0a4:	10801017 	ldw	r2,64(r2)
    e0a8:	10800058 	cmpnei	r2,r2,1
    e0ac:	1000041e 	bne	r2,zero,e0c0 <alt_sys_init+0x4f8>
    e0b0:	00800074 	movhi	r2,1
    e0b4:	108a8b04 	addi	r2,r2,10796
    e0b8:	10001315 	stw	zero,76(r2)
    e0bc:	00000e06 	br	e0f8 <alt_sys_init+0x530>
    e0c0:	00800074 	movhi	r2,1
    e0c4:	108a8b04 	addi	r2,r2,10796
    e0c8:	10801017 	ldw	r2,64(r2)
    e0cc:	10800098 	cmpnei	r2,r2,2
    e0d0:	1000051e 	bne	r2,zero,e0e8 <alt_sys_init+0x520>
    e0d4:	00800074 	movhi	r2,1
    e0d8:	108a8b04 	addi	r2,r2,10796
    e0dc:	00c00044 	movi	r3,1
    e0e0:	10c01315 	stw	r3,76(r2)
    e0e4:	00000406 	br	e0f8 <alt_sys_init+0x530>
    e0e8:	00800074 	movhi	r2,1
    e0ec:	108a8b04 	addi	r2,r2,10796
    e0f0:	00c00084 	movi	r3,2
    e0f4:	10c01315 	stw	r3,76(r2)
    e0f8:	e0bfff03 	ldbu	r2,-4(fp)
    e0fc:	00c00804 	movi	r3,32
    e100:	1885c83a 	sub	r2,r3,r2
    e104:	00ffffc4 	movi	r3,-1
    e108:	1886d83a 	srl	r3,r3,r2
    e10c:	00800074 	movhi	r2,1
    e110:	108a8b04 	addi	r2,r2,10796
    e114:	10c01415 	stw	r3,80(r2)
    e118:	e0ffff03 	ldbu	r3,-4(fp)
    e11c:	00800074 	movhi	r2,1
    e120:	108a8b04 	addi	r2,r2,10796
    e124:	10801317 	ldw	r2,76(r2)
    e128:	1887883a 	add	r3,r3,r2
    e12c:	00800074 	movhi	r2,1
    e130:	108a8b04 	addi	r2,r2,10796
    e134:	10c01515 	stw	r3,84(r2)
    e138:	e0bfff43 	ldbu	r2,-3(fp)
    e13c:	00c00804 	movi	r3,32
    e140:	1885c83a 	sub	r2,r3,r2
    e144:	00ffffc4 	movi	r3,-1
    e148:	1886d83a 	srl	r3,r3,r2
    e14c:	00800074 	movhi	r2,1
    e150:	108a8b04 	addi	r2,r2,10796
    e154:	10c01615 	stw	r3,88(r2)
    e158:	01000074 	movhi	r4,1
    e15c:	210a8b04 	addi	r4,r4,10796
    e160:	000db5c0 	call	db5c <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_PIXEL_BUFFER_DMA_INIT ( VGA_SUBSYSTEM_VGA_PIXEL_DMA, VGA_Subsystem_VGA_Pixel_DMA);
    e164:	00800074 	movhi	r2,1
    e168:	108aa204 	addi	r2,r2,10888
    e16c:	10800a17 	ldw	r2,40(r2)
    e170:	10800017 	ldw	r2,0(r2)
    e174:	1007883a 	mov	r3,r2
    e178:	00800074 	movhi	r2,1
    e17c:	108aa204 	addi	r2,r2,10888
    e180:	10c00b15 	stw	r3,44(r2)
    e184:	00800074 	movhi	r2,1
    e188:	108aa204 	addi	r2,r2,10888
    e18c:	10800a17 	ldw	r2,40(r2)
    e190:	10800104 	addi	r2,r2,4
    e194:	10800017 	ldw	r2,0(r2)
    e198:	1007883a 	mov	r3,r2
    e19c:	00800074 	movhi	r2,1
    e1a0:	108aa204 	addi	r2,r2,10888
    e1a4:	10c00c15 	stw	r3,48(r2)
    e1a8:	00800074 	movhi	r2,1
    e1ac:	108aa204 	addi	r2,r2,10888
    e1b0:	10800a17 	ldw	r2,40(r2)
    e1b4:	10800204 	addi	r2,r2,8
    e1b8:	10800017 	ldw	r2,0(r2)
    e1bc:	10ffffcc 	andi	r3,r2,65535
    e1c0:	00800074 	movhi	r2,1
    e1c4:	108aa204 	addi	r2,r2,10888
    e1c8:	10c00f15 	stw	r3,60(r2)
    e1cc:	00800074 	movhi	r2,1
    e1d0:	108aa204 	addi	r2,r2,10888
    e1d4:	10800a17 	ldw	r2,40(r2)
    e1d8:	10800204 	addi	r2,r2,8
    e1dc:	10800017 	ldw	r2,0(r2)
    e1e0:	1006d43a 	srli	r3,r2,16
    e1e4:	00800074 	movhi	r2,1
    e1e8:	108aa204 	addi	r2,r2,10888
    e1ec:	10c01015 	stw	r3,64(r2)
    e1f0:	00800074 	movhi	r2,1
    e1f4:	108aa204 	addi	r2,r2,10888
    e1f8:	10800a17 	ldw	r2,40(r2)
    e1fc:	10800304 	addi	r2,r2,12
    e200:	10800017 	ldw	r2,0(r2)
    e204:	1005d07a 	srai	r2,r2,1
    e208:	10c0004c 	andi	r3,r2,1
    e20c:	00800074 	movhi	r2,1
    e210:	108aa204 	addi	r2,r2,10888
    e214:	10c00d15 	stw	r3,52(r2)
    e218:	00800074 	movhi	r2,1
    e21c:	108aa204 	addi	r2,r2,10888
    e220:	10800a17 	ldw	r2,40(r2)
    e224:	10800304 	addi	r2,r2,12
    e228:	10800017 	ldw	r2,0(r2)
    e22c:	1005d13a 	srai	r2,r2,4
    e230:	10c003cc 	andi	r3,r2,15
    e234:	00800074 	movhi	r2,1
    e238:	108aa204 	addi	r2,r2,10888
    e23c:	10c00e15 	stw	r3,56(r2)
    e240:	00800074 	movhi	r2,1
    e244:	108aa204 	addi	r2,r2,10888
    e248:	10800a17 	ldw	r2,40(r2)
    e24c:	10800304 	addi	r2,r2,12
    e250:	10800017 	ldw	r2,0(r2)
    e254:	1005d43a 	srai	r2,r2,16
    e258:	e0bfff85 	stb	r2,-2(fp)
    e25c:	00800074 	movhi	r2,1
    e260:	108aa204 	addi	r2,r2,10888
    e264:	10800a17 	ldw	r2,40(r2)
    e268:	10800304 	addi	r2,r2,12
    e26c:	10800017 	ldw	r2,0(r2)
    e270:	1004d63a 	srli	r2,r2,24
    e274:	e0bfffc5 	stb	r2,-1(fp)
    e278:	00800074 	movhi	r2,1
    e27c:	108aa204 	addi	r2,r2,10888
    e280:	10800e17 	ldw	r2,56(r2)
    e284:	10800058 	cmpnei	r2,r2,1
    e288:	1000041e 	bne	r2,zero,e29c <alt_sys_init+0x6d4>
    e28c:	00800074 	movhi	r2,1
    e290:	108aa204 	addi	r2,r2,10888
    e294:	10001115 	stw	zero,68(r2)
    e298:	00000e06 	br	e2d4 <alt_sys_init+0x70c>
    e29c:	00800074 	movhi	r2,1
    e2a0:	108aa204 	addi	r2,r2,10888
    e2a4:	10800e17 	ldw	r2,56(r2)
    e2a8:	10800098 	cmpnei	r2,r2,2
    e2ac:	1000051e 	bne	r2,zero,e2c4 <alt_sys_init+0x6fc>
    e2b0:	00800074 	movhi	r2,1
    e2b4:	108aa204 	addi	r2,r2,10888
    e2b8:	00c00044 	movi	r3,1
    e2bc:	10c01115 	stw	r3,68(r2)
    e2c0:	00000406 	br	e2d4 <alt_sys_init+0x70c>
    e2c4:	00800074 	movhi	r2,1
    e2c8:	108aa204 	addi	r2,r2,10888
    e2cc:	00c00084 	movi	r3,2
    e2d0:	10c01115 	stw	r3,68(r2)
    e2d4:	e0bfff83 	ldbu	r2,-2(fp)
    e2d8:	00c00804 	movi	r3,32
    e2dc:	1885c83a 	sub	r2,r3,r2
    e2e0:	00ffffc4 	movi	r3,-1
    e2e4:	1886d83a 	srl	r3,r3,r2
    e2e8:	00800074 	movhi	r2,1
    e2ec:	108aa204 	addi	r2,r2,10888
    e2f0:	10c01215 	stw	r3,72(r2)
    e2f4:	e0ffff83 	ldbu	r3,-2(fp)
    e2f8:	00800074 	movhi	r2,1
    e2fc:	108aa204 	addi	r2,r2,10888
    e300:	10801117 	ldw	r2,68(r2)
    e304:	1887883a 	add	r3,r3,r2
    e308:	00800074 	movhi	r2,1
    e30c:	108aa204 	addi	r2,r2,10888
    e310:	10c01315 	stw	r3,76(r2)
    e314:	e0bfffc3 	ldbu	r2,-1(fp)
    e318:	00c00804 	movi	r3,32
    e31c:	1885c83a 	sub	r2,r3,r2
    e320:	00ffffc4 	movi	r3,-1
    e324:	1886d83a 	srl	r3,r3,r2
    e328:	00800074 	movhi	r2,1
    e32c:	108aa204 	addi	r2,r2,10888
    e330:	10c01415 	stw	r3,80(r2)
    e334:	01000074 	movhi	r4,1
    e338:	210aa204 	addi	r4,r4,10888
    e33c:	000db5c0 	call	db5c <alt_dev_reg>
}
    e340:	0001883a 	nop
    e344:	e037883a 	mov	sp,fp
    e348:	dfc00117 	ldw	ra,4(sp)
    e34c:	df000017 	ldw	fp,0(sp)
    e350:	dec00204 	addi	sp,sp,8
    e354:	f800283a 	ret

0000e358 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e358:	defffa04 	addi	sp,sp,-24
    e35c:	dfc00515 	stw	ra,20(sp)
    e360:	df000415 	stw	fp,16(sp)
    e364:	df000404 	addi	fp,sp,16
    e368:	e13ffd15 	stw	r4,-12(fp)
    e36c:	e17ffe15 	stw	r5,-8(fp)
    e370:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e374:	e0bffd17 	ldw	r2,-12(fp)
    e378:	10800017 	ldw	r2,0(r2)
    e37c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e380:	e0bffc17 	ldw	r2,-16(fp)
    e384:	10c00a04 	addi	r3,r2,40
    e388:	e0bffd17 	ldw	r2,-12(fp)
    e38c:	10800217 	ldw	r2,8(r2)
    e390:	100f883a 	mov	r7,r2
    e394:	e1bfff17 	ldw	r6,-4(fp)
    e398:	e17ffe17 	ldw	r5,-8(fp)
    e39c:	1809883a 	mov	r4,r3
    e3a0:	000e9780 	call	e978 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e3a4:	e037883a 	mov	sp,fp
    e3a8:	dfc00117 	ldw	ra,4(sp)
    e3ac:	df000017 	ldw	fp,0(sp)
    e3b0:	dec00204 	addi	sp,sp,8
    e3b4:	f800283a 	ret

0000e3b8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e3b8:	defffa04 	addi	sp,sp,-24
    e3bc:	dfc00515 	stw	ra,20(sp)
    e3c0:	df000415 	stw	fp,16(sp)
    e3c4:	df000404 	addi	fp,sp,16
    e3c8:	e13ffd15 	stw	r4,-12(fp)
    e3cc:	e17ffe15 	stw	r5,-8(fp)
    e3d0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e3d4:	e0bffd17 	ldw	r2,-12(fp)
    e3d8:	10800017 	ldw	r2,0(r2)
    e3dc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e3e0:	e0bffc17 	ldw	r2,-16(fp)
    e3e4:	10c00a04 	addi	r3,r2,40
    e3e8:	e0bffd17 	ldw	r2,-12(fp)
    e3ec:	10800217 	ldw	r2,8(r2)
    e3f0:	100f883a 	mov	r7,r2
    e3f4:	e1bfff17 	ldw	r6,-4(fp)
    e3f8:	e17ffe17 	ldw	r5,-8(fp)
    e3fc:	1809883a 	mov	r4,r3
    e400:	000eb940 	call	eb94 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e404:	e037883a 	mov	sp,fp
    e408:	dfc00117 	ldw	ra,4(sp)
    e40c:	df000017 	ldw	fp,0(sp)
    e410:	dec00204 	addi	sp,sp,8
    e414:	f800283a 	ret

0000e418 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e418:	defffc04 	addi	sp,sp,-16
    e41c:	dfc00315 	stw	ra,12(sp)
    e420:	df000215 	stw	fp,8(sp)
    e424:	df000204 	addi	fp,sp,8
    e428:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e42c:	e0bfff17 	ldw	r2,-4(fp)
    e430:	10800017 	ldw	r2,0(r2)
    e434:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e438:	e0bffe17 	ldw	r2,-8(fp)
    e43c:	10c00a04 	addi	r3,r2,40
    e440:	e0bfff17 	ldw	r2,-4(fp)
    e444:	10800217 	ldw	r2,8(r2)
    e448:	100b883a 	mov	r5,r2
    e44c:	1809883a 	mov	r4,r3
    e450:	000e8200 	call	e820 <altera_avalon_jtag_uart_close>
}
    e454:	e037883a 	mov	sp,fp
    e458:	dfc00117 	ldw	ra,4(sp)
    e45c:	df000017 	ldw	fp,0(sp)
    e460:	dec00204 	addi	sp,sp,8
    e464:	f800283a 	ret

0000e468 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e468:	defffa04 	addi	sp,sp,-24
    e46c:	dfc00515 	stw	ra,20(sp)
    e470:	df000415 	stw	fp,16(sp)
    e474:	df000404 	addi	fp,sp,16
    e478:	e13ffd15 	stw	r4,-12(fp)
    e47c:	e17ffe15 	stw	r5,-8(fp)
    e480:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e484:	e0bffd17 	ldw	r2,-12(fp)
    e488:	10800017 	ldw	r2,0(r2)
    e48c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e490:	e0bffc17 	ldw	r2,-16(fp)
    e494:	10800a04 	addi	r2,r2,40
    e498:	e1bfff17 	ldw	r6,-4(fp)
    e49c:	e17ffe17 	ldw	r5,-8(fp)
    e4a0:	1009883a 	mov	r4,r2
    e4a4:	000e8880 	call	e888 <altera_avalon_jtag_uart_ioctl>
}
    e4a8:	e037883a 	mov	sp,fp
    e4ac:	dfc00117 	ldw	ra,4(sp)
    e4b0:	df000017 	ldw	fp,0(sp)
    e4b4:	dec00204 	addi	sp,sp,8
    e4b8:	f800283a 	ret

0000e4bc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e4bc:	defffb04 	addi	sp,sp,-20
    e4c0:	dfc00415 	stw	ra,16(sp)
    e4c4:	df000315 	stw	fp,12(sp)
    e4c8:	df000304 	addi	fp,sp,12
    e4cc:	e13ffd15 	stw	r4,-12(fp)
    e4d0:	e17ffe15 	stw	r5,-8(fp)
    e4d4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e4d8:	e0bffd17 	ldw	r2,-12(fp)
    e4dc:	00c00044 	movi	r3,1
    e4e0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e4e4:	e0bffd17 	ldw	r2,-12(fp)
    e4e8:	10800017 	ldw	r2,0(r2)
    e4ec:	10800104 	addi	r2,r2,4
    e4f0:	1007883a 	mov	r3,r2
    e4f4:	e0bffd17 	ldw	r2,-12(fp)
    e4f8:	10800817 	ldw	r2,32(r2)
    e4fc:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
    e500:	e0bfff17 	ldw	r2,-4(fp)
    e504:	01800074 	movhi	r6,1
    e508:	31b95c04 	addi	r6,r6,-6800
    e50c:	e17ffd17 	ldw	r5,-12(fp)
    e510:	1009883a 	mov	r4,r2
    e514:	000fdd40 	call	fdd4 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e518:	e0bffd17 	ldw	r2,-12(fp)
    e51c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e520:	e0bffd17 	ldw	r2,-12(fp)
    e524:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e528:	d0e76317 	ldw	r3,-25204(gp)
    e52c:	e1fffd17 	ldw	r7,-12(fp)
    e530:	01800074 	movhi	r6,1
    e534:	31b9e004 	addi	r6,r6,-6272
    e538:	180b883a 	mov	r5,r3
    e53c:	1009883a 	mov	r4,r2
    e540:	000f8e40 	call	f8e4 <alt_alarm_start>
    e544:	1000040e 	bge	r2,zero,e558 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e548:	e0fffd17 	ldw	r3,-12(fp)
    e54c:	00a00034 	movhi	r2,32768
    e550:	10bfffc4 	addi	r2,r2,-1
    e554:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e558:	0001883a 	nop
    e55c:	e037883a 	mov	sp,fp
    e560:	dfc00117 	ldw	ra,4(sp)
    e564:	df000017 	ldw	fp,0(sp)
    e568:	dec00204 	addi	sp,sp,8
    e56c:	f800283a 	ret

0000e570 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e570:	defff704 	addi	sp,sp,-36
    e574:	df000815 	stw	fp,32(sp)
    e578:	df000804 	addi	fp,sp,32
    e57c:	e13ffe15 	stw	r4,-8(fp)
    e580:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e584:	e0bffe17 	ldw	r2,-8(fp)
    e588:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
    e58c:	e0bffa17 	ldw	r2,-24(fp)
    e590:	10800017 	ldw	r2,0(r2)
    e594:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e598:	e0bffb17 	ldw	r2,-20(fp)
    e59c:	10800104 	addi	r2,r2,4
    e5a0:	10800037 	ldwio	r2,0(r2)
    e5a4:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e5a8:	e0bffc17 	ldw	r2,-16(fp)
    e5ac:	1080c00c 	andi	r2,r2,768
    e5b0:	10006d26 	beq	r2,zero,e768 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e5b4:	e0bffc17 	ldw	r2,-16(fp)
    e5b8:	1080400c 	andi	r2,r2,256
    e5bc:	10003526 	beq	r2,zero,e694 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e5c0:	00800074 	movhi	r2,1
    e5c4:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e5c8:	e0bffa17 	ldw	r2,-24(fp)
    e5cc:	10800a17 	ldw	r2,40(r2)
    e5d0:	10800044 	addi	r2,r2,1
    e5d4:	1081ffcc 	andi	r2,r2,2047
    e5d8:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
    e5dc:	e0bffa17 	ldw	r2,-24(fp)
    e5e0:	10c00b17 	ldw	r3,44(r2)
    e5e4:	e0bffd17 	ldw	r2,-12(fp)
    e5e8:	18801526 	beq	r3,r2,e640 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e5ec:	e0bffb17 	ldw	r2,-20(fp)
    e5f0:	10800037 	ldwio	r2,0(r2)
    e5f4:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e5f8:	e0bff817 	ldw	r2,-32(fp)
    e5fc:	10a0000c 	andi	r2,r2,32768
    e600:	10001126 	beq	r2,zero,e648 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e604:	e0bffa17 	ldw	r2,-24(fp)
    e608:	10800a17 	ldw	r2,40(r2)
    e60c:	e0fff817 	ldw	r3,-32(fp)
    e610:	1809883a 	mov	r4,r3
    e614:	e0fffa17 	ldw	r3,-24(fp)
    e618:	1885883a 	add	r2,r3,r2
    e61c:	10800e04 	addi	r2,r2,56
    e620:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e624:	e0bffa17 	ldw	r2,-24(fp)
    e628:	10800a17 	ldw	r2,40(r2)
    e62c:	10800044 	addi	r2,r2,1
    e630:	10c1ffcc 	andi	r3,r2,2047
    e634:	e0bffa17 	ldw	r2,-24(fp)
    e638:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e63c:	003fe206 	br	e5c8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e5c8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e640:	0001883a 	nop
    e644:	00000106 	br	e64c <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e648:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e64c:	e0bff817 	ldw	r2,-32(fp)
    e650:	10bfffec 	andhi	r2,r2,65535
    e654:	10000f26 	beq	r2,zero,e694 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e658:	e0bffa17 	ldw	r2,-24(fp)
    e65c:	10c00817 	ldw	r3,32(r2)
    e660:	00bfff84 	movi	r2,-2
    e664:	1886703a 	and	r3,r3,r2
    e668:	e0bffa17 	ldw	r2,-24(fp)
    e66c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e670:	e0bffb17 	ldw	r2,-20(fp)
    e674:	10800104 	addi	r2,r2,4
    e678:	1007883a 	mov	r3,r2
    e67c:	e0bffa17 	ldw	r2,-24(fp)
    e680:	10800817 	ldw	r2,32(r2)
    e684:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e688:	e0bffb17 	ldw	r2,-20(fp)
    e68c:	10800104 	addi	r2,r2,4
    e690:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e694:	e0bffc17 	ldw	r2,-16(fp)
    e698:	1080800c 	andi	r2,r2,512
    e69c:	103fbe26 	beq	r2,zero,e598 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e598>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e6a0:	e0bffc17 	ldw	r2,-16(fp)
    e6a4:	1004d43a 	srli	r2,r2,16
    e6a8:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e6ac:	00001406 	br	e700 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e6b0:	e0bffb17 	ldw	r2,-20(fp)
    e6b4:	e0fffa17 	ldw	r3,-24(fp)
    e6b8:	18c00d17 	ldw	r3,52(r3)
    e6bc:	e13ffa17 	ldw	r4,-24(fp)
    e6c0:	20c7883a 	add	r3,r4,r3
    e6c4:	18c20e04 	addi	r3,r3,2104
    e6c8:	18c00003 	ldbu	r3,0(r3)
    e6cc:	18c03fcc 	andi	r3,r3,255
    e6d0:	18c0201c 	xori	r3,r3,128
    e6d4:	18ffe004 	addi	r3,r3,-128
    e6d8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e6dc:	e0bffa17 	ldw	r2,-24(fp)
    e6e0:	10800d17 	ldw	r2,52(r2)
    e6e4:	10800044 	addi	r2,r2,1
    e6e8:	10c1ffcc 	andi	r3,r2,2047
    e6ec:	e0bffa17 	ldw	r2,-24(fp)
    e6f0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e6f4:	e0bff917 	ldw	r2,-28(fp)
    e6f8:	10bfffc4 	addi	r2,r2,-1
    e6fc:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e700:	e0bff917 	ldw	r2,-28(fp)
    e704:	10000526 	beq	r2,zero,e71c <altera_avalon_jtag_uart_irq+0x1ac>
    e708:	e0bffa17 	ldw	r2,-24(fp)
    e70c:	10c00d17 	ldw	r3,52(r2)
    e710:	e0bffa17 	ldw	r2,-24(fp)
    e714:	10800c17 	ldw	r2,48(r2)
    e718:	18bfe51e 	bne	r3,r2,e6b0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e6b0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e71c:	e0bff917 	ldw	r2,-28(fp)
    e720:	103f9d26 	beq	r2,zero,e598 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e598>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e724:	e0bffa17 	ldw	r2,-24(fp)
    e728:	10c00817 	ldw	r3,32(r2)
    e72c:	00bfff44 	movi	r2,-3
    e730:	1886703a 	and	r3,r3,r2
    e734:	e0bffa17 	ldw	r2,-24(fp)
    e738:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e73c:	e0bffa17 	ldw	r2,-24(fp)
    e740:	10800017 	ldw	r2,0(r2)
    e744:	10800104 	addi	r2,r2,4
    e748:	1007883a 	mov	r3,r2
    e74c:	e0bffa17 	ldw	r2,-24(fp)
    e750:	10800817 	ldw	r2,32(r2)
    e754:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e758:	e0bffb17 	ldw	r2,-20(fp)
    e75c:	10800104 	addi	r2,r2,4
    e760:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e764:	003f8c06 	br	e598 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e598>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e768:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e76c:	0001883a 	nop
    e770:	e037883a 	mov	sp,fp
    e774:	df000017 	ldw	fp,0(sp)
    e778:	dec00104 	addi	sp,sp,4
    e77c:	f800283a 	ret

0000e780 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e780:	defff804 	addi	sp,sp,-32
    e784:	df000715 	stw	fp,28(sp)
    e788:	df000704 	addi	fp,sp,28
    e78c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e790:	e0bffb17 	ldw	r2,-20(fp)
    e794:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e798:	e0bff917 	ldw	r2,-28(fp)
    e79c:	10800017 	ldw	r2,0(r2)
    e7a0:	10800104 	addi	r2,r2,4
    e7a4:	10800037 	ldwio	r2,0(r2)
    e7a8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e7ac:	e0bffa17 	ldw	r2,-24(fp)
    e7b0:	1081000c 	andi	r2,r2,1024
    e7b4:	10000b26 	beq	r2,zero,e7e4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e7b8:	e0bff917 	ldw	r2,-28(fp)
    e7bc:	10800017 	ldw	r2,0(r2)
    e7c0:	10800104 	addi	r2,r2,4
    e7c4:	1007883a 	mov	r3,r2
    e7c8:	e0bff917 	ldw	r2,-28(fp)
    e7cc:	10800817 	ldw	r2,32(r2)
    e7d0:	10810014 	ori	r2,r2,1024
    e7d4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e7d8:	e0bff917 	ldw	r2,-28(fp)
    e7dc:	10000915 	stw	zero,36(r2)
    e7e0:	00000a06 	br	e80c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e7e4:	e0bff917 	ldw	r2,-28(fp)
    e7e8:	10c00917 	ldw	r3,36(r2)
    e7ec:	00a00034 	movhi	r2,32768
    e7f0:	10bfff04 	addi	r2,r2,-4
    e7f4:	10c00536 	bltu	r2,r3,e80c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e7f8:	e0bff917 	ldw	r2,-28(fp)
    e7fc:	10800917 	ldw	r2,36(r2)
    e800:	10c00044 	addi	r3,r2,1
    e804:	e0bff917 	ldw	r2,-28(fp)
    e808:	10c00915 	stw	r3,36(r2)
    e80c:	d0a76317 	ldw	r2,-25204(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e810:	e037883a 	mov	sp,fp
    e814:	df000017 	ldw	fp,0(sp)
    e818:	dec00104 	addi	sp,sp,4
    e81c:	f800283a 	ret

0000e820 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e820:	defffd04 	addi	sp,sp,-12
    e824:	df000215 	stw	fp,8(sp)
    e828:	df000204 	addi	fp,sp,8
    e82c:	e13ffe15 	stw	r4,-8(fp)
    e830:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e834:	00000506 	br	e84c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e838:	e0bfff17 	ldw	r2,-4(fp)
    e83c:	1090000c 	andi	r2,r2,16384
    e840:	10000226 	beq	r2,zero,e84c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e844:	00bffd44 	movi	r2,-11
    e848:	00000b06 	br	e878 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e84c:	e0bffe17 	ldw	r2,-8(fp)
    e850:	10c00d17 	ldw	r3,52(r2)
    e854:	e0bffe17 	ldw	r2,-8(fp)
    e858:	10800c17 	ldw	r2,48(r2)
    e85c:	18800526 	beq	r3,r2,e874 <altera_avalon_jtag_uart_close+0x54>
    e860:	e0bffe17 	ldw	r2,-8(fp)
    e864:	10c00917 	ldw	r3,36(r2)
    e868:	e0bffe17 	ldw	r2,-8(fp)
    e86c:	10800117 	ldw	r2,4(r2)
    e870:	18bff136 	bltu	r3,r2,e838 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e838>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e874:	0005883a 	mov	r2,zero
}
    e878:	e037883a 	mov	sp,fp
    e87c:	df000017 	ldw	fp,0(sp)
    e880:	dec00104 	addi	sp,sp,4
    e884:	f800283a 	ret

0000e888 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e888:	defffa04 	addi	sp,sp,-24
    e88c:	df000515 	stw	fp,20(sp)
    e890:	df000504 	addi	fp,sp,20
    e894:	e13ffd15 	stw	r4,-12(fp)
    e898:	e17ffe15 	stw	r5,-8(fp)
    e89c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e8a0:	00bff9c4 	movi	r2,-25
    e8a4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e8a8:	e0bffe17 	ldw	r2,-8(fp)
    e8ac:	10da8060 	cmpeqi	r3,r2,27137
    e8b0:	1800031e 	bne	r3,zero,e8c0 <altera_avalon_jtag_uart_ioctl+0x38>
    e8b4:	109a80a0 	cmpeqi	r2,r2,27138
    e8b8:	1000181e 	bne	r2,zero,e91c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e8bc:	00002906 	br	e964 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e8c0:	e0bffd17 	ldw	r2,-12(fp)
    e8c4:	10c00117 	ldw	r3,4(r2)
    e8c8:	00a00034 	movhi	r2,32768
    e8cc:	10bfffc4 	addi	r2,r2,-1
    e8d0:	18802126 	beq	r3,r2,e958 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e8d4:	e0bfff17 	ldw	r2,-4(fp)
    e8d8:	10800017 	ldw	r2,0(r2)
    e8dc:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e8e0:	e0bffc17 	ldw	r2,-16(fp)
    e8e4:	10800090 	cmplti	r2,r2,2
    e8e8:	1000061e 	bne	r2,zero,e904 <altera_avalon_jtag_uart_ioctl+0x7c>
    e8ec:	e0fffc17 	ldw	r3,-16(fp)
    e8f0:	00a00034 	movhi	r2,32768
    e8f4:	10bfffc4 	addi	r2,r2,-1
    e8f8:	18800226 	beq	r3,r2,e904 <altera_avalon_jtag_uart_ioctl+0x7c>
    e8fc:	e0bffc17 	ldw	r2,-16(fp)
    e900:	00000206 	br	e90c <altera_avalon_jtag_uart_ioctl+0x84>
    e904:	00a00034 	movhi	r2,32768
    e908:	10bfff84 	addi	r2,r2,-2
    e90c:	e0fffd17 	ldw	r3,-12(fp)
    e910:	18800115 	stw	r2,4(r3)
      rc = 0;
    e914:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e918:	00000f06 	br	e958 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e91c:	e0bffd17 	ldw	r2,-12(fp)
    e920:	10c00117 	ldw	r3,4(r2)
    e924:	00a00034 	movhi	r2,32768
    e928:	10bfffc4 	addi	r2,r2,-1
    e92c:	18800c26 	beq	r3,r2,e960 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e930:	e0bffd17 	ldw	r2,-12(fp)
    e934:	10c00917 	ldw	r3,36(r2)
    e938:	e0bffd17 	ldw	r2,-12(fp)
    e93c:	10800117 	ldw	r2,4(r2)
    e940:	1885803a 	cmpltu	r2,r3,r2
    e944:	10c03fcc 	andi	r3,r2,255
    e948:	e0bfff17 	ldw	r2,-4(fp)
    e94c:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e950:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e954:	00000206 	br	e960 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e958:	0001883a 	nop
    e95c:	00000106 	br	e964 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    e960:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e964:	e0bffb17 	ldw	r2,-20(fp)
}
    e968:	e037883a 	mov	sp,fp
    e96c:	df000017 	ldw	fp,0(sp)
    e970:	dec00104 	addi	sp,sp,4
    e974:	f800283a 	ret

0000e978 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e978:	defff304 	addi	sp,sp,-52
    e97c:	dfc00c15 	stw	ra,48(sp)
    e980:	df000b15 	stw	fp,44(sp)
    e984:	df000b04 	addi	fp,sp,44
    e988:	e13ffc15 	stw	r4,-16(fp)
    e98c:	e17ffd15 	stw	r5,-12(fp)
    e990:	e1bffe15 	stw	r6,-8(fp)
    e994:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e998:	e0bffd17 	ldw	r2,-12(fp)
    e99c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e9a0:	00004706 	br	eac0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e9a4:	e0bffc17 	ldw	r2,-16(fp)
    e9a8:	10800a17 	ldw	r2,40(r2)
    e9ac:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e9b0:	e0bffc17 	ldw	r2,-16(fp)
    e9b4:	10800b17 	ldw	r2,44(r2)
    e9b8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e9bc:	e0fff717 	ldw	r3,-36(fp)
    e9c0:	e0bff817 	ldw	r2,-32(fp)
    e9c4:	18800536 	bltu	r3,r2,e9dc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e9c8:	e0fff717 	ldw	r3,-36(fp)
    e9cc:	e0bff817 	ldw	r2,-32(fp)
    e9d0:	1885c83a 	sub	r2,r3,r2
    e9d4:	e0bff615 	stw	r2,-40(fp)
    e9d8:	00000406 	br	e9ec <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e9dc:	00c20004 	movi	r3,2048
    e9e0:	e0bff817 	ldw	r2,-32(fp)
    e9e4:	1885c83a 	sub	r2,r3,r2
    e9e8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e9ec:	e0bff617 	ldw	r2,-40(fp)
    e9f0:	10001e26 	beq	r2,zero,ea6c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e9f4:	e0fffe17 	ldw	r3,-8(fp)
    e9f8:	e0bff617 	ldw	r2,-40(fp)
    e9fc:	1880022e 	bgeu	r3,r2,ea08 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    ea00:	e0bffe17 	ldw	r2,-8(fp)
    ea04:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    ea08:	e0bffc17 	ldw	r2,-16(fp)
    ea0c:	10c00e04 	addi	r3,r2,56
    ea10:	e0bff817 	ldw	r2,-32(fp)
    ea14:	1885883a 	add	r2,r3,r2
    ea18:	e1bff617 	ldw	r6,-40(fp)
    ea1c:	100b883a 	mov	r5,r2
    ea20:	e13ff517 	ldw	r4,-44(fp)
    ea24:	00063c40 	call	63c4 <memcpy>
      ptr   += n;
    ea28:	e0fff517 	ldw	r3,-44(fp)
    ea2c:	e0bff617 	ldw	r2,-40(fp)
    ea30:	1885883a 	add	r2,r3,r2
    ea34:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    ea38:	e0fffe17 	ldw	r3,-8(fp)
    ea3c:	e0bff617 	ldw	r2,-40(fp)
    ea40:	1885c83a 	sub	r2,r3,r2
    ea44:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ea48:	e0fff817 	ldw	r3,-32(fp)
    ea4c:	e0bff617 	ldw	r2,-40(fp)
    ea50:	1885883a 	add	r2,r3,r2
    ea54:	10c1ffcc 	andi	r3,r2,2047
    ea58:	e0bffc17 	ldw	r2,-16(fp)
    ea5c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    ea60:	e0bffe17 	ldw	r2,-8(fp)
    ea64:	00bfcf16 	blt	zero,r2,e9a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e9a4>
    ea68:	00000106 	br	ea70 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    ea6c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    ea70:	e0fff517 	ldw	r3,-44(fp)
    ea74:	e0bffd17 	ldw	r2,-12(fp)
    ea78:	1880141e 	bne	r3,r2,eacc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    ea7c:	e0bfff17 	ldw	r2,-4(fp)
    ea80:	1090000c 	andi	r2,r2,16384
    ea84:	1000131e 	bne	r2,zero,ead4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    ea88:	0001883a 	nop
    ea8c:	e0bffc17 	ldw	r2,-16(fp)
    ea90:	10c00a17 	ldw	r3,40(r2)
    ea94:	e0bff717 	ldw	r2,-36(fp)
    ea98:	1880051e 	bne	r3,r2,eab0 <altera_avalon_jtag_uart_read+0x138>
    ea9c:	e0bffc17 	ldw	r2,-16(fp)
    eaa0:	10c00917 	ldw	r3,36(r2)
    eaa4:	e0bffc17 	ldw	r2,-16(fp)
    eaa8:	10800117 	ldw	r2,4(r2)
    eaac:	18bff736 	bltu	r3,r2,ea8c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ea8c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    eab0:	e0bffc17 	ldw	r2,-16(fp)
    eab4:	10c00a17 	ldw	r3,40(r2)
    eab8:	e0bff717 	ldw	r2,-36(fp)
    eabc:	18800726 	beq	r3,r2,eadc <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    eac0:	e0bffe17 	ldw	r2,-8(fp)
    eac4:	00bfb716 	blt	zero,r2,e9a4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000e9a4>
    eac8:	00000506 	br	eae0 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    eacc:	0001883a 	nop
    ead0:	00000306 	br	eae0 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    ead4:	0001883a 	nop
    ead8:	00000106 	br	eae0 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    eadc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    eae0:	e0fff517 	ldw	r3,-44(fp)
    eae4:	e0bffd17 	ldw	r2,-12(fp)
    eae8:	18801826 	beq	r3,r2,eb4c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eaec:	0005303a 	rdctl	r2,status
    eaf0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eaf4:	e0fffb17 	ldw	r3,-20(fp)
    eaf8:	00bfff84 	movi	r2,-2
    eafc:	1884703a 	and	r2,r3,r2
    eb00:	1001703a 	wrctl	status,r2
  
  return context;
    eb04:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    eb08:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    eb0c:	e0bffc17 	ldw	r2,-16(fp)
    eb10:	10800817 	ldw	r2,32(r2)
    eb14:	10c00054 	ori	r3,r2,1
    eb18:	e0bffc17 	ldw	r2,-16(fp)
    eb1c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    eb20:	e0bffc17 	ldw	r2,-16(fp)
    eb24:	10800017 	ldw	r2,0(r2)
    eb28:	10800104 	addi	r2,r2,4
    eb2c:	1007883a 	mov	r3,r2
    eb30:	e0bffc17 	ldw	r2,-16(fp)
    eb34:	10800817 	ldw	r2,32(r2)
    eb38:	18800035 	stwio	r2,0(r3)
    eb3c:	e0bffa17 	ldw	r2,-24(fp)
    eb40:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eb44:	e0bff917 	ldw	r2,-28(fp)
    eb48:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    eb4c:	e0fff517 	ldw	r3,-44(fp)
    eb50:	e0bffd17 	ldw	r2,-12(fp)
    eb54:	18800426 	beq	r3,r2,eb68 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    eb58:	e0fff517 	ldw	r3,-44(fp)
    eb5c:	e0bffd17 	ldw	r2,-12(fp)
    eb60:	1885c83a 	sub	r2,r3,r2
    eb64:	00000606 	br	eb80 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    eb68:	e0bfff17 	ldw	r2,-4(fp)
    eb6c:	1090000c 	andi	r2,r2,16384
    eb70:	10000226 	beq	r2,zero,eb7c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    eb74:	00bffd44 	movi	r2,-11
    eb78:	00000106 	br	eb80 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    eb7c:	00bffec4 	movi	r2,-5
}
    eb80:	e037883a 	mov	sp,fp
    eb84:	dfc00117 	ldw	ra,4(sp)
    eb88:	df000017 	ldw	fp,0(sp)
    eb8c:	dec00204 	addi	sp,sp,8
    eb90:	f800283a 	ret

0000eb94 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    eb94:	defff304 	addi	sp,sp,-52
    eb98:	dfc00c15 	stw	ra,48(sp)
    eb9c:	df000b15 	stw	fp,44(sp)
    eba0:	df000b04 	addi	fp,sp,44
    eba4:	e13ffc15 	stw	r4,-16(fp)
    eba8:	e17ffd15 	stw	r5,-12(fp)
    ebac:	e1bffe15 	stw	r6,-8(fp)
    ebb0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    ebb4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    ebb8:	e0bffd17 	ldw	r2,-12(fp)
    ebbc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ebc0:	00003706 	br	eca0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    ebc4:	e0bffc17 	ldw	r2,-16(fp)
    ebc8:	10800c17 	ldw	r2,48(r2)
    ebcc:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    ebd0:	e0bffc17 	ldw	r2,-16(fp)
    ebd4:	10800d17 	ldw	r2,52(r2)
    ebd8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    ebdc:	e0fff917 	ldw	r3,-28(fp)
    ebe0:	e0bff517 	ldw	r2,-44(fp)
    ebe4:	1880062e 	bgeu	r3,r2,ec00 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    ebe8:	e0fff517 	ldw	r3,-44(fp)
    ebec:	e0bff917 	ldw	r2,-28(fp)
    ebf0:	1885c83a 	sub	r2,r3,r2
    ebf4:	10bfffc4 	addi	r2,r2,-1
    ebf8:	e0bff615 	stw	r2,-40(fp)
    ebfc:	00000b06 	br	ec2c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    ec00:	e0bff517 	ldw	r2,-44(fp)
    ec04:	10000526 	beq	r2,zero,ec1c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    ec08:	00c20004 	movi	r3,2048
    ec0c:	e0bff917 	ldw	r2,-28(fp)
    ec10:	1885c83a 	sub	r2,r3,r2
    ec14:	e0bff615 	stw	r2,-40(fp)
    ec18:	00000406 	br	ec2c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    ec1c:	00c1ffc4 	movi	r3,2047
    ec20:	e0bff917 	ldw	r2,-28(fp)
    ec24:	1885c83a 	sub	r2,r3,r2
    ec28:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    ec2c:	e0bff617 	ldw	r2,-40(fp)
    ec30:	10001e26 	beq	r2,zero,ecac <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    ec34:	e0fffe17 	ldw	r3,-8(fp)
    ec38:	e0bff617 	ldw	r2,-40(fp)
    ec3c:	1880022e 	bgeu	r3,r2,ec48 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    ec40:	e0bffe17 	ldw	r2,-8(fp)
    ec44:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    ec48:	e0bffc17 	ldw	r2,-16(fp)
    ec4c:	10c20e04 	addi	r3,r2,2104
    ec50:	e0bff917 	ldw	r2,-28(fp)
    ec54:	1885883a 	add	r2,r3,r2
    ec58:	e1bff617 	ldw	r6,-40(fp)
    ec5c:	e17ffd17 	ldw	r5,-12(fp)
    ec60:	1009883a 	mov	r4,r2
    ec64:	00063c40 	call	63c4 <memcpy>
      ptr   += n;
    ec68:	e0fffd17 	ldw	r3,-12(fp)
    ec6c:	e0bff617 	ldw	r2,-40(fp)
    ec70:	1885883a 	add	r2,r3,r2
    ec74:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    ec78:	e0fffe17 	ldw	r3,-8(fp)
    ec7c:	e0bff617 	ldw	r2,-40(fp)
    ec80:	1885c83a 	sub	r2,r3,r2
    ec84:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ec88:	e0fff917 	ldw	r3,-28(fp)
    ec8c:	e0bff617 	ldw	r2,-40(fp)
    ec90:	1885883a 	add	r2,r3,r2
    ec94:	10c1ffcc 	andi	r3,r2,2047
    ec98:	e0bffc17 	ldw	r2,-16(fp)
    ec9c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    eca0:	e0bffe17 	ldw	r2,-8(fp)
    eca4:	00bfc716 	blt	zero,r2,ebc4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ebc4>
    eca8:	00000106 	br	ecb0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    ecac:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ecb0:	0005303a 	rdctl	r2,status
    ecb4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ecb8:	e0fffb17 	ldw	r3,-20(fp)
    ecbc:	00bfff84 	movi	r2,-2
    ecc0:	1884703a 	and	r2,r3,r2
    ecc4:	1001703a 	wrctl	status,r2
  
  return context;
    ecc8:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    eccc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ecd0:	e0bffc17 	ldw	r2,-16(fp)
    ecd4:	10800817 	ldw	r2,32(r2)
    ecd8:	10c00094 	ori	r3,r2,2
    ecdc:	e0bffc17 	ldw	r2,-16(fp)
    ece0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ece4:	e0bffc17 	ldw	r2,-16(fp)
    ece8:	10800017 	ldw	r2,0(r2)
    ecec:	10800104 	addi	r2,r2,4
    ecf0:	1007883a 	mov	r3,r2
    ecf4:	e0bffc17 	ldw	r2,-16(fp)
    ecf8:	10800817 	ldw	r2,32(r2)
    ecfc:	18800035 	stwio	r2,0(r3)
    ed00:	e0bffa17 	ldw	r2,-24(fp)
    ed04:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ed08:	e0bff817 	ldw	r2,-32(fp)
    ed0c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    ed10:	e0bffe17 	ldw	r2,-8(fp)
    ed14:	0080100e 	bge	zero,r2,ed58 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    ed18:	e0bfff17 	ldw	r2,-4(fp)
    ed1c:	1090000c 	andi	r2,r2,16384
    ed20:	1000101e 	bne	r2,zero,ed64 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    ed24:	0001883a 	nop
    ed28:	e0bffc17 	ldw	r2,-16(fp)
    ed2c:	10c00d17 	ldw	r3,52(r2)
    ed30:	e0bff517 	ldw	r2,-44(fp)
    ed34:	1880051e 	bne	r3,r2,ed4c <altera_avalon_jtag_uart_write+0x1b8>
    ed38:	e0bffc17 	ldw	r2,-16(fp)
    ed3c:	10c00917 	ldw	r3,36(r2)
    ed40:	e0bffc17 	ldw	r2,-16(fp)
    ed44:	10800117 	ldw	r2,4(r2)
    ed48:	18bff736 	bltu	r3,r2,ed28 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ed28>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    ed4c:	e0bffc17 	ldw	r2,-16(fp)
    ed50:	10800917 	ldw	r2,36(r2)
    ed54:	1000051e 	bne	r2,zero,ed6c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    ed58:	e0bffe17 	ldw	r2,-8(fp)
    ed5c:	00bfd016 	blt	zero,r2,eca0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000eca0>
    ed60:	00000306 	br	ed70 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    ed64:	0001883a 	nop
    ed68:	00000106 	br	ed70 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    ed6c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    ed70:	e0fffd17 	ldw	r3,-12(fp)
    ed74:	e0bff717 	ldw	r2,-36(fp)
    ed78:	18800426 	beq	r3,r2,ed8c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    ed7c:	e0fffd17 	ldw	r3,-12(fp)
    ed80:	e0bff717 	ldw	r2,-36(fp)
    ed84:	1885c83a 	sub	r2,r3,r2
    ed88:	00000606 	br	eda4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    ed8c:	e0bfff17 	ldw	r2,-4(fp)
    ed90:	1090000c 	andi	r2,r2,16384
    ed94:	10000226 	beq	r2,zero,eda0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    ed98:	00bffd44 	movi	r2,-11
    ed9c:	00000106 	br	eda4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    eda0:	00bffec4 	movi	r2,-5
}
    eda4:	e037883a 	mov	sp,fp
    eda8:	dfc00117 	ldw	ra,4(sp)
    edac:	df000017 	ldw	fp,0(sp)
    edb0:	dec00204 	addi	sp,sp,8
    edb4:	f800283a 	ret

0000edb8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    edb8:	defff904 	addi	sp,sp,-28
    edbc:	dfc00615 	stw	ra,24(sp)
    edc0:	df000515 	stw	fp,20(sp)
    edc4:	df000504 	addi	fp,sp,20
    edc8:	e13ffe15 	stw	r4,-8(fp)
    edcc:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    edd0:	0007883a 	mov	r3,zero
    edd4:	e0bffe17 	ldw	r2,-8(fp)
    edd8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    eddc:	e0bffe17 	ldw	r2,-8(fp)
    ede0:	10800104 	addi	r2,r2,4
    ede4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ede8:	0005303a 	rdctl	r2,status
    edec:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    edf0:	e0fffc17 	ldw	r3,-16(fp)
    edf4:	00bfff84 	movi	r2,-2
    edf8:	1884703a 	and	r2,r3,r2
    edfc:	1001703a 	wrctl	status,r2
  
  return context;
    ee00:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    ee04:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
    ee08:	00102440 	call	10244 <alt_tick>
    ee0c:	e0bffb17 	ldw	r2,-20(fp)
    ee10:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ee14:	e0bffd17 	ldw	r2,-12(fp)
    ee18:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    ee1c:	0001883a 	nop
    ee20:	e037883a 	mov	sp,fp
    ee24:	dfc00117 	ldw	ra,4(sp)
    ee28:	df000017 	ldw	fp,0(sp)
    ee2c:	dec00204 	addi	sp,sp,8
    ee30:	f800283a 	ret

0000ee34 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    ee34:	defff904 	addi	sp,sp,-28
    ee38:	dfc00615 	stw	ra,24(sp)
    ee3c:	df000515 	stw	fp,20(sp)
    ee40:	df000504 	addi	fp,sp,20
    ee44:	e13ffc15 	stw	r4,-16(fp)
    ee48:	e17ffd15 	stw	r5,-12(fp)
    ee4c:	e1bffe15 	stw	r6,-8(fp)
    ee50:	e1ffff15 	stw	r7,-4(fp)
    ee54:	e0bfff17 	ldw	r2,-4(fp)
    ee58:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    ee5c:	d0a76317 	ldw	r2,-25204(gp)
    ee60:	1000021e 	bne	r2,zero,ee6c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    ee64:	e0bffb17 	ldw	r2,-20(fp)
    ee68:	d0a76315 	stw	r2,-25204(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    ee6c:	e0bffc17 	ldw	r2,-16(fp)
    ee70:	10800104 	addi	r2,r2,4
    ee74:	00c001c4 	movi	r3,7
    ee78:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
    ee7c:	01800074 	movhi	r6,1
    ee80:	31bb6e04 	addi	r6,r6,-4680
    ee84:	e17ffc17 	ldw	r5,-16(fp)
    ee88:	e13ffe17 	ldw	r4,-8(fp)
    ee8c:	000fdd40 	call	fdd4 <alt_irq_register>
#endif  
}
    ee90:	0001883a 	nop
    ee94:	e037883a 	mov	sp,fp
    ee98:	dfc00117 	ldw	ra,4(sp)
    ee9c:	df000017 	ldw	fp,0(sp)
    eea0:	dec00204 	addi	sp,sp,8
    eea4:	f800283a 	ret

0000eea8 <alt_up_irda_enable_read_interrupt>:
#include "altera_up_avalon_irda.h"
#include "altera_up_avalon_irda_regs.h"


void alt_up_irda_enable_read_interrupt(alt_up_irda_dev *irda)
{
    eea8:	defffd04 	addi	sp,sp,-12
    eeac:	df000215 	stw	fp,8(sp)
    eeb0:	df000204 	addi	fp,sp,8
    eeb4:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    eeb8:	e0bfff17 	ldw	r2,-4(fp)
    eebc:	10800a17 	ldw	r2,40(r2)
    eec0:	10800104 	addi	r2,r2,4
    eec4:	10800037 	ldwio	r2,0(r2)
    eec8:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_IRDA_CONTROL_RE_MSK;
    eecc:	e0bffe17 	ldw	r2,-8(fp)
    eed0:	10800054 	ori	r2,r2,1
    eed4:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    eed8:	e0bfff17 	ldw	r2,-4(fp)
    eedc:	10800a17 	ldw	r2,40(r2)
    eee0:	10800104 	addi	r2,r2,4
    eee4:	1007883a 	mov	r3,r2
    eee8:	e0bffe17 	ldw	r2,-8(fp)
    eeec:	18800035 	stwio	r2,0(r3)
}
    eef0:	0001883a 	nop
    eef4:	e037883a 	mov	sp,fp
    eef8:	df000017 	ldw	fp,0(sp)
    eefc:	dec00104 	addi	sp,sp,4
    ef00:	f800283a 	ret

0000ef04 <alt_up_irda_disable_read_interrupt>:

void alt_up_irda_disable_read_interrupt(alt_up_irda_dev *irda)
{
    ef04:	defffd04 	addi	sp,sp,-12
    ef08:	df000215 	stw	fp,8(sp)
    ef0c:	df000204 	addi	fp,sp,8
    ef10:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    ef14:	e0bfff17 	ldw	r2,-4(fp)
    ef18:	10800a17 	ldw	r2,40(r2)
    ef1c:	10800104 	addi	r2,r2,4
    ef20:	10800037 	ldwio	r2,0(r2)
    ef24:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_IRDA_CONTROL_RE_MSK;
    ef28:	e0fffe17 	ldw	r3,-8(fp)
    ef2c:	00bfff84 	movi	r2,-2
    ef30:	1884703a 	and	r2,r3,r2
    ef34:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_IRDA_CONTROL(irda->base, ctrl_reg);
    ef38:	e0bfff17 	ldw	r2,-4(fp)
    ef3c:	10800a17 	ldw	r2,40(r2)
    ef40:	10800104 	addi	r2,r2,4
    ef44:	1007883a 	mov	r3,r2
    ef48:	e0bffe17 	ldw	r2,-8(fp)
    ef4c:	18800035 	stwio	r2,0(r3)
}
    ef50:	0001883a 	nop
    ef54:	e037883a 	mov	sp,fp
    ef58:	df000017 	ldw	fp,0(sp)
    ef5c:	dec00104 	addi	sp,sp,4
    ef60:	f800283a 	ret

0000ef64 <alt_up_irda_get_used_space_in_read_FIFO>:

unsigned alt_up_irda_get_used_space_in_read_FIFO(alt_up_irda_dev *irda)
{
    ef64:	defffd04 	addi	sp,sp,-12
    ef68:	df000215 	stw	fp,8(sp)
    ef6c:	df000204 	addi	fp,sp,8
    ef70:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
    ef74:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_IRDA_DATA(irda->base), 2); 
//	return ravail;
	ravail = IORD_ALT_UP_IRDA_RAVAIL(irda->base); 
    ef78:	e0bfff17 	ldw	r2,-4(fp)
    ef7c:	10800a17 	ldw	r2,40(r2)
    ef80:	10800084 	addi	r2,r2,2
    ef84:	1080002b 	ldhuio	r2,0(r2)
    ef88:	10bfffcc 	andi	r2,r2,65535
    ef8c:	e0bffe0d 	sth	r2,-8(fp)
	return (ravail & ALT_UP_IRDA_RAVAIL_MSK) >> ALT_UP_IRDA_RAVAIL_OFST;
    ef90:	e0bffe0b 	ldhu	r2,-8(fp)
}
    ef94:	e037883a 	mov	sp,fp
    ef98:	df000017 	ldw	fp,0(sp)
    ef9c:	dec00104 	addi	sp,sp,4
    efa0:	f800283a 	ret

0000efa4 <alt_up_irda_get_available_space_in_write_FIFO>:

unsigned alt_up_irda_get_available_space_in_write_FIFO(alt_up_irda_dev *irda)
{
    efa4:	defffd04 	addi	sp,sp,-12
    efa8:	df000215 	stw	fp,8(sp)
    efac:	df000204 	addi	fp,sp,8
    efb0:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_IRDA_CONTROL(irda->base); 
    efb4:	e0bfff17 	ldw	r2,-4(fp)
    efb8:	10800a17 	ldw	r2,40(r2)
    efbc:	10800104 	addi	r2,r2,4
    efc0:	10800037 	ldwio	r2,0(r2)
    efc4:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_IRDA_CONTROL_WSPACE_MSK) >> ALT_UP_IRDA_CONTROL_WSPACE_OFST;
    efc8:	e0bffe17 	ldw	r2,-8(fp)
    efcc:	1004d43a 	srli	r2,r2,16
}
    efd0:	e037883a 	mov	sp,fp
    efd4:	df000017 	ldw	fp,0(sp)
    efd8:	dec00104 	addi	sp,sp,4
    efdc:	f800283a 	ret

0000efe0 <alt_up_irda_check_parity>:

int alt_up_irda_check_parity(alt_u32 data_reg)
{
    efe0:	defffd04 	addi	sp,sp,-12
    efe4:	df000215 	stw	fp,8(sp)
    efe8:	df000204 	addi	fp,sp,8
    efec:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_IRDA_DATA_PE_MSK) >> ALT_UP_IRDA_DATA_PE_OFST;
    eff0:	e0bfff17 	ldw	r2,-4(fp)
    eff4:	1080800c 	andi	r2,r2,512
    eff8:	1004d27a 	srli	r2,r2,9
    effc:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
    f000:	e0bffe17 	ldw	r2,-8(fp)
    f004:	10000226 	beq	r2,zero,f010 <alt_up_irda_check_parity+0x30>
    f008:	00bfffc4 	movi	r2,-1
    f00c:	00000106 	br	f014 <alt_up_irda_check_parity+0x34>
    f010:	0005883a 	mov	r2,zero
}
    f014:	e037883a 	mov	sp,fp
    f018:	df000017 	ldw	fp,0(sp)
    f01c:	dec00104 	addi	sp,sp,4
    f020:	f800283a 	ret

0000f024 <alt_up_irda_write_data>:

int alt_up_irda_write_data(alt_up_irda_dev *irda, alt_u8 data)
{
    f024:	defffd04 	addi	sp,sp,-12
    f028:	df000215 	stw	fp,8(sp)
    f02c:	df000204 	addi	fp,sp,8
    f030:	e13ffe15 	stw	r4,-8(fp)
    f034:	2805883a 	mov	r2,r5
    f038:	e0bfff05 	stb	r2,-4(fp)
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    */

	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_IRDA_DATA(irda->base, (data>>ALT_UP_IRDA_DATA_DATA_OFST) & ALT_UP_IRDA_DATA_DATA_MSK);
    f03c:	e0bffe17 	ldw	r2,-8(fp)
    f040:	10800a17 	ldw	r2,40(r2)
    f044:	1007883a 	mov	r3,r2
    f048:	e0bfff03 	ldbu	r2,-4(fp)
    f04c:	18800035 	stwio	r2,0(r3)
	return 0;
    f050:	0005883a 	mov	r2,zero
}
    f054:	e037883a 	mov	sp,fp
    f058:	df000017 	ldw	fp,0(sp)
    f05c:	dec00104 	addi	sp,sp,4
    f060:	f800283a 	ret

0000f064 <alt_up_irda_read_data>:

int alt_up_irda_read_data(alt_up_irda_dev *irda, alt_u8 *data, alt_u8 *parity_error)
{
    f064:	defffa04 	addi	sp,sp,-24
    f068:	dfc00515 	stw	ra,20(sp)
    f06c:	df000415 	stw	fp,16(sp)
    f070:	df000404 	addi	fp,sp,16
    f074:	e13ffd15 	stw	r4,-12(fp)
    f078:	e17ffe15 	stw	r5,-8(fp)
    f07c:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_IRDA_DATA(irda->base);
    f080:	e0bffd17 	ldw	r2,-12(fp)
    f084:	10800a17 	ldw	r2,40(r2)
    f088:	10800037 	ldwio	r2,0(r2)
    f08c:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_IRDA_DATA_DATA_MSK) >> ALT_UP_IRDA_DATA_DATA_OFST;
    f090:	e0bffc17 	ldw	r2,-16(fp)
    f094:	1007883a 	mov	r3,r2
    f098:	e0bffe17 	ldw	r2,-8(fp)
    f09c:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_irda_check_parity(data_reg);
    f0a0:	e13ffc17 	ldw	r4,-16(fp)
    f0a4:	000efe00 	call	efe0 <alt_up_irda_check_parity>
    f0a8:	1007883a 	mov	r3,r2
    f0ac:	e0bfff17 	ldw	r2,-4(fp)
    f0b0:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_IRDA_DATA_RVALID_MSK) >> ALT_UP_IRDA_DATA_RVALID_OFST) - 1);
    f0b4:	e0bffc17 	ldw	r2,-16(fp)
    f0b8:	10a0000c 	andi	r2,r2,32768
    f0bc:	1004d3fa 	srli	r2,r2,15
    f0c0:	10bfffc4 	addi	r2,r2,-1
}
    f0c4:	e037883a 	mov	sp,fp
    f0c8:	dfc00117 	ldw	ra,4(sp)
    f0cc:	df000017 	ldw	fp,0(sp)
    f0d0:	dec00204 	addi	sp,sp,8
    f0d4:	f800283a 	ret

0000f0d8 <alt_up_irda_read_fd>:

int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
    f0d8:	defff804 	addi	sp,sp,-32
    f0dc:	dfc00715 	stw	ra,28(sp)
    f0e0:	df000615 	stw	fp,24(sp)
    f0e4:	df000604 	addi	fp,sp,24
    f0e8:	e13ffd15 	stw	r4,-12(fp)
    f0ec:	e17ffe15 	stw	r5,-8(fp)
    f0f0:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    f0f4:	e0bffd17 	ldw	r2,-12(fp)
    f0f8:	10800017 	ldw	r2,0(r2)
    f0fc:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
    f100:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
    f104:	00000c06 	br	f138 <alt_up_irda_read_fd+0x60>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
    f108:	e0bffe17 	ldw	r2,-8(fp)
    f10c:	10c00044 	addi	r3,r2,1
    f110:	e0fffe15 	stw	r3,-8(fp)
    f114:	e0fffc04 	addi	r3,fp,-16
    f118:	180d883a 	mov	r6,r3
    f11c:	100b883a 	mov	r5,r2
    f120:	e13ffb17 	ldw	r4,-20(fp)
    f124:	000f0640 	call	f064 <alt_up_irda_read_data>
    f128:	1000081e 	bne	r2,zero,f14c <alt_up_irda_read_fd+0x74>
			count++;
    f12c:	e0bffa17 	ldw	r2,-24(fp)
    f130:	10800044 	addi	r2,r2,1
    f134:	e0bffa15 	stw	r2,-24(fp)
int alt_up_irda_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
    f138:	e0bfff17 	ldw	r2,-4(fp)
    f13c:	10ffffc4 	addi	r3,r2,-1
    f140:	e0ffff15 	stw	r3,-4(fp)
    f144:	103ff01e 	bne	r2,zero,f108 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f108>
    f148:	00000106 	br	f150 <alt_up_irda_read_fd+0x78>
	{
		if (alt_up_irda_read_data(irda, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
    f14c:	0001883a 	nop
	}
	return count;
    f150:	e0bffa17 	ldw	r2,-24(fp)
}
    f154:	e037883a 	mov	sp,fp
    f158:	dfc00117 	ldw	ra,4(sp)
    f15c:	df000017 	ldw	fp,0(sp)
    f160:	dec00204 	addi	sp,sp,8
    f164:	f800283a 	ret

0000f168 <alt_up_irda_write_fd>:

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
    f168:	defff904 	addi	sp,sp,-28
    f16c:	dfc00615 	stw	ra,24(sp)
    f170:	df000515 	stw	fp,20(sp)
    f174:	df000504 	addi	fp,sp,20
    f178:	e13ffd15 	stw	r4,-12(fp)
    f17c:	e17ffe15 	stw	r5,-8(fp)
    f180:	e1bfff15 	stw	r6,-4(fp)
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
    f184:	e0bffd17 	ldw	r2,-12(fp)
    f188:	10800017 	ldw	r2,0(r2)
    f18c:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
    f190:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
    f194:	00000c06 	br	f1c8 <alt_up_irda_write_fd+0x60>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
    f198:	e0bffe17 	ldw	r2,-8(fp)
    f19c:	10c00044 	addi	r3,r2,1
    f1a0:	e0fffe15 	stw	r3,-8(fp)
    f1a4:	10800003 	ldbu	r2,0(r2)
    f1a8:	10803fcc 	andi	r2,r2,255
    f1ac:	100b883a 	mov	r5,r2
    f1b0:	e13ffc17 	ldw	r4,-16(fp)
    f1b4:	000f0240 	call	f024 <alt_up_irda_write_data>
    f1b8:	1000081e 	bne	r2,zero,f1dc <alt_up_irda_write_fd+0x74>
			count++;
    f1bc:	e0bffb17 	ldw	r2,-20(fp)
    f1c0:	10800044 	addi	r2,r2,1
    f1c4:	e0bffb15 	stw	r2,-20(fp)

int alt_up_irda_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_irda_dev *irda = (alt_up_irda_dev*)fd->dev;
	int count = 0;
	while(len--)
    f1c8:	e0bfff17 	ldw	r2,-4(fp)
    f1cc:	10ffffc4 	addi	r3,r2,-1
    f1d0:	e0ffff15 	stw	r3,-4(fp)
    f1d4:	103ff01e 	bne	r2,zero,f198 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f198>
    f1d8:	00000106 	br	f1e0 <alt_up_irda_write_fd+0x78>
	{
		if (alt_up_irda_write_data(irda, (alt_u8) *ptr++)==0)
			count++;
		else
			break;
    f1dc:	0001883a 	nop
	}
	return count;
    f1e0:	e0bffb17 	ldw	r2,-20(fp)
}
    f1e4:	e037883a 	mov	sp,fp
    f1e8:	dfc00117 	ldw	ra,4(sp)
    f1ec:	df000017 	ldw	fp,0(sp)
    f1f0:	dec00204 	addi	sp,sp,8
    f1f4:	f800283a 	ret

0000f1f8 <alt_up_irda_open_dev>:

alt_up_irda_dev* alt_up_irda_open_dev(const char* name)
{
    f1f8:	defffc04 	addi	sp,sp,-16
    f1fc:	dfc00315 	stw	ra,12(sp)
    f200:	df000215 	stw	fp,8(sp)
    f204:	df000204 	addi	fp,sp,8
    f208:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_irda_dev *dev = (alt_up_irda_dev*)alt_find_dev(name, &alt_dev_list);
    f20c:	d1600804 	addi	r5,gp,-32736
    f210:	e13fff17 	ldw	r4,-4(fp)
    f214:	000fbd00 	call	fbd0 <alt_find_dev>
    f218:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    f21c:	e0bffe17 	ldw	r2,-8(fp)
}
    f220:	e037883a 	mov	sp,fp
    f224:	dfc00117 	ldw	ra,4(sp)
    f228:	df000017 	ldw	fp,0(sp)
    f22c:	dec00204 	addi	sp,sp,8
    f230:	f800283a 	ret

0000f234 <read_RI_bit>:


//////////////////////////////////////////////////////////////////////////////////////////////
// Internal Functions
alt_u8 read_RI_bit(alt_u32 ctrl_reg)
{
    f234:	defffd04 	addi	sp,sp,-12
    f238:	df000215 	stw	fp,8(sp)
    f23c:	df000204 	addi	fp,sp,8
    f240:	e13fff15 	stw	r4,-4(fp)
	alt_u8 ri = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RI_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RI_OFST);
    f244:	e0bfff17 	ldw	r2,-4(fp)
    f248:	1080400c 	andi	r2,r2,256
    f24c:	1004d23a 	srli	r2,r2,8
    f250:	e0bffe05 	stb	r2,-8(fp)
	return ri;
    f254:	e0bffe03 	ldbu	r2,-8(fp)
}
    f258:	e037883a 	mov	sp,fp
    f25c:	df000017 	ldw	fp,0(sp)
    f260:	dec00104 	addi	sp,sp,4
    f264:	f800283a 	ret

0000f268 <read_RE_bit>:

alt_u8 read_RE_bit(alt_u32 ctrl_reg)
{
    f268:	defffd04 	addi	sp,sp,-12
    f26c:	df000215 	stw	fp,8(sp)
    f270:	df000204 	addi	fp,sp,8
    f274:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_RE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_RE_OFST);
    f278:	e0bfff17 	ldw	r2,-4(fp)
    f27c:	1080004c 	andi	r2,r2,1
    f280:	e0bffe05 	stb	r2,-8(fp)
	return re;
    f284:	e0bffe03 	ldbu	r2,-8(fp)
}
    f288:	e037883a 	mov	sp,fp
    f28c:	df000017 	ldw	fp,0(sp)
    f290:	dec00104 	addi	sp,sp,4
    f294:	f800283a 	ret

0000f298 <read_CE_bit>:

alt_u8 read_CE_bit(alt_u32 ctrl_reg)
{
    f298:	defffd04 	addi	sp,sp,-12
    f29c:	df000215 	stw	fp,8(sp)
    f2a0:	df000204 	addi	fp,sp,8
    f2a4:	e13fff15 	stw	r4,-4(fp)
	alt_u8 re = (alt_u8) ((ctrl_reg & ALT_UP_PS2_PORT_CTRL_REG_CE_MSK) >> ALT_UP_PS2_PORT_CTRL_REG_CE_OFST);
    f2a8:	e0bfff17 	ldw	r2,-4(fp)
    f2ac:	1081000c 	andi	r2,r2,1024
    f2b0:	1004d2ba 	srli	r2,r2,10
    f2b4:	e0bffe05 	stb	r2,-8(fp)
	return re;
    f2b8:	e0bffe03 	ldbu	r2,-8(fp)
}
    f2bc:	e037883a 	mov	sp,fp
    f2c0:	df000017 	ldw	fp,0(sp)
    f2c4:	dec00104 	addi	sp,sp,4
    f2c8:	f800283a 	ret

0000f2cc <read_num_bytes_available>:

alt_u16 read_num_bytes_available(alt_u32 data_reg)
{
    f2cc:	defffd04 	addi	sp,sp,-12
    f2d0:	df000215 	stw	fp,8(sp)
    f2d4:	df000204 	addi	fp,sp,8
    f2d8:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = (alt_u16)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RAVAIL_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RAVAIL_OFST);
    f2dc:	e0bfff17 	ldw	r2,-4(fp)
    f2e0:	1004d43a 	srli	r2,r2,16
    f2e4:	e0bffe0d 	sth	r2,-8(fp)
	return ravail;
    f2e8:	e0bffe0b 	ldhu	r2,-8(fp)
}
    f2ec:	e037883a 	mov	sp,fp
    f2f0:	df000017 	ldw	fp,0(sp)
    f2f4:	dec00104 	addi	sp,sp,4
    f2f8:	f800283a 	ret

0000f2fc <read_data_valid>:

alt_u8 read_data_valid(alt_u32 data_reg)
{
    f2fc:	defffd04 	addi	sp,sp,-12
    f300:	df000215 	stw	fp,8(sp)
    f304:	df000204 	addi	fp,sp,8
    f308:	e13fff15 	stw	r4,-4(fp)
	alt_u8 rvalid = (alt_u8)((data_reg & ALT_UP_PS2_PORT_DATA_REG_RVALID_MSK ) >> ALT_UP_PS2_PORT_DATA_REG_RVALID_OFST);
    f30c:	e0bfff17 	ldw	r2,-4(fp)
    f310:	10a0000c 	andi	r2,r2,32768
    f314:	1004d3fa 	srli	r2,r2,15
    f318:	e0bffe05 	stb	r2,-8(fp)
	return rvalid;
    f31c:	e0bffe03 	ldbu	r2,-8(fp)
}
    f320:	e037883a 	mov	sp,fp
    f324:	df000017 	ldw	fp,0(sp)
    f328:	dec00104 	addi	sp,sp,4
    f32c:	f800283a 	ret

0000f330 <read_data_byte>:

alt_u8 read_data_byte(alt_u32 data_reg)
{
    f330:	defffd04 	addi	sp,sp,-12
    f334:	df000215 	stw	fp,8(sp)
    f338:	df000204 	addi	fp,sp,8
    f33c:	e13fff15 	stw	r4,-4(fp)
	alt_u8 data = (alt_u8) ( (data_reg & ALT_UP_PS2_PORT_DATA_REG_DATA_MSK) >> ALT_UP_PS2_PORT_DATA_REG_DATA_OFST) ;
    f340:	e0bfff17 	ldw	r2,-4(fp)
    f344:	e0bffe05 	stb	r2,-8(fp)
	return data;
    f348:	e0bffe03 	ldbu	r2,-8(fp)
}
    f34c:	e037883a 	mov	sp,fp
    f350:	df000017 	ldw	fp,0(sp)
    f354:	dec00104 	addi	sp,sp,4
    f358:	f800283a 	ret

0000f35c <alt_up_ps2_init>:

//////////////////////////////////////////////////////////////////////////////////////////////
// HAL Functions
void alt_up_ps2_init(alt_up_ps2_dev *ps2)
{
    f35c:	defffb04 	addi	sp,sp,-20
    f360:	dfc00415 	stw	ra,16(sp)
    f364:	df000315 	stw	fp,12(sp)
    f368:	df000304 	addi	fp,sp,12
    f36c:	e13fff15 	stw	r4,-4(fp)
	// initialize the device
	unsigned char byte;
	//send the reset request, wait for ACK
	int status = alt_up_ps2_write_data_byte_with_ack(ps2, 0xff);
    f370:	01403fc4 	movi	r5,255
    f374:	e13fff17 	ldw	r4,-4(fp)
    f378:	000f5bc0 	call	f5bc <alt_up_ps2_write_data_byte_with_ack>
    f37c:	e0bffd15 	stw	r2,-12(fp)
	if (status == 0)
    f380:	e0bffd17 	ldw	r2,-12(fp)
    f384:	1000211e 	bne	r2,zero,f40c <alt_up_ps2_init+0xb0>
	{
		// reset succeed, now try to get the BAT result, AA means passed
		status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    f388:	e0bffe04 	addi	r2,fp,-8
    f38c:	100b883a 	mov	r5,r2
    f390:	e13fff17 	ldw	r4,-4(fp)
    f394:	000f6200 	call	f620 <alt_up_ps2_read_data_byte_timeout>
    f398:	e0bffd15 	stw	r2,-12(fp)
		if (status == 0 && byte == 0xAA)
    f39c:	e0bffd17 	ldw	r2,-12(fp)
    f3a0:	10001a1e 	bne	r2,zero,f40c <alt_up_ps2_init+0xb0>
    f3a4:	e0bffe03 	ldbu	r2,-8(fp)
    f3a8:	10803fcc 	andi	r2,r2,255
    f3ac:	10802a98 	cmpnei	r2,r2,170
    f3b0:	1000161e 	bne	r2,zero,f40c <alt_up_ps2_init+0xb0>
		{
			//get the 2nd byte
			status = alt_up_ps2_read_data_byte_timeout(ps2, &byte);
    f3b4:	e0bffe04 	addi	r2,fp,-8
    f3b8:	100b883a 	mov	r5,r2
    f3bc:	e13fff17 	ldw	r4,-4(fp)
    f3c0:	000f6200 	call	f620 <alt_up_ps2_read_data_byte_timeout>
    f3c4:	e0bffd15 	stw	r2,-12(fp)
			if (status == -ETIMEDOUT)
    f3c8:	e0bffd17 	ldw	r2,-12(fp)
    f3cc:	10bfe318 	cmpnei	r2,r2,-116
    f3d0:	1000041e 	bne	r2,zero,f3e4 <alt_up_ps2_init+0x88>
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
    f3d4:	e0bfff17 	ldw	r2,-4(fp)
    f3d8:	00c00044 	movi	r3,1
    f3dc:	10c00d15 	stw	r3,52(r2)
				ps2->device_type = PS2_MOUSE;
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
			}
		}
	}
}
    f3e0:	00000a06 	br	f40c <alt_up_ps2_init+0xb0>
			if (status == -ETIMEDOUT)
			{
				//for keyboard, only 2 bytes are sent(ACK, PASS/FAIL), so timeout
				ps2->device_type = PS2_KEYBOARD;
			}
			else if (status == 0 && byte == 0x00)
    f3e4:	e0bffd17 	ldw	r2,-12(fp)
    f3e8:	1000081e 	bne	r2,zero,f40c <alt_up_ps2_init+0xb0>
    f3ec:	e0bffe03 	ldbu	r2,-8(fp)
    f3f0:	10803fcc 	andi	r2,r2,255
    f3f4:	1000051e 	bne	r2,zero,f40c <alt_up_ps2_init+0xb0>
			{
				//for mouse, it will sent out 0x00 after sending out ACK and PASS/FAIL.
				ps2->device_type = PS2_MOUSE;
    f3f8:	e0bfff17 	ldw	r2,-4(fp)
    f3fc:	10000d15 	stw	zero,52(r2)
				(void) alt_up_ps2_write_data_byte (ps2, 0xf4); // enable data from mouse
    f400:	01403d04 	movi	r5,244
    f404:	e13fff17 	ldw	r4,-4(fp)
    f408:	000f4e00 	call	f4e0 <alt_up_ps2_write_data_byte>
			}
		}
	}
}
    f40c:	0001883a 	nop
    f410:	e037883a 	mov	sp,fp
    f414:	dfc00117 	ldw	ra,4(sp)
    f418:	df000017 	ldw	fp,0(sp)
    f41c:	dec00204 	addi	sp,sp,8
    f420:	f800283a 	ret

0000f424 <alt_up_ps2_enable_read_interrupt>:

void alt_up_ps2_enable_read_interrupt(alt_up_ps2_dev *ps2)
{
    f424:	defffd04 	addi	sp,sp,-12
    f428:	df000215 	stw	fp,8(sp)
    f42c:	df000204 	addi	fp,sp,8
    f430:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    f434:	e0bfff17 	ldw	r2,-4(fp)
    f438:	10800a17 	ldw	r2,40(r2)
    f43c:	10800104 	addi	r2,r2,4
    f440:	10800037 	ldwio	r2,0(r2)
    f444:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    f448:	e0bffe17 	ldw	r2,-8(fp)
    f44c:	10800054 	ori	r2,r2,1
    f450:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    f454:	e0bfff17 	ldw	r2,-4(fp)
    f458:	10800a17 	ldw	r2,40(r2)
    f45c:	10800104 	addi	r2,r2,4
    f460:	1007883a 	mov	r3,r2
    f464:	e0bffe17 	ldw	r2,-8(fp)
    f468:	18800035 	stwio	r2,0(r3)
}
    f46c:	0001883a 	nop
    f470:	e037883a 	mov	sp,fp
    f474:	df000017 	ldw	fp,0(sp)
    f478:	dec00104 	addi	sp,sp,4
    f47c:	f800283a 	ret

0000f480 <alt_up_ps2_disable_read_interrupt>:

void alt_up_ps2_disable_read_interrupt(alt_up_ps2_dev *ps2)
{
    f480:	defffd04 	addi	sp,sp,-12
    f484:	df000215 	stw	fp,8(sp)
    f488:	df000204 	addi	fp,sp,8
    f48c:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base); 
    f490:	e0bfff17 	ldw	r2,-4(fp)
    f494:	10800a17 	ldw	r2,40(r2)
    f498:	10800104 	addi	r2,r2,4
    f49c:	10800037 	ldwio	r2,0(r2)
    f4a0:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_PS2_PORT_CTRL_REG_RE_MSK;
    f4a4:	e0fffe17 	ldw	r3,-8(fp)
    f4a8:	00bfff84 	movi	r2,-2
    f4ac:	1884703a 	and	r2,r3,r2
    f4b0:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_PS2_PORT_CTRL_REG(ps2->base, ctrl_reg);
    f4b4:	e0bfff17 	ldw	r2,-4(fp)
    f4b8:	10800a17 	ldw	r2,40(r2)
    f4bc:	10800104 	addi	r2,r2,4
    f4c0:	1007883a 	mov	r3,r2
    f4c4:	e0bffe17 	ldw	r2,-8(fp)
    f4c8:	18800035 	stwio	r2,0(r3)
}
    f4cc:	0001883a 	nop
    f4d0:	e037883a 	mov	sp,fp
    f4d4:	df000017 	ldw	fp,0(sp)
    f4d8:	dec00104 	addi	sp,sp,4
    f4dc:	f800283a 	ret

0000f4e0 <alt_up_ps2_write_data_byte>:

int alt_up_ps2_write_data_byte(alt_up_ps2_dev *ps2, unsigned char byte)
{
    f4e0:	defffb04 	addi	sp,sp,-20
    f4e4:	dfc00415 	stw	ra,16(sp)
    f4e8:	df000315 	stw	fp,12(sp)
    f4ec:	df000304 	addi	fp,sp,12
    f4f0:	e13ffe15 	stw	r4,-8(fp)
    f4f4:	2805883a 	mov	r2,r5
    f4f8:	e0bfff05 	stb	r2,-4(fp)
	//note: data are only located at the lower 8 bits
	//note: the software send command to the PS2 peripheral through the data
	//		register rather than the control register
	IOWR_ALT_UP_PS2_PORT_DATA(ps2->base, byte);
    f4fc:	e0bffe17 	ldw	r2,-8(fp)
    f500:	10800a17 	ldw	r2,40(r2)
    f504:	1007883a 	mov	r3,r2
    f508:	e0bfff03 	ldbu	r2,-4(fp)
    f50c:	18800025 	stbio	r2,0(r3)
	alt_u32 ctrl_reg = IORD_ALT_UP_PS2_PORT_CTRL_REG(ps2->base);
    f510:	e0bffe17 	ldw	r2,-8(fp)
    f514:	10800a17 	ldw	r2,40(r2)
    f518:	10800104 	addi	r2,r2,4
    f51c:	10800037 	ldwio	r2,0(r2)
    f520:	e0bffd15 	stw	r2,-12(fp)
	if (read_CE_bit(ctrl_reg))
    f524:	e13ffd17 	ldw	r4,-12(fp)
    f528:	000f2980 	call	f298 <read_CE_bit>
    f52c:	10803fcc 	andi	r2,r2,255
    f530:	10000226 	beq	r2,zero,f53c <alt_up_ps2_write_data_byte+0x5c>
	{
		//CE bit is set --> error occurs on sending commands
		return -EIO;
    f534:	00bffec4 	movi	r2,-5
    f538:	00000106 	br	f540 <alt_up_ps2_write_data_byte+0x60>
	}
	return 0;
    f53c:	0005883a 	mov	r2,zero
}
    f540:	e037883a 	mov	sp,fp
    f544:	dfc00117 	ldw	ra,4(sp)
    f548:	df000017 	ldw	fp,0(sp)
    f54c:	dec00204 	addi	sp,sp,8
    f550:	f800283a 	ret

0000f554 <alt_up_ps2_wait_for_ack>:

int alt_up_ps2_wait_for_ack(alt_up_ps2_dev *ps2)
{
    f554:	defffc04 	addi	sp,sp,-16
    f558:	dfc00315 	stw	ra,12(sp)
    f55c:	df000215 	stw	fp,8(sp)
    f560:	df000204 	addi	fp,sp,8
    f564:	e13fff15 	stw	r4,-4(fp)
	unsigned char data = 0;
    f568:	e03ffe45 	stb	zero,-7(fp)
	unsigned char status = 0;
    f56c:	e03ffe05 	stb	zero,-8(fp)
	do
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, &data); 
    f570:	e0bffe44 	addi	r2,fp,-7
    f574:	100b883a 	mov	r5,r2
    f578:	e13fff17 	ldw	r4,-4(fp)
    f57c:	000f6200 	call	f620 <alt_up_ps2_read_data_byte_timeout>
    f580:	e0bffe05 	stb	r2,-8(fp)
		if ( status == 0)
    f584:	e0bffe03 	ldbu	r2,-8(fp)
    f588:	1000061e 	bne	r2,zero,f5a4 <alt_up_ps2_wait_for_ack+0x50>
		{
			if (data == PS2_ACK)
    f58c:	e0bffe43 	ldbu	r2,-7(fp)
    f590:	10803fcc 	andi	r2,r2,255
    f594:	10803e98 	cmpnei	r2,r2,250
    f598:	103ff51e 	bne	r2,zero,f570 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f570>
				return 0;
    f59c:	0005883a 	mov	r2,zero
    f5a0:	00000106 	br	f5a8 <alt_up_ps2_wait_for_ack+0x54>
		}
		else 
		{
			return status;
    f5a4:	e0bffe03 	ldbu	r2,-8(fp)
		}
	} while(1);
	return -ETIMEDOUT;
}
    f5a8:	e037883a 	mov	sp,fp
    f5ac:	dfc00117 	ldw	ra,4(sp)
    f5b0:	df000017 	ldw	fp,0(sp)
    f5b4:	dec00204 	addi	sp,sp,8
    f5b8:	f800283a 	ret

0000f5bc <alt_up_ps2_write_data_byte_with_ack>:

int alt_up_ps2_write_data_byte_with_ack(alt_up_ps2_dev *ps2, unsigned char byte)
{
    f5bc:	defffa04 	addi	sp,sp,-24
    f5c0:	dfc00515 	stw	ra,20(sp)
    f5c4:	df000415 	stw	fp,16(sp)
    f5c8:	df000404 	addi	fp,sp,16
    f5cc:	e13ffe15 	stw	r4,-8(fp)
    f5d0:	2805883a 	mov	r2,r5
    f5d4:	e0bfff05 	stb	r2,-4(fp)
	int send_status = alt_up_ps2_write_data_byte(ps2, byte);
    f5d8:	e0bfff03 	ldbu	r2,-4(fp)
    f5dc:	100b883a 	mov	r5,r2
    f5e0:	e13ffe17 	ldw	r4,-8(fp)
    f5e4:	000f4e00 	call	f4e0 <alt_up_ps2_write_data_byte>
    f5e8:	e0bffc15 	stw	r2,-16(fp)
	if ( send_status != 0)
    f5ec:	e0bffc17 	ldw	r2,-16(fp)
    f5f0:	10000226 	beq	r2,zero,f5fc <alt_up_ps2_write_data_byte_with_ack+0x40>
		// return on sending error
		return send_status;
    f5f4:	e0bffc17 	ldw	r2,-16(fp)
    f5f8:	00000406 	br	f60c <alt_up_ps2_write_data_byte_with_ack+0x50>

	int ack_status = alt_up_ps2_wait_for_ack(ps2);
    f5fc:	e13ffe17 	ldw	r4,-8(fp)
    f600:	000f5540 	call	f554 <alt_up_ps2_wait_for_ack>
    f604:	e0bffd15 	stw	r2,-12(fp)
	return ack_status;
    f608:	e0bffd17 	ldw	r2,-12(fp)
}
    f60c:	e037883a 	mov	sp,fp
    f610:	dfc00117 	ldw	ra,4(sp)
    f614:	df000017 	ldw	fp,0(sp)
    f618:	dec00204 	addi	sp,sp,8
    f61c:	f800283a 	ret

0000f620 <alt_up_ps2_read_data_byte_timeout>:

int alt_up_ps2_read_data_byte_timeout(alt_up_ps2_dev *ps2, unsigned char *byte)
{
    f620:	defffa04 	addi	sp,sp,-24
    f624:	dfc00515 	stw	ra,20(sp)
    f628:	df000415 	stw	fp,16(sp)
    f62c:	df000404 	addi	fp,sp,16
    f630:	e13ffe15 	stw	r4,-8(fp)
    f634:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
    f638:	e03ffd15 	stw	zero,-12(fp)
	unsigned int count = 0;
    f63c:	e03ffc15 	stw	zero,-16(fp)
	do {
		count++;
    f640:	e0bffc17 	ldw	r2,-16(fp)
    f644:	10800044 	addi	r2,r2,1
    f648:	e0bffc15 	stw	r2,-16(fp)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    f64c:	e0bffe17 	ldw	r2,-8(fp)
    f650:	10800a17 	ldw	r2,40(r2)
    f654:	10800037 	ldwio	r2,0(r2)
    f658:	e0bffd15 	stw	r2,-12(fp)
		if (read_data_valid(data_reg))
    f65c:	e13ffd17 	ldw	r4,-12(fp)
    f660:	000f2fc0 	call	f2fc <read_data_valid>
    f664:	10803fcc 	andi	r2,r2,255
    f668:	10000726 	beq	r2,zero,f688 <alt_up_ps2_read_data_byte_timeout+0x68>
		{
			*byte = read_data_byte(data_reg);
    f66c:	e13ffd17 	ldw	r4,-12(fp)
    f670:	000f3300 	call	f330 <read_data_byte>
    f674:	1007883a 	mov	r3,r2
    f678:	e0bfff17 	ldw	r2,-4(fp)
    f67c:	10c00005 	stb	r3,0(r2)
			return 0;
    f680:	0005883a 	mov	r2,zero
    f684:	00000806 	br	f6a8 <alt_up_ps2_read_data_byte_timeout+0x88>
		}
		//timeout = 0 means to disable the timeout
		if ( ps2->timeout != 0 && count > ps2->timeout)
    f688:	e0bffe17 	ldw	r2,-8(fp)
    f68c:	10800c17 	ldw	r2,48(r2)
    f690:	103feb26 	beq	r2,zero,f640 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f640>
    f694:	e0bffe17 	ldw	r2,-8(fp)
    f698:	10c00c17 	ldw	r3,48(r2)
    f69c:	e0bffc17 	ldw	r2,-16(fp)
    f6a0:	18bfe72e 	bgeu	r3,r2,f640 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f640>
		{
			return -ETIMEDOUT;
    f6a4:	00bfe304 	movi	r2,-116
		}
	} while (1);
}
    f6a8:	e037883a 	mov	sp,fp
    f6ac:	dfc00117 	ldw	ra,4(sp)
    f6b0:	df000017 	ldw	fp,0(sp)
    f6b4:	dec00204 	addi	sp,sp,8
    f6b8:	f800283a 	ret

0000f6bc <alt_up_ps2_read_data_byte>:

int alt_up_ps2_read_data_byte(alt_up_ps2_dev *ps2, unsigned char *byte)
{
    f6bc:	defffb04 	addi	sp,sp,-20
    f6c0:	dfc00415 	stw	ra,16(sp)
    f6c4:	df000315 	stw	fp,12(sp)
    f6c8:	df000304 	addi	fp,sp,12
    f6cc:	e13ffe15 	stw	r4,-8(fp)
    f6d0:	e17fff15 	stw	r5,-4(fp)
	unsigned int data_reg = 0; 
    f6d4:	e03ffd15 	stw	zero,-12(fp)
	data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    f6d8:	e0bffe17 	ldw	r2,-8(fp)
    f6dc:	10800a17 	ldw	r2,40(r2)
    f6e0:	10800037 	ldwio	r2,0(r2)
    f6e4:	e0bffd15 	stw	r2,-12(fp)
	if (read_data_valid(data_reg))
    f6e8:	e13ffd17 	ldw	r4,-12(fp)
    f6ec:	000f2fc0 	call	f2fc <read_data_valid>
    f6f0:	10803fcc 	andi	r2,r2,255
    f6f4:	10000726 	beq	r2,zero,f714 <alt_up_ps2_read_data_byte+0x58>
	{
		*byte = read_data_byte(data_reg);
    f6f8:	e13ffd17 	ldw	r4,-12(fp)
    f6fc:	000f3300 	call	f330 <read_data_byte>
    f700:	1007883a 	mov	r3,r2
    f704:	e0bfff17 	ldw	r2,-4(fp)
    f708:	10c00005 	stb	r3,0(r2)
		return 0;
    f70c:	0005883a 	mov	r2,zero
    f710:	00000106 	br	f718 <alt_up_ps2_read_data_byte+0x5c>
	}
	return -1;
    f714:	00bfffc4 	movi	r2,-1
}
    f718:	e037883a 	mov	sp,fp
    f71c:	dfc00117 	ldw	ra,4(sp)
    f720:	df000017 	ldw	fp,0(sp)
    f724:	dec00204 	addi	sp,sp,8
    f728:	f800283a 	ret

0000f72c <alt_up_ps2_clear_fifo>:

void alt_up_ps2_clear_fifo(alt_up_ps2_dev *ps2)
{
    f72c:	defffb04 	addi	sp,sp,-20
    f730:	dfc00415 	stw	ra,16(sp)
    f734:	df000315 	stw	fp,12(sp)
    f738:	df000304 	addi	fp,sp,12
    f73c:	e13fff15 	stw	r4,-4(fp)
	// The DATA byte of the data register will be automatically cleared after a read
	// So we simply keep reading it until there are no available bytes
	alt_u16 num = 0;
    f740:	e03ffd0d 	sth	zero,-12(fp)
	unsigned int data_reg = 0;
    f744:	e03ffe15 	stw	zero,-8(fp)
	do
	{
		// read the data register (the DATA byte is cleared)
		data_reg = IORD_ALT_UP_PS2_PORT_DATA_REG(ps2->base);
    f748:	e0bfff17 	ldw	r2,-4(fp)
    f74c:	10800a17 	ldw	r2,40(r2)
    f750:	10800037 	ldwio	r2,0(r2)
    f754:	e0bffe15 	stw	r2,-8(fp)
		// get the number of available bytes from the RAVAIL part of data register
		num = read_num_bytes_available(data_reg);
    f758:	e13ffe17 	ldw	r4,-8(fp)
    f75c:	000f2cc0 	call	f2cc <read_num_bytes_available>
    f760:	e0bffd0d 	sth	r2,-12(fp)
	} while (num > 0);
    f764:	e0bffd0b 	ldhu	r2,-12(fp)
    f768:	103ff71e 	bne	r2,zero,f748 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f748>
}
    f76c:	0001883a 	nop
    f770:	e037883a 	mov	sp,fp
    f774:	dfc00117 	ldw	ra,4(sp)
    f778:	df000017 	ldw	fp,0(sp)
    f77c:	dec00204 	addi	sp,sp,8
    f780:	f800283a 	ret

0000f784 <alt_up_ps2_read_fd>:

//////////////////////////////////////////////////////////////
// FD Functions
int alt_up_ps2_read_fd (alt_fd* fd, char* ptr, int len)
{
    f784:	defff804 	addi	sp,sp,-32
    f788:	dfc00715 	stw	ra,28(sp)
    f78c:	df000615 	stw	fp,24(sp)
    f790:	df000604 	addi	fp,sp,24
    f794:	e13ffd15 	stw	r4,-12(fp)
    f798:	e17ffe15 	stw	r5,-8(fp)
    f79c:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
    f7a0:	e0bffd17 	ldw	r2,-12(fp)
    f7a4:	10800017 	ldw	r2,0(r2)
    f7a8:	e0bffa15 	stw	r2,-24(fp)
	int status = 0;
    f7ac:	e03ffb15 	stw	zero,-20(fp)
	int count = 0;
    f7b0:	e03ffc15 	stw	zero,-16(fp)
	while (count < len);
    f7b4:	e0fffc17 	ldw	r3,-16(fp)
    f7b8:	e0bfff17 	ldw	r2,-4(fp)
    f7bc:	18bffd16 	blt	r3,r2,f7b4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f7b4>
	{
		status = alt_up_ps2_read_data_byte_timeout(ps2, (unsigned char *)ptr++);
    f7c0:	e0bffe17 	ldw	r2,-8(fp)
    f7c4:	10c00044 	addi	r3,r2,1
    f7c8:	e0fffe15 	stw	r3,-8(fp)
    f7cc:	100b883a 	mov	r5,r2
    f7d0:	e13ffa17 	ldw	r4,-24(fp)
    f7d4:	000f6200 	call	f620 <alt_up_ps2_read_data_byte_timeout>
    f7d8:	e0bffb15 	stw	r2,-20(fp)
		if (status!=0)
    f7dc:	e0bffb17 	ldw	r2,-20(fp)
    f7e0:	10000226 	beq	r2,zero,f7ec <alt_up_ps2_read_fd+0x68>
			return count;
    f7e4:	e0bffc17 	ldw	r2,-16(fp)
    f7e8:	00000406 	br	f7fc <alt_up_ps2_read_fd+0x78>
		count++;
    f7ec:	e0bffc17 	ldw	r2,-16(fp)
    f7f0:	10800044 	addi	r2,r2,1
    f7f4:	e0bffc15 	stw	r2,-16(fp)
	} 
	return count;
    f7f8:	e0bffc17 	ldw	r2,-16(fp)
}
    f7fc:	e037883a 	mov	sp,fp
    f800:	dfc00117 	ldw	ra,4(sp)
    f804:	df000017 	ldw	fp,0(sp)
    f808:	dec00204 	addi	sp,sp,8
    f80c:	f800283a 	ret

0000f810 <alt_up_ps2_write_fd>:

int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
    f810:	defff804 	addi	sp,sp,-32
    f814:	dfc00715 	stw	ra,28(sp)
    f818:	df000615 	stw	fp,24(sp)
    f81c:	df000604 	addi	fp,sp,24
    f820:	e13ffd15 	stw	r4,-12(fp)
    f824:	e17ffe15 	stw	r5,-8(fp)
    f828:	e1bfff15 	stw	r6,-4(fp)
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
    f82c:	e0bffd17 	ldw	r2,-12(fp)
    f830:	10800017 	ldw	r2,0(r2)
    f834:	e0bffb15 	stw	r2,-20(fp)
	int status = 0;
    f838:	e03ffc15 	stw	zero,-16(fp)
	int count = 0;
    f83c:	e03ffa15 	stw	zero,-24(fp)
	while (count < len)
    f840:	00001006 	br	f884 <alt_up_ps2_write_fd+0x74>
	{
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
    f844:	e0bffe17 	ldw	r2,-8(fp)
    f848:	10c00044 	addi	r3,r2,1
    f84c:	e0fffe15 	stw	r3,-8(fp)
    f850:	10800003 	ldbu	r2,0(r2)
    f854:	10803fcc 	andi	r2,r2,255
    f858:	100b883a 	mov	r5,r2
    f85c:	e13ffb17 	ldw	r4,-20(fp)
    f860:	000f4e00 	call	f4e0 <alt_up_ps2_write_data_byte>
    f864:	e0bffc15 	stw	r2,-16(fp)
		if (status!=0)
    f868:	e0bffc17 	ldw	r2,-16(fp)
    f86c:	10000226 	beq	r2,zero,f878 <alt_up_ps2_write_fd+0x68>
			return count;
    f870:	e0bffa17 	ldw	r2,-24(fp)
    f874:	00000706 	br	f894 <alt_up_ps2_write_fd+0x84>
		count++;
    f878:	e0bffa17 	ldw	r2,-24(fp)
    f87c:	10800044 	addi	r2,r2,1
    f880:	e0bffa15 	stw	r2,-24(fp)
int alt_up_ps2_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_ps2_dev *ps2 = (alt_up_ps2_dev*) fd->dev;
	int status = 0;
	int count = 0;
	while (count < len)
    f884:	e0fffa17 	ldw	r3,-24(fp)
    f888:	e0bfff17 	ldw	r2,-4(fp)
    f88c:	18bfed16 	blt	r3,r2,f844 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000f844>
		status = alt_up_ps2_write_data_byte(ps2, *(ptr++) );
		if (status!=0)
			return count;
		count++;
	}
	return count;
    f890:	e0bffa17 	ldw	r2,-24(fp)
}
    f894:	e037883a 	mov	sp,fp
    f898:	dfc00117 	ldw	ra,4(sp)
    f89c:	df000017 	ldw	fp,0(sp)
    f8a0:	dec00204 	addi	sp,sp,8
    f8a4:	f800283a 	ret

0000f8a8 <alt_up_ps2_open_dev>:

alt_up_ps2_dev* alt_up_ps2_open_dev(const char* name)
{
    f8a8:	defffc04 	addi	sp,sp,-16
    f8ac:	dfc00315 	stw	ra,12(sp)
    f8b0:	df000215 	stw	fp,8(sp)
    f8b4:	df000204 	addi	fp,sp,8
    f8b8:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_ps2_dev *dev = (alt_up_ps2_dev*)alt_find_dev(name, &alt_dev_list);
    f8bc:	d1600804 	addi	r5,gp,-32736
    f8c0:	e13fff17 	ldw	r4,-4(fp)
    f8c4:	000fbd00 	call	fbd0 <alt_find_dev>
    f8c8:	e0bffe15 	stw	r2,-8(fp)

  return dev;
    f8cc:	e0bffe17 	ldw	r2,-8(fp)
}
    f8d0:	e037883a 	mov	sp,fp
    f8d4:	dfc00117 	ldw	ra,4(sp)
    f8d8:	df000017 	ldw	fp,0(sp)
    f8dc:	dec00204 	addi	sp,sp,8
    f8e0:	f800283a 	ret

0000f8e4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    f8e4:	defff504 	addi	sp,sp,-44
    f8e8:	df000a15 	stw	fp,40(sp)
    f8ec:	df000a04 	addi	fp,sp,40
    f8f0:	e13ffc15 	stw	r4,-16(fp)
    f8f4:	e17ffd15 	stw	r5,-12(fp)
    f8f8:	e1bffe15 	stw	r6,-8(fp)
    f8fc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    f900:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    f904:	d0a76317 	ldw	r2,-25204(gp)
  
  if (alt_ticks_per_second ())
    f908:	10003c26 	beq	r2,zero,f9fc <alt_alarm_start+0x118>
  {
    if (alarm)
    f90c:	e0bffc17 	ldw	r2,-16(fp)
    f910:	10003826 	beq	r2,zero,f9f4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    f914:	e0bffc17 	ldw	r2,-16(fp)
    f918:	e0fffe17 	ldw	r3,-8(fp)
    f91c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    f920:	e0bffc17 	ldw	r2,-16(fp)
    f924:	e0ffff17 	ldw	r3,-4(fp)
    f928:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f92c:	0005303a 	rdctl	r2,status
    f930:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f934:	e0fff917 	ldw	r3,-28(fp)
    f938:	00bfff84 	movi	r2,-2
    f93c:	1884703a 	and	r2,r3,r2
    f940:	1001703a 	wrctl	status,r2
  
  return context;
    f944:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    f948:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    f94c:	d0a76417 	ldw	r2,-25200(gp)
      
      current_nticks = alt_nticks();
    f950:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    f954:	e0fffd17 	ldw	r3,-12(fp)
    f958:	e0bff617 	ldw	r2,-40(fp)
    f95c:	1885883a 	add	r2,r3,r2
    f960:	10c00044 	addi	r3,r2,1
    f964:	e0bffc17 	ldw	r2,-16(fp)
    f968:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    f96c:	e0bffc17 	ldw	r2,-16(fp)
    f970:	10c00217 	ldw	r3,8(r2)
    f974:	e0bff617 	ldw	r2,-40(fp)
    f978:	1880042e 	bgeu	r3,r2,f98c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    f97c:	e0bffc17 	ldw	r2,-16(fp)
    f980:	00c00044 	movi	r3,1
    f984:	10c00405 	stb	r3,16(r2)
    f988:	00000206 	br	f994 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    f98c:	e0bffc17 	ldw	r2,-16(fp)
    f990:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    f994:	e0bffc17 	ldw	r2,-16(fp)
    f998:	d0e00e04 	addi	r3,gp,-32712
    f99c:	e0fffa15 	stw	r3,-24(fp)
    f9a0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f9a4:	e0bffb17 	ldw	r2,-20(fp)
    f9a8:	e0fffa17 	ldw	r3,-24(fp)
    f9ac:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f9b0:	e0bffa17 	ldw	r2,-24(fp)
    f9b4:	10c00017 	ldw	r3,0(r2)
    f9b8:	e0bffb17 	ldw	r2,-20(fp)
    f9bc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f9c0:	e0bffa17 	ldw	r2,-24(fp)
    f9c4:	10800017 	ldw	r2,0(r2)
    f9c8:	e0fffb17 	ldw	r3,-20(fp)
    f9cc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f9d0:	e0bffa17 	ldw	r2,-24(fp)
    f9d4:	e0fffb17 	ldw	r3,-20(fp)
    f9d8:	10c00015 	stw	r3,0(r2)
    f9dc:	e0bff817 	ldw	r2,-32(fp)
    f9e0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f9e4:	e0bff717 	ldw	r2,-36(fp)
    f9e8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    f9ec:	0005883a 	mov	r2,zero
    f9f0:	00000306 	br	fa00 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    f9f4:	00bffa84 	movi	r2,-22
    f9f8:	00000106 	br	fa00 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    f9fc:	00bfde84 	movi	r2,-134
  }
}
    fa00:	e037883a 	mov	sp,fp
    fa04:	df000017 	ldw	fp,0(sp)
    fa08:	dec00104 	addi	sp,sp,4
    fa0c:	f800283a 	ret

0000fa10 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    fa10:	deffff04 	addi	sp,sp,-4
    fa14:	df000015 	stw	fp,0(sp)
    fa18:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    fa1c:	0001883a 	nop
    fa20:	e037883a 	mov	sp,fp
    fa24:	df000017 	ldw	fp,0(sp)
    fa28:	dec00104 	addi	sp,sp,4
    fa2c:	f800283a 	ret

0000fa30 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fa30:	defffe04 	addi	sp,sp,-8
    fa34:	dfc00115 	stw	ra,4(sp)
    fa38:	df000015 	stw	fp,0(sp)
    fa3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    fa40:	d0a00b17 	ldw	r2,-32724(gp)
    fa44:	10000326 	beq	r2,zero,fa54 <alt_get_errno+0x24>
    fa48:	d0a00b17 	ldw	r2,-32724(gp)
    fa4c:	103ee83a 	callr	r2
    fa50:	00000106 	br	fa58 <alt_get_errno+0x28>
    fa54:	d0a75e04 	addi	r2,gp,-25224
}
    fa58:	e037883a 	mov	sp,fp
    fa5c:	dfc00117 	ldw	ra,4(sp)
    fa60:	df000017 	ldw	fp,0(sp)
    fa64:	dec00204 	addi	sp,sp,8
    fa68:	f800283a 	ret

0000fa6c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    fa6c:	defffa04 	addi	sp,sp,-24
    fa70:	dfc00515 	stw	ra,20(sp)
    fa74:	df000415 	stw	fp,16(sp)
    fa78:	df000404 	addi	fp,sp,16
    fa7c:	e13ffe15 	stw	r4,-8(fp)
    fa80:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    fa84:	e0bffe17 	ldw	r2,-8(fp)
    fa88:	10000326 	beq	r2,zero,fa98 <alt_dev_llist_insert+0x2c>
    fa8c:	e0bffe17 	ldw	r2,-8(fp)
    fa90:	10800217 	ldw	r2,8(r2)
    fa94:	1000061e 	bne	r2,zero,fab0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    fa98:	000fa300 	call	fa30 <alt_get_errno>
    fa9c:	1007883a 	mov	r3,r2
    faa0:	00800584 	movi	r2,22
    faa4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    faa8:	00bffa84 	movi	r2,-22
    faac:	00001306 	br	fafc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    fab0:	e0bffe17 	ldw	r2,-8(fp)
    fab4:	e0ffff17 	ldw	r3,-4(fp)
    fab8:	e0fffc15 	stw	r3,-16(fp)
    fabc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    fac0:	e0bffd17 	ldw	r2,-12(fp)
    fac4:	e0fffc17 	ldw	r3,-16(fp)
    fac8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    facc:	e0bffc17 	ldw	r2,-16(fp)
    fad0:	10c00017 	ldw	r3,0(r2)
    fad4:	e0bffd17 	ldw	r2,-12(fp)
    fad8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    fadc:	e0bffc17 	ldw	r2,-16(fp)
    fae0:	10800017 	ldw	r2,0(r2)
    fae4:	e0fffd17 	ldw	r3,-12(fp)
    fae8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    faec:	e0bffc17 	ldw	r2,-16(fp)
    faf0:	e0fffd17 	ldw	r3,-12(fp)
    faf4:	10c00015 	stw	r3,0(r2)

  return 0;  
    faf8:	0005883a 	mov	r2,zero
}
    fafc:	e037883a 	mov	sp,fp
    fb00:	dfc00117 	ldw	ra,4(sp)
    fb04:	df000017 	ldw	fp,0(sp)
    fb08:	dec00204 	addi	sp,sp,8
    fb0c:	f800283a 	ret

0000fb10 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    fb10:	defffd04 	addi	sp,sp,-12
    fb14:	dfc00215 	stw	ra,8(sp)
    fb18:	df000115 	stw	fp,4(sp)
    fb1c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    fb20:	00800074 	movhi	r2,1
    fb24:	10827604 	addi	r2,r2,2520
    fb28:	e0bfff15 	stw	r2,-4(fp)
    fb2c:	00000606 	br	fb48 <_do_ctors+0x38>
        (*ctor) (); 
    fb30:	e0bfff17 	ldw	r2,-4(fp)
    fb34:	10800017 	ldw	r2,0(r2)
    fb38:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    fb3c:	e0bfff17 	ldw	r2,-4(fp)
    fb40:	10bfff04 	addi	r2,r2,-4
    fb44:	e0bfff15 	stw	r2,-4(fp)
    fb48:	e0ffff17 	ldw	r3,-4(fp)
    fb4c:	00800074 	movhi	r2,1
    fb50:	10827704 	addi	r2,r2,2524
    fb54:	18bff62e 	bgeu	r3,r2,fb30 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000fb30>
        (*ctor) (); 
}
    fb58:	0001883a 	nop
    fb5c:	e037883a 	mov	sp,fp
    fb60:	dfc00117 	ldw	ra,4(sp)
    fb64:	df000017 	ldw	fp,0(sp)
    fb68:	dec00204 	addi	sp,sp,8
    fb6c:	f800283a 	ret

0000fb70 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    fb70:	defffd04 	addi	sp,sp,-12
    fb74:	dfc00215 	stw	ra,8(sp)
    fb78:	df000115 	stw	fp,4(sp)
    fb7c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    fb80:	00800074 	movhi	r2,1
    fb84:	10827604 	addi	r2,r2,2520
    fb88:	e0bfff15 	stw	r2,-4(fp)
    fb8c:	00000606 	br	fba8 <_do_dtors+0x38>
        (*dtor) (); 
    fb90:	e0bfff17 	ldw	r2,-4(fp)
    fb94:	10800017 	ldw	r2,0(r2)
    fb98:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    fb9c:	e0bfff17 	ldw	r2,-4(fp)
    fba0:	10bfff04 	addi	r2,r2,-4
    fba4:	e0bfff15 	stw	r2,-4(fp)
    fba8:	e0ffff17 	ldw	r3,-4(fp)
    fbac:	00800074 	movhi	r2,1
    fbb0:	10827704 	addi	r2,r2,2524
    fbb4:	18bff62e 	bgeu	r3,r2,fb90 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000fb90>
        (*dtor) (); 
}
    fbb8:	0001883a 	nop
    fbbc:	e037883a 	mov	sp,fp
    fbc0:	dfc00117 	ldw	ra,4(sp)
    fbc4:	df000017 	ldw	fp,0(sp)
    fbc8:	dec00204 	addi	sp,sp,8
    fbcc:	f800283a 	ret

0000fbd0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    fbd0:	defffa04 	addi	sp,sp,-24
    fbd4:	dfc00515 	stw	ra,20(sp)
    fbd8:	df000415 	stw	fp,16(sp)
    fbdc:	df000404 	addi	fp,sp,16
    fbe0:	e13ffe15 	stw	r4,-8(fp)
    fbe4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    fbe8:	e0bfff17 	ldw	r2,-4(fp)
    fbec:	10800017 	ldw	r2,0(r2)
    fbf0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    fbf4:	e13ffe17 	ldw	r4,-8(fp)
    fbf8:	0000a380 	call	a38 <strlen>
    fbfc:	10800044 	addi	r2,r2,1
    fc00:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    fc04:	00000d06 	br	fc3c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    fc08:	e0bffc17 	ldw	r2,-16(fp)
    fc0c:	10800217 	ldw	r2,8(r2)
    fc10:	e0fffd17 	ldw	r3,-12(fp)
    fc14:	180d883a 	mov	r6,r3
    fc18:	e17ffe17 	ldw	r5,-8(fp)
    fc1c:	1009883a 	mov	r4,r2
    fc20:	00106940 	call	10694 <memcmp>
    fc24:	1000021e 	bne	r2,zero,fc30 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    fc28:	e0bffc17 	ldw	r2,-16(fp)
    fc2c:	00000706 	br	fc4c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    fc30:	e0bffc17 	ldw	r2,-16(fp)
    fc34:	10800017 	ldw	r2,0(r2)
    fc38:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    fc3c:	e0fffc17 	ldw	r3,-16(fp)
    fc40:	e0bfff17 	ldw	r2,-4(fp)
    fc44:	18bff01e 	bne	r3,r2,fc08 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000fc08>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    fc48:	0005883a 	mov	r2,zero
}
    fc4c:	e037883a 	mov	sp,fp
    fc50:	dfc00117 	ldw	ra,4(sp)
    fc54:	df000017 	ldw	fp,0(sp)
    fc58:	dec00204 	addi	sp,sp,8
    fc5c:	f800283a 	ret

0000fc60 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    fc60:	defffe04 	addi	sp,sp,-8
    fc64:	dfc00115 	stw	ra,4(sp)
    fc68:	df000015 	stw	fp,0(sp)
    fc6c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
    fc70:	01440004 	movi	r5,4096
    fc74:	0009883a 	mov	r4,zero
    fc78:	001051c0 	call	1051c <alt_icache_flush>
#endif
}
    fc7c:	0001883a 	nop
    fc80:	e037883a 	mov	sp,fp
    fc84:	dfc00117 	ldw	ra,4(sp)
    fc88:	df000017 	ldw	fp,0(sp)
    fc8c:	dec00204 	addi	sp,sp,8
    fc90:	f800283a 	ret

0000fc94 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    fc94:	defff904 	addi	sp,sp,-28
    fc98:	dfc00615 	stw	ra,24(sp)
    fc9c:	df000515 	stw	fp,20(sp)
    fca0:	df000504 	addi	fp,sp,20
    fca4:	e13ffc15 	stw	r4,-16(fp)
    fca8:	e17ffd15 	stw	r5,-12(fp)
    fcac:	e1bffe15 	stw	r6,-8(fp)
    fcb0:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
    fcb4:	e1bfff17 	ldw	r6,-4(fp)
    fcb8:	e17ffe17 	ldw	r5,-8(fp)
    fcbc:	e13ffd17 	ldw	r4,-12(fp)
    fcc0:	00100540 	call	10054 <open>
    fcc4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
    fcc8:	e0bffb17 	ldw	r2,-20(fp)
    fccc:	10001c16 	blt	r2,zero,fd40 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
    fcd0:	00800074 	movhi	r2,1
    fcd4:	1085b204 	addi	r2,r2,5832
    fcd8:	e0fffb17 	ldw	r3,-20(fp)
    fcdc:	18c00324 	muli	r3,r3,12
    fce0:	10c5883a 	add	r2,r2,r3
    fce4:	10c00017 	ldw	r3,0(r2)
    fce8:	e0bffc17 	ldw	r2,-16(fp)
    fcec:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    fcf0:	00800074 	movhi	r2,1
    fcf4:	1085b204 	addi	r2,r2,5832
    fcf8:	e0fffb17 	ldw	r3,-20(fp)
    fcfc:	18c00324 	muli	r3,r3,12
    fd00:	10c5883a 	add	r2,r2,r3
    fd04:	10800104 	addi	r2,r2,4
    fd08:	10c00017 	ldw	r3,0(r2)
    fd0c:	e0bffc17 	ldw	r2,-16(fp)
    fd10:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    fd14:	00800074 	movhi	r2,1
    fd18:	1085b204 	addi	r2,r2,5832
    fd1c:	e0fffb17 	ldw	r3,-20(fp)
    fd20:	18c00324 	muli	r3,r3,12
    fd24:	10c5883a 	add	r2,r2,r3
    fd28:	10800204 	addi	r2,r2,8
    fd2c:	10c00017 	ldw	r3,0(r2)
    fd30:	e0bffc17 	ldw	r2,-16(fp)
    fd34:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    fd38:	e13ffb17 	ldw	r4,-20(fp)
    fd3c:	000d9140 	call	d914 <alt_release_fd>
  }
} 
    fd40:	0001883a 	nop
    fd44:	e037883a 	mov	sp,fp
    fd48:	dfc00117 	ldw	ra,4(sp)
    fd4c:	df000017 	ldw	fp,0(sp)
    fd50:	dec00204 	addi	sp,sp,8
    fd54:	f800283a 	ret

0000fd58 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    fd58:	defffb04 	addi	sp,sp,-20
    fd5c:	dfc00415 	stw	ra,16(sp)
    fd60:	df000315 	stw	fp,12(sp)
    fd64:	df000304 	addi	fp,sp,12
    fd68:	e13ffd15 	stw	r4,-12(fp)
    fd6c:	e17ffe15 	stw	r5,-8(fp)
    fd70:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    fd74:	01c07fc4 	movi	r7,511
    fd78:	01800044 	movi	r6,1
    fd7c:	e17ffd17 	ldw	r5,-12(fp)
    fd80:	01000074 	movhi	r4,1
    fd84:	2105b504 	addi	r4,r4,5844
    fd88:	000fc940 	call	fc94 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    fd8c:	01c07fc4 	movi	r7,511
    fd90:	000d883a 	mov	r6,zero
    fd94:	e17ffe17 	ldw	r5,-8(fp)
    fd98:	01000074 	movhi	r4,1
    fd9c:	2105b204 	addi	r4,r4,5832
    fda0:	000fc940 	call	fc94 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    fda4:	01c07fc4 	movi	r7,511
    fda8:	01800044 	movi	r6,1
    fdac:	e17fff17 	ldw	r5,-4(fp)
    fdb0:	01000074 	movhi	r4,1
    fdb4:	2105b804 	addi	r4,r4,5856
    fdb8:	000fc940 	call	fc94 <alt_open_fd>
}  
    fdbc:	0001883a 	nop
    fdc0:	e037883a 	mov	sp,fp
    fdc4:	dfc00117 	ldw	ra,4(sp)
    fdc8:	df000017 	ldw	fp,0(sp)
    fdcc:	dec00204 	addi	sp,sp,8
    fdd0:	f800283a 	ret

0000fdd4 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
    fdd4:	defff004 	addi	sp,sp,-64
    fdd8:	df000f15 	stw	fp,60(sp)
    fddc:	df000f04 	addi	fp,sp,60
    fde0:	e13ffd15 	stw	r4,-12(fp)
    fde4:	e17ffe15 	stw	r5,-8(fp)
    fde8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
    fdec:	00bffa84 	movi	r2,-22
    fdf0:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    fdf4:	e0bffd17 	ldw	r2,-12(fp)
    fdf8:	10800828 	cmpgeui	r2,r2,32
    fdfc:	1000501e 	bne	r2,zero,ff40 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    fe00:	0005303a 	rdctl	r2,status
    fe04:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fe08:	e0fff617 	ldw	r3,-40(fp)
    fe0c:	00bfff84 	movi	r2,-2
    fe10:	1884703a 	and	r2,r3,r2
    fe14:	1001703a 	wrctl	status,r2
  
  return context;
    fe18:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
    fe1c:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
    fe20:	00800074 	movhi	r2,1
    fe24:	10922704 	addi	r2,r2,18588
    fe28:	e0fffd17 	ldw	r3,-12(fp)
    fe2c:	180690fa 	slli	r3,r3,3
    fe30:	10c5883a 	add	r2,r2,r3
    fe34:	e0ffff17 	ldw	r3,-4(fp)
    fe38:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
    fe3c:	00800074 	movhi	r2,1
    fe40:	10922704 	addi	r2,r2,18588
    fe44:	e0fffd17 	ldw	r3,-12(fp)
    fe48:	180690fa 	slli	r3,r3,3
    fe4c:	10c5883a 	add	r2,r2,r3
    fe50:	10800104 	addi	r2,r2,4
    fe54:	e0fffe17 	ldw	r3,-8(fp)
    fe58:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
    fe5c:	e0bfff17 	ldw	r2,-4(fp)
    fe60:	10001926 	beq	r2,zero,fec8 <alt_irq_register+0xf4>
    fe64:	e0bffd17 	ldw	r2,-12(fp)
    fe68:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    fe6c:	0005303a 	rdctl	r2,status
    fe70:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fe74:	e0fff717 	ldw	r3,-36(fp)
    fe78:	00bfff84 	movi	r2,-2
    fe7c:	1884703a 	and	r2,r3,r2
    fe80:	1001703a 	wrctl	status,r2
  
  return context;
    fe84:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    fe88:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
    fe8c:	00c00044 	movi	r3,1
    fe90:	e0bff217 	ldw	r2,-56(fp)
    fe94:	1884983a 	sll	r2,r3,r2
    fe98:	1007883a 	mov	r3,r2
    fe9c:	d0a76217 	ldw	r2,-25208(gp)
    fea0:	1884b03a 	or	r2,r3,r2
    fea4:	d0a76215 	stw	r2,-25208(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    fea8:	d0a76217 	ldw	r2,-25208(gp)
    feac:	100170fa 	wrctl	ienable,r2
    feb0:	e0bff817 	ldw	r2,-32(fp)
    feb4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    feb8:	e0bff917 	ldw	r2,-28(fp)
    febc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    fec0:	0005883a 	mov	r2,zero
    fec4:	00001906 	br	ff2c <alt_irq_register+0x158>
    fec8:	e0bffd17 	ldw	r2,-12(fp)
    fecc:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    fed0:	0005303a 	rdctl	r2,status
    fed4:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fed8:	e0fffa17 	ldw	r3,-24(fp)
    fedc:	00bfff84 	movi	r2,-2
    fee0:	1884703a 	and	r2,r3,r2
    fee4:	1001703a 	wrctl	status,r2
  
  return context;
    fee8:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    feec:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
    fef0:	00c00044 	movi	r3,1
    fef4:	e0bff417 	ldw	r2,-48(fp)
    fef8:	1884983a 	sll	r2,r3,r2
    fefc:	0084303a 	nor	r2,zero,r2
    ff00:	1007883a 	mov	r3,r2
    ff04:	d0a76217 	ldw	r2,-25208(gp)
    ff08:	1884703a 	and	r2,r3,r2
    ff0c:	d0a76215 	stw	r2,-25208(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ff10:	d0a76217 	ldw	r2,-25208(gp)
    ff14:	100170fa 	wrctl	ienable,r2
    ff18:	e0bffb17 	ldw	r2,-20(fp)
    ff1c:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ff20:	e0bffc17 	ldw	r2,-16(fp)
    ff24:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    ff28:	0005883a 	mov	r2,zero
    ff2c:	e0bff115 	stw	r2,-60(fp)
    ff30:	e0bff317 	ldw	r2,-52(fp)
    ff34:	e0bff515 	stw	r2,-44(fp)
    ff38:	e0bff517 	ldw	r2,-44(fp)
    ff3c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
    ff40:	e0bff117 	ldw	r2,-60(fp)
}
    ff44:	e037883a 	mov	sp,fp
    ff48:	df000017 	ldw	fp,0(sp)
    ff4c:	dec00104 	addi	sp,sp,4
    ff50:	f800283a 	ret

0000ff54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ff54:	defffe04 	addi	sp,sp,-8
    ff58:	dfc00115 	stw	ra,4(sp)
    ff5c:	df000015 	stw	fp,0(sp)
    ff60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ff64:	d0a00b17 	ldw	r2,-32724(gp)
    ff68:	10000326 	beq	r2,zero,ff78 <alt_get_errno+0x24>
    ff6c:	d0a00b17 	ldw	r2,-32724(gp)
    ff70:	103ee83a 	callr	r2
    ff74:	00000106 	br	ff7c <alt_get_errno+0x28>
    ff78:	d0a75e04 	addi	r2,gp,-25224
}
    ff7c:	e037883a 	mov	sp,fp
    ff80:	dfc00117 	ldw	ra,4(sp)
    ff84:	df000017 	ldw	fp,0(sp)
    ff88:	dec00204 	addi	sp,sp,8
    ff8c:	f800283a 	ret

0000ff90 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    ff90:	defffd04 	addi	sp,sp,-12
    ff94:	df000215 	stw	fp,8(sp)
    ff98:	df000204 	addi	fp,sp,8
    ff9c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ffa0:	e0bfff17 	ldw	r2,-4(fp)
    ffa4:	10800217 	ldw	r2,8(r2)
    ffa8:	10d00034 	orhi	r3,r2,16384
    ffac:	e0bfff17 	ldw	r2,-4(fp)
    ffb0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ffb4:	e03ffe15 	stw	zero,-8(fp)
    ffb8:	00001d06 	br	10030 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ffbc:	00800074 	movhi	r2,1
    ffc0:	1085b204 	addi	r2,r2,5832
    ffc4:	e0fffe17 	ldw	r3,-8(fp)
    ffc8:	18c00324 	muli	r3,r3,12
    ffcc:	10c5883a 	add	r2,r2,r3
    ffd0:	10c00017 	ldw	r3,0(r2)
    ffd4:	e0bfff17 	ldw	r2,-4(fp)
    ffd8:	10800017 	ldw	r2,0(r2)
    ffdc:	1880111e 	bne	r3,r2,10024 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ffe0:	00800074 	movhi	r2,1
    ffe4:	1085b204 	addi	r2,r2,5832
    ffe8:	e0fffe17 	ldw	r3,-8(fp)
    ffec:	18c00324 	muli	r3,r3,12
    fff0:	10c5883a 	add	r2,r2,r3
    fff4:	10800204 	addi	r2,r2,8
    fff8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    fffc:	1000090e 	bge	r2,zero,10024 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   10000:	e0bffe17 	ldw	r2,-8(fp)
   10004:	10c00324 	muli	r3,r2,12
   10008:	00800074 	movhi	r2,1
   1000c:	1085b204 	addi	r2,r2,5832
   10010:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   10014:	e0bfff17 	ldw	r2,-4(fp)
   10018:	18800226 	beq	r3,r2,10024 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   1001c:	00bffcc4 	movi	r2,-13
   10020:	00000806 	br	10044 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   10024:	e0bffe17 	ldw	r2,-8(fp)
   10028:	10800044 	addi	r2,r2,1
   1002c:	e0bffe15 	stw	r2,-8(fp)
   10030:	d0a00a17 	ldw	r2,-32728(gp)
   10034:	1007883a 	mov	r3,r2
   10038:	e0bffe17 	ldw	r2,-8(fp)
   1003c:	18bfdf2e 	bgeu	r3,r2,ffbc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc000ffbc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   10040:	0005883a 	mov	r2,zero
}
   10044:	e037883a 	mov	sp,fp
   10048:	df000017 	ldw	fp,0(sp)
   1004c:	dec00104 	addi	sp,sp,4
   10050:	f800283a 	ret

00010054 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   10054:	defff604 	addi	sp,sp,-40
   10058:	dfc00915 	stw	ra,36(sp)
   1005c:	df000815 	stw	fp,32(sp)
   10060:	df000804 	addi	fp,sp,32
   10064:	e13ffd15 	stw	r4,-12(fp)
   10068:	e17ffe15 	stw	r5,-8(fp)
   1006c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   10070:	00bfffc4 	movi	r2,-1
   10074:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   10078:	00bffb44 	movi	r2,-19
   1007c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   10080:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   10084:	d1600804 	addi	r5,gp,-32736
   10088:	e13ffd17 	ldw	r4,-12(fp)
   1008c:	000fbd00 	call	fbd0 <alt_find_dev>
   10090:	e0bff815 	stw	r2,-32(fp)
   10094:	e0bff817 	ldw	r2,-32(fp)
   10098:	1000051e 	bne	r2,zero,100b0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   1009c:	e13ffd17 	ldw	r4,-12(fp)
   100a0:	00103700 	call	10370 <alt_find_file>
   100a4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   100a8:	00800044 	movi	r2,1
   100ac:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   100b0:	e0bff817 	ldw	r2,-32(fp)
   100b4:	10002926 	beq	r2,zero,1015c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   100b8:	e13ff817 	ldw	r4,-32(fp)
   100bc:	00104780 	call	10478 <alt_get_fd>
   100c0:	e0bff915 	stw	r2,-28(fp)
   100c4:	e0bff917 	ldw	r2,-28(fp)
   100c8:	1000030e 	bge	r2,zero,100d8 <open+0x84>
    {
      status = index;
   100cc:	e0bff917 	ldw	r2,-28(fp)
   100d0:	e0bffa15 	stw	r2,-24(fp)
   100d4:	00002306 	br	10164 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   100d8:	e0bff917 	ldw	r2,-28(fp)
   100dc:	10c00324 	muli	r3,r2,12
   100e0:	00800074 	movhi	r2,1
   100e4:	1085b204 	addi	r2,r2,5832
   100e8:	1885883a 	add	r2,r3,r2
   100ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   100f0:	e0fffe17 	ldw	r3,-8(fp)
   100f4:	00900034 	movhi	r2,16384
   100f8:	10bfffc4 	addi	r2,r2,-1
   100fc:	1886703a 	and	r3,r3,r2
   10100:	e0bffc17 	ldw	r2,-16(fp)
   10104:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   10108:	e0bffb17 	ldw	r2,-20(fp)
   1010c:	1000051e 	bne	r2,zero,10124 <open+0xd0>
   10110:	e13ffc17 	ldw	r4,-16(fp)
   10114:	000ff900 	call	ff90 <alt_file_locked>
   10118:	e0bffa15 	stw	r2,-24(fp)
   1011c:	e0bffa17 	ldw	r2,-24(fp)
   10120:	10001016 	blt	r2,zero,10164 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   10124:	e0bff817 	ldw	r2,-32(fp)
   10128:	10800317 	ldw	r2,12(r2)
   1012c:	10000826 	beq	r2,zero,10150 <open+0xfc>
   10130:	e0bff817 	ldw	r2,-32(fp)
   10134:	10800317 	ldw	r2,12(r2)
   10138:	e1ffff17 	ldw	r7,-4(fp)
   1013c:	e1bffe17 	ldw	r6,-8(fp)
   10140:	e17ffd17 	ldw	r5,-12(fp)
   10144:	e13ffc17 	ldw	r4,-16(fp)
   10148:	103ee83a 	callr	r2
   1014c:	00000106 	br	10154 <open+0x100>
   10150:	0005883a 	mov	r2,zero
   10154:	e0bffa15 	stw	r2,-24(fp)
   10158:	00000206 	br	10164 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   1015c:	00bffb44 	movi	r2,-19
   10160:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   10164:	e0bffa17 	ldw	r2,-24(fp)
   10168:	1000090e 	bge	r2,zero,10190 <open+0x13c>
  {
    alt_release_fd (index);  
   1016c:	e13ff917 	ldw	r4,-28(fp)
   10170:	000d9140 	call	d914 <alt_release_fd>
    ALT_ERRNO = -status;
   10174:	000ff540 	call	ff54 <alt_get_errno>
   10178:	1007883a 	mov	r3,r2
   1017c:	e0bffa17 	ldw	r2,-24(fp)
   10180:	0085c83a 	sub	r2,zero,r2
   10184:	18800015 	stw	r2,0(r3)
    return -1;
   10188:	00bfffc4 	movi	r2,-1
   1018c:	00000106 	br	10194 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   10190:	e0bff917 	ldw	r2,-28(fp)
}
   10194:	e037883a 	mov	sp,fp
   10198:	dfc00117 	ldw	ra,4(sp)
   1019c:	df000017 	ldw	fp,0(sp)
   101a0:	dec00204 	addi	sp,sp,8
   101a4:	f800283a 	ret

000101a8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   101a8:	defffa04 	addi	sp,sp,-24
   101ac:	df000515 	stw	fp,20(sp)
   101b0:	df000504 	addi	fp,sp,20
   101b4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   101b8:	0005303a 	rdctl	r2,status
   101bc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   101c0:	e0fffc17 	ldw	r3,-16(fp)
   101c4:	00bfff84 	movi	r2,-2
   101c8:	1884703a 	and	r2,r3,r2
   101cc:	1001703a 	wrctl	status,r2
  
  return context;
   101d0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   101d4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   101d8:	e0bfff17 	ldw	r2,-4(fp)
   101dc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   101e0:	e0bffd17 	ldw	r2,-12(fp)
   101e4:	10800017 	ldw	r2,0(r2)
   101e8:	e0fffd17 	ldw	r3,-12(fp)
   101ec:	18c00117 	ldw	r3,4(r3)
   101f0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   101f4:	e0bffd17 	ldw	r2,-12(fp)
   101f8:	10800117 	ldw	r2,4(r2)
   101fc:	e0fffd17 	ldw	r3,-12(fp)
   10200:	18c00017 	ldw	r3,0(r3)
   10204:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   10208:	e0bffd17 	ldw	r2,-12(fp)
   1020c:	e0fffd17 	ldw	r3,-12(fp)
   10210:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   10214:	e0bffd17 	ldw	r2,-12(fp)
   10218:	e0fffd17 	ldw	r3,-12(fp)
   1021c:	10c00015 	stw	r3,0(r2)
   10220:	e0bffb17 	ldw	r2,-20(fp)
   10224:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10228:	e0bffe17 	ldw	r2,-8(fp)
   1022c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   10230:	0001883a 	nop
   10234:	e037883a 	mov	sp,fp
   10238:	df000017 	ldw	fp,0(sp)
   1023c:	dec00104 	addi	sp,sp,4
   10240:	f800283a 	ret

00010244 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   10244:	defffb04 	addi	sp,sp,-20
   10248:	dfc00415 	stw	ra,16(sp)
   1024c:	df000315 	stw	fp,12(sp)
   10250:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   10254:	d0a00e17 	ldw	r2,-32712(gp)
   10258:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1025c:	d0a76417 	ldw	r2,-25200(gp)
   10260:	10800044 	addi	r2,r2,1
   10264:	d0a76415 	stw	r2,-25200(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   10268:	00002e06 	br	10324 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   1026c:	e0bffd17 	ldw	r2,-12(fp)
   10270:	10800017 	ldw	r2,0(r2)
   10274:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   10278:	e0bffd17 	ldw	r2,-12(fp)
   1027c:	10800403 	ldbu	r2,16(r2)
   10280:	10803fcc 	andi	r2,r2,255
   10284:	10000426 	beq	r2,zero,10298 <alt_tick+0x54>
   10288:	d0a76417 	ldw	r2,-25200(gp)
   1028c:	1000021e 	bne	r2,zero,10298 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   10290:	e0bffd17 	ldw	r2,-12(fp)
   10294:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   10298:	e0bffd17 	ldw	r2,-12(fp)
   1029c:	10800217 	ldw	r2,8(r2)
   102a0:	d0e76417 	ldw	r3,-25200(gp)
   102a4:	18801d36 	bltu	r3,r2,1031c <alt_tick+0xd8>
   102a8:	e0bffd17 	ldw	r2,-12(fp)
   102ac:	10800403 	ldbu	r2,16(r2)
   102b0:	10803fcc 	andi	r2,r2,255
   102b4:	1000191e 	bne	r2,zero,1031c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   102b8:	e0bffd17 	ldw	r2,-12(fp)
   102bc:	10800317 	ldw	r2,12(r2)
   102c0:	e0fffd17 	ldw	r3,-12(fp)
   102c4:	18c00517 	ldw	r3,20(r3)
   102c8:	1809883a 	mov	r4,r3
   102cc:	103ee83a 	callr	r2
   102d0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   102d4:	e0bfff17 	ldw	r2,-4(fp)
   102d8:	1000031e 	bne	r2,zero,102e8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   102dc:	e13ffd17 	ldw	r4,-12(fp)
   102e0:	00101a80 	call	101a8 <alt_alarm_stop>
   102e4:	00000d06 	br	1031c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   102e8:	e0bffd17 	ldw	r2,-12(fp)
   102ec:	10c00217 	ldw	r3,8(r2)
   102f0:	e0bfff17 	ldw	r2,-4(fp)
   102f4:	1887883a 	add	r3,r3,r2
   102f8:	e0bffd17 	ldw	r2,-12(fp)
   102fc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   10300:	e0bffd17 	ldw	r2,-12(fp)
   10304:	10c00217 	ldw	r3,8(r2)
   10308:	d0a76417 	ldw	r2,-25200(gp)
   1030c:	1880032e 	bgeu	r3,r2,1031c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   10310:	e0bffd17 	ldw	r2,-12(fp)
   10314:	00c00044 	movi	r3,1
   10318:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   1031c:	e0bffe17 	ldw	r2,-8(fp)
   10320:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   10324:	e0fffd17 	ldw	r3,-12(fp)
   10328:	d0a00e04 	addi	r2,gp,-32712
   1032c:	18bfcf1e 	bne	r3,r2,1026c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001026c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   10330:	0001883a 	nop
}
   10334:	0001883a 	nop
   10338:	e037883a 	mov	sp,fp
   1033c:	dfc00117 	ldw	ra,4(sp)
   10340:	df000017 	ldw	fp,0(sp)
   10344:	dec00204 	addi	sp,sp,8
   10348:	f800283a 	ret

0001034c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   1034c:	deffff04 	addi	sp,sp,-4
   10350:	df000015 	stw	fp,0(sp)
   10354:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   10358:	000170fa 	wrctl	ienable,zero
}
   1035c:	0001883a 	nop
   10360:	e037883a 	mov	sp,fp
   10364:	df000017 	ldw	fp,0(sp)
   10368:	dec00104 	addi	sp,sp,4
   1036c:	f800283a 	ret

00010370 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   10370:	defffb04 	addi	sp,sp,-20
   10374:	dfc00415 	stw	ra,16(sp)
   10378:	df000315 	stw	fp,12(sp)
   1037c:	df000304 	addi	fp,sp,12
   10380:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   10384:	d0a00617 	ldw	r2,-32744(gp)
   10388:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1038c:	00003106 	br	10454 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   10390:	e0bffd17 	ldw	r2,-12(fp)
   10394:	10800217 	ldw	r2,8(r2)
   10398:	1009883a 	mov	r4,r2
   1039c:	0000a380 	call	a38 <strlen>
   103a0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   103a4:	e0bffd17 	ldw	r2,-12(fp)
   103a8:	10c00217 	ldw	r3,8(r2)
   103ac:	e0bffe17 	ldw	r2,-8(fp)
   103b0:	10bfffc4 	addi	r2,r2,-1
   103b4:	1885883a 	add	r2,r3,r2
   103b8:	10800003 	ldbu	r2,0(r2)
   103bc:	10803fcc 	andi	r2,r2,255
   103c0:	1080201c 	xori	r2,r2,128
   103c4:	10bfe004 	addi	r2,r2,-128
   103c8:	10800bd8 	cmpnei	r2,r2,47
   103cc:	1000031e 	bne	r2,zero,103dc <alt_find_file+0x6c>
    {
      len -= 1;
   103d0:	e0bffe17 	ldw	r2,-8(fp)
   103d4:	10bfffc4 	addi	r2,r2,-1
   103d8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   103dc:	e0bffe17 	ldw	r2,-8(fp)
   103e0:	e0ffff17 	ldw	r3,-4(fp)
   103e4:	1885883a 	add	r2,r3,r2
   103e8:	10800003 	ldbu	r2,0(r2)
   103ec:	10803fcc 	andi	r2,r2,255
   103f0:	1080201c 	xori	r2,r2,128
   103f4:	10bfe004 	addi	r2,r2,-128
   103f8:	10800be0 	cmpeqi	r2,r2,47
   103fc:	1000081e 	bne	r2,zero,10420 <alt_find_file+0xb0>
   10400:	e0bffe17 	ldw	r2,-8(fp)
   10404:	e0ffff17 	ldw	r3,-4(fp)
   10408:	1885883a 	add	r2,r3,r2
   1040c:	10800003 	ldbu	r2,0(r2)
   10410:	10803fcc 	andi	r2,r2,255
   10414:	1080201c 	xori	r2,r2,128
   10418:	10bfe004 	addi	r2,r2,-128
   1041c:	10000a1e 	bne	r2,zero,10448 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   10420:	e0bffd17 	ldw	r2,-12(fp)
   10424:	10800217 	ldw	r2,8(r2)
   10428:	e0fffe17 	ldw	r3,-8(fp)
   1042c:	180d883a 	mov	r6,r3
   10430:	e17fff17 	ldw	r5,-4(fp)
   10434:	1009883a 	mov	r4,r2
   10438:	00106940 	call	10694 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   1043c:	1000021e 	bne	r2,zero,10448 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   10440:	e0bffd17 	ldw	r2,-12(fp)
   10444:	00000706 	br	10464 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   10448:	e0bffd17 	ldw	r2,-12(fp)
   1044c:	10800017 	ldw	r2,0(r2)
   10450:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   10454:	e0fffd17 	ldw	r3,-12(fp)
   10458:	d0a00604 	addi	r2,gp,-32744
   1045c:	18bfcc1e 	bne	r3,r2,10390 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010390>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   10460:	0005883a 	mov	r2,zero
}
   10464:	e037883a 	mov	sp,fp
   10468:	dfc00117 	ldw	ra,4(sp)
   1046c:	df000017 	ldw	fp,0(sp)
   10470:	dec00204 	addi	sp,sp,8
   10474:	f800283a 	ret

00010478 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   10478:	defffc04 	addi	sp,sp,-16
   1047c:	df000315 	stw	fp,12(sp)
   10480:	df000304 	addi	fp,sp,12
   10484:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   10488:	00bffa04 	movi	r2,-24
   1048c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   10490:	e03ffd15 	stw	zero,-12(fp)
   10494:	00001906 	br	104fc <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   10498:	00800074 	movhi	r2,1
   1049c:	1085b204 	addi	r2,r2,5832
   104a0:	e0fffd17 	ldw	r3,-12(fp)
   104a4:	18c00324 	muli	r3,r3,12
   104a8:	10c5883a 	add	r2,r2,r3
   104ac:	10800017 	ldw	r2,0(r2)
   104b0:	10000f1e 	bne	r2,zero,104f0 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   104b4:	00800074 	movhi	r2,1
   104b8:	1085b204 	addi	r2,r2,5832
   104bc:	e0fffd17 	ldw	r3,-12(fp)
   104c0:	18c00324 	muli	r3,r3,12
   104c4:	10c5883a 	add	r2,r2,r3
   104c8:	e0ffff17 	ldw	r3,-4(fp)
   104cc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   104d0:	d0e00a17 	ldw	r3,-32728(gp)
   104d4:	e0bffd17 	ldw	r2,-12(fp)
   104d8:	1880020e 	bge	r3,r2,104e4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   104dc:	e0bffd17 	ldw	r2,-12(fp)
   104e0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   104e4:	e0bffd17 	ldw	r2,-12(fp)
   104e8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   104ec:	00000606 	br	10508 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   104f0:	e0bffd17 	ldw	r2,-12(fp)
   104f4:	10800044 	addi	r2,r2,1
   104f8:	e0bffd15 	stw	r2,-12(fp)
   104fc:	e0bffd17 	ldw	r2,-12(fp)
   10500:	10800810 	cmplti	r2,r2,32
   10504:	103fe41e 	bne	r2,zero,10498 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010498>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   10508:	e0bffe17 	ldw	r2,-8(fp)
}
   1050c:	e037883a 	mov	sp,fp
   10510:	df000017 	ldw	fp,0(sp)
   10514:	dec00104 	addi	sp,sp,4
   10518:	f800283a 	ret

0001051c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   1051c:	defffb04 	addi	sp,sp,-20
   10520:	df000415 	stw	fp,16(sp)
   10524:	df000404 	addi	fp,sp,16
   10528:	e13ffe15 	stw	r4,-8(fp)
   1052c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   10530:	e0bfff17 	ldw	r2,-4(fp)
   10534:	10840070 	cmpltui	r2,r2,4097
   10538:	1000021e 	bne	r2,zero,10544 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   1053c:	00840004 	movi	r2,4096
   10540:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   10544:	e0fffe17 	ldw	r3,-8(fp)
   10548:	e0bfff17 	ldw	r2,-4(fp)
   1054c:	1885883a 	add	r2,r3,r2
   10550:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   10554:	e0bffe17 	ldw	r2,-8(fp)
   10558:	e0bffc15 	stw	r2,-16(fp)
   1055c:	00000506 	br	10574 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   10560:	e0bffc17 	ldw	r2,-16(fp)
   10564:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   10568:	e0bffc17 	ldw	r2,-16(fp)
   1056c:	10800804 	addi	r2,r2,32
   10570:	e0bffc15 	stw	r2,-16(fp)
   10574:	e0fffc17 	ldw	r3,-16(fp)
   10578:	e0bffd17 	ldw	r2,-12(fp)
   1057c:	18bff836 	bltu	r3,r2,10560 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010560>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   10580:	e0bffe17 	ldw	r2,-8(fp)
   10584:	108007cc 	andi	r2,r2,31
   10588:	10000226 	beq	r2,zero,10594 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   1058c:	e0bffc17 	ldw	r2,-16(fp)
   10590:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   10594:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   10598:	0001883a 	nop
   1059c:	e037883a 	mov	sp,fp
   105a0:	df000017 	ldw	fp,0(sp)
   105a4:	dec00104 	addi	sp,sp,4
   105a8:	f800283a 	ret

000105ac <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   105ac:	defffe04 	addi	sp,sp,-8
   105b0:	df000115 	stw	fp,4(sp)
   105b4:	df000104 	addi	fp,sp,4
   105b8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   105bc:	e0bfff17 	ldw	r2,-4(fp)
   105c0:	10bffe84 	addi	r2,r2,-6
   105c4:	10c00428 	cmpgeui	r3,r2,16
   105c8:	18001a1e 	bne	r3,zero,10634 <alt_exception_cause_generated_bad_addr+0x88>
   105cc:	100690ba 	slli	r3,r2,2
   105d0:	00800074 	movhi	r2,1
   105d4:	10817904 	addi	r2,r2,1508
   105d8:	1885883a 	add	r2,r3,r2
   105dc:	10800017 	ldw	r2,0(r2)
   105e0:	1000683a 	jmp	r2
   105e4:	00010624 	muli	zero,zero,1048
   105e8:	00010624 	muli	zero,zero,1048
   105ec:	00010634 	movhi	zero,1048
   105f0:	00010634 	movhi	zero,1048
   105f4:	00010634 	movhi	zero,1048
   105f8:	00010624 	muli	zero,zero,1048
   105fc:	0001062c 	andhi	zero,zero,1048
   10600:	00010634 	movhi	zero,1048
   10604:	00010624 	muli	zero,zero,1048
   10608:	00010624 	muli	zero,zero,1048
   1060c:	00010634 	movhi	zero,1048
   10610:	00010624 	muli	zero,zero,1048
   10614:	0001062c 	andhi	zero,zero,1048
   10618:	00010634 	movhi	zero,1048
   1061c:	00010634 	movhi	zero,1048
   10620:	00010624 	muli	zero,zero,1048
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   10624:	00800044 	movi	r2,1
   10628:	00000306 	br	10638 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   1062c:	0005883a 	mov	r2,zero
   10630:	00000106 	br	10638 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   10634:	0005883a 	mov	r2,zero
  }
}
   10638:	e037883a 	mov	sp,fp
   1063c:	df000017 	ldw	fp,0(sp)
   10640:	dec00104 	addi	sp,sp,4
   10644:	f800283a 	ret

00010648 <atexit>:
   10648:	200b883a 	mov	r5,r4
   1064c:	000f883a 	mov	r7,zero
   10650:	000d883a 	mov	r6,zero
   10654:	0009883a 	mov	r4,zero
   10658:	00107101 	jmpi	10710 <__register_exitproc>

0001065c <exit>:
   1065c:	defffe04 	addi	sp,sp,-8
   10660:	000b883a 	mov	r5,zero
   10664:	dc000015 	stw	r16,0(sp)
   10668:	dfc00115 	stw	ra,4(sp)
   1066c:	2021883a 	mov	r16,r4
   10670:	00108280 	call	10828 <__call_exitprocs>
   10674:	00800074 	movhi	r2,1
   10678:	108ab704 	addi	r2,r2,10972
   1067c:	11000017 	ldw	r4,0(r2)
   10680:	20800f17 	ldw	r2,60(r4)
   10684:	10000126 	beq	r2,zero,1068c <exit+0x30>
   10688:	103ee83a 	callr	r2
   1068c:	8009883a 	mov	r4,r16
   10690:	00109a80 	call	109a8 <_exit>

00010694 <memcmp>:
   10694:	01c000c4 	movi	r7,3
   10698:	3980192e 	bgeu	r7,r6,10700 <memcmp+0x6c>
   1069c:	2144b03a 	or	r2,r4,r5
   106a0:	11c4703a 	and	r2,r2,r7
   106a4:	10000f26 	beq	r2,zero,106e4 <memcmp+0x50>
   106a8:	20800003 	ldbu	r2,0(r4)
   106ac:	28c00003 	ldbu	r3,0(r5)
   106b0:	10c0151e 	bne	r2,r3,10708 <memcmp+0x74>
   106b4:	31bfff84 	addi	r6,r6,-2
   106b8:	01ffffc4 	movi	r7,-1
   106bc:	00000406 	br	106d0 <memcmp+0x3c>
   106c0:	20800003 	ldbu	r2,0(r4)
   106c4:	28c00003 	ldbu	r3,0(r5)
   106c8:	31bfffc4 	addi	r6,r6,-1
   106cc:	10c00e1e 	bne	r2,r3,10708 <memcmp+0x74>
   106d0:	21000044 	addi	r4,r4,1
   106d4:	29400044 	addi	r5,r5,1
   106d8:	31fff91e 	bne	r6,r7,106c0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00106c0>
   106dc:	0005883a 	mov	r2,zero
   106e0:	f800283a 	ret
   106e4:	20c00017 	ldw	r3,0(r4)
   106e8:	28800017 	ldw	r2,0(r5)
   106ec:	18bfee1e 	bne	r3,r2,106a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00106a8>
   106f0:	31bfff04 	addi	r6,r6,-4
   106f4:	21000104 	addi	r4,r4,4
   106f8:	29400104 	addi	r5,r5,4
   106fc:	39bff936 	bltu	r7,r6,106e4 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00106e4>
   10700:	303fe91e 	bne	r6,zero,106a8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00106a8>
   10704:	003ff506 	br	106dc <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00106dc>
   10708:	10c5c83a 	sub	r2,r2,r3
   1070c:	f800283a 	ret

00010710 <__register_exitproc>:
   10710:	defffa04 	addi	sp,sp,-24
   10714:	dc000315 	stw	r16,12(sp)
   10718:	04000074 	movhi	r16,1
   1071c:	840ab704 	addi	r16,r16,10972
   10720:	80c00017 	ldw	r3,0(r16)
   10724:	dc400415 	stw	r17,16(sp)
   10728:	dfc00515 	stw	ra,20(sp)
   1072c:	18805217 	ldw	r2,328(r3)
   10730:	2023883a 	mov	r17,r4
   10734:	10003726 	beq	r2,zero,10814 <__register_exitproc+0x104>
   10738:	10c00117 	ldw	r3,4(r2)
   1073c:	010007c4 	movi	r4,31
   10740:	20c00e16 	blt	r4,r3,1077c <__register_exitproc+0x6c>
   10744:	1a000044 	addi	r8,r3,1
   10748:	8800221e 	bne	r17,zero,107d4 <__register_exitproc+0xc4>
   1074c:	18c00084 	addi	r3,r3,2
   10750:	18c7883a 	add	r3,r3,r3
   10754:	18c7883a 	add	r3,r3,r3
   10758:	12000115 	stw	r8,4(r2)
   1075c:	10c7883a 	add	r3,r2,r3
   10760:	19400015 	stw	r5,0(r3)
   10764:	0005883a 	mov	r2,zero
   10768:	dfc00517 	ldw	ra,20(sp)
   1076c:	dc400417 	ldw	r17,16(sp)
   10770:	dc000317 	ldw	r16,12(sp)
   10774:	dec00604 	addi	sp,sp,24
   10778:	f800283a 	ret
   1077c:	00800034 	movhi	r2,0
   10780:	10800004 	addi	r2,r2,0
   10784:	10002626 	beq	r2,zero,10820 <__register_exitproc+0x110>
   10788:	01006404 	movi	r4,400
   1078c:	d9400015 	stw	r5,0(sp)
   10790:	d9800115 	stw	r6,4(sp)
   10794:	d9c00215 	stw	r7,8(sp)
   10798:	00000000 	call	0 <__alt_mem_SDRAM>
   1079c:	d9400017 	ldw	r5,0(sp)
   107a0:	d9800117 	ldw	r6,4(sp)
   107a4:	d9c00217 	ldw	r7,8(sp)
   107a8:	10001d26 	beq	r2,zero,10820 <__register_exitproc+0x110>
   107ac:	81000017 	ldw	r4,0(r16)
   107b0:	10000115 	stw	zero,4(r2)
   107b4:	02000044 	movi	r8,1
   107b8:	22405217 	ldw	r9,328(r4)
   107bc:	0007883a 	mov	r3,zero
   107c0:	12400015 	stw	r9,0(r2)
   107c4:	20805215 	stw	r2,328(r4)
   107c8:	10006215 	stw	zero,392(r2)
   107cc:	10006315 	stw	zero,396(r2)
   107d0:	883fde26 	beq	r17,zero,1074c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001074c>
   107d4:	18c9883a 	add	r4,r3,r3
   107d8:	2109883a 	add	r4,r4,r4
   107dc:	1109883a 	add	r4,r2,r4
   107e0:	21802215 	stw	r6,136(r4)
   107e4:	01800044 	movi	r6,1
   107e8:	12406217 	ldw	r9,392(r2)
   107ec:	30cc983a 	sll	r6,r6,r3
   107f0:	4992b03a 	or	r9,r9,r6
   107f4:	12406215 	stw	r9,392(r2)
   107f8:	21c04215 	stw	r7,264(r4)
   107fc:	01000084 	movi	r4,2
   10800:	893fd21e 	bne	r17,r4,1074c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001074c>
   10804:	11006317 	ldw	r4,396(r2)
   10808:	218cb03a 	or	r6,r4,r6
   1080c:	11806315 	stw	r6,396(r2)
   10810:	003fce06 	br	1074c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001074c>
   10814:	18805304 	addi	r2,r3,332
   10818:	18805215 	stw	r2,328(r3)
   1081c:	003fc606 	br	10738 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010738>
   10820:	00bfffc4 	movi	r2,-1
   10824:	003fd006 	br	10768 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010768>

00010828 <__call_exitprocs>:
   10828:	defff504 	addi	sp,sp,-44
   1082c:	df000915 	stw	fp,36(sp)
   10830:	dd400615 	stw	r21,24(sp)
   10834:	dc800315 	stw	r18,12(sp)
   10838:	dfc00a15 	stw	ra,40(sp)
   1083c:	ddc00815 	stw	r23,32(sp)
   10840:	dd800715 	stw	r22,28(sp)
   10844:	dd000515 	stw	r20,20(sp)
   10848:	dcc00415 	stw	r19,16(sp)
   1084c:	dc400215 	stw	r17,8(sp)
   10850:	dc000115 	stw	r16,4(sp)
   10854:	d9000015 	stw	r4,0(sp)
   10858:	2839883a 	mov	fp,r5
   1085c:	04800044 	movi	r18,1
   10860:	057fffc4 	movi	r21,-1
   10864:	00800074 	movhi	r2,1
   10868:	108ab704 	addi	r2,r2,10972
   1086c:	12000017 	ldw	r8,0(r2)
   10870:	45005217 	ldw	r20,328(r8)
   10874:	44c05204 	addi	r19,r8,328
   10878:	a0001c26 	beq	r20,zero,108ec <__call_exitprocs+0xc4>
   1087c:	a0800117 	ldw	r2,4(r20)
   10880:	15ffffc4 	addi	r23,r2,-1
   10884:	b8000d16 	blt	r23,zero,108bc <__call_exitprocs+0x94>
   10888:	14000044 	addi	r16,r2,1
   1088c:	8421883a 	add	r16,r16,r16
   10890:	8421883a 	add	r16,r16,r16
   10894:	84402004 	addi	r17,r16,128
   10898:	a463883a 	add	r17,r20,r17
   1089c:	a421883a 	add	r16,r20,r16
   108a0:	e0001e26 	beq	fp,zero,1091c <__call_exitprocs+0xf4>
   108a4:	80804017 	ldw	r2,256(r16)
   108a8:	e0801c26 	beq	fp,r2,1091c <__call_exitprocs+0xf4>
   108ac:	bdffffc4 	addi	r23,r23,-1
   108b0:	843fff04 	addi	r16,r16,-4
   108b4:	8c7fff04 	addi	r17,r17,-4
   108b8:	bd7ff91e 	bne	r23,r21,108a0 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00108a0>
   108bc:	00800034 	movhi	r2,0
   108c0:	10800004 	addi	r2,r2,0
   108c4:	10000926 	beq	r2,zero,108ec <__call_exitprocs+0xc4>
   108c8:	a0800117 	ldw	r2,4(r20)
   108cc:	1000301e 	bne	r2,zero,10990 <__call_exitprocs+0x168>
   108d0:	a0800017 	ldw	r2,0(r20)
   108d4:	10003226 	beq	r2,zero,109a0 <__call_exitprocs+0x178>
   108d8:	a009883a 	mov	r4,r20
   108dc:	98800015 	stw	r2,0(r19)
   108e0:	00000000 	call	0 <__alt_mem_SDRAM>
   108e4:	9d000017 	ldw	r20,0(r19)
   108e8:	a03fe41e 	bne	r20,zero,1087c <__alt_mem_ARM_A9_HPS_axi_sdram+0xc001087c>
   108ec:	dfc00a17 	ldw	ra,40(sp)
   108f0:	df000917 	ldw	fp,36(sp)
   108f4:	ddc00817 	ldw	r23,32(sp)
   108f8:	dd800717 	ldw	r22,28(sp)
   108fc:	dd400617 	ldw	r21,24(sp)
   10900:	dd000517 	ldw	r20,20(sp)
   10904:	dcc00417 	ldw	r19,16(sp)
   10908:	dc800317 	ldw	r18,12(sp)
   1090c:	dc400217 	ldw	r17,8(sp)
   10910:	dc000117 	ldw	r16,4(sp)
   10914:	dec00b04 	addi	sp,sp,44
   10918:	f800283a 	ret
   1091c:	a0800117 	ldw	r2,4(r20)
   10920:	80c00017 	ldw	r3,0(r16)
   10924:	10bfffc4 	addi	r2,r2,-1
   10928:	15c01426 	beq	r2,r23,1097c <__call_exitprocs+0x154>
   1092c:	80000015 	stw	zero,0(r16)
   10930:	183fde26 	beq	r3,zero,108ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00108ac>
   10934:	95c8983a 	sll	r4,r18,r23
   10938:	a0806217 	ldw	r2,392(r20)
   1093c:	a5800117 	ldw	r22,4(r20)
   10940:	2084703a 	and	r2,r4,r2
   10944:	10000b26 	beq	r2,zero,10974 <__call_exitprocs+0x14c>
   10948:	a0806317 	ldw	r2,396(r20)
   1094c:	2088703a 	and	r4,r4,r2
   10950:	20000c1e 	bne	r4,zero,10984 <__call_exitprocs+0x15c>
   10954:	89400017 	ldw	r5,0(r17)
   10958:	d9000017 	ldw	r4,0(sp)
   1095c:	183ee83a 	callr	r3
   10960:	a0800117 	ldw	r2,4(r20)
   10964:	15bfbf1e 	bne	r2,r22,10864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010864>
   10968:	98800017 	ldw	r2,0(r19)
   1096c:	153fcf26 	beq	r2,r20,108ac <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00108ac>
   10970:	003fbc06 	br	10864 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010864>
   10974:	183ee83a 	callr	r3
   10978:	003ff906 	br	10960 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010960>
   1097c:	a5c00115 	stw	r23,4(r20)
   10980:	003feb06 	br	10930 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010930>
   10984:	89000017 	ldw	r4,0(r17)
   10988:	183ee83a 	callr	r3
   1098c:	003ff406 	br	10960 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010960>
   10990:	a0800017 	ldw	r2,0(r20)
   10994:	a027883a 	mov	r19,r20
   10998:	1029883a 	mov	r20,r2
   1099c:	003fb606 	br	10878 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010878>
   109a0:	0005883a 	mov	r2,zero
   109a4:	003ffb06 	br	10994 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc0010994>

000109a8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   109a8:	defffd04 	addi	sp,sp,-12
   109ac:	df000215 	stw	fp,8(sp)
   109b0:	df000204 	addi	fp,sp,8
   109b4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   109b8:	0001883a 	nop
   109bc:	e0bfff17 	ldw	r2,-4(fp)
   109c0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   109c4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   109c8:	10000226 	beq	r2,zero,109d4 <_exit+0x2c>
    ALT_SIM_FAIL();
   109cc:	002af070 	cmpltui	zero,zero,43969
   109d0:	00000106 	br	109d8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   109d4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   109d8:	003fff06 	br	109d8 <__alt_mem_ARM_A9_HPS_axi_sdram+0xc00109d8>
